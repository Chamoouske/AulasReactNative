{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/SyncMethodTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar View = ReactNative.View;\nvar _ReactNative$NativeMo = ReactNative.NativeModules,\n    TestModule = _ReactNative$NativeMo.TestModule,\n    RNTesterTestModule = _ReactNative$NativeMo.RNTesterTestModule;\n\nvar SyncMethodTest = function (_React$Component) {\n  _inherits(SyncMethodTest, _React$Component);\n\n  var _super = _createSuper(SyncMethodTest);\n\n  function SyncMethodTest() {\n    _classCallCheck(this, SyncMethodTest);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SyncMethodTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (RNTesterTestModule.echoString('test string value') !== 'test string value') {\n        throw new Error('Something wrong with echoString sync method');\n      }\n\n      if (RNTesterTestModule.methodThatReturnsNil() != null) {\n        throw new Error('Something wrong with methodThatReturnsNil sync method');\n      }\n\n      var response;\n      RNTesterTestModule.methodThatCallsCallbackWithString('test', function (echo) {\n        response = echo;\n      });\n      requestAnimationFrame(function () {\n        if (response === 'test') {\n          TestModule.markTestCompleted();\n        } else {\n          throw new Error('Something wrong with methodThatCallsCallbackWithString sync method, ' + 'got response ' + JSON.stringify(response));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return SyncMethodTest;\n}(React.Component);\n\nSyncMethodTest.displayName = 'SyncMethodTest';\nmodule.exports = SyncMethodTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/SyncMethodTest.js"],"names":["React","require","View","ReactNative","NativeModules","TestModule","RNTesterTestModule","SyncMethodTest","echoString","Error","methodThatReturnsNil","response","methodThatCallsCallbackWithString","echo","requestAnimationFrame","markTestCompleted","JSON","stringify","Component","displayName","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;IAEOC,I,GAAQC,W,CAARD,I;4BAEkCC,WAAW,CAACC,a;IAA9CC,U,yBAAAA,U;IAAYC,kB,yBAAAA,kB;;IAEbC,c;;;;;;;;;;;;;WACJ,6BAAoB;AAClB,UACED,kBAAkB,CAACE,UAAnB,CAA8B,mBAA9B,MAAuD,mBADzD,EAEE;AACA,cAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AACD,UAAIH,kBAAkB,CAACI,oBAAnB,MAA6C,IAAjD,EAAuD;AACrD,cAAM,IAAID,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,UAAIE,QAAJ;AACAL,MAAAA,kBAAkB,CAACM,iCAAnB,CAAqD,MAArD,EAA6D,UAAAC,IAAI,EAAI;AACnEF,QAAAA,QAAQ,GAAGE,IAAX;AACD,OAFD;AAGAC,MAAAA,qBAAqB,CAAC,YAAM;AAC1B,YAAIH,QAAQ,KAAK,MAAjB,EAAyB;AACvBN,UAAAA,UAAU,CAACU,iBAAX;AACD,SAFD,MAEO;AACL,gBAAM,IAAIN,KAAJ,CACJ,yEACE,eADF,GAEEO,IAAI,CAACC,SAAL,CAAeN,QAAf,CAHE,CAAN;AAKD;AACF,OAVoB,CAArB;AAWD;;;WAED,kBAAqB;AACnB,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA7B0BX,KAAK,CAACkB,S;;AAgCnCX,cAAc,CAACY,WAAf,GAA6B,gBAA7B;AAEAC,MAAM,CAACC,OAAP,GAAiBd,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {View} = ReactNative;\n\nconst {TestModule, RNTesterTestModule} = ReactNative.NativeModules;\n\nclass SyncMethodTest extends React.Component<{...}> {\n  componentDidMount() {\n    if (\n      RNTesterTestModule.echoString('test string value') !== 'test string value'\n    ) {\n      throw new Error('Something wrong with echoString sync method');\n    }\n    if (RNTesterTestModule.methodThatReturnsNil() != null) {\n      throw new Error('Something wrong with methodThatReturnsNil sync method');\n    }\n    let response;\n    RNTesterTestModule.methodThatCallsCallbackWithString('test', echo => {\n      response = echo;\n    });\n    requestAnimationFrame(() => {\n      if (response === 'test') {\n        TestModule.markTestCompleted();\n      } else {\n        throw new Error(\n          'Something wrong with methodThatCallsCallbackWithString sync method, ' +\n            'got response ' +\n            JSON.stringify(response),\n        );\n      }\n    });\n  }\n\n  render(): React.Node {\n    return <View />;\n  }\n}\n\nSyncMethodTest.displayName = 'SyncMethodTest';\n\nmodule.exports = SyncMethodTest;\n"]},"metadata":{},"sourceType":"script"}