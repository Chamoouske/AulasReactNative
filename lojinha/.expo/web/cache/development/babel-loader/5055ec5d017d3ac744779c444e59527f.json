{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorSourceMapStatus-test.js\";\n\nvar React = require('react');\n\nvar LogBoxInspectorSourceMapStatus = require(\"../LogBoxInspectorSourceMapStatus\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('LogBoxInspectorSourceMapStatus', function () {\n  it('should render for failed', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorSourceMapStatus, {\n      onPress: function onPress() {},\n      status: \"FAILED\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render for pending', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorSourceMapStatus, {\n      onPress: function onPress() {},\n      status: \"PENDING\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render null for complete', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorSourceMapStatus, {\n      onPress: function onPress() {},\n      status: \"COMPLETE\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorSourceMapStatus-test.js"],"names":["React","require","LogBoxInspectorSourceMapStatus","default","render","describe","it","output","shallowRender","expect","toMatchSnapshot"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,8BAA8B,GAAGD,OAAO,qCAAP,CACpCE,OADH;;AAEA,IAAMC,MAAM,GAAGH,OAAO,6BAAtB;;AAEAI,QAAQ,CAAC,gCAAD,EAAmC,YAAM;AAC/CC,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,8BAAD;AAAgC,MAAA,OAAO,EAAE,mBAAM,CAAE,CAAjD;AAAmD,MAAA,MAAM,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAIAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GANC,CAAF;AAQAJ,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,8BAAD;AAAgC,MAAA,OAAO,EAAE,mBAAM,CAAE,CAAjD;AAAmD,MAAA,MAAM,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAIAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GANC,CAAF;AAQAJ,EAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAM;AAC1C,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,8BAAD;AAAgC,MAAA,OAAO,EAAE,mBAAM,CAAE,CAAjD;AAAmD,MAAA,MAAM,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAIAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GANC,CAAF;AAOD,CAxBO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxInspectorSourceMapStatus = require('../LogBoxInspectorSourceMapStatus')\n  .default;\nconst render = require('../../../../jest/renderer');\n\ndescribe('LogBoxInspectorSourceMapStatus', () => {\n  it('should render for failed', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorSourceMapStatus onPress={() => {}} status=\"FAILED\" />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render for pending', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorSourceMapStatus onPress={() => {}} status=\"PENDING\" />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render null for complete', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorSourceMapStatus onPress={() => {}} status=\"COMPLETE\" />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}