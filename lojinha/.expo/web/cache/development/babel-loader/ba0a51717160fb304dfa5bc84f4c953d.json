{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ios_plugins_1 = require(\"../plugins/ios-plugins\");\n\nexports.withRequiresFullScreen = ios_plugins_1.createInfoPlistPlugin(setRequiresFullScreen, 'withRequiresFullScreen');\n\nfunction getRequiresFullScreen(config) {\n  var _a;\n\n  if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('requireFullScreen')) {\n    return !!config.ios.requireFullScreen;\n  } else {\n    return true;\n  }\n}\n\nexports.getRequiresFullScreen = getRequiresFullScreen;\n\nfunction setRequiresFullScreen(config, infoPlist) {\n  return _extends(_extends({}, infoPlist), {\n    UIRequiresFullScreen: getRequiresFullScreen(config)\n  });\n}\n\nexports.setRequiresFullScreen = setRequiresFullScreen;","map":{"version":3,"sources":["../../src/ios/RequiresFullScreen.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAA,aAAA,GAAA,OAAA,0BAAA;;AAGa,OAAA,CAAA,sBAAA,GAAyB,aAAA,CAAA,qBAAA,CACpC,qBADoC,EAEpC,wBAFoC,CAAzB;;AAQb,SAAgB,qBAAhB,CAAsC,MAAtC,EAAqE;;;AAGnE,MAAA,CAAA,EAAA,GAAI,MAAM,CAAC,GAAX,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,cAAF,CAAiB,mBAAjB,CAAd,EAAqD;AACnD,WAAO,CAAC,CAAC,MAAM,CAAC,GAAP,CAAW,iBAApB;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AARD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAWA,SAAgB,qBAAhB,CACE,MADF,EAEE,SAFF,EAEsB;AAEpB,SAAA,SAAA,SAAA,EAAA,EACK,SADL,CAAA,EACc;AACZ,IAAA,oBAAoB,EAAE,qBAAqB,CAAC,MAAD;AAD/B,GADd,CAAA;AAID;;AARD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withRequiresFullScreen = createInfoPlistPlugin(\n  setRequiresFullScreen,\n  'withRequiresFullScreen'\n);\n\n// NOTES: This is defaulted to `true` for now to match the behavior prior to SDK\n// 34, but will change to `false` in a future SDK version. This note was copied\n// over from IosNSBundle.\nexport function getRequiresFullScreen(config: Pick<ExpoConfig, 'ios'>) {\n  // Yes, the property is called ios.requireFullScreen, without the s - not \"requires\"\n  // This is confusing indeed because the actual property name does have the s\n  if (config.ios?.hasOwnProperty('requireFullScreen')) {\n    return !!config.ios.requireFullScreen;\n  } else {\n    return true;\n  }\n}\n\n// Whether requires full screen on iPad\nexport function setRequiresFullScreen(\n  config: Pick<ExpoConfig, 'ios'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  return {\n    ...infoPlist,\n    UIRequiresFullScreen: getRequiresFullScreen(config),\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}