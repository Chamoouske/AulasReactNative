{"ast":null,"code":"import Appearance from \"react-native-web/dist/exports/Appearance\";\n\nfunction getColorScheme() {\n  if (Appearance) {\n    return Appearance.getColorScheme();\n  } else {\n    return 'light';\n  }\n}\n\nexport default function styleToBarStyle() {\n  var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n  var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getColorScheme();\n\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n\n  var resolvedStyle = style;\n\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/expo-status-bar/src/styleToBarStyle.ts"],"names":["getColorScheme","Appearance","styleToBarStyle","style","colorScheme","resolvedStyle"],"mappings":";;AAIA,SAASA,cAAT,GAA0B;AACxB,MAAIC,UAAJ,EAAgB;AACd,WAAOA,UAAU,CAACD,cAAX,EAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF;;AAED,eAAe,SAASE,eAAT,GAGqB;AAAA,MAFlCC,KAEkC,uEAFV,MAEU;AAAA,MADlCC,WACkC,uEADHJ,cAAc,EACX;;AAClC,MAAI,CAACI,WAAL,EAAkB;AAChBA,IAAAA,WAAW,GAAG,OAAd;AACD;;AAED,MAAIC,aAAa,GAAGF,KAApB;;AACA,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpBE,IAAAA,aAAa,GAAGD,WAAW,KAAK,OAAhB,GAA0B,MAA1B,GAAmC,OAAnD;AACD,GAFD,MAEO,IAAID,KAAK,KAAK,UAAd,EAA0B;AAC/BE,IAAAA,aAAa,GAAGD,WAAW,KAAK,OAAhB,GAA0B,OAA1B,GAAoC,MAApD;AACD;;AAED,SAAOC,aAAa,KAAK,OAAlB,GAA4B,eAA5B,GAA8C,cAArD;AACD","sourcesContent":["import { Appearance, ColorSchemeName } from 'react-native';\n\nimport { StatusBarStyle } from './StatusBar.types';\n\nfunction getColorScheme() {\n  if (Appearance) {\n    return Appearance.getColorScheme();\n  } else {\n    return 'light';\n  }\n}\n\nexport default function styleToBarStyle(\n  style: StatusBarStyle = 'auto',\n  colorScheme: ColorSchemeName = getColorScheme()\n): 'light-content' | 'dark-content' {\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n\n  let resolvedStyle = style;\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}\n"]},"metadata":{},"sourceType":"module"}