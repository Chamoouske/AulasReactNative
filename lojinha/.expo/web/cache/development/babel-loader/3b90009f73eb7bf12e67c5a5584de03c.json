{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _require = require(\"./ObjCppUtils/GenerateStructs\"),\n    translateObjectsForStructs = _require.translateObjectsForStructs,\n    capitalizeFirstLetter = _require.capitalizeFirstLetter;\n\nvar moduleTemplate = \"\\nclass JSI_EXPORT Native::_MODULE_NAME_::SpecJSI : public ObjCTurboModule {\\npublic:\\n  Native::_MODULE_NAME_::SpecJSI(id<RCTTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker, id<RCTTurboModulePerformanceLogger> perfLogger);\\n};\";\nvar protocolTemplate = \"\\n::_STRUCTS_::\\n\\n@protocol Native::_MODULE_NAME_::Spec <RCTBridgeModule, RCTTurboModule>\\n::_MODULE_PROPERTIES_::\\n@end\\n\";\n\nvar callbackArgs = function callbackArgs(prop) {\n  return prop.typeAnnotation.returnTypeAnnotation.type === 'GenericPromiseTypeAnnotation' ? (prop.typeAnnotation.params.length === 0 ? '' : '\\n   resolve') + \":(RCTPromiseResolveBlock)resolve\\n   reject:(RCTPromiseRejectBlock)reject\" : '';\n};\n\nvar template = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n// NOTE: This entire file should be codegen'ed.\\n\\n#import <vector>\\n\\n#import <Foundation/Foundation.h>\\n\\n#import <React/RCTBridgeModule.h>\\n\\n#import <ReactCommon/RCTTurboModule.h>\\n#import <RCTRequired/RCTRequired.h>\\n#import <RCTTypeSafety/RCTTypedModuleConstants.h>\\n#import <React/RCTCxxConvert.h>\\n#import <React/RCTManagedPointer.h>\\n#import <RCTTypeSafety/RCTConvertHelpers.h>\\n\\n::_PROTOCOLS_::\\n\\nnamespace facebook {\\nnamespace react {\\n::_MODULES_::\\n\\n} // namespace react\\n} // namespace facebook\\n\";\nvar constants = \"- (facebook::react::ModuleConstants<JS::Native::_MODULE_NAME_::::Constants::Builder>)constantsToExport;\\n- (facebook::react::ModuleConstants<JS::Native::_MODULE_NAME_::::Constants::Builder>)getConstants;\";\n\nfunction translatePrimitiveJSTypeToObjCType(param, error) {\n  function wrapIntoNullableIfNeeded(generatedType) {\n    return param.nullable ? generatedType + \" _Nullable\" : generatedType;\n  }\n\n  switch (param.typeAnnotation.type) {\n    case 'StringTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSString *');\n\n    case 'NumberTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'Int32TypeAnnotation':\n      return param.nullable ? 'NSNumber *' : 'double';\n\n    case 'BooleanTypeAnnotation':\n      return param.nullable ? 'NSNumber * _Nullable' : 'BOOL';\n\n    case 'GenericObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n\n    case 'ArrayTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSArray *');\n\n    case 'FunctionTypeAnnotation':\n      return 'RCTResponseSenderBlock';\n\n    case 'ObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n\n    default:\n      throw new Error(error);\n  }\n}\n\nfunction translatePrimitiveJSTypeToObjCTypeForReturn(type, error) {\n  function wrapIntoNullableIfNeeded(generatedType) {\n    return type.nullable ? generatedType + \" _Nullable\" : generatedType;\n  }\n\n  switch (type.type) {\n    case 'VoidTypeAnnotation':\n    case 'GenericPromiseTypeAnnotation':\n      return 'void';\n\n    case 'StringTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSString *');\n\n    case 'NumberTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'Int32TypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSNumber *');\n\n    case 'BooleanTypeAnnotation':\n      return type.nullable ? 'NSNumber * _Nullable' : 'BOOL';\n\n    case 'GenericObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n\n    case 'ArrayTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSArray<id<NSObject>> *');\n\n    case 'ObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n\n    default:\n      throw new Error(error);\n  }\n}\n\nvar methodImplementationTemplate = '- (::_RETURN_VALUE_::) ::_PROPERTY_NAME_::::_ARGS_::;';\nmodule.exports = {\n  generate: function generate(libraryName, schema, moduleSpecName) {\n    var nativeModules = Object.keys(schema.modules).map(function (moduleName) {\n      var modules = schema.modules[moduleName].nativeModules;\n\n      if (modules == null) {\n        return null;\n      }\n\n      return modules;\n    }).filter(Boolean).reduce(function (acc, components) {\n      return _extends(acc, components);\n    }, {});\n    var modules = Object.keys(nativeModules).map(function (name) {\n      return moduleTemplate.replace(/::_MODULE_NAME_::/g, name);\n    }).join('\\n');\n    var protocols = Object.keys(nativeModules).map(function (name) {\n      var objectForGeneratingStructs = [];\n      var properties = nativeModules[name].properties;\n      var implementations = properties.map(function (prop) {\n        var nativeArgs = prop.typeAnnotation.params.map(function (param, i) {\n          var paramObjCType;\n\n          if (param.typeAnnotation.type === 'ObjectTypeAnnotation' && param.typeAnnotation.properties) {\n            var variableName = capitalizeFirstLetter(prop.name) + capitalizeFirstLetter(param.name);\n            objectForGeneratingStructs.push({\n              name: variableName,\n              object: {\n                type: 'ObjectTypeAnnotation',\n                properties: param.typeAnnotation.properties\n              }\n            });\n            paramObjCType = \"JS::Native::_MODULE_NAME_::::Spec\" + variableName + \"&\";\n          } else {\n            paramObjCType = translatePrimitiveJSTypeToObjCType(param, \"Unspopported type for param \\\"\" + param.name + \"\\\" in \" + prop.name + \". Found: \" + param.typeAnnotation.type);\n          }\n\n          return (i === 0 ? '' : param.name) + \":(\" + paramObjCType + \")\" + param.name;\n        }).join('\\n   ').concat(callbackArgs(prop));\n        var returnTypeAnnotation = prop.typeAnnotation.returnTypeAnnotation;\n\n        if (returnTypeAnnotation.type === 'ObjectTypeAnnotation' && returnTypeAnnotation.properties) {\n          objectForGeneratingStructs.push({\n            name: capitalizeFirstLetter(prop.name) + 'ReturnType',\n            object: {\n              type: 'ObjectTypeAnnotation',\n              properties: returnTypeAnnotation.properties\n            }\n          });\n        }\n\n        var implementation = methodImplementationTemplate.replace('::_PROPERTY_NAME_::', prop.name).replace('::_RETURN_VALUE_::', translatePrimitiveJSTypeToObjCTypeForReturn(returnTypeAnnotation, \"Unspopported return type for \" + prop.name + \". Found: \" + prop.typeAnnotation.returnTypeAnnotation.type)).replace('::_ARGS_::', nativeArgs);\n\n        if (prop.name === 'getConstants') {\n          if (prop.typeAnnotation.returnTypeAnnotation.properties && prop.typeAnnotation.returnTypeAnnotation.properties.length === 0) {\n            return '';\n          }\n\n          return constants.replace(/::_MODULE_NAME_::/, name);\n        }\n\n        return implementation;\n      }).join('\\n');\n      return protocolTemplate.replace(/::_STRUCTS_::/g, translateObjectsForStructs(objectForGeneratingStructs)).replace(/::_MODULE_PROPERTIES_::/g, implementations).replace(/::_MODULE_NAME_::/g, name).replace('::_PROPERTIES_MAP_::', '');\n    }).join('\\n');\n    var fileName = moduleSpecName + \".h\";\n    var replacedTemplate = template.replace(/::_MODULES_::/g, modules).replace(/::_PROTOCOLS_::/g, protocols);\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/modules/GenerateModuleHObjCpp.js"],"names":["require","translateObjectsForStructs","capitalizeFirstLetter","moduleTemplate","protocolTemplate","callbackArgs","prop","typeAnnotation","returnTypeAnnotation","type","params","length","template","constants","translatePrimitiveJSTypeToObjCType","param","error","wrapIntoNullableIfNeeded","generatedType","nullable","Error","translatePrimitiveJSTypeToObjCTypeForReturn","methodImplementationTemplate","module","exports","generate","libraryName","schema","moduleSpecName","nativeModules","Object","keys","modules","map","moduleName","filter","Boolean","reduce","acc","components","name","replace","join","protocols","objectForGeneratingStructs","properties","implementations","nativeArgs","i","paramObjCType","variableName","push","object","concat","implementation","fileName","replacedTemplate","Map"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {\n  SchemaType,\n  FunctionTypeAnnotationParam,\n  FunctionTypeAnnotationReturn,\n  ObjectParamTypeAnnotation,\n} from '../../CodegenSchema';\n\nconst {\n  translateObjectsForStructs,\n  capitalizeFirstLetter,\n} = require('./ObjCppUtils/GenerateStructs');\n\ntype FilesOutput = Map<string, string>;\n\nconst moduleTemplate = `\nclass JSI_EXPORT Native::_MODULE_NAME_::SpecJSI : public ObjCTurboModule {\npublic:\n  Native::_MODULE_NAME_::SpecJSI(id<RCTTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker, id<RCTTurboModulePerformanceLogger> perfLogger);\n};`;\n\nconst protocolTemplate = `\n::_STRUCTS_::\n\n@protocol Native::_MODULE_NAME_::Spec <RCTBridgeModule, RCTTurboModule>\n::_MODULE_PROPERTIES_::\n@end\n`;\n\nconst callbackArgs = prop =>\n  prop.typeAnnotation.returnTypeAnnotation.type ===\n  'GenericPromiseTypeAnnotation'\n    ? `${\n        prop.typeAnnotation.params.length === 0 ? '' : '\\n   resolve'\n      }:(RCTPromiseResolveBlock)resolve\n   reject:(RCTPromiseRejectBlock)reject`\n    : '';\n\nconst template = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// NOTE: This entire file should be codegen'ed.\n\n#import <vector>\n\n#import <Foundation/Foundation.h>\n\n#import <React/RCTBridgeModule.h>\n\n#import <ReactCommon/RCTTurboModule.h>\n#import <RCTRequired/RCTRequired.h>\n#import <RCTTypeSafety/RCTTypedModuleConstants.h>\n#import <React/RCTCxxConvert.h>\n#import <React/RCTManagedPointer.h>\n#import <RCTTypeSafety/RCTConvertHelpers.h>\n\n::_PROTOCOLS_::\n\nnamespace facebook {\nnamespace react {\n::_MODULES_::\n\n} // namespace react\n} // namespace facebook\n`;\n\ntype ObjectForGeneratingStructs = $ReadOnly<{|\n  name: string,\n  object: $ReadOnly<{|\n    type: 'ObjectTypeAnnotation',\n    properties: $ReadOnlyArray<ObjectParamTypeAnnotation>,\n  |}>,\n|}>;\n\nconst constants = `- (facebook::react::ModuleConstants<JS::Native::_MODULE_NAME_::::Constants::Builder>)constantsToExport;\n- (facebook::react::ModuleConstants<JS::Native::_MODULE_NAME_::::Constants::Builder>)getConstants;`;\n\nfunction translatePrimitiveJSTypeToObjCType(\n  param: FunctionTypeAnnotationParam,\n  error: string,\n) {\n  function wrapIntoNullableIfNeeded(generatedType: string) {\n    return param.nullable ? `${generatedType} _Nullable` : generatedType;\n  }\n  switch (param.typeAnnotation.type) {\n    case 'StringTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSString *');\n    case 'NumberTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'Int32TypeAnnotation':\n      return param.nullable ? 'NSNumber *' : 'double';\n    case 'BooleanTypeAnnotation':\n      return param.nullable ? 'NSNumber * _Nullable' : 'BOOL';\n    case 'GenericObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n    case 'ArrayTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSArray *');\n    case 'FunctionTypeAnnotation':\n      return 'RCTResponseSenderBlock';\n    case 'ObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n    default:\n      throw new Error(error);\n  }\n}\n\nfunction translatePrimitiveJSTypeToObjCTypeForReturn(\n  type: FunctionTypeAnnotationReturn,\n  error: string,\n) {\n  function wrapIntoNullableIfNeeded(generatedType: string) {\n    return type.nullable ? `${generatedType} _Nullable` : generatedType;\n  }\n  switch (type.type) {\n    case 'VoidTypeAnnotation':\n    case 'GenericPromiseTypeAnnotation':\n      return 'void';\n    case 'StringTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSString *');\n    case 'NumberTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'Int32TypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSNumber *');\n    case 'BooleanTypeAnnotation':\n      return type.nullable ? 'NSNumber * _Nullable' : 'BOOL';\n    case 'GenericObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n    case 'ArrayTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSArray<id<NSObject>> *');\n    case 'ObjectTypeAnnotation':\n      return wrapIntoNullableIfNeeded('NSDictionary *');\n    default:\n      throw new Error(error);\n  }\n}\nconst methodImplementationTemplate =\n  '- (::_RETURN_VALUE_::) ::_PROPERTY_NAME_::::_ARGS_::;';\n\nmodule.exports = {\n  generate(\n    libraryName: string,\n    schema: SchemaType,\n    moduleSpecName: string,\n  ): FilesOutput {\n    const nativeModules = Object.keys(schema.modules)\n      .map(moduleName => {\n        const modules = schema.modules[moduleName].nativeModules;\n        if (modules == null) {\n          return null;\n        }\n\n        return modules;\n      })\n      .filter(Boolean)\n      .reduce((acc, components) => Object.assign(acc, components), {});\n\n    const modules = Object.keys(nativeModules)\n      .map(name => moduleTemplate.replace(/::_MODULE_NAME_::/g, name))\n      .join('\\n');\n\n    const protocols = Object.keys(nativeModules)\n      .map(name => {\n        const objectForGeneratingStructs: Array<ObjectForGeneratingStructs> = [];\n        const {properties} = nativeModules[name];\n        const implementations = properties\n          .map(prop => {\n            const nativeArgs = prop.typeAnnotation.params\n              .map((param, i) => {\n                let paramObjCType;\n                if (\n                  param.typeAnnotation.type === 'ObjectTypeAnnotation' &&\n                  param.typeAnnotation.properties\n                ) {\n                  const variableName =\n                    capitalizeFirstLetter(prop.name) +\n                    capitalizeFirstLetter(param.name);\n                  objectForGeneratingStructs.push({\n                    name: variableName,\n                    object: {\n                      type: 'ObjectTypeAnnotation',\n                      properties: param.typeAnnotation.properties,\n                    },\n                  });\n                  paramObjCType = `JS::Native::_MODULE_NAME_::::Spec${variableName}&`;\n                } else {\n                  paramObjCType = translatePrimitiveJSTypeToObjCType(\n                    param,\n                    `Unspopported type for param \"${param.name}\" in ${\n                      prop.name\n                    }. Found: ${param.typeAnnotation.type}`,\n                  );\n                }\n                return `${i === 0 ? '' : param.name}:(${paramObjCType})${\n                  param.name\n                }`;\n              })\n              .join('\\n   ')\n              .concat(callbackArgs(prop));\n            const {returnTypeAnnotation} = prop.typeAnnotation;\n            if (\n              returnTypeAnnotation.type === 'ObjectTypeAnnotation' &&\n              returnTypeAnnotation.properties\n            ) {\n              objectForGeneratingStructs.push({\n                name: capitalizeFirstLetter(prop.name) + 'ReturnType',\n\n                object: {\n                  type: 'ObjectTypeAnnotation',\n                  properties: returnTypeAnnotation.properties,\n                },\n              });\n            }\n            const implementation = methodImplementationTemplate\n              .replace('::_PROPERTY_NAME_::', prop.name)\n              .replace(\n                '::_RETURN_VALUE_::',\n                translatePrimitiveJSTypeToObjCTypeForReturn(\n                  returnTypeAnnotation,\n                  `Unspopported return type for ${prop.name}. Found: ${\n                    prop.typeAnnotation.returnTypeAnnotation.type\n                  }`,\n                ),\n              )\n              .replace('::_ARGS_::', nativeArgs);\n            if (prop.name === 'getConstants') {\n              if (\n                prop.typeAnnotation.returnTypeAnnotation.properties &&\n                prop.typeAnnotation.returnTypeAnnotation.properties.length === 0\n              ) {\n                return '';\n              }\n              return constants.replace(/::_MODULE_NAME_::/, name);\n            }\n            return implementation;\n          })\n          .join('\\n');\n        return protocolTemplate\n          .replace(\n            /::_STRUCTS_::/g,\n            translateObjectsForStructs(objectForGeneratingStructs),\n          )\n          .replace(/::_MODULE_PROPERTIES_::/g, implementations)\n          .replace(/::_MODULE_NAME_::/g, name)\n          .replace('::_PROPERTIES_MAP_::', '');\n      })\n      .join('\\n');\n\n    const fileName = `${moduleSpecName}.h`;\n    const replacedTemplate = template\n      .replace(/::_MODULES_::/g, modules)\n      .replace(/::_PROTOCOLS_::/g, protocols);\n\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}