{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Text/TextExample.android.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar React = require('react');\n\nvar TextInlineView = require(\"../../components/TextInlineView\");\n\nvar TextLegend = require(\"../../components/TextLegend\");\n\nvar LayoutAnimation = require(\"react-native-web/dist/exports/LayoutAnimation\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Entity = function (_React$Component) {\n  _inherits(Entity, _React$Component);\n\n  var _super = _createSuper(Entity);\n\n  function Entity() {\n    _classCallCheck(this, Entity);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Entity, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          color: '#527fe4'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return Entity;\n}(React.Component);\n\nvar AttributeToggler = function (_React$Component2) {\n  _inherits(AttributeToggler, _React$Component2);\n\n  var _super2 = _createSuper(AttributeToggler);\n\n  function AttributeToggler() {\n    var _this;\n\n    _classCallCheck(this, AttributeToggler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      fontWeight: 'bold',\n      fontSize: 15\n    };\n\n    _this.toggleWeight = function () {\n      _this.setState({\n        fontWeight: _this.state.fontWeight === 'bold' ? 'normal' : 'bold'\n      });\n    };\n\n    _this.increaseSize = function () {\n      _this.setState({\n        fontSize: _this.state.fontSize + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AttributeToggler, [{\n    key: \"render\",\n    value: function render() {\n      var curStyle = {\n        fontWeight: this.state.fontWeight,\n        fontSize: this.state.fontSize\n      };\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: curStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, \"Tap the controls below to change attributes.\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"See how it will even work on\", ' ', React.createElement(Text, {\n        style: curStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"this nested text\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        onPress: this.toggleWeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"Toggle Weight\"), ' (with highlight onPress)'), React.createElement(Text, {\n        onPress: this.increaseSize,\n        suppressHighlighting: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"Increase Size (suppressHighlighting true)\"));\n    }\n  }]);\n\n  return AttributeToggler;\n}(React.Component);\n\nvar AdjustingFontSize = function (_React$Component3) {\n  _inherits(AdjustingFontSize, _React$Component3);\n\n  var _super3 = _createSuper(AdjustingFontSize);\n\n  function AdjustingFontSize() {\n    var _this2;\n\n    _classCallCheck(this, AdjustingFontSize);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super3.call.apply(_super3, [this].concat(args));\n    _this2.state = {\n      dynamicText: '',\n      shouldRender: true\n    };\n\n    _this2.reset = function () {\n      LayoutAnimation.easeInEaseOut();\n\n      _this2.setState({\n        shouldRender: false\n      });\n\n      setTimeout(function () {\n        LayoutAnimation.easeInEaseOut();\n\n        _this2.setState({\n          dynamicText: '',\n          shouldRender: true\n        });\n      }, 300);\n    };\n\n    _this2.addText = function () {\n      _this2.setState({\n        dynamicText: _this2.state.dynamicText + (Math.floor(Math.random() * 10 % 2) ? ' foo' : ' bar')\n      });\n    };\n\n    _this2.removeText = function () {\n      _this2.setState({\n        dynamicText: _this2.state.dynamicText.slice(0, _this2.state.dynamicText.length - 4)\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(AdjustingFontSize, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.shouldRender) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        ellipsizeMode: \"tail\",\n        numberOfLines: 1,\n        style: {\n          fontSize: 36,\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, \"Truncated text is baaaaad.\"), React.createElement(Text, {\n        numberOfLines: 1,\n        adjustsFontSizeToFit: true,\n        style: {\n          fontSize: 40,\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, \"Shrinking to fit available space is much better!\"), React.createElement(Text, {\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        style: {\n          fontSize: 30,\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, 'Add text to me to watch me shrink!' + ' ' + this.state.dynamicText), React.createElement(Text, {\n        adjustsFontSizeToFit: true,\n        numberOfLines: 4,\n        style: {\n          fontSize: 20,\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, 'Multiline text component shrinking is supported, watch as this reeeeaaaally loooooong teeeeeeext grooooows and then shriiiinks as you add text to me! ioahsdia soady auydoa aoisyd aosdy ' + ' ' + this.state.dynamicText), React.createElement(Text, {\n        adjustsFontSizeToFit: true,\n        style: {\n          fontSize: 20,\n          marginVertical: 6,\n          maxHeight: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, 'Text limited by height, watch as this reeeeaaaally loooooong teeeeeeext grooooows and then shriiiinks as you add text to me! ioahsdia soady auydoa aoisyd aosdy ' + ' ' + this.state.dynamicText), React.createElement(Text, {\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        style: {\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, 'Differently sized nested elements will shrink together. '), React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, 'LARGE TEXT! ' + this.state.dynamicText)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          marginTop: 5,\n          marginVertical: 6\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#ffaaaa'\n        },\n        onPress: this.reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"Reset\"), React.createElement(Text, {\n        style: {\n          backgroundColor: '#aaaaff'\n        },\n        onPress: this.removeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, \"Remove Text\"), React.createElement(Text, {\n        style: {\n          backgroundColor: '#aaffaa'\n        },\n        onPress: this.addText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, \"Add Text\")));\n    }\n  }]);\n\n  return AdjustingFontSize;\n}(React.Component);\n\nvar TextExample = function (_React$Component4) {\n  _inherits(TextExample, _React$Component4);\n\n  var _super4 = _createSuper(TextExample);\n\n  function TextExample() {\n    _classCallCheck(this, TextExample);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(TextExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: \"<Text>\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Dynamic Font Size Adjustment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, React.createElement(AdjustingFontSize, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, \"The text should wrap if it goes on multiple lines. See, this is going to the next line.\")), React.createElement(RNTesterBlock, {\n        title: \"Padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, \"This text is indented by 10px padding on all sides.\")), React.createElement(RNTesterBlock, {\n        title: \"Text metrics legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, React.createElement(TextLegend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Font Family\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, \"Sans-Serif\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"Sans-Serif Bold\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, \"Serif\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'serif',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, \"Serif Bold\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'monospace'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, \"Monospace\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'monospace',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, \"Monospace Bold (After 5.0)\")), React.createElement(RNTesterBlock, {\n        title: \"Android Material Design fonts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }\n      }, \"Roboto Regular\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, \"Roboto Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, \"Roboto Bold\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontStyle: 'italic',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }, \"Roboto Bold Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-light'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, \"Roboto Light\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-light',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }, \"Roboto Light Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-thin'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, \"Roboto Thin (After 4.2)\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-thin',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }\n      }, \"Roboto Thin Italic (After 4.2)\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-condensed'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, \"Roboto Condensed\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-condensed',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, \"Roboto Condensed Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-condensed',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }, \"Roboto Condensed Bold\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-condensed',\n          fontStyle: 'italic',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }\n      }, \"Roboto Condensed Bold Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-medium'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }\n      }, \"Roboto Medium (After 5.0)\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-medium',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }\n      }, \"Roboto Medium Italic (After 5.0)\")))), React.createElement(RNTesterBlock, {\n        title: \"Custom Fonts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'notoserif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, \"NotoSerif Regular\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'notoserif',\n          fontStyle: 'italic',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, \"NotoSerif Bold Italic\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'notoserif',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }\n      }, \"NotoSerif Italic (Missing Font file)\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Rubik',\n          fontWeight: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, \"Rubik Regular\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Rubik',\n          fontWeight: '300'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }\n      }, \"Rubik Light\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Rubik',\n          fontWeight: '700'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }, \"Rubik Bold\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Rubik',\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }\n      }, \"Rubik Medium\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'Rubik',\n          fontStyle: 'italic',\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }\n      }, \"Rubik Medium Italic\")))), React.createElement(RNTesterBlock, {\n        title: \"Font Size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 23\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }, \"Size 23\"), React.createElement(Text, {\n        style: {\n          fontSize: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }\n      }, \"Size 8\")), React.createElement(RNTesterBlock, {\n        title: \"Color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }, \"Red color\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, \"Blue color\")), React.createElement(RNTesterBlock, {\n        title: \"Font Weight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, \"Move fast and be bold\"), React.createElement(Text, {\n        style: {\n          fontWeight: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }\n      }, \"Move fast and be normal\")), React.createElement(RNTesterBlock, {\n        title: \"Font Style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }, \"Move fast and be italic\"), React.createElement(Text, {\n        style: {\n          fontStyle: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }\n      }, \"Move fast and be normal\")), React.createElement(RNTesterBlock, {\n        title: \"Font Style and Weight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontStyle: 'italic',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, \"Move fast and be both bold and italic\")), React.createElement(RNTesterBlock, {\n        title: \"Text Decoration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textDecorationLine: 'underline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, \"Solid underline\"), React.createElement(Text, {\n        style: {\n          textDecorationLine: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, \"None textDecoration\"), React.createElement(Text, {\n        style: {\n          textDecorationLine: 'line-through',\n          textDecorationStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }, \"Solid line-through\"), React.createElement(Text, {\n        style: {\n          textDecorationLine: 'underline line-through'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }\n      }, \"Both underline and line-through\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }\n      }, \"Mixed text with\", ' ', React.createElement(Text, {\n        style: {\n          textDecorationLine: 'underline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      }, \"underline\"), \" and\", ' ', React.createElement(Text, {\n        style: {\n          textDecorationLine: 'line-through'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }, \"line-through\"), ' ', \"text nodes\")), React.createElement(RNTesterBlock, {\n        title: \"Nested\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        onPress: function onPress() {\n          return console.log('1st');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }, \"(Normal text,\", React.createElement(Text, {\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, \"(R)red\", React.createElement(Text, {\n        style: {\n          color: 'green',\n          fontWeight: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      }, \"(G)green\", React.createElement(Text, {\n        style: {\n          color: 'blue',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 17\n        }\n      }, \"(B)blue\", React.createElement(Text, {\n        style: {\n          color: 'cyan',\n          fontWeight: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 19\n        }\n      }, \"(C)cyan\", React.createElement(Text, {\n        style: {\n          color: 'magenta',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      }, \"(M)magenta\", React.createElement(Text, {\n        style: {\n          color: 'yellow',\n          fontWeight: 'normal'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 23\n        }\n      }, \"(Y)yellow\", React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      }, \"(K)black\"))))))), React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        onPress: function onPress() {\n          return console.log('2nd');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }\n      }, \"(and bold\", React.createElement(Text, {\n        style: {\n          fontStyle: 'italic',\n          fontSize: 11,\n          color: '#527fe4'\n        },\n        onPress: function onPress() {\n          return console.log('3rd');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, \"(and tiny bold italic blue\", React.createElement(Text, {\n        style: {\n          fontWeight: 'normal',\n          fontStyle: 'normal'\n        },\n        onPress: function onPress() {\n          return console.log('4th');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      }, \"(and tiny normal blue)\"), \")\"), \")\"), \")\"), React.createElement(Text, {\n        style: {\n          fontFamily: 'serif'\n        },\n        onPress: function onPress() {\n          return console.log('1st');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }\n      }, \"(Serif\", React.createElement(Text, {\n        style: {\n          fontStyle: 'italic',\n          fontWeight: 'bold'\n        },\n        onPress: function onPress() {\n          return console.log('2nd');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }\n      }, \"(Serif Bold Italic\", React.createElement(Text, {\n        style: {\n          fontFamily: 'monospace',\n          fontStyle: 'normal',\n          fontWeight: 'normal'\n        },\n        onPress: function onPress() {\n          return console.log('3rd');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }\n      }, \"(Monospace Normal\", React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif',\n          fontWeight: 'bold'\n        },\n        onPress: function onPress() {\n          return console.log('4th');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }\n      }, \"(Sans-Serif Bold\", React.createElement(Text, {\n        style: {\n          fontWeight: 'normal'\n        },\n        onPress: function onPress() {\n          return console.log('5th');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 19\n        }\n      }, \"(and Sans-Serif Normal)\"), \")\"), \")\"), \")\"), \")\"), React.createElement(Text, {\n        style: {\n          fontSize: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }\n      }, React.createElement(Entity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }, \"Entity Name\"))), React.createElement(RNTesterBlock, {\n        title: \"Text Align\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }\n      }, \"auto (default) - english LTR\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }\n      }, \"\\u0623\\u062D\\u0628 \\u0627\\u0644\\u0644\\u063A\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629 auto (default) - arabic RTL\"), React.createElement(Text, {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }\n      }, \"left left left left left left left left left left left left left left left\"), React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }\n      }, \"center center center center center center center center center center center\"), React.createElement(Text, {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }\n      }, \"right right right right right right right right right right right right right\"), React.createElement(Text, {\n        style: {\n          textAlign: 'justify'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }\n      }, \"justify (works when api level >= 26 otherwise fallbacks to \\\"left\\\"): this text component\", \"'\", \"s contents are laid out with \\\"textAlign: justify\\\" and as you can see all of the lines except the last one span the available width of the parent container.\")), React.createElement(RNTesterBlock, {\n        title: \"Unicode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }\n      }, \"\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }\n      }, \"\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\")), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }\n      }, \"\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 15\n        }\n      }, \"\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\\u661F\\u9645\\u4E89\\u9738\\u662F\\u4E16\\u754C\\u4E0A\\u6700\\u597D\\u7684\\u6E38\\u620F\\u3002\")))), React.createElement(RNTesterBlock, {\n        title: \"Spaces\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }\n      }, \"A \", 'generated', \" \", 'string', \" and some \\xA0\\xA0\\xA0 spaces\")), React.createElement(RNTesterBlock, {\n        title: \"Line Height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          lineHeight: 35\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }, \"Holisticly formulate inexpensive ideas before best-of-breed benefits. \", React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 23\n        }\n      }, \"Continually\"), \" expedite magnetic potentialities rather than client-focused interfaces.\")), React.createElement(RNTesterBlock, {\n        title: \"Letter Spacing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          letterSpacing: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }\n      }, \"letterSpacing = 0\"), React.createElement(Text, {\n        style: {\n          letterSpacing: 2,\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }\n      }, \"letterSpacing = 2\"), React.createElement(Text, {\n        style: {\n          letterSpacing: 9,\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }\n      }, \"letterSpacing = 9\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          letterSpacing: 2,\n          backgroundColor: 'fuchsia',\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }\n      }, \"With size and background color\")), React.createElement(Text, {\n        style: {\n          letterSpacing: -1,\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }\n      }, \"letterSpacing = -1\"), React.createElement(Text, {\n        style: {\n          letterSpacing: 3,\n          backgroundColor: '#dddddd',\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }\n      }, \"[letterSpacing = 3]\", React.createElement(Text, {\n        style: {\n          letterSpacing: 0,\n          backgroundColor: '#bbbbbb'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }\n      }, \"[Nested letterSpacing = 0]\"), React.createElement(Text, {\n        style: {\n          letterSpacing: 6,\n          backgroundColor: '#eeeeee'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }\n      }, \"[Nested letterSpacing = 6]\")))), React.createElement(RNTesterBlock, {\n        title: \"Empty Text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Toggling Attributes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 9\n        }\n      }, React.createElement(AttributeToggler, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"backgroundColor attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          backgroundColor: '#ffaaaa'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }\n      }, \"Red background,\", React.createElement(Text, {\n        style: {\n          backgroundColor: '#aaaaff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }\n      }, ' ', \"blue background,\", React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 15\n        }\n      }, ' ', \"inherited blue background,\", React.createElement(Text, {\n        style: {\n          backgroundColor: '#aaffaa'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 17\n        }\n      }, ' ', \"nested green background.\")))), React.createElement(Text, {\n        style: {\n          backgroundColor: 'rgba(100, 100, 100, 0.3)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }\n      }, \"Same alpha as background,\", React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }\n      }, \"Inherited alpha from background,\", React.createElement(Text, {\n        style: {\n          backgroundColor: 'rgba(100, 100, 100, 0.3)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 15\n        }\n      }, \"Reapply alpha\")))), React.createElement(RNTesterBlock, {\n        title: \"containerBackgroundColor attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          height: 85\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#ffaaaa',\n          width: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          backgroundColor: '#aaaaff',\n          width: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }\n      })), React.createElement(Text, {\n        style: [styles.backgroundColorText, {\n          top: -80\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }\n      }, \"Default containerBackgroundColor (inherited) + backgroundColor wash\"), React.createElement(Text, {\n        style: [styles.backgroundColorText, {\n          top: -70,\n          backgroundColor: 'transparent'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }\n      }, \"containerBackgroundColor: 'transparent' + backgroundColor wash\")), React.createElement(RNTesterBlock, {\n        title: \"numberOfLines attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }\n      }, \"Maximum of one line no matter now much I write here. If I keep writing it\", \"'\", \"ll just truncate after one line\"), React.createElement(Text, {\n        numberOfLines: 2,\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }\n      }, \"Maximum of two lines no matter now much I write here. If I keep writing it\", \"'\", \"ll just truncate after two lines\"), React.createElement(Text, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }\n      }, \"No maximum lines specified no matter now much I write here. If I keep writing it\", \"'\", \"ll just keep going and going\")), React.createElement(RNTesterBlock, {\n        title: \"allowFontScaling attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }\n      }, \"By default, text will respect Text Size accessibility setting on Android. It means that all font sizes will be increased or decreased depending on the value of the Text Size setting in the OS's Settings app.\"), React.createElement(Text, {\n        style: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }\n      }, \"You can disable scaling for your Text component by passing \", '\"', \"allowFontScaling=\", '{', \"false\", '}\"', \" prop.\"), React.createElement(Text, {\n        allowFontScaling: false,\n        style: {\n          marginTop: 20,\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }\n      }, \"This text will not scale.\", ' ', React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }\n      }, \"This text also won't scale because it inherits \\\"allowFontScaling\\\" from its parent.\"))), React.createElement(RNTesterBlock, {\n        title: \"selectable attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        selectable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }\n      }, \"This text is selectable if you click-and-hold, and will offer the native Android selection menus.\")), React.createElement(RNTesterBlock, {\n        title: \"selectionColor attribute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        selectable: true,\n        selectionColor: \"orange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 11\n        }\n      }, \"This text will have a orange highlight on selection.\")), React.createElement(RNTesterBlock, {\n        title: \"Inline views\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInlineView.Basic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Inline image/view clipped by <Text>\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInlineView.ClippedByText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Relayout inline image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInlineView.ChangeImageSize, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Relayout inline view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInlineView.ChangeViewSize, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Relayout nested inline view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInlineView.ChangeInnerViewSize, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Text shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          textShadowOffset: {\n            width: 2,\n            height: 2\n          },\n          textShadowRadius: 1,\n          textShadowColor: '#00cccc'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }\n      }, \"Demo text shadow\")), React.createElement(RNTesterBlock, {\n        title: \"Ellipsize mode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }\n      }, \"This very long text should be truncated with dots in the end.\"), React.createElement(Text, {\n        ellipsizeMode: \"middle\",\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }\n      }, \"This very long text should be truncated with dots in the middle.\"), React.createElement(Text, {\n        ellipsizeMode: \"head\",\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }\n      }, \"This very long text should be truncated with dots in the beginning.\"), React.createElement(Text, {\n        ellipsizeMode: \"clip\",\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }\n      }, \"This very long text should be clipped and this will not be visible.\")), React.createElement(RNTesterBlock, {\n        title: \"Font variants\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontVariant: ['small-caps']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }\n      }, \"Small Caps\", '\\n'), React.createElement(Text, {\n        style: {\n          fontFamily: 'Roboto',\n          fontVariant: ['oldstyle-nums']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }\n      }, \"Old Style nums 0123456789\", '\\n'), React.createElement(Text, {\n        style: {\n          fontFamily: 'Roboto',\n          fontVariant: ['lining-nums']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }\n      }, \"Lining nums 0123456789\", '\\n'), React.createElement(Text, {\n        style: {\n          fontVariant: ['tabular-nums']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }\n      }, \"Tabular nums\", '\\n', \"1111\", '\\n', \"2222\", '\\n'), React.createElement(Text, {\n        style: {\n          fontVariant: ['proportional-nums']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }\n      }, \"Proportional nums\", '\\n', \"1111\", '\\n', \"2222\", '\\n')), React.createElement(RNTesterBlock, {\n        title: \"Include Font Padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.includeFontPaddingText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 15\n        }\n      }, \"Ey\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 15\n        }\n      }, \"Default\")), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.includeFontPaddingText, {\n          includeFontPadding: false,\n          marginLeft: 10\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 15\n        }\n      }, \"Ey\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 15\n        }\n      }, \"includeFontPadding: false\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }\n      }, \"By default Android will put extra space above text to allow for upper-case accents or other ascenders. With some fonts, this can make text look slightly misaligned when centered vertically.\")), React.createElement(RNTesterBlock, {\n        title: \"Text transform\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }\n      }, \"This text should be uppercased.\"), React.createElement(Text, {\n        style: {\n          textTransform: 'lowercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }\n      }, \"This TEXT SHOULD be lowercased.\"), React.createElement(Text, {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }\n      }, \"This text should be CAPITALIZED.\"), React.createElement(Text, {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }\n      }, \"Mixed: \", React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 20\n        }\n      }, \"uppercase \"), React.createElement(Text, {\n        style: {\n          textTransform: 'lowercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }\n      }, \"LoWeRcAsE \"), React.createElement(Text, {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }\n      }, \"capitalize each word\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }\n      }, \"Should be \\\"ABC\\\":\", React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }\n      }, \"a\", React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 16\n        }\n      }, \"b\"), \"c\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }\n      }, \"Should be \\\"AbC\\\":\", React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }\n      }, \"a\", React.createElement(Text, {\n        style: {\n          textTransform: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 16\n        }\n      }, \"b\"), \"c\")), React.createElement(Text, {\n        style: {\n          textTransform: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }\n      }, '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '), React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }\n      }, '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '), React.createElement(Text, {\n        style: {\n          textTransform: 'lowercase'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }\n      }, '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '), React.createElement(Text, {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }\n      }, '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '), React.createElement(Text, {\n        style: {\n          textTransform: 'uppercase',\n          fontSize: 16,\n          color: 'turquoise',\n          backgroundColor: 'blue',\n          lineHeight: 32,\n          letterSpacing: 2,\n          alignSelf: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }\n      }, \"Works with other text styles\")), React.createElement(RNTesterBlock, {\n        title: \"Substring Emoji (should only see 'test')\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }\n      }, 'test🙃'.substring(0, 5))), React.createElement(RNTesterBlock, {\n        title: \"Text linkify\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        dataDetectorType: \"phoneNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 11\n        }\n      }, \"Phone number: 123-123-1234\"), React.createElement(Text, {\n        dataDetectorType: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }\n      }, \"Link: https://www.facebook.com\"), React.createElement(Text, {\n        dataDetectorType: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }\n      }, \"Email: employee@facebook.com\"), React.createElement(Text, {\n        dataDetectorType: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }\n      }, \"Phone number: 123-123-1234 Link: https://www.facebook.com Email: employee@facebook.com\"), React.createElement(Text, {\n        dataDetectorType: \"all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }\n      }, \"Phone number: 123-123-1234 Link: https://www.facebook.com Email: employee@facebook.com\")));\n    }\n  }]);\n\n  return TextExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  backgroundColorText: {\n    left: 5,\n    backgroundColor: 'rgba(100, 100, 100, 0.3)'\n  },\n  includeFontPaddingText: {\n    fontSize: 120,\n    fontFamily: 'sans-serif',\n    backgroundColor: '#EEEEEE',\n    color: '#000000',\n    textAlignVertical: 'center',\n    alignSelf: 'center'\n  }\n});\nexports.title = '<Text>';\nexports.description = 'Base component for rendering styled text.';\nexports.examples = [{\n  title: 'Basic text',\n  render: function render() {\n    return React.createElement(TextExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Text/TextExample.android.js"],"names":["RNTesterBlock","require","RNTesterPage","React","TextInlineView","TextLegend","Entity","fontWeight","color","props","children","Component","AttributeToggler","state","fontSize","toggleWeight","setState","increaseSize","curStyle","AdjustingFontSize","dynamicText","shouldRender","reset","LayoutAnimation","easeInEaseOut","setTimeout","addText","Math","floor","random","removeText","slice","length","marginVertical","maxHeight","flexDirection","justifyContent","marginTop","backgroundColor","TextExample","padding","fontFamily","alignItems","flex","fontStyle","textDecorationLine","textDecorationStyle","console","log","textAlign","lineHeight","letterSpacing","height","width","styles","backgroundColorText","top","textShadowOffset","textShadowRadius","textShadowColor","fontVariant","marginBottom","includeFontPaddingText","includeFontPadding","marginLeft","textTransform","alignSelf","substring","StyleSheet","create","left","textAlignVertical","exports","title","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,kCAA7B;;AACA,IAAMC,YAAY,GAAGD,OAAO,iCAA5B;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMG,cAAc,GAAGH,OAAO,mCAA9B;;AACA,IAAMI,UAAU,GAAGJ,OAAO,+BAA1B;;;;;;;;;;IAIMK,M;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,MAAb;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,QADd,CADF;AAKD;;;;EAPkBP,KAAK,CAACQ,S;;IASrBC,gB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACN,MAAAA,UAAU,EAAE,MAAb;AAAqBO,MAAAA,QAAQ,EAAE;AAA/B,K;;UAERC,Y,GAAe,YAAM;AACnB,YAAKC,QAAL,CAAc;AACZT,QAAAA,UAAU,EAAE,MAAKM,KAAL,CAAWN,UAAX,KAA0B,MAA1B,GAAmC,QAAnC,GAA8C;AAD9C,OAAd;AAGD,K;;UAEDU,Y,GAAe,YAAM;AACnB,YAAKD,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QAAX,GAAsB;AADpB,OAAd;AAGD,K;;;;;;;WAED,kBAAS;AACP,UAAMI,QAAQ,GAAG;AACfX,QAAAA,UAAU,EAAE,KAAKM,KAAL,CAAWN,UADR;AAEfO,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFN,OAAjB;AAIA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAC+B,GAD/B,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,CAJF,EAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKH,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEG,2BAFH,CAVF,EAcE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKE,YAApB;AAAkC,QAAA,oBAAoB,EAAE,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAdF,CADF;AAoBD;;;;EAxC4Bd,KAAK,CAACQ,S;;IAkD/BQ,iB;;;;;;;;;;;;;;;WAIJN,K,GAAQ;AACNO,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;WAKRC,K,GAAQ,YAAM;AACZC,MAAAA,eAAe,CAACC,aAAhB;;AACA,aAAKR,QAAL,CAAc;AACZK,QAAAA,YAAY,EAAE;AADF,OAAd;;AAGAI,MAAAA,UAAU,CAAC,YAAM;AACfF,QAAAA,eAAe,CAACC,aAAhB;;AACA,eAAKR,QAAL,CAAc;AACZI,UAAAA,WAAW,EAAE,EADD;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID,OANS,EAMP,GANO,CAAV;AAOD,K;;WAEDK,O,GAAU,YAAM;AACd,aAAKV,QAAL,CAAc;AACZI,QAAAA,WAAW,EACT,OAAKP,KAAL,CAAWO,WAAX,IACCO,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAAjB,GAAuB,CAAlC,IAAuC,MAAvC,GAAgD,MADjD;AAFU,OAAd;AAKD,K;;WAEDC,U,GAAa,YAAM;AACjB,aAAKd,QAAL,CAAc;AACZI,QAAAA,WAAW,EAAE,OAAKP,KAAL,CAAWO,WAAX,CAAuBW,KAAvB,CACX,CADW,EAEX,OAAKlB,KAAL,CAAWO,WAAX,CAAuBY,MAAvB,GAAgC,CAFrB;AADD,OAAd;AAMD,K;;;;;;;WAED,kBAAS;AACP,UAAI,CAAC,KAAKnB,KAAL,CAAWQ,YAAhB,EAA8B;AAC5B,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAC,MADhB;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,KAAK,EAAE;AAACP,UAAAA,QAAQ,EAAE,EAAX;AAAemB,UAAAA,cAAc,EAAE;AAA/B,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAOE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAE,CADjB;AAEE,QAAA,oBAAoB,EAAE,IAFxB;AAGE,QAAA,KAAK,EAAE;AAACnB,UAAAA,QAAQ,EAAE,EAAX;AAAemB,UAAAA,cAAc,EAAE;AAA/B,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAPF,EAcE,oBAAC,IAAD;AACE,QAAA,oBAAoB,EAAE,IADxB;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,KAAK,EAAE;AAACnB,UAAAA,QAAQ,EAAE,EAAX;AAAemB,UAAAA,cAAc,EAAE;AAA/B,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,uCAAuC,GAAvC,GAA6C,KAAKpB,KAAL,CAAWO,WAJ3D,CAdF,EAqBE,oBAAC,IAAD;AACE,QAAA,oBAAoB,EAAE,IADxB;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,KAAK,EAAE;AAACN,UAAAA,QAAQ,EAAE,EAAX;AAAemB,UAAAA,cAAc,EAAE;AAA/B,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,8LACC,GADD,GAEC,KAAKpB,KAAL,CAAWO,WANf,CArBF,EA8BE,oBAAC,IAAD;AACE,QAAA,oBAAoB,EAAE,IADxB;AAEE,QAAA,KAAK,EAAE;AAACN,UAAAA,QAAQ,EAAE,EAAX;AAAemB,UAAAA,cAAc,EAAE,CAA/B;AAAkCC,UAAAA,SAAS,EAAE;AAA7C,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,qKACC,GADD,GAEC,KAAKrB,KAAL,CAAWO,WALf,CA9BF,EAsCE,oBAAC,IAAD;AACE,QAAA,oBAAoB,EAAE,IADxB;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,KAAK,EAAE;AAACa,UAAAA,cAAc,EAAE;AAAjB,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACnB,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,0DADH,CAJF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,iBAAiB,KAAKD,KAAL,CAAWO,WAD/B,CAPF,CAtCF,EAkDE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLe,UAAAA,aAAa,EAAE,KADV;AAELC,UAAAA,cAAc,EAAE,cAFX;AAGLC,UAAAA,SAAS,EAAE,CAHN;AAILJ,UAAAA,cAAc,EAAE;AAJX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAA2C,QAAA,OAAO,EAAE,KAAKhB,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAA2C,QAAA,OAAO,EAAE,KAAKR,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVF,EAaE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACQ,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAA2C,QAAA,OAAO,EAAE,KAAKZ,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,CAlDF,CADF;AAsED;;;;EAlH6BvB,KAAK,CAACQ,S;;IAqHhC4B,W;;;;;;;;;;;;;WACJ,kBAAqB;AACnB,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADF,CAJF,EAUE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF,CAVF,EAeE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAfF,EAkBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,YAAb;AAA2BlC,UAAAA,UAAU,EAAE;AAAvC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,OAAb;AAAsBlC,UAAAA,UAAU,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,WAAb;AAA0BlC,UAAAA,UAAU,EAAE;AAAtC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVF,CAlBF,EAgCE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC4B,UAAAA,aAAa,EAAE,KAAhB;AAAuBO,UAAAA,UAAU,EAAE;AAAnC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACF,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,YAAb;AAA2BG,UAAAA,SAAS,EAAE;AAAtC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,UAAU,EAAE,YAAb;AAA2BlC,UAAAA,UAAU,EAAE;AAAvC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAQE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,YADP;AAELG,UAAAA,SAAS,EAAE,QAFN;AAGLrC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,EAiBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,kBAAb;AAAiCG,UAAAA,SAAS,EAAE;AAA5C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAjBF,EAqBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCArBF,EAwBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,iBAAb;AAAgCG,UAAAA,SAAS,EAAE;AAA3C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAxBF,EA4BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA5BF,EA+BE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,UAAU,EAAE,sBADP;AAELG,UAAAA,SAAS,EAAE;AAFN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA/BF,EAsCE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,UAAU,EAAE,sBADP;AAELlC,UAAAA,UAAU,EAAE;AAFP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAtCF,EA6CE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,sBADP;AAELG,UAAAA,SAAS,EAAE,QAFN;AAGLrC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCA7CF,EAqDE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCArDF,EAwDE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE,mBAAb;AAAkCG,UAAAA,SAAS,EAAE;AAA7C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAxDF,CADF,CADF,CAhCF,EAiGE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACT,UAAAA,aAAa,EAAE,KAAhB;AAAuBO,UAAAA,UAAU,EAAE;AAAnC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACF,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,UAAU,EAAE,WADP;AAELG,UAAAA,SAAS,EAAE,QAFN;AAGLrC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACkC,UAAAA,UAAU,EAAE,WAAb;AAA0BG,UAAAA,SAAS,EAAE;AAArC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAVF,EAaE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,UAAU,EAAE,OADP;AAELlC,UAAAA,UAAU,EAAE;AAFP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbF,EAoBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,OADP;AAELlC,UAAAA,UAAU,EAAE;AAFP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBF,EA2BE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,OADP;AAELlC,UAAAA,UAAU,EAAE;AAFP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3BF,EAkCE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,OADP;AAELlC,UAAAA,UAAU,EAAE;AAFP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlCF,EAyCE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLkC,UAAAA,UAAU,EAAE,OADP;AAELG,UAAAA,SAAS,EAAE,QAFN;AAGLrC,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAzCF,CADF,CADF,CAjGF,EAwJE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACO,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAxJF,EA4JE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACN,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CA5JF,EAgKE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,CAhKF,EAoKE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACqC,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,CApKF,EAwKE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE,QAAZ;AAAsBrC,UAAAA,UAAU,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,CAxKF,EA6KE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACsC,UAAAA,kBAAkB,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,kBAAkB,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,kBAAkB,EAAE,cADf;AAELC,UAAAA,mBAAmB,EAAE;AAFhB,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,kBAAkB,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAVF,EAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACkB,GADlB,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,kBAAkB,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,UAEuE,GAFvE,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,kBAAkB,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAKU,GALV,eAbF,CA7KF,EAmME,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAME,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACxC,UAAAA,KAAK,EAAE,KAAR;AAAeD,UAAAA,UAAU,EAAE;AAA3B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,OAAR;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBD,UAAAA,UAAU,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBD,UAAAA,UAAU,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBD,UAAAA,UAAU,EAAE;AAA/B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,QAAR;AAAkBD,UAAAA,UAAU,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,OAAR;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAFF,CAFF,CAFF,CAFF,CAFF,CAFF,EAuBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACA,UAAAA,UAAU,EAAE;AAAb,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMwC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACJ,UAAAA,SAAS,EAAE,QAAZ;AAAsB9B,UAAAA,QAAQ,EAAE,EAAhC;AAAoCN,UAAAA,KAAK,EAAE;AAA3C,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMuC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAIE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACzC,UAAAA,UAAU,EAAE,QAAb;AAAuBqC,UAAAA,SAAS,EAAE;AAAlC,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMG,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJF,MAJF,MAvBF,MADF,EA2CE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACP,UAAAA,UAAU,EAAE;AAAb,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMM,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACJ,UAAAA,SAAS,EAAE,QAAZ;AAAsBrC,UAAAA,UAAU,EAAE;AAAlC,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMwC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAIE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLP,UAAAA,UAAU,EAAE,WADP;AAELG,UAAAA,SAAS,EAAE,QAFN;AAGLrC,UAAAA,UAAU,EAAE;AAHP,SADT;AAME,QAAA,OAAO,EAAE;AAAA,iBAAMwC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAQE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACP,UAAAA,UAAU,EAAE,YAAb;AAA2BlC,UAAAA,UAAU,EAAE;AAAvC,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMwC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAIE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAACzC,UAAAA,UAAU,EAAE;AAAb,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMwC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJF,MARF,MAJF,MAJF,MA3CF,EA4EE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAClC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CA5EF,CAnMF,EAmRE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACmC,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAHF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAPF,EAWE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAXF,EAeE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAEsB,GAFtB,kKAfF,CAnRF,EAySE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACd,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACG,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADF,CADF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADF,CANF,EAWE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACI,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACJ,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADF,CAXF,EAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4VADF,CAhBF,CADF,CAzSF,EAiUE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACK,WADL,OACmB,QADnB,kCADF,CAjUF,EAsUE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACY,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAEY,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACpC,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFZ,6EADF,CAtUF,EA6UE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACqC,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE,CAAhB;AAAmBd,UAAAA,SAAS,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACc,UAAAA,aAAa,EAAE,CAAhB;AAAmBd,UAAAA,SAAS,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACF,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLrB,UAAAA,QAAQ,EAAE,EADL;AAELqC,UAAAA,aAAa,EAAE,CAFV;AAGLb,UAAAA,eAAe,EAAE,SAHZ;AAILD,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CARF,EAmBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACc,UAAAA,aAAa,EAAE,CAAC,CAAjB;AAAoBd,UAAAA,SAAS,EAAE;AAA/B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnBF,EAsBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLc,UAAAA,aAAa,EAAE,CADV;AAELb,UAAAA,eAAe,EAAE,SAFZ;AAGLD,UAAAA,SAAS,EAAE;AAHN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACc,UAAAA,aAAa,EAAE,CAAhB;AAAmBb,UAAAA,eAAe,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAPF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACa,UAAAA,aAAa,EAAE,CAAhB;AAAmBb,UAAAA,eAAe,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVF,CAtBF,CADF,CA7UF,EAoXE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApXF,EAuXE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAvXF,EA0XE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,sBAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,gCAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,6BAHF,CAHF,CAFF,CADF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAFF,CAhBF,CA1XF,EAoZE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,oCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,aAAa,EAAE,KAAhB;AAAuBiB,UAAAA,MAAM,EAAE;AAA/B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACd,UAAAA,eAAe,EAAE,SAAlB;AAA6Be,UAAAA,KAAK,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACf,UAAAA,eAAe,EAAE,SAAlB;AAA6Be,UAAAA,KAAK,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,mBAAR,EAA6B;AAACC,UAAAA,GAAG,EAAE,CAAC;AAAP,SAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EALF,EAQE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLF,MAAM,CAACC,mBADF,EAEL;AAACC,UAAAA,GAAG,EAAE,CAAC,EAAP;AAAWlB,UAAAA,eAAe,EAAE;AAA5B,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,gEALH,CARF,CApZF,EAoaE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAEa,GAFb,oCADF,EAKE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAwB,QAAA,KAAK,EAAE;AAACD,UAAAA,SAAS,EAAE;AAAZ,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAEa,GAFb,qCALF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAEkB,GAFlB,iCATF,CApaF,EAkbE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2NADF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAC8D,GAD9D,uBAEoB,GAFpB,WAE8B,IAF9B,WAPF,EAWE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,KAAxB;AAA+B,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAE,EAAZ;AAAgBvB,UAAAA,QAAQ,EAAE;AAA1B,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC4B,GAD5B,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,QAAQ,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAFF,CAXF,CAlbF,EAqcE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GADF,CArcF,EA2cE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,cAAc,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,CA3cF,EAgdE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhdF,EAmdE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,qCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAndF,EAsdE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtdF,EAydE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAzdF,EA4dE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,CAAgB,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA5dF,EA+dE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,QAAQ,EAAE,EADL;AAEL2C,UAAAA,gBAAgB,EAAE;AAACJ,YAAAA,KAAK,EAAE,CAAR;AAAWD,YAAAA,MAAM,EAAE;AAAnB,WAFb;AAGLM,UAAAA,gBAAgB,EAAE,CAHb;AAILC,UAAAA,eAAe,EAAE;AAJZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CA/dF,EA0eE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADF,EAIE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAA6B,QAAA,aAAa,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAJF,EAOE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAC,MAApB;AAA2B,QAAA,aAAa,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAPF,EAUE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAC,MAApB;AAA2B,QAAA,aAAa,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAVF,CA1eF,EAwfE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE,CAAC,YAAD;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuD,IAAvD,CADF,EAEE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLnB,UAAAA,UAAU,EAAE,QADP;AAELmB,UAAAA,WAAW,EAAE,CAAC,eAAD;AAFR,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAK4B,IAL5B,CAFF,EASE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLnB,UAAAA,UAAU,EAAE,QADP;AAELmB,UAAAA,WAAW,EAAE,CAAC,aAAD;AAFR,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAKyB,IALzB,CATF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,WAAW,EAAE,CAAC,cAAD;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACe,IADf,UAEO,IAFP,UAGO,IAHP,CAhBF,EAqBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,WAAW,EAAE,CAAC,mBAAD;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoB,IADpB,UAEO,IAFP,UAGO,IAHP,CArBF,CAxfF,EAmhBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLzB,UAAAA,aAAa,EAAE,KADV;AAELC,UAAAA,cAAc,EAAE,cAFX;AAGLyB,UAAAA,YAAY,EAAE;AAHT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACnB,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACQ,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CANF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACpB,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLY,MAAM,CAACQ,sBADF,EAEL;AAACC,UAAAA,kBAAkB,EAAE,KAArB;AAA4BC,UAAAA,UAAU,EAAE;AAAxC,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARF,CAVF,CADF,EAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAtBF,CAnhBF,EA+iBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,EAOE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAPF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACS,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADT,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,CAVF,EAiBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,MAFF,CAjBF,EAuBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,MAFF,CAvBF,EA6BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,2EAFJ,CA7BF,EAkCE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,2EAFJ,CAlCF,EAuCE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,2EAFJ,CAvCF,EA4CE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,2EAFJ,CA5CF,EAiDE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,aAAa,EAAE,WADV;AAELnD,UAAAA,QAAQ,EAAE,EAFL;AAGLN,UAAAA,KAAK,EAAE,WAHF;AAIL8B,UAAAA,eAAe,EAAE,MAJZ;AAKLY,UAAAA,UAAU,EAAE,EALP;AAMLC,UAAAA,aAAa,EAAE,CANV;AAOLe,UAAAA,SAAS,EAAE;AAPN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAjDF,CA/iBF,EA6mBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,0CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,SAASC,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAP,CADF,CA7mBF,EAgnBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAJF,EAQE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGARF,CAhnBF,CADF;AAgoBD;;;;EAloBuBhE,KAAK,CAACQ,S;;AAooBhC,IAAM2C,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,mBAAmB,EAAE;AACnBe,IAAAA,IAAI,EAAE,CADa;AAEnBhC,IAAAA,eAAe,EAAE;AAFE,GADU;AAK/BwB,EAAAA,sBAAsB,EAAE;AACtBhD,IAAAA,QAAQ,EAAE,GADY;AAEtB2B,IAAAA,UAAU,EAAE,YAFU;AAGtBH,IAAAA,eAAe,EAAE,SAHK;AAItB9B,IAAAA,KAAK,EAAE,SAJe;AAKtB+D,IAAAA,iBAAiB,EAAE,QALG;AAMtBL,IAAAA,SAAS,EAAE;AANW;AALO,CAAlB,CAAf;AAcAM,OAAO,CAACC,KAAR,GAAgB,QAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,2CAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,YADT;AAEEG,EAAAA,MAAM,EAAE,kBAA8C;AACpD,WAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\nconst React = require('react');\nconst TextInlineView = require('../../components/TextInlineView');\nconst TextLegend = require('../../components/TextLegend');\n\nconst {LayoutAnimation, StyleSheet, Text, View} = require('react-native');\n\nclass Entity extends React.Component<{|children: React.Node|}> {\n  render() {\n    return (\n      <Text style={{fontWeight: 'bold', color: '#527fe4'}}>\n        {this.props.children}\n      </Text>\n    );\n  }\n}\nclass AttributeToggler extends React.Component<{...}, $FlowFixMeState> {\n  state = {fontWeight: 'bold', fontSize: 15};\n\n  toggleWeight = () => {\n    this.setState({\n      fontWeight: this.state.fontWeight === 'bold' ? 'normal' : 'bold',\n    });\n  };\n\n  increaseSize = () => {\n    this.setState({\n      fontSize: this.state.fontSize + 1,\n    });\n  };\n\n  render() {\n    const curStyle = {\n      fontWeight: this.state.fontWeight,\n      fontSize: this.state.fontSize,\n    };\n    return (\n      <View>\n        <Text style={curStyle}>\n          Tap the controls below to change attributes.\n        </Text>\n        <Text>\n          <Text>\n            See how it will even work on{' '}\n            <Text style={curStyle}>this nested text</Text>\n          </Text>\n        </Text>\n        <Text>\n          <Text onPress={this.toggleWeight}>Toggle Weight</Text>\n          {' (with highlight onPress)'}\n        </Text>\n        <Text onPress={this.increaseSize} suppressHighlighting={true}>\n          Increase Size (suppressHighlighting true)\n        </Text>\n      </View>\n    );\n  }\n}\n\ntype AdjustingFontSizeProps = $ReadOnly<{||}>;\n\ntype AdjustingFontSizeState = {|\n  dynamicText: string,\n  shouldRender: boolean,\n|};\n\nclass AdjustingFontSize extends React.Component<\n  AdjustingFontSizeProps,\n  AdjustingFontSizeState,\n> {\n  state = {\n    dynamicText: '',\n    shouldRender: true,\n  };\n\n  reset = () => {\n    LayoutAnimation.easeInEaseOut();\n    this.setState({\n      shouldRender: false,\n    });\n    setTimeout(() => {\n      LayoutAnimation.easeInEaseOut();\n      this.setState({\n        dynamicText: '',\n        shouldRender: true,\n      });\n    }, 300);\n  };\n\n  addText = () => {\n    this.setState({\n      dynamicText:\n        this.state.dynamicText +\n        (Math.floor((Math.random() * 10) % 2) ? ' foo' : ' bar'),\n    });\n  };\n\n  removeText = () => {\n    this.setState({\n      dynamicText: this.state.dynamicText.slice(\n        0,\n        this.state.dynamicText.length - 4,\n      ),\n    });\n  };\n\n  render() {\n    if (!this.state.shouldRender) {\n      return <View />;\n    }\n    return (\n      <View>\n        <Text\n          ellipsizeMode=\"tail\"\n          numberOfLines={1}\n          style={{fontSize: 36, marginVertical: 6}}>\n          Truncated text is baaaaad.\n        </Text>\n        <Text\n          numberOfLines={1}\n          adjustsFontSizeToFit={true}\n          style={{fontSize: 40, marginVertical: 6}}>\n          Shrinking to fit available space is much better!\n        </Text>\n\n        <Text\n          adjustsFontSizeToFit={true}\n          numberOfLines={1}\n          style={{fontSize: 30, marginVertical: 6}}>\n          {'Add text to me to watch me shrink!' + ' ' + this.state.dynamicText}\n        </Text>\n\n        <Text\n          adjustsFontSizeToFit={true}\n          numberOfLines={4}\n          style={{fontSize: 20, marginVertical: 6}}>\n          {'Multiline text component shrinking is supported, watch as this reeeeaaaally loooooong teeeeeeext grooooows and then shriiiinks as you add text to me! ioahsdia soady auydoa aoisyd aosdy ' +\n            ' ' +\n            this.state.dynamicText}\n        </Text>\n\n        <Text\n          adjustsFontSizeToFit={true}\n          style={{fontSize: 20, marginVertical: 6, maxHeight: 50}}>\n          {'Text limited by height, watch as this reeeeaaaally loooooong teeeeeeext grooooows and then shriiiinks as you add text to me! ioahsdia soady auydoa aoisyd aosdy ' +\n            ' ' +\n            this.state.dynamicText}\n        </Text>\n\n        <Text\n          adjustsFontSizeToFit={true}\n          numberOfLines={1}\n          style={{marginVertical: 6}}>\n          <Text style={{fontSize: 14}}>\n            {'Differently sized nested elements will shrink together. '}\n          </Text>\n          <Text style={{fontSize: 20}}>\n            {'LARGE TEXT! ' + this.state.dynamicText}\n          </Text>\n        </Text>\n\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n            marginTop: 5,\n            marginVertical: 6,\n          }}>\n          <Text style={{backgroundColor: '#ffaaaa'}} onPress={this.reset}>\n            Reset\n          </Text>\n          <Text style={{backgroundColor: '#aaaaff'}} onPress={this.removeText}>\n            Remove Text\n          </Text>\n          <Text style={{backgroundColor: '#aaffaa'}} onPress={this.addText}>\n            Add Text\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nclass TextExample extends React.Component<{...}> {\n  render(): React.Node {\n    return (\n      <RNTesterPage title=\"<Text>\">\n        <RNTesterBlock title=\"Dynamic Font Size Adjustment\">\n          <AdjustingFontSize />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Wrap\">\n          <Text>\n            The text should wrap if it goes on multiple lines. See, this is\n            going to the next line.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Padding\">\n          <Text style={{padding: 10}}>\n            This text is indented by 10px padding on all sides.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text metrics legend\">\n          <TextLegend />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Font Family\">\n          <Text style={{fontFamily: 'sans-serif'}}>Sans-Serif</Text>\n          <Text style={{fontFamily: 'sans-serif', fontWeight: 'bold'}}>\n            Sans-Serif Bold\n          </Text>\n          <Text style={{fontFamily: 'serif'}}>Serif</Text>\n          <Text style={{fontFamily: 'serif', fontWeight: 'bold'}}>\n            Serif Bold\n          </Text>\n          <Text style={{fontFamily: 'monospace'}}>Monospace</Text>\n          <Text style={{fontFamily: 'monospace', fontWeight: 'bold'}}>\n            Monospace Bold (After 5.0)\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Android Material Design fonts\">\n          <View style={{flexDirection: 'row', alignItems: 'flex-start'}}>\n            <View style={{flex: 1}}>\n              <Text style={{fontFamily: 'sans-serif'}}>Roboto Regular</Text>\n              <Text style={{fontFamily: 'sans-serif', fontStyle: 'italic'}}>\n                Roboto Italic\n              </Text>\n              <Text style={{fontFamily: 'sans-serif', fontWeight: 'bold'}}>\n                Roboto Bold\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'sans-serif',\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                }}>\n                Roboto Bold Italic\n              </Text>\n              <Text style={{fontFamily: 'sans-serif-light'}}>Roboto Light</Text>\n              <Text\n                style={{fontFamily: 'sans-serif-light', fontStyle: 'italic'}}>\n                Roboto Light Italic\n              </Text>\n              <Text style={{fontFamily: 'sans-serif-thin'}}>\n                Roboto Thin (After 4.2)\n              </Text>\n              <Text\n                style={{fontFamily: 'sans-serif-thin', fontStyle: 'italic'}}>\n                Roboto Thin Italic (After 4.2)\n              </Text>\n              <Text style={{fontFamily: 'sans-serif-condensed'}}>\n                Roboto Condensed\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'sans-serif-condensed',\n                  fontStyle: 'italic',\n                }}>\n                Roboto Condensed Italic\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'sans-serif-condensed',\n                  fontWeight: 'bold',\n                }}>\n                Roboto Condensed Bold\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'sans-serif-condensed',\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                }}>\n                Roboto Condensed Bold Italic\n              </Text>\n              <Text style={{fontFamily: 'sans-serif-medium'}}>\n                Roboto Medium (After 5.0)\n              </Text>\n              <Text\n                style={{fontFamily: 'sans-serif-medium', fontStyle: 'italic'}}>\n                Roboto Medium Italic (After 5.0)\n              </Text>\n            </View>\n          </View>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Custom Fonts\">\n          <View style={{flexDirection: 'row', alignItems: 'flex-start'}}>\n            <View style={{flex: 1}}>\n              <Text style={{fontFamily: 'notoserif'}}>NotoSerif Regular</Text>\n              <Text\n                style={{\n                  fontFamily: 'notoserif',\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                }}>\n                NotoSerif Bold Italic\n              </Text>\n              <Text style={{fontFamily: 'notoserif', fontStyle: 'italic'}}>\n                NotoSerif Italic (Missing Font file)\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: 'normal',\n                }}>\n                Rubik Regular\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: '300',\n                }}>\n                Rubik Light\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: '700',\n                }}>\n                Rubik Bold\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'Rubik',\n                  fontWeight: '500',\n                }}>\n                Rubik Medium\n              </Text>\n              <Text\n                style={{\n                  fontFamily: 'Rubik',\n                  fontStyle: 'italic',\n                  fontWeight: '500',\n                }}>\n                Rubik Medium Italic\n              </Text>\n            </View>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Font Size\">\n          <Text style={{fontSize: 23}}>Size 23</Text>\n          <Text style={{fontSize: 8}}>Size 8</Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Color\">\n          <Text style={{color: 'red'}}>Red color</Text>\n          <Text style={{color: 'blue'}}>Blue color</Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Font Weight\">\n          <Text style={{fontWeight: 'bold'}}>Move fast and be bold</Text>\n          <Text style={{fontWeight: 'normal'}}>Move fast and be normal</Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Font Style\">\n          <Text style={{fontStyle: 'italic'}}>Move fast and be italic</Text>\n          <Text style={{fontStyle: 'normal'}}>Move fast and be normal</Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Font Style and Weight\">\n          <Text style={{fontStyle: 'italic', fontWeight: 'bold'}}>\n            Move fast and be both bold and italic\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text Decoration\">\n          <Text style={{textDecorationLine: 'underline'}}>Solid underline</Text>\n          <Text style={{textDecorationLine: 'none'}}>None textDecoration</Text>\n          <Text\n            style={{\n              textDecorationLine: 'line-through',\n              textDecorationStyle: 'solid',\n            }}>\n            Solid line-through\n          </Text>\n          <Text style={{textDecorationLine: 'underline line-through'}}>\n            Both underline and line-through\n          </Text>\n          <Text>\n            Mixed text with{' '}\n            <Text style={{textDecorationLine: 'underline'}}>underline</Text> and{' '}\n            <Text style={{textDecorationLine: 'line-through'}}>\n              line-through\n            </Text>{' '}\n            text nodes\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Nested\">\n          <Text onPress={() => console.log('1st')}>\n            (Normal text,\n            <Text style={{color: 'red', fontWeight: 'bold'}}>\n              (R)red\n              <Text style={{color: 'green', fontWeight: 'normal'}}>\n                (G)green\n                <Text style={{color: 'blue', fontWeight: 'bold'}}>\n                  (B)blue\n                  <Text style={{color: 'cyan', fontWeight: 'normal'}}>\n                    (C)cyan\n                    <Text style={{color: 'magenta', fontWeight: 'bold'}}>\n                      (M)magenta\n                      <Text style={{color: 'yellow', fontWeight: 'normal'}}>\n                        (Y)yellow\n                        <Text style={{color: 'black', fontWeight: 'bold'}}>\n                          (K)black\n                        </Text>\n                      </Text>\n                    </Text>\n                  </Text>\n                </Text>\n              </Text>\n            </Text>\n            <Text\n              style={{fontWeight: 'bold'}}\n              onPress={() => console.log('2nd')}>\n              (and bold\n              <Text\n                style={{fontStyle: 'italic', fontSize: 11, color: '#527fe4'}}\n                onPress={() => console.log('3rd')}>\n                (and tiny bold italic blue\n                <Text\n                  style={{fontWeight: 'normal', fontStyle: 'normal'}}\n                  onPress={() => console.log('4th')}>\n                  (and tiny normal blue)\n                </Text>\n                )\n              </Text>\n              )\n            </Text>\n            )\n          </Text>\n          <Text\n            style={{fontFamily: 'serif'}}\n            onPress={() => console.log('1st')}>\n            (Serif\n            <Text\n              style={{fontStyle: 'italic', fontWeight: 'bold'}}\n              onPress={() => console.log('2nd')}>\n              (Serif Bold Italic\n              <Text\n                style={{\n                  fontFamily: 'monospace',\n                  fontStyle: 'normal',\n                  fontWeight: 'normal',\n                }}\n                onPress={() => console.log('3rd')}>\n                (Monospace Normal\n                <Text\n                  style={{fontFamily: 'sans-serif', fontWeight: 'bold'}}\n                  onPress={() => console.log('4th')}>\n                  (Sans-Serif Bold\n                  <Text\n                    style={{fontWeight: 'normal'}}\n                    onPress={() => console.log('5th')}>\n                    (and Sans-Serif Normal)\n                  </Text>\n                  )\n                </Text>\n                )\n              </Text>\n              )\n            </Text>\n            )\n          </Text>\n          <Text style={{fontSize: 12}}>\n            <Entity>Entity Name</Entity>\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text Align\">\n          <Text>auto (default) - english LTR</Text>\n          <Text>أحب اللغة العربية auto (default) - arabic RTL</Text>\n          <Text style={{textAlign: 'left'}}>\n            left left left left left left left left left left left left left\n            left left\n          </Text>\n          <Text style={{textAlign: 'center'}}>\n            center center center center center center center center center\n            center center\n          </Text>\n          <Text style={{textAlign: 'right'}}>\n            right right right right right right right right right right right\n            right right\n          </Text>\n          <Text style={{textAlign: 'justify'}}>\n            justify (works when api level >= 26 otherwise fallbacks to \"left\"):\n            this text component{\"'\"}s contents are laid out with \"textAlign:\n            justify\" and as you can see all of the lines except the last one\n            span the available width of the parent container.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Unicode\">\n          <View>\n            <View style={{flexDirection: 'row'}}>\n              <Text style={{backgroundColor: 'red'}}>\n                星际争霸是世界上最好的游戏。\n              </Text>\n            </View>\n            <View>\n              <Text style={{backgroundColor: 'red'}}>\n                星际争霸是世界上最好的游戏。\n              </Text>\n            </View>\n            <View style={{alignItems: 'center'}}>\n              <Text style={{backgroundColor: 'red'}}>\n                星际争霸是世界上最好的游戏。\n              </Text>\n            </View>\n            <View>\n              <Text style={{backgroundColor: 'red'}}>\n                星际争霸是世界上最好的游戏。星际争霸是世界上最好的游戏。星际争霸是世界上最好的游戏。星际争霸是世界上最好的游戏。\n              </Text>\n            </View>\n          </View>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Spaces\">\n          <Text>\n            A {'generated'} {'string'} and some &nbsp;&nbsp;&nbsp; spaces\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Line Height\">\n          <Text style={{lineHeight: 35}}>\n            Holisticly formulate inexpensive ideas before best-of-breed\n            benefits. <Text style={{fontSize: 20}}>Continually</Text> expedite\n            magnetic potentialities rather than client-focused interfaces.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Letter Spacing\">\n          <View>\n            <Text style={{letterSpacing: 0}}>letterSpacing = 0</Text>\n            <Text style={{letterSpacing: 2, marginTop: 5}}>\n              letterSpacing = 2\n            </Text>\n            <Text style={{letterSpacing: 9, marginTop: 5}}>\n              letterSpacing = 9\n            </Text>\n            <View style={{flexDirection: 'row'}}>\n              <Text\n                style={{\n                  fontSize: 12,\n                  letterSpacing: 2,\n                  backgroundColor: 'fuchsia',\n                  marginTop: 5,\n                }}>\n                With size and background color\n              </Text>\n            </View>\n            <Text style={{letterSpacing: -1, marginTop: 5}}>\n              letterSpacing = -1\n            </Text>\n            <Text\n              style={{\n                letterSpacing: 3,\n                backgroundColor: '#dddddd',\n                marginTop: 5,\n              }}>\n              [letterSpacing = 3]\n              <Text style={{letterSpacing: 0, backgroundColor: '#bbbbbb'}}>\n                [Nested letterSpacing = 0]\n              </Text>\n              <Text style={{letterSpacing: 6, backgroundColor: '#eeeeee'}}>\n                [Nested letterSpacing = 6]\n              </Text>\n            </Text>\n          </View>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Empty Text\">\n          <Text />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toggling Attributes\">\n          <AttributeToggler />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"backgroundColor attribute\">\n          <Text style={{backgroundColor: '#ffaaaa'}}>\n            Red background,\n            <Text style={{backgroundColor: '#aaaaff'}}>\n              {' '}\n              blue background,\n              <Text>\n                {' '}\n                inherited blue background,\n                <Text style={{backgroundColor: '#aaffaa'}}>\n                  {' '}\n                  nested green background.\n                </Text>\n              </Text>\n            </Text>\n          </Text>\n          <Text style={{backgroundColor: 'rgba(100, 100, 100, 0.3)'}}>\n            Same alpha as background,\n            <Text>\n              Inherited alpha from background,\n              <Text style={{backgroundColor: 'rgba(100, 100, 100, 0.3)'}}>\n                Reapply alpha\n              </Text>\n            </Text>\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"containerBackgroundColor attribute\">\n          <View style={{flexDirection: 'row', height: 85}}>\n            <View style={{backgroundColor: '#ffaaaa', width: 150}} />\n            <View style={{backgroundColor: '#aaaaff', width: 150}} />\n          </View>\n          <Text style={[styles.backgroundColorText, {top: -80}]}>\n            Default containerBackgroundColor (inherited) + backgroundColor wash\n          </Text>\n          <Text\n            style={[\n              styles.backgroundColorText,\n              {top: -70, backgroundColor: 'transparent'},\n            ]}>\n            {\"containerBackgroundColor: 'transparent' + backgroundColor wash\"}\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"numberOfLines attribute\">\n          <Text numberOfLines={1}>\n            Maximum of one line no matter now much I write here. If I keep\n            writing it{\"'\"}ll just truncate after one line\n          </Text>\n          <Text numberOfLines={2} style={{marginTop: 20}}>\n            Maximum of two lines no matter now much I write here. If I keep\n            writing it{\"'\"}ll just truncate after two lines\n          </Text>\n          <Text style={{marginTop: 20}}>\n            No maximum lines specified no matter now much I write here. If I\n            keep writing it{\"'\"}ll just keep going and going\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"allowFontScaling attribute\">\n          <Text>\n            By default, text will respect Text Size accessibility setting on\n            Android. It means that all font sizes will be increased or decreased\n            depending on the value of the Text Size setting in the OS's Settings\n            app.\n          </Text>\n          <Text style={{marginTop: 10}}>\n            You can disable scaling for your Text component by passing {'\"'}\n            allowFontScaling={'{'}false{'}\"'} prop.\n          </Text>\n          <Text allowFontScaling={false} style={{marginTop: 20, fontSize: 15}}>\n            This text will not scale.{' '}\n            <Text style={{fontSize: 15}}>\n              This text also won't scale because it inherits \"allowFontScaling\"\n              from its parent.\n            </Text>\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"selectable attribute\">\n          <Text selectable>\n            This text is selectable if you click-and-hold, and will offer the\n            native Android selection menus.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"selectionColor attribute\">\n          <Text selectable selectionColor=\"orange\">\n            This text will have a orange highlight on selection.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Inline views\">\n          <TextInlineView.Basic />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Inline image/view clipped by <Text>\">\n          <TextInlineView.ClippedByText />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Relayout inline image\">\n          <TextInlineView.ChangeImageSize />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Relayout inline view\">\n          <TextInlineView.ChangeViewSize />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Relayout nested inline view\">\n          <TextInlineView.ChangeInnerViewSize />\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text shadow\">\n          <Text\n            style={{\n              fontSize: 20,\n              textShadowOffset: {width: 2, height: 2},\n              textShadowRadius: 1,\n              textShadowColor: '#00cccc',\n            }}>\n            Demo text shadow\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Ellipsize mode\">\n          <Text numberOfLines={1}>\n            This very long text should be truncated with dots in the end.\n          </Text>\n          <Text ellipsizeMode=\"middle\" numberOfLines={1}>\n            This very long text should be truncated with dots in the middle.\n          </Text>\n          <Text ellipsizeMode=\"head\" numberOfLines={1}>\n            This very long text should be truncated with dots in the beginning.\n          </Text>\n          <Text ellipsizeMode=\"clip\" numberOfLines={1}>\n            This very long text should be clipped and this will not be visible.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Font variants\">\n          <Text style={{fontVariant: ['small-caps']}}>Small Caps{'\\n'}</Text>\n          <Text\n            style={{\n              fontFamily: 'Roboto',\n              fontVariant: ['oldstyle-nums'],\n            }}>\n            Old Style nums 0123456789{'\\n'}\n          </Text>\n          <Text\n            style={{\n              fontFamily: 'Roboto',\n              fontVariant: ['lining-nums'],\n            }}>\n            Lining nums 0123456789{'\\n'}\n          </Text>\n          <Text style={{fontVariant: ['tabular-nums']}}>\n            Tabular nums{'\\n'}\n            1111{'\\n'}\n            2222{'\\n'}\n          </Text>\n          <Text style={{fontVariant: ['proportional-nums']}}>\n            Proportional nums{'\\n'}\n            1111{'\\n'}\n            2222{'\\n'}\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Include Font Padding\">\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n              marginBottom: 10,\n            }}>\n            <View style={{alignItems: 'center'}}>\n              <Text style={styles.includeFontPaddingText}>Ey</Text>\n              <Text>Default</Text>\n            </View>\n            <View style={{alignItems: 'center'}}>\n              <Text\n                style={[\n                  styles.includeFontPaddingText,\n                  {includeFontPadding: false, marginLeft: 10},\n                ]}>\n                Ey\n              </Text>\n              <Text>includeFontPadding: false</Text>\n            </View>\n          </View>\n          <Text>\n            By default Android will put extra space above text to allow for\n            upper-case accents or other ascenders. With some fonts, this can\n            make text look slightly misaligned when centered vertically.\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text transform\">\n          <Text style={{textTransform: 'uppercase'}}>\n            This text should be uppercased.\n          </Text>\n          <Text style={{textTransform: 'lowercase'}}>\n            This TEXT SHOULD be lowercased.\n          </Text>\n          <Text style={{textTransform: 'capitalize'}}>\n            This text should be CAPITALIZED.\n          </Text>\n          <Text style={{textTransform: 'capitalize'}}>\n            Mixed: <Text style={{textTransform: 'uppercase'}}>uppercase </Text>\n            <Text style={{textTransform: 'lowercase'}}>LoWeRcAsE </Text>\n            <Text style={{textTransform: 'capitalize'}}>\n              capitalize each word\n            </Text>\n          </Text>\n          <Text>\n            Should be \"ABC\":\n            <Text style={{textTransform: 'uppercase'}}>\n              a<Text>b</Text>c\n            </Text>\n          </Text>\n          <Text>\n            Should be \"AbC\":\n            <Text style={{textTransform: 'uppercase'}}>\n              a<Text style={{textTransform: 'none'}}>b</Text>c\n            </Text>\n          </Text>\n          <Text style={{textTransform: 'none'}}>\n            {\n              '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '\n            }\n          </Text>\n          <Text style={{textTransform: 'uppercase'}}>\n            {\n              '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '\n            }\n          </Text>\n          <Text style={{textTransform: 'lowercase'}}>\n            {\n              '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '\n            }\n          </Text>\n          <Text style={{textTransform: 'capitalize'}}>\n            {\n              '.aa\\tbb\\t\\tcc  dd EE \\r\\nZZ I like to eat apples. \\n中文éé 我喜欢吃苹果。awdawd   '\n            }\n          </Text>\n          <Text\n            style={{\n              textTransform: 'uppercase',\n              fontSize: 16,\n              color: 'turquoise',\n              backgroundColor: 'blue',\n              lineHeight: 32,\n              letterSpacing: 2,\n              alignSelf: 'flex-start',\n            }}>\n            Works with other text styles\n          </Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Substring Emoji (should only see 'test')\">\n          <Text>{'test🙃'.substring(0, 5)}</Text>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Text linkify\">\n          <Text dataDetectorType=\"phoneNumber\">Phone number: 123-123-1234</Text>\n          <Text dataDetectorType=\"link\">Link: https://www.facebook.com</Text>\n          <Text dataDetectorType=\"email\">Email: employee@facebook.com</Text>\n          <Text dataDetectorType=\"none\">\n            Phone number: 123-123-1234 Link: https://www.facebook.com Email:\n            employee@facebook.com\n          </Text>\n          <Text dataDetectorType=\"all\">\n            Phone number: 123-123-1234 Link: https://www.facebook.com Email:\n            employee@facebook.com\n          </Text>\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  backgroundColorText: {\n    left: 5,\n    backgroundColor: 'rgba(100, 100, 100, 0.3)',\n  },\n  includeFontPaddingText: {\n    fontSize: 120,\n    fontFamily: 'sans-serif',\n    backgroundColor: '#EEEEEE',\n    color: '#000000',\n    textAlignVertical: 'center',\n    alignSelf: 'center',\n  },\n});\nexports.title = '<Text>';\nexports.description = 'Base component for rendering styled text.';\nexports.examples = [\n  {\n    title: 'Basic text',\n    render: function(): React.Element<typeof TextExample> {\n      return <TextExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}