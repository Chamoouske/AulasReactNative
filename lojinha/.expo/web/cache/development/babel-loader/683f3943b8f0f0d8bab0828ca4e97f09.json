{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar XML = __importStar(require(\"../utils/XML\"));\n\nvar errors_1 = require(\"../utils/errors\");\n\nfunction writeAndroidManifestAsync(manifestPath, androidManifest) {\n  var manifestXml;\n  return _regeneratorRuntime.async(function writeAndroidManifestAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          manifestXml = XML.format(androidManifest);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.ensureDir(path_1.default.dirname(manifestPath)));\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.writeFile(manifestPath, manifestXml));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.writeAndroidManifestAsync = writeAndroidManifestAsync;\n\nfunction readAndroidManifestAsync(manifestPath) {\n  var xml;\n  return _regeneratorRuntime.async(function readAndroidManifestAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(XML.readXMLAsync({\n            path: manifestPath\n          }));\n\n        case 2:\n          xml = _context2.sent;\n\n          if (isManifest(xml)) {\n            _context2.next = 5;\n            break;\n          }\n\n          throw new Error('Invalid manifest found at: ' + manifestPath);\n\n        case 5:\n          return _context2.abrupt(\"return\", xml);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.readAndroidManifestAsync = readAndroidManifestAsync;\n\nfunction isManifest(xml) {\n  return !!xml.manifest;\n}\n\nfunction getMainApplication(androidManifest) {\n  var _a, _b, _c;\n\n  return (_c = (_b = (_a = androidManifest === null || androidManifest === void 0 ? void 0 : androidManifest.manifest) === null || _a === void 0 ? void 0 : _a.application) === null || _b === void 0 ? void 0 : _b.filter(function (e) {\n    var _a;\n\n    return ((_a = e === null || e === void 0 ? void 0 : e.$) === null || _a === void 0 ? void 0 : _a['android:name']) === '.MainApplication';\n  })[0]) !== null && _c !== void 0 ? _c : null;\n}\n\nexports.getMainApplication = getMainApplication;\n\nfunction getMainApplicationOrThrow(androidManifest) {\n  var mainApplication = getMainApplication(androidManifest);\n  errors_1.assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexports.getMainApplicationOrThrow = getMainApplicationOrThrow;\n\nfunction getMainActivityOrThrow(androidManifest) {\n  var mainActivity = getMainActivity(androidManifest);\n  errors_1.assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexports.getMainActivityOrThrow = getMainActivityOrThrow;\n\nfunction getMainActivity(androidManifest) {\n  var _a, _b, _c, _d, _e, _f;\n\n  var mainActivity = (_e = (_d = (_c = (_b = (_a = androidManifest === null || androidManifest === void 0 ? void 0 : androidManifest.manifest) === null || _a === void 0 ? void 0 : _a.application) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.activity) === null || _d === void 0 ? void 0 : _d.filter) === null || _e === void 0 ? void 0 : _e.call(_d, function (e) {\n    return e.$['android:name'] === '.MainActivity';\n  });\n  return (_f = mainActivity === null || mainActivity === void 0 ? void 0 : mainActivity[0]) !== null && _f !== void 0 ? _f : null;\n}\n\nexports.getMainActivity = getMainActivity;\n\nfunction addMetaDataItemToMainApplication(mainApplication, itemName, itemValue) {\n  var itemType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'value';\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(_defineProperty({\n      name: itemName\n    }, itemType, itemValue))\n  };\n\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\"android:\" + itemType] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n\n  return mainApplication;\n}\n\nexports.addMetaDataItemToMainApplication = addMetaDataItemToMainApplication;\n\nfunction removeMetaDataItemFromMainApplication(mainApplication, itemName) {\n  var index = findMetaDataItem(mainApplication, itemName);\n\n  if ((mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication['meta-data']) && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n\n  return mainApplication;\n}\n\nexports.removeMetaDataItemFromMainApplication = removeMetaDataItemFromMainApplication;\n\nfunction findApplicationSubItem(mainApplication, category, itemName) {\n  var parent = mainApplication[category];\n\n  if (Array.isArray(parent)) {\n    var index = parent.findIndex(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    return index;\n  }\n\n  return -1;\n}\n\nfunction findMetaDataItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexports.findMetaDataItem = findMetaDataItem;\n\nfunction findUsesLibraryItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexports.findUsesLibraryItem = findUsesLibraryItem;\n\nfunction getMainApplicationMetaDataValue(androidManifest, name) {\n  var _a, _b;\n\n  var mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication.hasOwnProperty('meta-data')) {\n    var item = (_a = mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication['meta-data']) === null || _a === void 0 ? void 0 : _a.find(function (e) {\n      return e.$['android:name'] === name;\n    });\n    return (_b = item === null || item === void 0 ? void 0 : item.$['android:value']) !== null && _b !== void 0 ? _b : null;\n  }\n\n  return null;\n}\n\nexports.getMainApplicationMetaDataValue = getMainApplicationMetaDataValue;\n\nfunction addUsesLibraryItemToMainApplication(mainApplication, item) {\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(item)\n  };\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(function (e) {\n      return e.$['android:name'] === item.name;\n    });\n\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n\n  return mainApplication;\n}\n\nexports.addUsesLibraryItemToMainApplication = addUsesLibraryItemToMainApplication;\n\nfunction removeUsesLibraryItemFromMainApplication(mainApplication, itemName) {\n  var index = findUsesLibraryItem(mainApplication, itemName);\n\n  if ((mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication['uses-library']) && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n\n  return mainApplication;\n}\n\nexports.removeUsesLibraryItemFromMainApplication = removeUsesLibraryItemFromMainApplication;\n\nfunction prefixAndroidKeys(head) {\n  return Object.entries(head).reduce(function (prev, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        curr = _ref2[1];\n\n    return _extends(_extends({}, prev), _defineProperty({}, \"android:\" + key, curr));\n  }, {});\n}\n\nexports.prefixAndroidKeys = prefixAndroidKeys;","map":{"version":3,"sources":["../../src/android/Manifest.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport * as XML from '../utils/XML';\nimport { assert } from '../utils/errors';\n\nexport type StringBoolean = 'true' | 'false';\n\ntype ManifestMetaDataAttributes = AndroidManifestAttributes & {\n  'android:value'?: string;\n  'android:resource'?: string;\n};\n\ntype AndroidManifestAttributes = {\n  'android:name': string | 'android.intent.action.VIEW';\n};\n\ntype ManifestAction = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestCategory = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestData = {\n  $: {\n    [key: string]: string | undefined;\n    'android:host'?: string;\n    'android:pathPrefix'?: string;\n    'android:scheme'?: string;\n  };\n};\n\ntype ManifestReciever = {\n  $: AndroidManifestAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:enabled'?: StringBoolean;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestIntentFilter = {\n  action?: ManifestAction[];\n  data?: ManifestData[];\n  category?: ManifestCategory[];\n};\n\nexport type ManifestMetaData = {\n  $: ManifestMetaDataAttributes;\n};\n\ntype ManifestServiceAttributes = AndroidManifestAttributes & {\n  'android:enabled'?: StringBoolean;\n  'android:exported'?: StringBoolean;\n  'android:permission'?: string;\n  // ...\n};\n\ntype ManifestService = {\n  $: ManifestServiceAttributes;\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestApplicationAttributes = {\n  'android:name': string | '.MainApplication';\n  'android:icon'?: string;\n  'android:label'?: string;\n  'android:allowBackup'?: StringBoolean;\n  'android:largeHeap'?: StringBoolean;\n  'android:requestLegacyExternalStorage'?: StringBoolean;\n  'android:usesCleartextTraffic'?: StringBoolean;\n  [key: string]: string | undefined;\n};\n\nexport type ManifestActivity = {\n  $: ManifestApplicationAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:launchMode'?: string;\n    'android:theme'?: string;\n    [key: string]: string | undefined;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n  // ...\n};\n\nexport type ManifestUsesLibrary = {\n  $: AndroidManifestAttributes & {\n    'android:required'?: StringBoolean;\n  };\n};\n\nexport type ManifestApplication = {\n  $: ManifestApplicationAttributes;\n  activity?: ManifestActivity[];\n  service?: ManifestService[];\n  receiver?: ManifestReciever[];\n  'meta-data'?: ManifestMetaData[];\n  'uses-library'?: ManifestUsesLibrary[];\n  // ...\n};\n\ntype ManifestPermission = {\n  $: AndroidManifestAttributes & {\n    'android:protectionLevel'?: string | 'signature';\n  };\n};\n\nexport type ManifestUsesPermission = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestUsesFeature = {\n  $: AndroidManifestAttributes & {\n    'android:glEsVersion'?: string;\n    'android:required': StringBoolean;\n  };\n};\n\nexport type AndroidManifest = {\n  manifest: {\n    // Probably more, but this is currently all we'd need for most cases in Expo.\n    $: { 'xmlns:android': string; package?: string; [key: string]: string | undefined };\n    permission?: ManifestPermission[];\n    'uses-permission'?: ManifestUsesPermission[];\n    'uses-feature'?: ManifestUsesFeature[];\n    application?: ManifestApplication[];\n  };\n};\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  androidManifest: AndroidManifest\n): Promise<void> {\n  const manifestXml = XML.format(androidManifest);\n  await fs.ensureDir(path.dirname(manifestPath));\n  await fs.writeFile(manifestPath, manifestXml);\n}\n\nexport async function readAndroidManifestAsync(manifestPath: string): Promise<AndroidManifest> {\n  const xml = await XML.readXMLAsync({ path: manifestPath });\n  if (!isManifest(xml)) {\n    throw new Error('Invalid manifest found at: ' + manifestPath);\n  }\n  return xml;\n}\n\nfunction isManifest(xml: XML.XMLObject): xml is AndroidManifest {\n  // TODO: Maybe more validation\n  return !!xml.manifest;\n}\n\nexport function getMainApplication(androidManifest: AndroidManifest): ManifestApplication | null {\n  return (\n    androidManifest?.manifest?.application?.filter(\n      e => e?.$?.['android:name'] === '.MainApplication'\n    )[0] ?? null\n  );\n}\n\nexport function getMainApplicationOrThrow(androidManifest: AndroidManifest): ManifestApplication {\n  const mainApplication = getMainApplication(androidManifest);\n  assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexport function getMainActivityOrThrow(androidManifest: AndroidManifest): ManifestActivity {\n  const mainActivity = getMainActivity(androidManifest);\n  assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexport function getMainActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  const mainActivity = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:name'] === '.MainActivity'\n  );\n  return mainActivity?.[0] ?? null;\n}\n\nexport function addMetaDataItemToMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string,\n  itemValue: string,\n  itemType: 'resource' | 'value' = 'value'\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys({ name: itemName, [itemType]: itemValue }),\n  } as ManifestMetaData;\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e.$['android:name'] === itemName\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\n        `android:${itemType}` as keyof ManifestMetaDataAttributes\n      ] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  const index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication?.['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nfunction findApplicationSubItem(\n  mainApplication: ManifestApplication,\n  category: keyof ManifestApplication,\n  itemName: string\n): number {\n  const parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    const index = parent.findIndex((e: any) => e.$['android:name'] === itemName);\n\n    return index;\n  }\n  return -1;\n}\n\nexport function findMetaDataItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexport function findUsesLibraryItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexport function getMainApplicationMetaDataValue(\n  androidManifest: AndroidManifest,\n  name: string\n): string | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.hasOwnProperty('meta-data')) {\n    const item = mainApplication?.['meta-data']?.find((e: any) => e.$['android:name'] === name);\n    return item?.$['android:value'] ?? null;\n  }\n\n  return null;\n}\n\nexport function addUsesLibraryItemToMainApplication(\n  mainApplication: ManifestApplication,\n  item: { name: string; required?: boolean }\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys(item),\n  } as ManifestUsesLibrary;\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(\n      e => e.$['android:name'] === item.name\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeUsesLibraryItemFromMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string\n) {\n  const index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication?.['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nexport function prefixAndroidKeys<T extends Record<string, any> = Record<string, string>>(\n  head: T\n): Record<string, any> {\n  // prefix all keys with `android:`\n  return Object.entries(head).reduce(\n    (prev, [key, curr]) => ({ ...prev, [`android:${key}`]: curr }),\n    {} as T\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}