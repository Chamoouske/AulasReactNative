{"ast":null,"code":"'use strict';\n\nimport NativeEventEmitter from \"../NativeEventEmitter\";\nimport NativeAnimatedModule from \"./NativeAnimatedModule\";\nimport invariant from 'fbjs/lib/invariant';\nvar __nativeAnimatedNodeTagCount = 1;\nvar __nativeAnimationIdCount = 1;\nvar nativeEventEmitter;\nvar queueConnections = false;\nvar queue = [];\nvar API = {\n  enableQueue: function enableQueue() {\n    queueConnections = true;\n  },\n  disableQueue: function disableQueue() {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    queueConnections = false;\n\n    for (var q = 0, l = queue.length; q < l; q++) {\n      var args = queue[q];\n      NativeAnimatedModule.connectAnimatedNodes(args[0], args[1]);\n    }\n\n    queue.length = 0;\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.createAnimatedNode(tag, config);\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n\n    if (queueConnections) {\n      queue.push([parentTag, childTag]);\n      return;\n    }\n\n    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopAnimation(animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.dropAnimatedNode(tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);\n  }\n};\nvar STYLES_WHITELIST = {\n  opacity: true,\n  transform: true,\n  borderRadius: true,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n};\nvar TRANSFORM_WHITELIST = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  perspective: true\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\n\nfunction addWhitelistedStyleProp(prop) {\n  STYLES_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop) {\n  TRANSFORM_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {\n      throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n    }\n  });\n}\n\nfunction validateStyles(styles) {\n  for (var _key in styles) {\n    if (!STYLES_WHITELIST.hasOwnProperty(_key)) {\n      throw new Error(\"Style property '\" + _key + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction validateInterpolation(config) {\n  for (var _key2 in config) {\n    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(_key2)) {\n      throw new Error(\"Interpolation property '\" + _key2 + \"' is not supported by native animated module\");\n    }\n  }\n}\n\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  if (/deg$/.test(value)) {\n    var degrees = parseFloat(value) || 0;\n    var radians = degrees * Math.PI / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nvar NativeAnimatedHelper = {\n  API: API,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);\n    }\n\n    return nativeEventEmitter;\n  }\n\n};\nexport { API, addWhitelistedStyleProp, addWhitelistedTransformProp, addWhitelistedInterpolationParam, validateStyles, validateTransform, validateInterpolation, generateNewNodeTag, generateNewAnimationId, assertNativeAnimatedModule, shouldUseNativeDriver, transformDataType };\nexport default NativeAnimatedHelper;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/Animated/NativeAnimatedHelper.js"],"names":["NativeEventEmitter","NativeAnimatedModule","invariant","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","queueConnections","queue","API","enableQueue","disableQueue","q","l","length","args","connectAnimatedNodes","createAnimatedNode","tag","config","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","parentTag","childTag","push","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","STYLES_WHITELIST","opacity","transform","borderRadius","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","elevation","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","TRANSFORM_WHITELIST","scale","rotate","rotateX","rotateY","perspective","SUPPORTED_INTERPOLATION_PARAMS","inputRange","outputRange","extrapolate","extrapolateRight","extrapolateLeft","addWhitelistedStyleProp","prop","addWhitelistedTransformProp","addWhitelistedInterpolationParam","param","validateTransform","configs","forEach","hasOwnProperty","property","Error","validateStyles","styles","key","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","useNativeDriver","transformDataType","test","degrees","parseFloat","radians","Math","PI","NativeAnimatedHelper"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n'use strict';\n\nimport NativeEventEmitter from '../NativeEventEmitter';\nimport type {\n  EventMapping,\n  AnimatedNodeConfig,\n  AnimatingNodeConfig,\n} from './NativeAnimatedModule';\nimport NativeAnimatedModule from './NativeAnimatedModule';\nimport invariant from 'fbjs/lib/invariant';\n\nimport type {AnimationConfig, EndCallback} from './animations/Animation';\nimport type {InterpolationConfigType} from './nodes/AnimatedInterpolation';\nimport type {EventConfig} from './AnimatedEvent';\n\nlet __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\nlet __nativeAnimationIdCount = 1; /* used for started animations */\n\nlet nativeEventEmitter;\n\nlet queueConnections = false;\nlet queue = [];\n\n/**\n * Simple wrappers around NativeAnimatedModule to provide flow and autocmplete support for\n * the native module methods\n */\nconst API = {\n  enableQueue: function(): void {\n    queueConnections = true;\n  },\n  disableQueue: function(): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    queueConnections = false;\n    for (let q = 0, l = queue.length; q < l; q++) {\n      const args = queue[q];\n      NativeAnimatedModule.connectAnimatedNodes(args[0], args[1]);\n    }\n    queue.length = 0;\n  },\n  createAnimatedNode: function(tag: ?number, config: AnimatedNodeConfig): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.createAnimatedNode(tag, config);\n  },\n  startListeningToAnimatedNodeValue: function(tag: ?number) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);\n  },\n  stopListeningToAnimatedNodeValue: function(tag: ?number) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);\n  },\n  connectAnimatedNodes: function(parentTag: ?number, childTag: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    if (queueConnections) {\n      queue.push([parentTag, childTag]);\n      return;\n    }\n    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function(\n    parentTag: ?number,\n    childTag: ?number,\n  ): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);\n  },\n  startAnimatingNode: function(\n    animationId: ?number,\n    nodeTag: ?number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.startAnimatingNode(\n      animationId,\n      nodeTag,\n      config,\n      endCallback,\n    );\n  },\n  stopAnimation: function(animationId: ?number) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.stopAnimation(animationId);\n  },\n  setAnimatedNodeValue: function(nodeTag: ?number, value: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);\n  },\n  setAnimatedNodeOffset: function(nodeTag: ?number, offset: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function(nodeTag: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);\n  },\n  extractAnimatedNodeOffset: function(nodeTag: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);\n  },\n  connectAnimatedNodeToView: function(\n    nodeTag: ?number,\n    viewTag: ?number,\n  ): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function(\n    nodeTag: ?number,\n    viewTag: ?number,\n  ): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n  dropAnimatedNode: function(tag: ?number): void {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.dropAnimatedNode(tag);\n  },\n  addAnimatedEventToView: function(\n    viewTag: ?number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.addAnimatedEventToView(\n      viewTag,\n      eventName,\n      eventMapping,\n    );\n  },\n  removeAnimatedEventFromView(\n    viewTag: ?number,\n    eventName: string,\n    animatedNodeTag: ?number,\n  ) {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    NativeAnimatedModule.removeAnimatedEventFromView(\n      viewTag,\n      eventName,\n      animatedNodeTag,\n    );\n  },\n};\n\n/**\n * Styles allowed by the native animated implementation.\n *\n * In general native animated implementation should support any numeric property that doesn't need\n * to be updated through the shadow view hierarchy (all non-layout properties).\n */\nconst STYLES_WHITELIST = {\n  opacity: true,\n  transform: true,\n  borderRadius: true,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  /* ios styles */\n  shadowOpacity: true,\n  shadowRadius: true,\n  /* legacy android transform properties */\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n};\n\nconst TRANSFORM_WHITELIST = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  perspective: true,\n};\n\nconst SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true,\n};\n\nfunction addWhitelistedStyleProp(prop: string): void {\n  STYLES_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop: string): void {\n  TRANSFORM_WHITELIST[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param: string): void {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction validateTransform(\n  configs: Array<\n    | {type: 'animated', property: string, nodeTag: ?number}\n    | {type: 'static', property: string, value: number | string},\n  >,\n): void {\n  configs.forEach(config => {\n    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {\n      throw new Error(\n        `Property '${\n          config.property\n        }' is not supported by native animated module`,\n      );\n    }\n  });\n}\n\nfunction validateStyles(styles: {[key: string]: ?number}): void {\n  for (const key in styles) {\n    if (!STYLES_WHITELIST.hasOwnProperty(key)) {\n      throw new Error(\n        `Style property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction validateInterpolation(config: InterpolationConfigType): void {\n  for (const key in config) {\n    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {\n      throw new Error(\n        `Interpolation property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction generateNewNodeTag(): number {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId(): number {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule(): void {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nfunction shouldUseNativeDriver(config: AnimationConfig | EventConfig): boolean {\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value: number | string): number | string {\n  // Change the string type to number type so we can reuse the same logic in\n  // iOS and Android platform\n  if (typeof value !== 'string') {\n    return value;\n  }\n  if (/deg$/.test(value)) {\n    const degrees = parseFloat(value) || 0;\n    const radians = (degrees * Math.PI) / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\n\nconst NativeAnimatedHelper = {\n  API,\n  addWhitelistedStyleProp,\n  addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam,\n  validateStyles,\n  validateTransform,\n  validateInterpolation,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  transformDataType,\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);\n    }\n    return nativeEventEmitter;\n  }\n};\n\nexport {\n  API,\n  addWhitelistedStyleProp,\n  addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam,\n  validateStyles,\n  validateTransform,\n  validateInterpolation,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  transformDataType\n};\n\nexport default NativeAnimatedHelper;\n"]},"metadata":{},"sourceType":"module"}