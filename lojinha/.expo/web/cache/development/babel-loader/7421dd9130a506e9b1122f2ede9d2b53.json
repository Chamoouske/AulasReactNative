{"ast":null,"code":"'use strict';\n\nvar UIManager = require(\"./UIManager\");\n\nvar queryLayoutByID = function queryLayoutByID(tag, onError, onSuccess) {\n  if (tag == null) {\n    return;\n  }\n\n  UIManager.measure(tag, onSuccess);\n};\n\nmodule.exports = queryLayoutByID;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/ReactNative/queryLayoutByID.js"],"names":["UIManager","require","queryLayoutByID","tag","onError","onSuccess","measure","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,eAAzB;;AAiCA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CACtBC,GADsB,EAEtBC,OAFsB,EAGtBC,SAHsB,EAIhB;AACN,MAAIF,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AAEDH,EAAAA,SAAS,CAACM,OAAV,CAAkBH,GAAlB,EAAuBE,SAAvB;AACD,CAVD;;AAYAE,MAAM,CAACC,OAAP,GAAiBN,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst UIManager = require('./UIManager');\n\ntype OnSuccessCallback = (\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  pageX: number,\n  pageY: number,\n) => void;\n\n// I don't know what type error is...\ntype OnErrorCallback = (error: any) => void;\n\n/**\n * Queries the layout of a view. The layout does not reflect the element as\n * seen by the user, rather it reflects the position within the layout system,\n * before any transforms are applied.\n *\n * The only other requirement is that the `pageX, pageY` values be in the same\n * coordinate system that events' `pageX/Y` are reported. That means that for\n * the web, `pageXOffset/pageYOffset` should be added to to\n * getBoundingClientRect to make consistent with touches.\n *\n *  var pageXOffset = window.pageXOffset;\n *  var pageYOffset = window.pageYOffset;\n *\n * This is an IOS specific implementation.\n *\n * @param {number} tag ID of the platform specific node to be measured.\n * @param {function} onError `func(error)`\n * @param {function} onSuccess `func(left, top, width, height, pageX, pageY)`\n */\nconst queryLayoutByID = function(\n  tag: ?number,\n  onError: OnErrorCallback,\n  onSuccess: OnSuccessCallback,\n): void {\n  if (tag == null) {\n    return;\n  }\n  // Native bridge doesn't *yet* surface errors.\n  UIManager.measure(tag, onSuccess);\n};\n\nmodule.exports = queryLayoutByID;\n"]},"metadata":{},"sourceType":"script"}