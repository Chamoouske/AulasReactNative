{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar validators_1 = require(\"../validators\");\n\nvar AndroidManifest_xml_1 = __importDefault(require(\"./AndroidManifest.xml\"));\n\nvar Colors_xml_1 = __importDefault(require(\"./Colors.xml\"));\n\nvar Drawable_xml_1 = __importDefault(require(\"./Drawable.xml\"));\n\nvar Drawables_1 = __importDefault(require(\"./Drawables\"));\n\nvar MainActivity_1 = __importDefault(require(\"./MainActivity\"));\n\nvar Styles_xml_1 = __importDefault(require(\"./Styles.xml\"));\n\nfunction configureAndroid(projectRootPath, configJSON) {\n  var validatedConfig, androidMainPath;\n  return _regeneratorRuntime.async(function configureAndroid$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(validators_1.validateAndroidConfig(configJSON));\n\n        case 2:\n          validatedConfig = _context.sent;\n          androidMainPath = path_1.default.resolve(projectRootPath, 'android/app/src/main');\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(Promise.all([Drawables_1.default(androidMainPath, validatedConfig), Colors_xml_1.default(androidMainPath, validatedConfig), Drawable_xml_1.default(androidMainPath, validatedConfig), Styles_xml_1.default(androidMainPath, validatedConfig), AndroidManifest_xml_1.default(androidMainPath), MainActivity_1.default(projectRootPath, validatedConfig)]));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.default = configureAndroid;","map":{"version":3,"sources":["../../src/android/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,iBAAA;;AACA,IAAA,qBAAA,GAAA,eAAA,CAAA,OAAA,yBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,eAAA,CAAA;;AACA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,kBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AAEe,SAAe,gBAAf,CACb,eADa,EAEb,UAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIiB,YAAA,CAAA,qBAAA,CAAsB,UAAtB,CAJjB;;AAAA;AAIP,UAAA,eAJO;AAMP,UAAA,eANO,GAMW,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,eAAb,EAA8B,sBAA9B,CANX;AAAA;AAAA,2CAQP,OAAO,CAAC,GAAR,CAAY,CAChB,WAAA,CAAA,OAAA,CAAmB,eAAnB,EAAoC,eAApC,CADgB,EAEhB,YAAA,CAAA,OAAA,CAAmB,eAAnB,EAAoC,eAApC,CAFgB,EAGhB,cAAA,CAAA,OAAA,CAAqB,eAArB,EAAsC,eAAtC,CAHgB,EAIhB,YAAA,CAAA,OAAA,CAAmB,eAAnB,EAAoC,eAApC,CAJgB,EAKhB,qBAAA,CAAA,OAAA,CAA4B,eAA5B,CALgB,EAMhB,cAAA,CAAA,OAAA,CAAsB,eAAtB,EAAuC,eAAvC,CANgB,CAAZ,CARO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAf,OAAA,CAAA,OAAA,GAAA,gBAAA","sourcesContent":["import path from 'path';\n\nimport { AndroidSplashScreenConfigJSON } from '../SplashScreenConfig';\nimport { validateAndroidConfig } from '../validators';\nimport configureAndroidManifestXml from './AndroidManifest.xml';\nimport configureColorsXml from './Colors.xml';\nimport configureDrawableXml from './Drawable.xml';\nimport configureDrawables from './Drawables';\nimport configureMainActivity from './MainActivity';\nimport configureStylesXml from './Styles.xml';\n\nexport default async function configureAndroid(\n  projectRootPath: string,\n  configJSON: AndroidSplashScreenConfigJSON\n) {\n  const validatedConfig = await validateAndroidConfig(configJSON);\n\n  const androidMainPath = path.resolve(projectRootPath, 'android/app/src/main');\n\n  await Promise.all([\n    configureDrawables(androidMainPath, validatedConfig),\n    configureColorsXml(androidMainPath, validatedConfig),\n    configureDrawableXml(androidMainPath, validatedConfig),\n    configureStylesXml(androidMainPath, validatedConfig),\n    configureAndroidManifestXml(androidMainPath),\n    configureMainActivity(projectRootPath, validatedConfig),\n  ]);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}