{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = linkDependency;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pollParams = _interopRequireDefault(require(\"./pollParams\"));\n\nvar _getPlatformName = _interopRequireDefault(require(\"./getPlatformName\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction linkDependency(platforms, project, dependency) {\n  var params;\n  return _regeneratorRuntime.async(function linkDependency$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap((0, _pollParams.default)(dependency.params));\n\n        case 2:\n          params = _context.sent;\n          Object.keys(platforms || {}).forEach(function (platform) {\n            var projectConfig = project[platform];\n            var dependencyConfig = dependency.platforms[platform];\n\n            if (!projectConfig || !dependencyConfig) {\n              return;\n            }\n\n            var name = dependency.name;\n            var linkConfig = platforms[platform] && platforms[platform].linkConfig && platforms[platform].linkConfig();\n\n            if (!linkConfig || !linkConfig.isInstalled || !linkConfig.register) {\n              return;\n            }\n\n            var isInstalled = linkConfig.isInstalled(projectConfig, name, dependencyConfig);\n\n            if (isInstalled) {\n              _cliTools().logger.info((0, _getPlatformName.default)(platform) + \" module \\\"\" + _chalk().default.bold(name) + \"\\\" is already linked\");\n\n              return;\n            }\n\n            _cliTools().logger.info(\"Linking \\\"\" + _chalk().default.bold(name) + \"\\\" \" + (0, _getPlatformName.default)(platform) + \" dependency\");\n\n            linkConfig.register(name, dependencyConfig, params, projectConfig);\n\n            _cliTools().logger.info((0, _getPlatformName.default)(platform) + \" module \\\"\" + _chalk().default.bold(dependency.name) + \"\\\" has been successfully linked\");\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/link/linkDependency.js"],"names":["Object","defineProperty","exports","value","default","linkDependency","_chalk","data","_interopRequireDefault","require","_cliTools","_pollParams","_getPlatformName","obj","__esModule","platforms","project","dependency","params","keys","forEach","platform","projectConfig","dependencyConfig","name","linkConfig","isInstalled","register","logger","info","bold"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = linkDependency;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pollParams = _interopRequireDefault(require(\"./pollParams\"));\n\nvar _getPlatformName = _interopRequireDefault(require(\"./getPlatformName\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function linkDependency(platforms, project, dependency) {\n  const params = await (0, _pollParams.default)(dependency.params);\n  Object.keys(platforms || {}).forEach(platform => {\n    const projectConfig = project[platform];\n    const dependencyConfig = dependency.platforms[platform];\n\n    if (!projectConfig || !dependencyConfig) {\n      return;\n    }\n\n    const {\n      name\n    } = dependency;\n    const linkConfig = platforms[platform] && platforms[platform].linkConfig && platforms[platform].linkConfig();\n\n    if (!linkConfig || !linkConfig.isInstalled || !linkConfig.register) {\n      return;\n    }\n\n    const isInstalled = linkConfig.isInstalled(projectConfig, name, dependencyConfig);\n\n    if (isInstalled) {\n      _cliTools().logger.info(`${(0, _getPlatformName.default)(platform)} module \"${_chalk().default.bold(name)}\" is already linked`);\n\n      return;\n    }\n\n    _cliTools().logger.info(`Linking \"${_chalk().default.bold(name)}\" ${(0, _getPlatformName.default)(platform)} dependency`);\n\n    linkConfig.register(name, dependencyConfig, params, projectConfig);\n\n    _cliTools().logger.info(`${(0, _getPlatformName.default)(platform)} module \"${_chalk().default.bold(dependency.name)}\" has been successfully linked`);\n  });\n}\n\n//# sourceMappingURL=linkDependency.js.map"]},"metadata":{},"sourceType":"script"}