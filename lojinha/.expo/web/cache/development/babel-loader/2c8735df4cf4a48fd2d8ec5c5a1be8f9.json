{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction getData(element) {\n  var children = null;\n  var props = null;\n  var state = null;\n  var context = null;\n  var updater = null;\n  var name = null;\n  var type = null;\n  var text = null;\n  var publicInstance = null;\n  var nodeType = 'Native';\n\n  if (typeof element !== 'object') {\n    nodeType = 'Text';\n    text = element + '';\n  } else if (element._currentElement === null || element._currentElement === false) {\n    nodeType = 'Empty';\n  } else if (element._renderedComponent) {\n    nodeType = 'NativeWrapper';\n    children = [element._renderedComponent];\n    props = element._instance.props;\n    state = element._instance.state;\n    context = element._instance.context;\n\n    if (context && Object.keys(context).length === 0) {\n      context = null;\n    }\n  } else if (element._renderedChildren) {\n    children = childrenList(element._renderedChildren);\n  } else if (element._currentElement && element._currentElement.props) {\n    children = element._currentElement.props.children;\n  }\n\n  if (!props && element._currentElement && element._currentElement.props) {\n    props = element._currentElement.props;\n  }\n\n  if (element._currentElement != null) {\n    type = element._currentElement.type;\n\n    if (typeof type === 'string') {\n      name = type;\n    } else if (element.getName) {\n      nodeType = 'Composite';\n      name = element.getName();\n\n      if (element._renderedComponent && element._currentElement.props === element._renderedComponent._currentElement) {\n        nodeType = 'Wrapper';\n      }\n\n      if (name === null) {\n        name = 'No display name';\n      }\n    } else if (element._stringText) {\n      nodeType = 'Text';\n      text = element._stringText;\n    } else {\n      name = type.displayName || type.name || 'Unknown';\n    }\n  }\n\n  if (element._instance) {\n    var inst = element._instance;\n    updater = {\n      setState: inst.setState && inst.setState.bind(inst),\n      forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),\n      setInProps: inst.forceUpdate && setInProps.bind(null, element),\n      setInState: inst.forceUpdate && setInState.bind(null, inst),\n      setInContext: inst.forceUpdate && setInContext.bind(null, inst)\n    };\n    publicInstance = inst;\n\n    if (inst._renderedChildren) {\n      children = childrenList(inst._renderedChildren);\n    }\n  }\n\n  return {\n    nodeType: nodeType,\n    type: type,\n    name: name,\n    props: props,\n    state: state,\n    context: context,\n    children: children,\n    text: text,\n    updater: updater,\n    publicInstance: publicInstance\n  };\n}\n\nfunction setInProps(internalInst, path, value) {\n  var element = internalInst._currentElement;\n  internalInst._currentElement = _objectSpread(_objectSpread({}, element), {}, {\n    props: copyWithSet(element.props, path, value)\n  });\n\n  internalInst._instance.forceUpdate();\n}\n\nfunction setInState(inst, path, value) {\n  setIn(inst.state, path, value);\n  inst.forceUpdate();\n}\n\nfunction setInContext(inst, path, value) {\n  setIn(inst.context, path, value);\n  inst.forceUpdate();\n}\n\nfunction setIn(obj, path, value) {\n  var last = path.pop();\n  var parent = path.reduce(function (obj_, attr) {\n    return obj_ ? obj_[attr] : null;\n  }, obj);\n\n  if (parent) {\n    parent[last] = value;\n  }\n}\n\nfunction childrenList(children) {\n  var res = [];\n\n  for (var name in children) {\n    res.push(children[name]);\n  }\n\n  return res;\n}\n\nfunction copyWithSetImpl(obj, path, idx, value) {\n  if (idx >= path.length) {\n    return value;\n  }\n\n  var key = path[idx];\n  var updated = Array.isArray(obj) ? obj.slice() : _objectSpread({}, obj);\n  updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n  return updated;\n}\n\nfunction copyWithSet(obj, path, value) {\n  return copyWithSetImpl(obj, path, 0, value);\n}\n\nmodule.exports = getData;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/BugReporting/getReactData.js"],"names":["getData","element","children","props","state","context","updater","name","type","text","publicInstance","nodeType","_currentElement","_renderedComponent","_instance","Object","keys","length","_renderedChildren","childrenList","getName","_stringText","displayName","inst","setState","bind","forceUpdate","setInProps","setInState","setInContext","internalInst","path","value","copyWithSet","setIn","obj","last","pop","parent","reduce","obj_","attr","res","push","copyWithSetImpl","idx","key","updated","Array","isArray","slice","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Convert a react internal instance to a sanitized data object.\n *\n * This is shamelessly stolen from react-devtools:\n * https://github.com/facebook/react-devtools/blob/master/backend/getData.js\n */\nfunction getData(element: Object): Object {\n  let children = null;\n  let props = null;\n  let state = null;\n  let context = null;\n  let updater = null;\n  let name = null;\n  let type = null;\n  let text = null;\n  let publicInstance = null;\n  let nodeType = 'Native';\n  // If the parent is a native node without rendered children, but with\n  // multiple string children, then the `element` that gets passed in here is\n  // a plain value -- a string or number.\n  if (typeof element !== 'object') {\n    nodeType = 'Text';\n    text = element + '';\n  } else if (\n    element._currentElement === null ||\n    element._currentElement === false\n  ) {\n    nodeType = 'Empty';\n  } else if (element._renderedComponent) {\n    nodeType = 'NativeWrapper';\n    children = [element._renderedComponent];\n    props = element._instance.props;\n    state = element._instance.state;\n    context = element._instance.context;\n    if (context && Object.keys(context).length === 0) {\n      context = null;\n    }\n  } else if (element._renderedChildren) {\n    children = childrenList(element._renderedChildren);\n  } else if (element._currentElement && element._currentElement.props) {\n    // This is a native node without rendered children -- meaning the children\n    // prop is just a string or (in the case of the <option>) a list of\n    // strings & numbers.\n    children = element._currentElement.props.children;\n  }\n\n  if (!props && element._currentElement && element._currentElement.props) {\n    props = element._currentElement.props;\n  }\n\n  // != used deliberately here to catch undefined and null\n  if (element._currentElement != null) {\n    type = element._currentElement.type;\n    if (typeof type === 'string') {\n      name = type;\n    } else if (element.getName) {\n      nodeType = 'Composite';\n      name = element.getName();\n      // 0.14 top-level wrapper\n      // TODO(jared): The backend should just act as if these don't exist.\n      if (\n        element._renderedComponent &&\n        element._currentElement.props ===\n          element._renderedComponent._currentElement\n      ) {\n        nodeType = 'Wrapper';\n      }\n      if (name === null) {\n        name = 'No display name';\n      }\n    } else if (element._stringText) {\n      nodeType = 'Text';\n      text = element._stringText;\n    } else {\n      name = type.displayName || type.name || 'Unknown';\n    }\n  }\n\n  if (element._instance) {\n    const inst = element._instance;\n    updater = {\n      setState: inst.setState && inst.setState.bind(inst),\n      forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),\n      setInProps: inst.forceUpdate && setInProps.bind(null, element),\n      setInState: inst.forceUpdate && setInState.bind(null, inst),\n      setInContext: inst.forceUpdate && setInContext.bind(null, inst),\n    };\n    publicInstance = inst;\n\n    // TODO: React ART currently falls in this bucket, but this doesn't\n    // actually make sense and we should clean this up after stabilizing our\n    // API for backends\n    if (inst._renderedChildren) {\n      children = childrenList(inst._renderedChildren);\n    }\n  }\n\n  return {\n    nodeType,\n    type,\n    name,\n    props,\n    state,\n    context,\n    children,\n    text,\n    updater,\n    publicInstance,\n  };\n}\n\nfunction setInProps(internalInst, path: Array<string | number>, value: any) {\n  const element = internalInst._currentElement;\n  internalInst._currentElement = {\n    ...element,\n    props: copyWithSet(element.props, path, value),\n  };\n  internalInst._instance.forceUpdate();\n}\n\nfunction setInState(inst, path: Array<string | number>, value: any) {\n  setIn(inst.state, path, value);\n  inst.forceUpdate();\n}\n\nfunction setInContext(inst, path: Array<string | number>, value: any) {\n  setIn(inst.context, path, value);\n  inst.forceUpdate();\n}\n\nfunction setIn(obj: Object, path: Array<string | number>, value: any) {\n  const last = path.pop();\n  const parent = path.reduce((obj_, attr) => (obj_ ? obj_[attr] : null), obj);\n  if (parent) {\n    parent[last] = value;\n  }\n}\n\nfunction childrenList(children) {\n  const res = [];\n  for (const name in children) {\n    res.push(children[name]);\n  }\n  return res;\n}\n\nfunction copyWithSetImpl(obj, path, idx, value) {\n  if (idx >= path.length) {\n    return value;\n  }\n  const key = path[idx];\n  const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n  // $FlowFixMe number or string is fine here\n  updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n  return updated;\n}\n\nfunction copyWithSet(\n  obj: Object | Array<any>,\n  path: Array<string | number>,\n  value: any,\n): Object | Array<any> {\n  return copyWithSetImpl(obj, path, 0, value);\n}\n\nmodule.exports = getData;\n"]},"metadata":{},"sourceType":"script"}