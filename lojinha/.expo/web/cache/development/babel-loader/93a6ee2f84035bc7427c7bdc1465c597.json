{"ast":null,"code":"'use strict';","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Text/TextProps.js"],"names":[],"mappings":"AAUA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {\n  LayoutEvent,\n  PressEvent,\n  TextLayoutEvent,\n} from '../Types/CoreEventTypes';\nimport type {Node} from 'react';\nimport type {TextStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  AccessibilityRole,\n  AccessibilityState,\n} from '../Components/View/ViewAccessibility';\n\nexport type PressRetentionOffset = $ReadOnly<{|\n  top: number,\n  left: number,\n  bottom: number,\n  right: number,\n|}>;\n\n/**\n * @see https://reactnative.dev/docs/text.html#reference\n */\nexport type TextProps = $ReadOnly<{|\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://reactnative.dev/docs/text.html#accessible\n   */\n  accessible?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityLabel?: ?Stringish,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://reactnative.dev/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit?: ?boolean,\n\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://reactnative.dev/docs/text.html#allowfontscaling\n   */\n  allowFontScaling?: ?boolean,\n  children?: ?Node,\n\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://reactnative.dev/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode?: ?('clip' | 'head' | 'middle' | 'tail'),\n\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier?: ?number,\n\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://reactnative.dev/docs/text.html#nativeid\n   */\n  nativeID?: ?string,\n\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://reactnative.dev/docs/text.html#numberoflines\n   */\n  numberOfLines?: ?number,\n\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://reactnative.dev/docs/text.html#onlayout\n   */\n  onLayout?: ?(event: LayoutEvent) => mixed,\n\n  /**\n   * This function is called on long press.\n   *\n   * See https://reactnative.dev/docs/text.html#onlongpress\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * This function is called on press.\n   *\n   * See https://reactnative.dev/docs/text.html#onpress\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n  onResponderGrant?: ?(event: PressEvent, dispatchID: string) => void,\n  onResponderMove?: ?(event: PressEvent) => void,\n  onResponderRelease?: ?(event: PressEvent) => void,\n  onResponderTerminate?: ?(event: PressEvent) => void,\n  onResponderTerminationRequest?: ?() => boolean,\n  onStartShouldSetResponder?: ?() => boolean,\n  onMoveShouldSetResponder?: ?() => boolean,\n  onTextLayout?: ?(event: TextLayoutEvent) => mixed,\n\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://reactnative.dev/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset?: ?PressRetentionOffset,\n\n  /**\n   * Lets the user select text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectable\n   */\n  selectable?: ?boolean,\n  style?: ?TextStyleProp,\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://reactnative.dev/docs/text.html#testid\n   */\n  testID?: ?string,\n\n  /**\n   * Android Only\n   */\n\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://reactnative.dev/docs/text.html#disabled\n   */\n  disabled?: ?boolean,\n\n  /**\n   * The highlight color of the text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectioncolor\n   */\n  selectionColor?: ?string,\n\n  dataDetectorType?: ?('phoneNumber' | 'link' | 'email' | 'none' | 'all'),\n\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://reactnative.dev/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy?: ?('balanced' | 'highQuality' | 'simple'),\n\n  /**\n   * iOS Only\n   */\n  adjustsFontSizeToFit?: ?boolean,\n\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://reactnative.dev/docs/text.html#minimumfontscale\n   */\n  minimumFontScale?: ?number,\n\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://reactnative.dev/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting?: ?boolean,\n|}>;\n"]},"metadata":{},"sourceType":"script"}