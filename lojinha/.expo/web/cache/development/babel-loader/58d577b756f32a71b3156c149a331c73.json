{"ast":null,"code":"'use strict';\n\nvar FlowParser = require(\"../../index.js\");\n\nvar fixtures = require(\"../__test_fixtures__/fixtures.js\");\n\nvar failureFixtures = require(\"../__test_fixtures__/failures.js\");\n\njest.mock('fs', function () {\n  return {\n    readFileSync: function readFileSync(filename) {\n      return fixtures[filename] || failureFixtures[filename];\n    }\n  };\n});\ndescribe('RN Codegen Flow Parser', function () {\n  Object.keys(fixtures).sort().forEach(function (fixtureName) {\n    it(\"can generate fixture \" + fixtureName, function () {\n      expect(FlowParser.parseFile(fixtureName)).toMatchSnapshot();\n    });\n  });\n  Object.keys(failureFixtures).sort().forEach(function (fixtureName) {\n    it(\"Fails with error message \" + fixtureName, function () {\n      expect(function () {\n        FlowParser.parseFile(fixtureName);\n      }).toThrowErrorMatchingSnapshot();\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/parsers/flow/components/__tests__/component-parser-test.js"],"names":["FlowParser","require","fixtures","failureFixtures","jest","mock","readFileSync","filename","describe","Object","keys","sort","forEach","fixtureName","it","expect","parseFile","toMatchSnapshot","toThrowErrorMatchingSnapshot"],"mappings":"AAWA;;AAEA,IAAMA,UAAU,GAAGC,OAAO,kBAA1B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,oCAAxB;;AACA,IAAME,eAAe,GAAGF,OAAO,oCAA/B;;AACAG,IAAI,CAACC,IAAL,CAAU,IAAV,EAAgB;AAAA,SAAO;AACrBC,IAAAA,YAAY,EAAE,sBAAAC,QAAQ;AAAA,aAAIL,QAAQ,CAACK,QAAD,CAAR,IAAsBJ,eAAe,CAACI,QAAD,CAAzC;AAAA;AADD,GAAP;AAAA,CAAhB;AAIAC,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvCC,EAAAA,MAAM,CAACC,IAAP,CAAYR,QAAZ,EACGS,IADH,GAEGC,OAFH,CAEW,UAAAC,WAAW,EAAI;AACtBC,IAAAA,EAAE,2BAAyBD,WAAzB,EAAwC,YAAM;AAC9CE,MAAAA,MAAM,CAACf,UAAU,CAACgB,SAAX,CAAqBH,WAArB,CAAD,CAAN,CAA0CI,eAA1C;AACD,KAFC,CAAF;AAGD,GANH;AAQAR,EAAAA,MAAM,CAACC,IAAP,CAAYP,eAAZ,EACGQ,IADH,GAEGC,OAFH,CAEW,UAAAC,WAAW,EAAI;AACtBC,IAAAA,EAAE,+BAA6BD,WAA7B,EAA4C,YAAM;AAClDE,MAAAA,MAAM,CAAC,YAAM;AACXf,QAAAA,UAAU,CAACgB,SAAX,CAAqBH,WAArB;AACD,OAFK,CAAN,CAEGK,4BAFH;AAGD,KAJC,CAAF;AAKD,GARH;AASD,CAlBO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+react_native\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst FlowParser = require('../../index.js');\nconst fixtures = require('../__test_fixtures__/fixtures.js');\nconst failureFixtures = require('../__test_fixtures__/failures.js');\njest.mock('fs', () => ({\n  readFileSync: filename => fixtures[filename] || failureFixtures[filename],\n}));\n\ndescribe('RN Codegen Flow Parser', () => {\n  Object.keys(fixtures)\n    .sort()\n    .forEach(fixtureName => {\n      it(`can generate fixture ${fixtureName}`, () => {\n        expect(FlowParser.parseFile(fixtureName)).toMatchSnapshot();\n      });\n    });\n\n  Object.keys(failureFixtures)\n    .sort()\n    .forEach(fixtureName => {\n      it(`Fails with error message ${fixtureName}`, () => {\n        expect(() => {\n          FlowParser.parseFile(fixtureName);\n        }).toThrowErrorMatchingSnapshot();\n      });\n    });\n});\n"]},"metadata":{},"sourceType":"script"}