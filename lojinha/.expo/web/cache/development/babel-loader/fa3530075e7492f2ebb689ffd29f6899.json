{"ast":null,"code":"'use strict';\n\ndescribe('mergeIntoFast', function () {\n  var mergeIntoFast = require(\"../mergeIntoFast\");\n\n  it('should merge two objects', function () {\n    var a = {\n      fontScale: 2,\n      height: 1334\n    };\n    var b = {\n      scale: 2,\n      width: 750\n    };\n    mergeIntoFast(a, b);\n    expect(a).toEqual({\n      fontScale: 2,\n      height: 1334,\n      scale: 2,\n      width: 750\n    });\n  });\n  it('should use the values of the second object if there are duplicate keys', function () {\n    var a = {\n      fontScale: 2\n    };\n    var b = {\n      fontScale: 3\n    };\n    mergeIntoFast(a, b);\n    expect(a).toEqual({\n      fontScale: 3\n    });\n  });\n  it('should merge into an empty object', function () {\n    var a = {};\n    var b = {\n      scale: 2,\n      width: 750\n    };\n    mergeIntoFast(a, b);\n    expect(a).toEqual({\n      scale: 2,\n      width: 750\n    });\n  });\n  it('should merge from an empty object', function () {\n    var a = {\n      scale: 2,\n      width: 750\n    };\n    var b = {};\n    mergeIntoFast(a, b);\n    expect(a).toEqual({\n      scale: 2,\n      width: 750\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/mergeIntoFast-test.js"],"names":["describe","mergeIntoFast","require","it","a","fontScale","height","b","scale","width","expect","toEqual"],"mappings":"AAUA;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9B,MAAMC,aAAa,GAAGC,OAAO,oBAA7B;;AAEAC,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMC,CAAC,GAAG;AAACC,MAAAA,SAAS,EAAE,CAAZ;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAAV;AACA,QAAMC,CAAC,GAAG;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAV;AAEAR,IAAAA,aAAa,CAACG,CAAD,EAAIG,CAAJ,CAAb;AAEAG,IAAAA,MAAM,CAACN,CAAD,CAAN,CAAUO,OAAV,CAAkB;AAACN,MAAAA,SAAS,EAAE,CAAZ;AAAeC,MAAAA,MAAM,EAAE,IAAvB;AAA6BE,MAAAA,KAAK,EAAE,CAApC;AAAuCC,MAAAA,KAAK,EAAE;AAA9C,KAAlB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,wEAAD,EAA2E,YAAM;AACjF,QAAMC,CAAC,GAAG;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAV;AACA,QAAME,CAAC,GAAG;AAACF,MAAAA,SAAS,EAAE;AAAZ,KAAV;AAEAJ,IAAAA,aAAa,CAACG,CAAD,EAAIG,CAAJ,CAAb;AAEAG,IAAAA,MAAM,CAACN,CAAD,CAAN,CAAUO,OAAV,CAAkB;AAACN,MAAAA,SAAS,EAAE;AAAZ,KAAlB;AACD,GAPC,CAAF;AASAF,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,QAAMC,CAAC,GAAG,EAAV;AACA,QAAMG,CAAC,GAAG;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAV;AAEAR,IAAAA,aAAa,CAACG,CAAD,EAAIG,CAAJ,CAAb;AAEAG,IAAAA,MAAM,CAACN,CAAD,CAAN,CAAUO,OAAV,CAAkB;AAACH,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAlB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,QAAMC,CAAC,GAAG;AAACI,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAV;AACA,QAAMF,CAAC,GAAG,EAAV;AAEAN,IAAAA,aAAa,CAACG,CAAD,EAAIG,CAAJ,CAAb;AAEAG,IAAAA,MAAM,CAACN,CAAD,CAAN,CAAUO,OAAV,CAAkB;AAACH,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAlB;AACD,GAPC,CAAF;AAQD,CAtCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\ndescribe('mergeIntoFast', () => {\n  const mergeIntoFast = require('../mergeIntoFast');\n\n  it('should merge two objects', () => {\n    const a = {fontScale: 2, height: 1334};\n    const b = {scale: 2, width: 750};\n\n    mergeIntoFast(a, b);\n\n    expect(a).toEqual({fontScale: 2, height: 1334, scale: 2, width: 750});\n  });\n\n  it('should use the values of the second object if there are duplicate keys', () => {\n    const a = {fontScale: 2};\n    const b = {fontScale: 3};\n\n    mergeIntoFast(a, b);\n\n    expect(a).toEqual({fontScale: 3});\n  });\n\n  it('should merge into an empty object', () => {\n    const a = {};\n    const b = {scale: 2, width: 750};\n\n    mergeIntoFast(a, b);\n\n    expect(a).toEqual({scale: 2, width: 750});\n  });\n\n  it('should merge from an empty object', () => {\n    const a = {scale: 2, width: 750};\n    const b = {};\n\n    mergeIntoFast(a, b);\n\n    expect(a).toEqual({scale: 2, width: 750});\n  });\n});\n"]},"metadata":{},"sourceType":"script"}