{"ast":null,"code":"'use strict';\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar Recording = NativeModules.Recording;\nvar TestJSToJavaParametersModule = {\n  returnBasicTypes: function returnBasicTypes() {\n    Recording.receiveBasicTypes('foo', 3.14, true, null);\n  },\n  returnBoxedTypes: function returnBoxedTypes() {\n    Recording.receiveBoxedTypes(42, 3.14, true);\n  },\n  returnDynamicTypes: function returnDynamicTypes() {\n    Recording.receiveDynamic('foo');\n    Recording.receiveDynamic(3.14);\n  },\n  returnArrayWithBasicTypes: function returnArrayWithBasicTypes() {\n    Recording.receiveArray(['foo', 3.14, -111, true, null]);\n  },\n  returnNestedArray: function returnNestedArray() {\n    Recording.receiveArray(['we', ['have', ['to', ['go', ['deeper']]]]]);\n  },\n  returnArrayWithMaps: function returnArrayWithMaps() {\n    Recording.receiveArray([{\n      m1k1: 'm1v1',\n      m1k2: 'm1v2'\n    }, {\n      m2k1: 'm2v1'\n    }]);\n  },\n  returnMapWithBasicTypes: function returnMapWithBasicTypes() {\n    Recording.receiveMap({\n      stringKey: 'stringValue',\n      doubleKey: 3.14,\n      intKey: -11,\n      booleanKey: true,\n      nullKey: null\n    });\n  },\n  returnNestedMap: function returnNestedMap() {\n    Recording.receiveMap({\n      weHaveToGoDeeper: {\n        inception: true\n      }\n    });\n  },\n  returnMapWithArrays: function returnMapWithArrays() {\n    Recording.receiveMap({\n      empty: [],\n      ints: [43, 44],\n      mixed: [77, 'string', ['another', 'array']]\n    });\n  },\n  returnArrayWithStringDoubleIntMapArrayBooleanNull: function returnArrayWithStringDoubleIntMapArrayBooleanNull() {\n    Recording.receiveArray(['string', 3.14, 555, {}, [], true, null]);\n  },\n  returnMapWithStringDoubleIntMapArrayBooleanNull: function returnMapWithStringDoubleIntMapArrayBooleanNull() {\n    Recording.receiveMap({\n      string: 'string',\n      double: 3,\n      map: {},\n      int: -55,\n      array: [],\n      boolean: true,\n      null: null\n    });\n  },\n  returnArrayWithLargeInts: function returnArrayWithLargeInts() {\n    Recording.receiveArray([2147483648, -5555555555]);\n  },\n  returnMapWithLargeInts: function returnMapWithLargeInts() {\n    Recording.receiveMap({\n      first: -2147483649,\n      second: 5551231231\n    });\n  },\n  returnMapForMerge1: function returnMapForMerge1() {\n    Recording.receiveMap({\n      a: 1,\n      b: 41,\n      c: 'string',\n      d: 'other string',\n      e: [1, 'foo', 'bar'],\n      f: null\n    });\n  },\n  returnMapForMerge2: function returnMapForMerge2() {\n    Recording.receiveMap({\n      a: 'overwrite',\n      d: 77,\n      e: null,\n      f: ['array', 'with', 'stuff'],\n      newkey: 'newvalue'\n    });\n  },\n  returnMapWithMultibyteUTF8CharacterString: function returnMapWithMultibyteUTF8CharacterString() {\n    Recording.receiveMap({\n      'one-byte': 'a',\n      'two-bytes': \"\\xA2\",\n      'three-bytes': \"\\u20AC\",\n      'four-bytes': \"\\uD83D\\uDE1C\",\n      mixed: \"\\u017C\\xF3\\u0142\\u0107 g\\u0119\\u015Bl\\u0105 \\u6211 \\uD83D\\uDE0E ja\\u017A\\u0107\"\n    });\n  },\n  returnArrayWithMultibyteUTF8CharacterString: function returnArrayWithMultibyteUTF8CharacterString() {\n    Recording.receiveArray(['a', \"\\xA2\", \"\\u20AC\", \"\\uD83D\\uDE1C\", \"\\u017C\\xF3\\u0142\\u0107 g\\u0119\\u015Bl\\u0105 \\u6211 \\uD83D\\uDE0E ja\\u017A\\u0107\"]);\n  }\n};\nBatchedBridge.registerCallableModule('TestJSToJavaParametersModule', TestJSToJavaParametersModule);\nmodule.exports = TestJSToJavaParametersModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/TestJSToJavaParametersModule.js"],"names":["BatchedBridge","require","Recording","NativeModules","TestJSToJavaParametersModule","returnBasicTypes","receiveBasicTypes","returnBoxedTypes","receiveBoxedTypes","returnDynamicTypes","receiveDynamic","returnArrayWithBasicTypes","receiveArray","returnNestedArray","returnArrayWithMaps","m1k1","m1k2","m2k1","returnMapWithBasicTypes","receiveMap","stringKey","doubleKey","intKey","booleanKey","nullKey","returnNestedMap","weHaveToGoDeeper","inception","returnMapWithArrays","empty","ints","mixed","returnArrayWithStringDoubleIntMapArrayBooleanNull","returnMapWithStringDoubleIntMapArrayBooleanNull","string","double","map","int","array","boolean","null","returnArrayWithLargeInts","returnMapWithLargeInts","first","second","returnMapForMerge1","a","b","c","d","e","f","returnMapForMerge2","newkey","returnMapWithMultibyteUTF8CharacterString","returnArrayWithMultibyteUTF8CharacterString","registerCallableModule","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst {NativeModules} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nconst {Recording} = NativeModules;\n\nconst TestJSToJavaParametersModule = {\n  returnBasicTypes: function() {\n    Recording.receiveBasicTypes('foo', 3.14, true, null);\n  },\n  returnBoxedTypes: function() {\n    Recording.receiveBoxedTypes(42, 3.14, true);\n  },\n  returnDynamicTypes: function() {\n    Recording.receiveDynamic('foo');\n    Recording.receiveDynamic(3.14);\n  },\n  returnArrayWithBasicTypes: function() {\n    Recording.receiveArray(['foo', 3.14, -111, true, null]);\n  },\n  returnNestedArray: function() {\n    Recording.receiveArray(['we', ['have', ['to', ['go', ['deeper']]]]]);\n  },\n  returnArrayWithMaps: function() {\n    Recording.receiveArray([{m1k1: 'm1v1', m1k2: 'm1v2'}, {m2k1: 'm2v1'}]);\n  },\n  returnMapWithBasicTypes: function() {\n    Recording.receiveMap({\n      stringKey: 'stringValue',\n      doubleKey: 3.14,\n      intKey: -11,\n      booleanKey: true,\n      nullKey: null,\n    });\n  },\n  returnNestedMap: function() {\n    Recording.receiveMap({\n      weHaveToGoDeeper: {\n        inception: true,\n      },\n    });\n  },\n  returnMapWithArrays: function() {\n    Recording.receiveMap({\n      empty: [],\n      ints: [43, 44],\n      mixed: [77, 'string', ['another', 'array']],\n    });\n  },\n  returnArrayWithStringDoubleIntMapArrayBooleanNull: function() {\n    Recording.receiveArray(['string', 3.14, 555, {}, [], true, null]);\n  },\n  returnMapWithStringDoubleIntMapArrayBooleanNull: function() {\n    Recording.receiveMap({\n      string: 'string',\n      double: 3,\n      map: {},\n      int: -55,\n      array: [],\n      boolean: true,\n      null: null,\n    });\n  },\n  returnArrayWithLargeInts: function() {\n    Recording.receiveArray([2147483648, -5555555555]);\n  },\n  returnMapWithLargeInts: function() {\n    Recording.receiveMap({first: -2147483649, second: 5551231231});\n  },\n  returnMapForMerge1: function() {\n    Recording.receiveMap({\n      a: 1,\n      b: 41,\n      c: 'string',\n      d: 'other string',\n      e: [1, 'foo', 'bar'],\n      f: null,\n    });\n  },\n  returnMapForMerge2: function() {\n    Recording.receiveMap({\n      a: 'overwrite',\n      d: 77,\n      e: null,\n      f: ['array', 'with', 'stuff'],\n      newkey: 'newvalue',\n    });\n  },\n  returnMapWithMultibyteUTF8CharacterString: function() {\n    Recording.receiveMap({\n      'one-byte': 'a',\n      'two-bytes': '\\u00A2',\n      'three-bytes': '\\u20AC',\n      'four-bytes': '\\uD83D\\uDE1C',\n      mixed:\n        '\\u017C\\u00F3\\u0142\\u0107 g\\u0119\\u015Bl\\u0105 \\u6211 \\uD83D\\uDE0E ja\\u017A\\u0107',\n    });\n  },\n  returnArrayWithMultibyteUTF8CharacterString: function() {\n    Recording.receiveArray([\n      'a',\n      '\\u00A2',\n      '\\u20AC',\n      '\\uD83D\\uDE1C',\n      '\\u017C\\u00F3\\u0142\\u0107 g\\u0119\\u015Bl\\u0105 \\u6211 \\uD83D\\uDE0E ja\\u017A\\u0107',\n    ]);\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'TestJSToJavaParametersModule',\n  TestJSToJavaParametersModule,\n);\n\nmodule.exports = TestJSToJavaParametersModule;\n"]},"metadata":{},"sourceType":"script"}