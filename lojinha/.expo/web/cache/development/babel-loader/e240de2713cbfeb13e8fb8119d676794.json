{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/TransparentHitTest/TransparentHitTestExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar TouchableOpacity = require(\"react-native-web/dist/exports/TouchableOpacity\").default;\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar TransparentHitTestExample = function (_React$Component) {\n  _inherits(TransparentHitTestExample, _React$Component);\n\n  var _super = _createSuper(TransparentHitTestExample);\n\n  function TransparentHitTestExample() {\n    _classCallCheck(this, TransparentHitTestExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TransparentHitTestExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Alert.alert('Alert', 'Hi!');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"HELLO!\")), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          backgroundColor: 'green',\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          opacity: 0.0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TransparentHitTestExample;\n}(React.Component);\n\nexports.title = '<TransparentHitTestExample>';\nexports.displayName = 'TransparentHitTestExample';\nexports.description = 'Transparent view receiving touch events';\nexports.examples = [{\n  title: 'TransparentHitTestExample',\n  render: function render() {\n    return React.createElement(TransparentHitTestExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/TransparentHitTest/TransparentHitTestExample.js"],"names":["React","require","TransparentHitTestExample","flex","Alert","alert","position","backgroundColor","top","left","bottom","right","opacity","Component","exports","title","displayName","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;IAGMC,yB;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,KAArB,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAKE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,eAAe,EAAE,OAFZ;AAGLC,UAAAA,GAAG,EAAE,CAHA;AAILC,UAAAA,IAAI,EAAE,CAJD;AAKLC,UAAAA,MAAM,EAAE,CALH;AAMLC,UAAAA,KAAK,EAAE,CANF;AAOLC,UAAAA,OAAO,EAAE;AAPJ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAmBD;;;;EArBqCZ,KAAK,CAACa,S;;AAwB9CC,OAAO,CAACC,KAAR,GAAgB,6BAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,2BAAtB;AACAF,OAAO,CAACG,WAAR,GAAsB,yCAAtB;AACAH,OAAO,CAACI,QAAR,GAAmB,CACjB;AACEH,EAAAA,KAAK,EAAE,2BADT;AAEEI,EAAAA,MAFF,oBAE+B;AAC3B,WAAO,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {Text, View, TouchableOpacity, Alert} = require('react-native');\n\nclass TransparentHitTestExample extends React.Component<{...}> {\n  render() {\n    return (\n      <View style={{flex: 1}}>\n        <TouchableOpacity onPress={() => Alert.alert('Alert', 'Hi!')}>\n          <Text>HELLO!</Text>\n        </TouchableOpacity>\n\n        <View\n          style={{\n            position: 'absolute',\n            backgroundColor: 'green',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            opacity: 0.0,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexports.title = '<TransparentHitTestExample>';\nexports.displayName = 'TransparentHitTestExample';\nexports.description = 'Transparent view receiving touch events';\nexports.examples = [\n  {\n    title: 'TransparentHitTestExample',\n    render(): React.Element<any> {\n      return <TransparentHitTestExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}