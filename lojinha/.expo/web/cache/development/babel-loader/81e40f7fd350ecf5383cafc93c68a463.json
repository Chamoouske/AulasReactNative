{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ToastAndroid/ToastAndroidExample.android.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar ToastAndroid = require(\"react-native-web/dist/exports/ToastAndroid\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar ToastExample = function (_React$Component) {\n  _inherits(ToastExample, _React$Component);\n\n  var _super = _createSuper(ToastExample);\n\n  function ToastExample() {\n    _classCallCheck(this, ToastExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToastExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: \"ToastAndroid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Simple toast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.show('This is a toast with short duration', ToastAndroid.SHORT);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with long duration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.show('This is a toast with long duration', ToastAndroid.LONG);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with top gravity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.showWithGravity('This is a toast with top gravity', ToastAndroid.SHORT, ToastAndroid.TOP);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with center gravity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.showWithGravity('This is a toast with center gravity', ToastAndroid.SHORT, ToastAndroid.CENTER);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with bottom gravity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.showWithGravity('This is a toast with bottom gravity', ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with x offset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.showWithGravityAndOffset('This is a toast with x offset', ToastAndroid.SHORT, ToastAndroid.CENTER, 50, 0);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))), React.createElement(RNTesterBlock, {\n        title: \"Toast with y offset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return ToastAndroid.showWithGravityAndOffset('This is a toast with y offset', ToastAndroid.SHORT, ToastAndroid.BOTTOM, 0, 50);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, \"Click me.\"))));\n    }\n  }]);\n\n  return ToastExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  text: {\n    color: 'black'\n  }\n});\nexports.title = 'Toast Example';\nexports.description = 'Example that demonstrates the use of an Android Toast to provide feedback.';\nexports.examples = [{\n  title: 'Basic toast',\n  render: function render() {\n    return React.createElement(ToastExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ToastAndroid/ToastAndroidExample.android.js"],"names":["RNTesterBlock","require","RNTesterPage","React","ToastExample","ToastAndroid","show","SHORT","styles","text","LONG","showWithGravity","TOP","CENTER","BOTTOM","showWithGravityAndOffset","Component","StyleSheet","create","color","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\nconst React = require('react');\n\nconst {\n  StyleSheet,\n  Text,\n  ToastAndroid,\n  TouchableWithoutFeedback,\n} = require('react-native');\n\ntype Props = $ReadOnly<{||}>;\nclass ToastExample extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <RNTesterPage title=\"ToastAndroid\">\n        <RNTesterBlock title=\"Simple toast\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.show(\n                'This is a toast with short duration',\n                ToastAndroid.SHORT,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with long duration\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.show(\n                'This is a toast with long duration',\n                ToastAndroid.LONG,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with top gravity\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.showWithGravity(\n                'This is a toast with top gravity',\n                ToastAndroid.SHORT,\n                ToastAndroid.TOP,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with center gravity\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.showWithGravity(\n                'This is a toast with center gravity',\n                ToastAndroid.SHORT,\n                ToastAndroid.CENTER,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with bottom gravity\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.showWithGravity(\n                'This is a toast with bottom gravity',\n                ToastAndroid.SHORT,\n                ToastAndroid.BOTTOM,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with x offset\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.showWithGravityAndOffset(\n                'This is a toast with x offset',\n                ToastAndroid.SHORT,\n                ToastAndroid.CENTER,\n                50,\n                0,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Toast with y offset\">\n          <TouchableWithoutFeedback\n            onPress={() =>\n              ToastAndroid.showWithGravityAndOffset(\n                'This is a toast with y offset',\n                ToastAndroid.SHORT,\n                ToastAndroid.BOTTOM,\n                0,\n                50,\n              )\n            }>\n            <Text style={styles.text}>Click me.</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: 'black',\n  },\n});\n\nexports.title = 'Toast Example';\nexports.description =\n  'Example that demonstrates the use of an Android Toast to provide feedback.';\nexports.examples = [\n  {\n    title: 'Basic toast',\n    render: function(): React.Element<typeof ToastExample> {\n      return <ToastExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}