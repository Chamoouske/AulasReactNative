{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Button/ButtonExample.js\";\n\nvar React = require('react');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar Button = require(\"react-native-web/dist/exports/Button\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nimport { RNTesterThemeContext } from \"../../components/RNTesterTheme\";\n\nfunction onButtonPress(buttonName) {\n  Alert.alert(buttonName + \" has been pressed!\");\n}\n\nexports.displayName = 'ButtonExample';\nexports.framework = 'React';\nexports.title = '<Button>';\nexports.description = 'Simple React Native button component.';\nexports.examples = [{\n  title: 'Simple Button',\n  description: 'The title and onPress handler are required. It is ' + 'recommended to set accessibilityLabel to help make your app usable by ' + 'everyone.',\n  render: function render() {\n    var _this = this;\n\n    return React.createElement(RNTesterThemeContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, function (theme) {\n      return React.createElement(Button, {\n        onPress: function onPress() {\n          return onButtonPress('Simple');\n        },\n        testID: \"simple_button\",\n        color: theme.LinkColor,\n        title: \"Press Me\",\n        accessibilityLabel: \"See an informative alert\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      });\n    });\n  }\n}, {\n  title: 'Adjusted color',\n  description: 'Adjusts the color in a way that looks standard on each ' + 'platform. On iOS, the color prop controls the color of the text. On ' + 'Android, the color adjusts the background color of the button.',\n  render: function render() {\n    var _this2 = this;\n\n    return React.createElement(RNTesterThemeContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, function (theme) {\n      return React.createElement(Button, {\n        onPress: function onPress() {\n          return onButtonPress('Purple');\n        },\n        testID: \"purple_button\",\n        color: theme.SystemPurpleColor,\n        title: \"Press Purple\",\n        accessibilityLabel: \"Learn more about purple\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      });\n    });\n  }\n}, {\n  title: 'Fit to text layout',\n  description: 'This layout strategy lets the title define the width of ' + 'the button',\n  render: function render() {\n    var _this3 = this;\n\n    return React.createElement(RNTesterThemeContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, function (theme) {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return onButtonPress('Left');\n        },\n        testID: \"left_button\",\n        color: theme.LinkColor,\n        title: \"This looks great!\",\n        accessibilityLabel: \"This sounds great!\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return onButtonPress('Right');\n        },\n        testID: \"right_button\",\n        color: theme.SystemPurpleColor,\n        title: \"Ok!\",\n        accessibilityLabel: \"Ok, Great!\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }));\n    });\n  }\n}, {\n  title: 'Disabled Button',\n  description: 'All interactions for the component are disabled.',\n  render: function render() {\n    return React.createElement(Button, {\n      disabled: true,\n      onPress: function onPress() {\n        return onButtonPress('Disabled');\n      },\n      testID: \"disabled_button\",\n      title: \"I Am Disabled\",\n      accessibilityLabel: \"See an informative alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    });\n  }\n}];\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Button/ButtonExample.js"],"names":["React","require","RNTesterThemeContext","onButtonPress","buttonName","Alert","alert","exports","displayName","framework","title","description","examples","render","theme","LinkColor","SystemPurpleColor","styles","container","StyleSheet","create","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {Alert, Button, View, StyleSheet} = require('react-native');\nimport {RNTesterThemeContext} from '../../components/RNTesterTheme';\n\nfunction onButtonPress(buttonName) {\n  Alert.alert(`${buttonName} has been pressed!`);\n}\n\nexports.displayName = 'ButtonExample';\nexports.framework = 'React';\nexports.title = '<Button>';\nexports.description = 'Simple React Native button component.';\n\nexports.examples = [\n  {\n    title: 'Simple Button',\n    description: ('The title and onPress handler are required. It is ' +\n      'recommended to set accessibilityLabel to help make your app usable by ' +\n      'everyone.': string),\n    render: function(): React.Node {\n      return (\n        <RNTesterThemeContext.Consumer>\n          {theme => {\n            return (\n              <Button\n                onPress={() => onButtonPress('Simple')}\n                testID=\"simple_button\"\n                color={theme.LinkColor}\n                title=\"Press Me\"\n                accessibilityLabel=\"See an informative alert\"\n              />\n            );\n          }}\n        </RNTesterThemeContext.Consumer>\n      );\n    },\n  },\n  {\n    title: 'Adjusted color',\n    description: ('Adjusts the color in a way that looks standard on each ' +\n      'platform. On iOS, the color prop controls the color of the text. On ' +\n      'Android, the color adjusts the background color of the button.': string),\n    render: function(): React.Node {\n      return (\n        <RNTesterThemeContext.Consumer>\n          {theme => {\n            return (\n              <Button\n                onPress={() => onButtonPress('Purple')}\n                testID=\"purple_button\"\n                color={theme.SystemPurpleColor}\n                title=\"Press Purple\"\n                accessibilityLabel=\"Learn more about purple\"\n              />\n            );\n          }}\n        </RNTesterThemeContext.Consumer>\n      );\n    },\n  },\n  {\n    title: 'Fit to text layout',\n    description: ('This layout strategy lets the title define the width of ' +\n      'the button': string),\n    render: function(): React.Node {\n      return (\n        <RNTesterThemeContext.Consumer>\n          {theme => {\n            return (\n              <View style={styles.container}>\n                <Button\n                  onPress={() => onButtonPress('Left')}\n                  testID=\"left_button\"\n                  color={theme.LinkColor}\n                  title=\"This looks great!\"\n                  accessibilityLabel=\"This sounds great!\"\n                />\n                <Button\n                  onPress={() => onButtonPress('Right')}\n                  testID=\"right_button\"\n                  color={theme.SystemPurpleColor}\n                  title=\"Ok!\"\n                  accessibilityLabel=\"Ok, Great!\"\n                />\n              </View>\n            );\n          }}\n        </RNTesterThemeContext.Consumer>\n      );\n    },\n  },\n  {\n    title: 'Disabled Button',\n    description: 'All interactions for the component are disabled.',\n    render: function(): React.Node {\n      return (\n        <Button\n          disabled\n          onPress={() => onButtonPress('Disabled')}\n          testID=\"disabled_button\"\n          title=\"I Am Disabled\"\n          accessibilityLabel=\"See an informative alert\"\n        />\n      );\n    },\n  },\n];\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}