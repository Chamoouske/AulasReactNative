{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/JSResponderTestApp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar PanResponder = require(\"react-native-web/dist/exports/PanResponder\").default;\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar JSResponderTestApp = function (_React$Component) {\n  _inherits(JSResponderTestApp, _React$Component);\n\n  var _super = _createSuper(JSResponderTestApp);\n\n  function JSResponderTestApp() {\n    var _this;\n\n    _classCallCheck(this, JSResponderTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handleMoveShouldSetPanResponder = function (e, gestureState) {\n      return Math.abs(gestureState.dx) > 30;\n    };\n\n    return _this;\n  }\n\n  _createClass(JSResponderTestApp, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.panGesture = PanResponder.create({\n        onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var views = [];\n\n      for (var i = 0; i < 100; i++) {\n        views[i] = React.createElement(View, {\n          key: i,\n          style: styles.row,\n          collapsable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, \"I am row \", i));\n      }\n\n      return React.createElement(View, _extends({\n        style: styles.container\n      }, this.panGesture.panHandlers, {\n        collapsable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }), React.createElement(ScrollView, {\n        style: styles.scrollview,\n        testID: \"scroll_view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, views));\n    }\n  }]);\n\n  return JSResponderTestApp;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollview: {\n    flex: 1\n  },\n  row: {\n    height: 30\n  }\n});\nmodule.exports = JSResponderTestApp;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/JSResponderTestApp.js"],"names":["React","require","JSResponderTestApp","_handleMoveShouldSetPanResponder","e","gestureState","Math","abs","dx","panGesture","PanResponder","create","onMoveShouldSetPanResponder","views","i","styles","row","container","panHandlers","scrollview","Component","StyleSheet","flex","height","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;;;IASMC,kB;;;;;;;;;;;;;;;;UACJC,gC,GAAmC,UAACC,CAAD,EAAIC,YAAJ,EAAqB;AACtD,aAAOC,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4B,EAAnC;AACD,K;;;;;;;WAED,qCAA4B;AAC1B,WAAKC,UAAL,GAAkBC,YAAY,CAACC,MAAb,CAAoB;AACpCC,QAAAA,2BAA2B,EAAE,KAAKT;AADE,OAApB,CAAlB;AAGD;;;WAED,kBAAS;AACP,UAAMU,KAAK,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,QAAAA,KAAK,CAACC,CAAD,CAAL,GACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAc,UAAA,KAAK,EAAEC,MAAM,CAACC,GAA5B;AAAiC,UAAA,WAAW,EAAE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBF,CAAhB,CADF,CADF;AAKD;;AACD,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACE;AADhB,SAEM,KAAKR,UAAL,CAAgBS,WAFtB;AAGE,QAAA,WAAW,EAAE,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEH,MAAM,CAACI,UAA1B;AAAsC,QAAA,MAAM,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KADH,CAJF,CADF;AAUD;;;;EA9B8Bb,KAAK,CAACoB,S;;AAiCvC,IAAML,MAAM,GAAGM,UAAU,CAACV,MAAX,CAAkB;AAC/BM,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BH,EAAAA,UAAU,EAAE;AACVG,IAAAA,IAAI,EAAE;AADI,GAJmB;AAO/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,MAAM,EAAE;AADL;AAP0B,CAAlB,CAAf;AAYAC,MAAM,CAACC,OAAP,GAAiBvB,kBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  PanResponder,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n} = require('react-native');\n\nclass JSResponderTestApp extends React.Component {\n  _handleMoveShouldSetPanResponder = (e, gestureState) => {\n    return Math.abs(gestureState.dx) > 30;\n  };\n\n  UNSAFE_componentWillMount() {\n    this.panGesture = PanResponder.create({\n      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,\n    });\n  }\n\n  render() {\n    const views = [];\n    for (let i = 0; i < 100; i++) {\n      views[i] = (\n        <View key={i} style={styles.row} collapsable={false}>\n          <Text>I am row {i}</Text>\n        </View>\n      );\n    }\n    return (\n      <View\n        style={styles.container}\n        {...this.panGesture.panHandlers}\n        collapsable={false}>\n        <ScrollView style={styles.scrollview} testID=\"scroll_view\">\n          {views}\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollview: {\n    flex: 1,\n  },\n  row: {\n    height: 30,\n  },\n});\n\nmodule.exports = JSResponderTestApp;\n"]},"metadata":{},"sourceType":"script"}