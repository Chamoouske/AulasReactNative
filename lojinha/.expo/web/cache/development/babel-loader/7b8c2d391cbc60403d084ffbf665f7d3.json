{"ast":null,"code":"'use strict';\n\nvar _require = require(\"./methods\"),\n    getMethods = _require.getMethods;\n\nfunction getModuleProperties(types, interfaceName) {\n  if (types[interfaceName] && types[interfaceName].body) {\n    return types[interfaceName].body.properties;\n  }\n\n  throw new Error(\"Interface properties for \\\"\" + interfaceName + \"\\\" has been specified incorrectly.\");\n}\n\nfunction findInterfaceName(types) {\n  return Object.keys(types).map(function (typeName) {\n    return types[typeName];\n  }).filter(function (type) {\n    return type.extends && type.extends[0] && type.extends[0].id.name === 'TurboModule';\n  })[0].id.name;\n}\n\nfunction processModule(types) {\n  var interfaceName = findInterfaceName(types);\n  var moduleProperties = getModuleProperties(types, interfaceName);\n  var properties = getMethods(moduleProperties, types);\n  return {\n    properties: properties\n  };\n}\n\nmodule.exports = {\n  processModule: processModule\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/parsers/flow/modules/index.js"],"names":["require","getMethods","getModuleProperties","types","interfaceName","body","properties","Error","findInterfaceName","Object","keys","map","typeName","filter","type","extends","id","name","processModule","moduleProperties","module","exports"],"mappings":"AAUA;;eAGqBA,OAAO,a;IAArBC,U,YAAAA,U;;AAEP,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,aAApC,EAAmD;AACjD,MAAID,KAAK,CAACC,aAAD,CAAL,IAAwBD,KAAK,CAACC,aAAD,CAAL,CAAqBC,IAAjD,EAAuD;AACrD,WAAOF,KAAK,CAACC,aAAD,CAAL,CAAqBC,IAArB,CAA0BC,UAAjC;AACD;;AACD,QAAM,IAAIC,KAAJ,iCACyBH,aADzB,wCAAN;AAGD;;AAED,SAASI,iBAAT,CAA2BL,KAA3B,EAAkC;AAChC,SAAOM,MAAM,CAACC,IAAP,CAAYP,KAAZ,EACJQ,GADI,CACA,UAAAC,QAAQ;AAAA,WAAIT,KAAK,CAACS,QAAD,CAAT;AAAA,GADR,EAEJC,MAFI,CAGH,UAAAC,IAAI;AAAA,WACFA,IAAI,CAACC,OAAL,IACAD,IAAI,CAACC,OAAL,CAAa,CAAb,CADA,IAEAD,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBC,EAAhB,CAAmBC,IAAnB,KAA4B,aAH1B;AAAA,GAHD,EAOH,CAPG,EAOAD,EAPA,CAOGC,IAPV;AAQD;;AAGD,SAASC,aAAT,CAAuBf,KAAvB,EAA+D;AAC7D,MAAMC,aAAa,GAAGI,iBAAiB,CAACL,KAAD,CAAvC;AAEA,MAAMgB,gBAAgB,GAAGjB,mBAAmB,CAACC,KAAD,EAAQC,aAAR,CAA5C;AACA,MAAME,UAAU,GAAGL,UAAU,CAACkB,gBAAD,EAAmBhB,KAAnB,CAA7B;AACA,SAAO;AAACG,IAAAA,UAAU,EAAVA;AAAD,GAAP;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,aAAa,EAAbA;AADe,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {NativeModuleSchemaBuilderConfig} from './schema.js';\nconst {getMethods} = require('./methods');\n\nfunction getModuleProperties(types, interfaceName) {\n  if (types[interfaceName] && types[interfaceName].body) {\n    return types[interfaceName].body.properties;\n  }\n  throw new Error(\n    `Interface properties for \"${interfaceName}\" has been specified incorrectly.`,\n  );\n}\n\nfunction findInterfaceName(types) {\n  return Object.keys(types)\n    .map(typeName => types[typeName])\n    .filter(\n      type =>\n        type.extends &&\n        type.extends[0] &&\n        type.extends[0].id.name === 'TurboModule',\n    )[0].id.name;\n}\n\n// $FlowFixMe there's no flowtype for AST\nfunction processModule(types): NativeModuleSchemaBuilderConfig {\n  const interfaceName = findInterfaceName(types);\n\n  const moduleProperties = getModuleProperties(types, interfaceName);\n  const properties = getMethods(moduleProperties, types);\n  return {properties};\n}\n\nmodule.exports = {\n  processModule,\n};\n"]},"metadata":{},"sourceType":"script"}