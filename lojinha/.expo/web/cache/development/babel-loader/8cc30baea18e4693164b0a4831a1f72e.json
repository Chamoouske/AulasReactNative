{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorFooter-test.js\";\n\nvar React = require('react');\n\nvar LogBoxInspectorFooter = require(\"../LogBoxInspectorFooter\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('LogBoxInspectorFooter', function () {\n  it('should render two buttons for warning', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorFooter, {\n      onMinimize: function onMinimize() {},\n      onDismiss: function onDismiss() {},\n      level: \"warn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render two buttons for error', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorFooter, {\n      onMinimize: function onMinimize() {},\n      onDismiss: function onDismiss() {},\n      level: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render two buttons for fatal', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorFooter, {\n      onMinimize: function onMinimize() {},\n      onDismiss: function onDismiss() {},\n      level: \"fatal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render no buttons and a message for syntax error', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorFooter, {\n      onMinimize: function onMinimize() {},\n      onDismiss: function onDismiss() {},\n      level: \"syntax\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorFooter-test.js"],"names":["React","require","LogBoxInspectorFooter","default","render","describe","it","output","shallowRender","expect","toMatchSnapshot"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,qBAAqB,GAAGD,OAAO,4BAAP,CAAoCE,OAAlE;;AACA,IAAMC,MAAM,GAAGH,OAAO,6BAAtB;;AAEAI,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtCC,EAAAA,EAAE,CAAC,uCAAD,EAA0C,YAAM;AAChD,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,qBAAD;AACE,MAAA,UAAU,EAAE,sBAAM,CAAE,CADtB;AAEE,MAAA,SAAS,EAAE,qBAAM,CAAE,CAFrB;AAGE,MAAA,KAAK,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAQAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,qBAAD;AACE,MAAA,UAAU,EAAE,sBAAM,CAAE,CADtB;AAEE,MAAA,SAAS,EAAE,qBAAM,CAAE,CAFrB;AAGE,MAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAQAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,qBAAD;AACE,MAAA,UAAU,EAAE,sBAAM,CAAE,CADtB;AAEE,MAAA,SAAS,EAAE,qBAAM,CAAE,CAFrB;AAGE,MAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAQAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAClE,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,qBAAD;AACE,MAAA,UAAU,EAAE,sBAAM,CAAE,CADtB;AAEE,MAAA,SAAS,EAAE,qBAAM,CAAE,CAFrB;AAGE,MAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAQAC,IAAAA,MAAM,CAACF,MAAD,CAAN,CAAeG,eAAf;AACD,GAVC,CAAF;AAWD,CAhDO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxInspectorFooter = require('../LogBoxInspectorFooter').default;\nconst render = require('../../../../jest/renderer');\n\ndescribe('LogBoxInspectorFooter', () => {\n  it('should render two buttons for warning', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorFooter\n        onMinimize={() => {}}\n        onDismiss={() => {}}\n        level=\"warn\"\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render two buttons for error', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorFooter\n        onMinimize={() => {}}\n        onDismiss={() => {}}\n        level=\"error\"\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render two buttons for fatal', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorFooter\n        onMinimize={() => {}}\n        onDismiss={() => {}}\n        level=\"fatal\"\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render no buttons and a message for syntax error', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorFooter\n        onMinimize={() => {}}\n        onDismiss={() => {}}\n        level=\"syntax\"\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}