{"ast":null,"code":"\"use strict\";\n\nonmessage = function () {\n  var visibilityState;\n\n  var showVisibilityWarning = function () {\n    var hasWarned = false;\n    return function () {\n      if (hasWarned || console.warn.toString().includes('[native code]')) {\n        return;\n      }\n\n      hasWarned = true;\n      console.warn('Remote debugger is in a background tab which may cause apps to ' + 'perform slowly. Fix this by foregrounding the tab (or opening it in ' + 'a separate window).');\n    };\n  }();\n\n  var messageHandlers = {\n    executeApplicationScript: function executeApplicationScript(message, sendReply) {\n      for (var key in message.inject) {\n        self[key] = JSON.parse(message.inject[key]);\n      }\n\n      var error;\n\n      try {\n        importScripts(message.url);\n      } catch (err) {\n        error = err.message;\n      }\n\n      sendReply(null, error);\n    },\n    setDebuggerVisibility: function setDebuggerVisibility(message) {\n      visibilityState = message.visibilityState;\n    }\n  };\n  return function (message) {\n    if (visibilityState === 'hidden') {\n      showVisibilityWarning();\n    }\n\n    var object = message.data;\n\n    var sendReply = function sendReply(result, error) {\n      postMessage({\n        replyID: object.id,\n        result: result,\n        error: error\n      });\n    };\n\n    var handler = messageHandlers[object.method];\n\n    if (handler) {\n      handler(object, sendReply);\n    } else {\n      var returnValue = [[], [], [], 0];\n      var error;\n\n      try {\n        if (typeof __fbBatchedBridge === 'object') {\n          returnValue = __fbBatchedBridge[object.method].apply(null, object.arguments);\n        } else {\n          error = 'Failed to call function, __fbBatchedBridge is undefined';\n        }\n      } catch (err) {\n        error = err.message;\n      } finally {\n        sendReply(JSON.stringify(returnValue), error);\n      }\n    }\n  };\n}();","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-debugger-ui/build/ui/debuggerWorker.js"],"names":["onmessage","visibilityState","showVisibilityWarning","hasWarned","console","warn","toString","includes","messageHandlers","executeApplicationScript","message","sendReply","key","inject","self","JSON","parse","error","importScripts","url","err","setDebuggerVisibility","object","data","result","postMessage","replyID","id","handler","method","returnValue","__fbBatchedBridge","apply","arguments","stringify"],"mappings":"AAAA;;AAaAA,SAAS,GAAG,YAAY;AACtB,MAAIC,eAAJ;;AAEA,MAAIC,qBAAqB,GAAG,YAAY;AACtC,QAAIC,SAAS,GAAG,KAAhB;AACA,WAAO,YAAY;AAEjB,UAAIA,SAAS,IAAIC,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBC,QAAxB,CAAiC,eAAjC,CAAjB,EAAoE;AAClE;AACD;;AAEDJ,MAAAA,SAAS,GAAG,IAAZ;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,oEAAoE,sEAApE,GAA6I,qBAA1J;AACD,KARD;AASD,GAX2B,EAA5B;;AAaA,MAAIG,eAAe,GAAG;AACpBC,IAAAA,wBAAwB,EAAE,kCAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AACtD,WAAK,IAAIC,GAAT,IAAgBF,OAAO,CAACG,MAAxB,EAAgC;AAC9BC,QAAAA,IAAI,CAACF,GAAD,CAAJ,GAAYG,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAX,CAAZ;AACD;;AAED,UAAIK,KAAJ;;AAEA,UAAI;AACFC,QAAAA,aAAa,CAACR,OAAO,CAACS,GAAT,CAAb;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZH,QAAAA,KAAK,GAAGG,GAAG,CAACV,OAAZ;AACD;;AAEDC,MAAAA,SAAS,CAAC,IAAD,EAEPM,KAFO,CAAT;AAGD,KAjBmB;AAkBpBI,IAAAA,qBAAqB,EAAE,+BAAUX,OAAV,EAAmB;AACxCT,MAAAA,eAAe,GAAGS,OAAO,CAACT,eAA1B;AACD;AApBmB,GAAtB;AAsBA,SAAO,UAAUS,OAAV,EAAmB;AACxB,QAAIT,eAAe,KAAK,QAAxB,EAAkC;AAChCC,MAAAA,qBAAqB;AACtB;;AAED,QAAIoB,MAAM,GAAGZ,OAAO,CAACa,IAArB;;AAEA,QAAIZ,SAAS,GAAG,SAAZA,SAAY,CAAUa,MAAV,EAAkBP,KAAlB,EAAyB;AACvCQ,MAAAA,WAAW,CAAC;AACVC,QAAAA,OAAO,EAAEJ,MAAM,CAACK,EADN;AAEVH,QAAAA,MAAM,EAAEA,MAFE;AAGVP,QAAAA,KAAK,EAAEA;AAHG,OAAD,CAAX;AAKD,KAND;;AAQA,QAAIW,OAAO,GAAGpB,eAAe,CAACc,MAAM,CAACO,MAAR,CAA7B;;AAEA,QAAID,OAAJ,EAAa;AAEXA,MAAAA,OAAO,CAACN,MAAD,EAASX,SAAT,CAAP;AACD,KAHD,MAGO;AAEL,UAAImB,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAAlB;AACA,UAAIb,KAAJ;;AAEA,UAAI;AACF,YAAI,OAAOc,iBAAP,KAA6B,QAAjC,EAA2C;AACzCD,UAAAA,WAAW,GAAGC,iBAAiB,CAACT,MAAM,CAACO,MAAR,CAAjB,CAAiCG,KAAjC,CAAuC,IAAvC,EAA6CV,MAAM,CAACW,SAApD,CAAd;AACD,SAFD,MAEO;AACLhB,UAAAA,KAAK,GAAG,yDAAR;AACD;AACF,OAND,CAME,OAAOG,GAAP,EAAY;AACZH,QAAAA,KAAK,GAAGG,GAAG,CAACV,OAAZ;AACD,OARD,SAQU;AACRC,QAAAA,SAAS,CAACI,IAAI,CAACmB,SAAL,CAAeJ,WAAf,CAAD,EAA8Bb,KAA9B,CAAT;AACD;AACF;AACF,GArCD;AAsCD,CA5EW,EAAZ","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* global __fbBatchedBridge, self, importScripts, postMessage, onmessage: true */\n\n/* eslint no-unused-vars: 0 */\nonmessage = function () {\n  var visibilityState;\n\n  var showVisibilityWarning = function () {\n    var hasWarned = false;\n    return function () {\n      // Wait until `YellowBox` gets initialized before displaying the warning.\n      if (hasWarned || console.warn.toString().includes('[native code]')) {\n        return;\n      }\n\n      hasWarned = true;\n      console.warn('Remote debugger is in a background tab which may cause apps to ' + 'perform slowly. Fix this by foregrounding the tab (or opening it in ' + 'a separate window).');\n    };\n  }();\n\n  var messageHandlers = {\n    executeApplicationScript: function (message, sendReply) {\n      for (var key in message.inject) {\n        self[key] = JSON.parse(message.inject[key]);\n      }\n\n      var error;\n\n      try {\n        importScripts(message.url);\n      } catch (err) {\n        error = err.message;\n      }\n\n      sendReply(null\n      /* result */\n      , error);\n    },\n    setDebuggerVisibility: function (message) {\n      visibilityState = message.visibilityState;\n    }\n  };\n  return function (message) {\n    if (visibilityState === 'hidden') {\n      showVisibilityWarning();\n    }\n\n    var object = message.data;\n\n    var sendReply = function (result, error) {\n      postMessage({\n        replyID: object.id,\n        result: result,\n        error: error\n      });\n    };\n\n    var handler = messageHandlers[object.method];\n\n    if (handler) {\n      // Special cased handlers\n      handler(object, sendReply);\n    } else {\n      // Other methods get called on the bridge\n      var returnValue = [[], [], [], 0];\n      var error;\n\n      try {\n        if (typeof __fbBatchedBridge === 'object') {\n          returnValue = __fbBatchedBridge[object.method].apply(null, object.arguments);\n        } else {\n          error = 'Failed to call function, __fbBatchedBridge is undefined';\n        }\n      } catch (err) {\n        error = err.message;\n      } finally {\n        sendReply(JSON.stringify(returnValue), error);\n      }\n    }\n  };\n}();\n\n//# sourceMappingURL=debuggerWorker.js.map"]},"metadata":{},"sourceType":"script"}