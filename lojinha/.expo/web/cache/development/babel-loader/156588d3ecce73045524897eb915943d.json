{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_plugins_1 = require(\"../core-plugins\");\n\nvar ios_plugins_1 = require(\"../ios-plugins\");\n\nvar static_plugins_1 = require(\"../static-plugins\");\n\nvar packageName = 'expo-apple-authentication';\nvar withAppleSignInEntitlement = ios_plugins_1.createEntitlementsPlugin(setAppleSignInEntitlement, 'withAppleSignInEntitlement');\n\nfunction setAppleSignInEntitlement(config, _a) {\n  var _b;\n\n  var _ = _a['com.apple.developer.applesignin'],\n      entitlementsPlist = __rest(_a, ['com.apple.developer.applesignin']);\n\n  if ((_b = config.ios) === null || _b === void 0 ? void 0 : _b.usesAppleSignIn) {\n    return _extends(_extends({}, entitlementsPlist), {\n      'com.apple.developer.applesignin': ['Default']\n    });\n  }\n\n  return entitlementsPlist;\n}\n\nexports.withAppleAuthentication = function (config) {\n  return static_plugins_1.withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    plugin: packageName,\n    fallback: withUnversionedAppleAuthentication\n  });\n};\n\nvar withUnversionedAppleAuthentication = core_plugins_1.createRunOncePlugin(function (config) {\n  config = withAppleSignInEntitlement(config);\n  return config;\n}, packageName);\nexports.default = exports.withAppleAuthentication;","map":{"version":3,"sources":["../../../src/plugins/unversioned/expo-apple-authentication.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIA,IAAA,cAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,aAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,qBAAA;;AAEA,IAAM,WAAW,GAAG,2BAApB;AAEA,IAAM,0BAA0B,GAAG,aAAA,CAAA,wBAAA,CACjC,yBADiC,EAEjC,4BAFiC,CAAnC;;AAKA,SAAS,yBAAT,CACE,MADF,EAEE,EAFF,EAE4E;;;AAA1E,MAAqC,CAArC,GAAsC,EAAtC,CAAE,iCAAF;AAAA,MAAwC,iBAAxC,GAAwC,MAAA,CAAA,EAAA,EAAA,CAAA,iCAAA,CAAA,CAAxC;;AAEA,MAAA,CAAA,EAAA,GAAI,MAAM,CAAC,GAAX,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,eAAhB,EAAiC;AAC/B,WAAA,SAAA,SAAA,EAAA,EACK,iBADL,CAAA,EACsB;AACpB,yCAAmC,CAAC,SAAD;AADf,KADtB,CAAA;AAID;;AAED,SAAO,iBAAP;AACD;;AAEY,OAAA,CAAA,uBAAA,GAAwC,UAAA,MAAM,EAAG;AAC5D,SAAO,gBAAA,CAAA,gBAAA,CAAiB,MAAjB,EAAyB;AAC9B,IAAA,eAAe,EAAE,IADa;AAE9B,IAAA,MAAM,EAAE,WAFsB;AAI9B,IAAA,QAAQ,EAAE;AAJoB,GAAzB,CAAP;AAMD,CAPY;;AASb,IAAM,kCAAkC,GAAiB,cAAA,CAAA,mBAAA,CAAoB,UAAA,MAAM,EAAG;AACpF,EAAA,MAAM,GAAG,0BAA0B,CAAC,MAAD,CAAnC;AACA,SAAO,MAAP;AACD,CAHwD,EAGtD,WAHsD,CAAzD;AAKA,OAAA,CAAA,OAAA,GAAe,OAAA,CAAA,uBAAf","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { JSONObject } from '@expo/json-file';\n\nimport { ConfigPlugin } from '../../Plugin.types';\nimport { createRunOncePlugin } from '../core-plugins';\nimport { createEntitlementsPlugin } from '../ios-plugins';\nimport { withStaticPlugin } from '../static-plugins';\n\nconst packageName = 'expo-apple-authentication';\n\nconst withAppleSignInEntitlement = createEntitlementsPlugin(\n  setAppleSignInEntitlement,\n  'withAppleSignInEntitlement'\n);\n\nfunction setAppleSignInEntitlement(\n  config: ExpoConfig,\n  { 'com.apple.developer.applesignin': _, ...entitlementsPlist }: JSONObject\n): JSONObject {\n  if (config.ios?.usesAppleSignIn) {\n    return {\n      ...entitlementsPlist,\n      'com.apple.developer.applesignin': ['Default'],\n    };\n  }\n\n  return entitlementsPlist;\n}\n\nexport const withAppleAuthentication: ConfigPlugin = config => {\n  return withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    plugin: packageName,\n    // If the static plugin isn't found, use the unversioned one.\n    fallback: withUnversionedAppleAuthentication,\n  });\n};\n\nconst withUnversionedAppleAuthentication: ConfigPlugin = createRunOncePlugin(config => {\n  config = withAppleSignInEntitlement(config);\n  return config;\n}, packageName);\n\nexport default withAppleAuthentication;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}