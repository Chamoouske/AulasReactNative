{"ast":null,"code":"export {};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/config-plugins/build/ios/Updates.d.ts"],"names":[],"mappings":"AAqCA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport xcode from 'xcode';\nimport { ConfigPlugin } from '../Plugin.types';\nimport { ExpoPlist } from './IosConfig.types';\ndeclare type ExpoConfigUpdates = Pick<ExpoConfig, 'sdkVersion' | 'owner' | 'runtimeVersion' | 'updates' | 'slug'>;\nexport declare enum Config {\n    ENABLED = \"EXUpdatesEnabled\",\n    CHECK_ON_LAUNCH = \"EXUpdatesCheckOnLaunch\",\n    LAUNCH_WAIT_MS = \"EXUpdatesLaunchWaitMs\",\n    RUNTIME_VERSION = \"EXUpdatesRuntimeVersion\",\n    SDK_VERSION = \"EXUpdatesSDKVersion\",\n    UPDATE_URL = \"EXUpdatesURL\",\n    RELEASE_CHANNEL = \"EXUpdatesReleaseChannel\"\n}\nexport declare function getUpdateUrl(config: Pick<ExpoConfigUpdates, 'owner' | 'slug'>, username: string | null): string | null;\nexport declare function getRuntimeVersion(config: Pick<ExpoConfigUpdates, 'runtimeVersion'>): string | null;\nexport declare function getSDKVersion(config: Pick<ExpoConfigUpdates, 'sdkVersion'>): string | null;\nexport declare function getUpdatesEnabled(config: Pick<ExpoConfigUpdates, 'updates'>): boolean;\nexport declare function getUpdatesTimeout(config: Pick<ExpoConfigUpdates, 'updates'>): number;\nexport declare function getUpdatesCheckOnLaunch(config: Pick<ExpoConfigUpdates, 'updates'>): 'NEVER' | 'ALWAYS';\nexport declare const withUpdates: ConfigPlugin<{\n    expoUsername: string | null;\n}>;\nexport declare function setUpdatesConfig(config: ExpoConfigUpdates, expoPlist: ExpoPlist, username: string | null): ExpoPlist;\nexport declare function setVersionsConfig(config: ExpoConfigUpdates, expoPlist: ExpoPlist): ExpoPlist;\ninterface ShellScriptBuildPhase {\n    isa: 'PBXShellScriptBuildPhase';\n    name: string;\n    shellScript: string;\n    [key: string]: any;\n}\nexport declare function getBundleReactNativePhase(project: xcode.XcodeProject): ShellScriptBuildPhase;\nexport declare function ensureBundleReactNativePhaseContainsConfigurationScript(projectRoot: string, project: xcode.XcodeProject): xcode.XcodeProject;\nexport declare function isShellScriptBuildPhaseConfigured(projectRoot: string, project: xcode.XcodeProject): boolean;\nexport declare function isPlistConfigurationSet(expoPlist: ExpoPlist): boolean;\nexport declare function isPlistConfigurationSynced(config: ExpoConfigUpdates, expoPlist: ExpoPlist, username: string | null): boolean;\nexport declare function isPlistVersionConfigurationSynced(config: Pick<ExpoConfigUpdates, 'sdkVersion' | 'runtimeVersion'>, expoPlist: ExpoPlist): boolean;\nexport {};\n"]},"metadata":{},"sourceType":"module"}