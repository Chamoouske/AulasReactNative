{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar ALLOWED_SCALES = {\n  ios: [1, 2, 3]\n};\n\nfunction filterPlatformAssetScales(platform, scales) {\n  var whitelist = ALLOWED_SCALES[platform];\n\n  if (!whitelist) {\n    return scales;\n  }\n\n  var result = scales.filter(function (scale) {\n    return whitelist.indexOf(scale) > -1;\n  });\n\n  if (result.length === 0 && scales.length > 0) {\n    var maxScale = whitelist[whitelist.length - 1];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(scales), _step; !(_step = _iterator()).done;) {\n      var scale = _step.value;\n\n      if (scale > maxScale) {\n        result.push(scale);\n        break;\n      }\n    }\n\n    if (result.length === 0) {\n      result.push(scales[scales.length - 1]);\n    }\n  }\n\n  return result;\n}\n\nvar _default = filterPlatformAssetScales;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/bundle/filterPlatformAssetScales.js"],"names":["Object","defineProperty","exports","value","default","ALLOWED_SCALES","ios","filterPlatformAssetScales","platform","scales","whitelist","result","filter","scale","indexOf","length","maxScale","push","_default"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AASA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADgB,CAAvB;;AAIA,SAASC,yBAAT,CAAmCC,QAAnC,EAA6CC,MAA7C,EAAqD;AACnD,MAAMC,SAAS,GAAGL,cAAc,CAACG,QAAD,CAAhC;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAOD,MAAP;AACD;;AAED,MAAME,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAc,UAAAC,KAAK;AAAA,WAAIH,SAAS,CAACI,OAAV,CAAkBD,KAAlB,IAA2B,CAAC,CAAhC;AAAA,GAAnB,CAAf;;AAEA,MAAIF,MAAM,CAACI,MAAP,KAAkB,CAAlB,IAAuBN,MAAM,CAACM,MAAP,GAAgB,CAA3C,EAA8C;AAI5C,QAAMC,QAAQ,GAAGN,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAA1B;;AAEA,yDAAoBN,MAApB,wCAA4B;AAAA,UAAjBI,KAAiB;;AAC1B,UAAIA,KAAK,GAAGG,QAAZ,EAAsB;AACpBL,QAAAA,MAAM,CAACM,IAAP,CAAYJ,KAAZ;AACA;AACD;AACF;;AAGD,QAAIF,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,MAAM,CAACM,IAAP,CAAYR,MAAM,CAACA,MAAM,CAACM,MAAP,GAAgB,CAAjB,CAAlB;AACD;AACF;;AAED,SAAOJ,MAAP;AACD;;AAED,IAAIO,QAAQ,GAAGX,yBAAf;AACAL,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst ALLOWED_SCALES = {\n  ios: [1, 2, 3]\n};\n\nfunction filterPlatformAssetScales(platform, scales) {\n  const whitelist = ALLOWED_SCALES[platform];\n\n  if (!whitelist) {\n    return scales;\n  }\n\n  const result = scales.filter(scale => whitelist.indexOf(scale) > -1);\n\n  if (result.length === 0 && scales.length > 0) {\n    // No matching scale found, but there are some available. Ideally we don't\n    // want to be in this situation and should throw, but for now as a fallback\n    // let's just use the closest larger image\n    const maxScale = whitelist[whitelist.length - 1];\n\n    for (const scale of scales) {\n      if (scale > maxScale) {\n        result.push(scale);\n        break;\n      }\n    } // There is no larger scales available, use the largest we have\n\n\n    if (result.length === 0) {\n      result.push(scales[scales.length - 1]);\n    }\n  }\n\n  return result;\n}\n\nvar _default = filterPlatformAssetScales;\nexports.default = _default;\n\n//# sourceMappingURL=filterPlatformAssetScales.js.map"]},"metadata":{},"sourceType":"script"}