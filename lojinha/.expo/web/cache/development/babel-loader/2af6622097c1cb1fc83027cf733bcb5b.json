{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Dimensions/DimensionsExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport * as React from 'react';\n\nvar DimensionsSubscription = function (_React$Component) {\n  _inherits(DimensionsSubscription, _React$Component);\n\n  var _super = _createSuper(DimensionsSubscription);\n\n  function DimensionsSubscription() {\n    var _this;\n\n    _classCallCheck(this, DimensionsSubscription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dims: Dimensions.get(_this.props.dim)\n    };\n\n    _this._handleDimensionsChange = function (dimensions) {\n      _this.setState({\n        dims: dimensions[_this.props.dim]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DimensionsSubscription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Dimensions.addEventListener('change', this._handleDimensionsChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Dimensions.removeEventListener('change', this._handleDimensionsChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }\n      }, JSON.stringify(this.state.dims, null, 2));\n    }\n  }]);\n\n  return DimensionsSubscription;\n}(React.Component);\n\nexports.title = 'Dimensions';\nexports.description = 'Dimensions of the viewport';\nexports.examples = [{\n  title: 'useWindowDimensions hook',\n  render: function render() {\n    var _this2 = this;\n\n    var DimensionsViaHook = function DimensionsViaHook() {\n      var dims = useWindowDimensions();\n      return React.createElement(Text, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      }, JSON.stringify(dims, null, 2));\n    };\n\n    return React.createElement(DimensionsViaHook, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Non-component `get` API: window',\n  render: function render() {\n    return React.createElement(DimensionsSubscription, {\n      dim: \"window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Non-component `get` API: screen',\n  render: function render() {\n    return React.createElement(DimensionsSubscription, {\n      dim: \"screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Dimensions/DimensionsExample.js"],"names":["React","DimensionsSubscription","state","dims","Dimensions","get","props","dim","_handleDimensionsChange","dimensions","setState","addEventListener","removeEventListener","JSON","stringify","Component","exports","title","description","examples","render","DimensionsViaHook","useWindowDimensions"],"mappings":"AAUA;;;;;;;;;;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAEMC,sB;;;;;;;;;;;;;;;UAIJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAEC,UAAU,CAACC,GAAX,CAAe,MAAKC,KAAL,CAAWC,GAA1B;AADA,K;;UAYRC,uB,GAA0B,UAAAC,UAAU,EAAI;AACtC,YAAKC,QAAL,CAAc;AACZP,QAAAA,IAAI,EAAEM,UAAU,CAAC,MAAKH,KAAL,CAAWC,GAAZ;AADJ,OAAd;AAGD,K;;;;;;;WAZD,6BAAoB;AAClBH,MAAAA,UAAU,CAACO,gBAAX,CAA4B,QAA5B,EAAsC,KAAKH,uBAA3C;AACD;;;WAED,gCAAuB;AACrBJ,MAAAA,UAAU,CAACQ,mBAAX,CAA+B,QAA/B,EAAyC,KAAKJ,uBAA9C;AACD;;;WAQD,kBAAS;AACP,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOK,IAAI,CAACC,SAAL,CAAe,KAAKZ,KAAL,CAAWC,IAA1B,EAAgC,IAAhC,EAAsC,CAAtC,CAAP,CAAP;AACD;;;;EAxBkCH,KAAK,CAACe,S;;AA2B3CC,OAAO,CAACC,KAAR,GAAgB,YAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,4BAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,0BADT;AAEEG,EAAAA,MAFF,oBAEuB;AAAA;;AACnB,QAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,UAAMlB,IAAI,GAAGmB,mBAAmB,EAAhC;AACA,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOT,IAAI,CAACC,SAAL,CAAeX,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAP,CAAP;AACD,KAHD;;AAIA,WAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AARH,CADiB,EAWjB;AACEc,EAAAA,KAAK,EAAE,iCADT;AAEEG,EAAAA,MAFF,oBAE+B;AAC3B,WAAO,oBAAC,sBAAD;AAAwB,MAAA,GAAG,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAXiB,EAiBjB;AACEH,EAAAA,KAAK,EAAE,iCADT;AAEEG,EAAAA,MAFF,oBAE+B;AAC3B,WAAO,oBAAC,sBAAD;AAAwB,MAAA,GAAG,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAjBiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport {Dimensions, Text, useWindowDimensions} from 'react-native';\nimport * as React from 'react';\n\nclass DimensionsSubscription extends React.Component<\n  {dim: string, ...},\n  {dims: Object, ...},\n> {\n  state = {\n    dims: Dimensions.get(this.props.dim),\n  };\n\n  componentDidMount() {\n    Dimensions.addEventListener('change', this._handleDimensionsChange);\n  }\n\n  componentWillUnmount() {\n    Dimensions.removeEventListener('change', this._handleDimensionsChange);\n  }\n\n  _handleDimensionsChange = dimensions => {\n    this.setState({\n      dims: dimensions[this.props.dim],\n    });\n  };\n\n  render() {\n    return <Text>{JSON.stringify(this.state.dims, null, 2)}</Text>;\n  }\n}\n\nexports.title = 'Dimensions';\nexports.description = 'Dimensions of the viewport';\nexports.examples = [\n  {\n    title: 'useWindowDimensions hook',\n    render(): React.Node {\n      const DimensionsViaHook = () => {\n        const dims = useWindowDimensions();\n        return <Text>{JSON.stringify(dims, null, 2)}</Text>;\n      };\n      return <DimensionsViaHook />;\n    },\n  },\n  {\n    title: 'Non-component `get` API: window',\n    render(): React.Element<any> {\n      return <DimensionsSubscription dim=\"window\" />;\n    },\n  },\n  {\n    title: 'Non-component `get` API: screen',\n    render(): React.Element<any> {\n      return <DimensionsSubscription dim=\"screen\" />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}