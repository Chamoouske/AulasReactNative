{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"@babel/runtime/helpers/toArray\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs_extra_1 = require(\"fs-extra\");\n\nvar glob_1 = require(\"glob\");\n\nvar path = __importStar(require(\"path\"));\n\nvar errors_1 = require(\"../utils/errors\");\n\nvar WarningAggregator = __importStar(require(\"../utils/warnings\"));\n\nvar ignoredPaths = ['**/@(Carthage|Pods|node_modules)/**'];\n\nfunction getAppDelegate(projectRoot) {\n  var _glob_1$sync = glob_1.sync('ios/*/AppDelegate.@(m|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _glob_1$sync2 = _toArray(_glob_1$sync),\n      using = _glob_1$sync2[0],\n      extra = _glob_1$sync2.slice(1);\n\n  if (!using) {\n    throw new errors_1.UnexpectedError(\"Could not locate a valid AppDelegate at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  var isSwift = using.match(/^.*\\.(swift)$/);\n  return {\n    path: using,\n    contents: fs_extra_1.readFileSync(using, 'utf8'),\n    language: isSwift ? 'swift' : 'objc'\n  };\n}\n\nexports.getAppDelegate = getAppDelegate;\n\nfunction getSourceRoot(projectRoot) {\n  var appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexports.getSourceRoot = getSourceRoot;\n\nfunction findSchemePaths(projectRoot) {\n  return glob_1.sync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n}\n\nexports.findSchemePaths = findSchemePaths;\n\nfunction findSchemeNames(projectRoot) {\n  var schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(function (schemePath) {\n    return path.basename(schemePath).split('.')[0];\n  });\n}\n\nexports.findSchemeNames = findSchemeNames;\n\nfunction getAllXcodeProjectPaths(projectRoot) {\n  var iosFolder = 'ios';\n  var pbxprojPaths = glob_1.sync('**/*.xcodeproj', {\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).filter(function (project) {\n    return !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder;\n  }).sort(function (project) {\n    return path.dirname(project) === iosFolder ? -1 : 1;\n  }).sort();\n\n  if (!pbxprojPaths.length) {\n    throw new errors_1.UnexpectedError(\"Failed to locate the ios/*.xcodeproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return pbxprojPaths.map(function (value) {\n    return path.join(projectRoot, value);\n  });\n}\n\nexports.getAllXcodeProjectPaths = getAllXcodeProjectPaths;\n\nfunction getXcodeProjectPath(projectRoot) {\n  var _getAllXcodeProjectPa = getAllXcodeProjectPaths(projectRoot),\n      _getAllXcodeProjectPa2 = _toArray(_getAllXcodeProjectPa),\n      using = _getAllXcodeProjectPa2[0],\n      extra = _getAllXcodeProjectPa2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nexports.getXcodeProjectPath = getXcodeProjectPath;\n\nfunction getAllPBXProjectPaths(projectRoot) {\n  var projectPaths = getAllXcodeProjectPaths(projectRoot);\n  var paths = projectPaths.map(function (value) {\n    return path.join(value, 'project.pbxproj');\n  }).filter(function (value) {\n    return fs_extra_1.pathExistsSync(value);\n  });\n\n  if (!paths.length) {\n    throw new errors_1.UnexpectedError(\"Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nexports.getAllPBXProjectPaths = getAllPBXProjectPaths;\n\nfunction getPBXProjectPath(projectRoot) {\n  var _getAllPBXProjectPath = getAllPBXProjectPaths(projectRoot),\n      _getAllPBXProjectPath2 = _toArray(_getAllPBXProjectPath),\n      using = _getAllPBXProjectPath2[0],\n      extra = _getAllPBXProjectPath2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nexports.getPBXProjectPath = getPBXProjectPath;\n\nfunction getAllInfoPlistPaths(projectRoot) {\n  var paths = glob_1.sync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  if (!paths.length) {\n    throw new errors_1.UnexpectedError(\"Failed to locate Info.plist files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nexports.getAllInfoPlistPaths = getAllInfoPlistPaths;\n\nfunction getInfoPlistPath(projectRoot) {\n  var _getAllInfoPlistPaths = getAllInfoPlistPaths(projectRoot),\n      _getAllInfoPlistPaths2 = _toArray(_getAllInfoPlistPaths),\n      using = _getAllInfoPlistPaths2[0],\n      extra = _getAllInfoPlistPaths2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nexports.getInfoPlistPath = getInfoPlistPath;\n\nfunction getAllEntitlementsPaths(projectRoot) {\n  var paths = glob_1.sync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n  return paths;\n}\n\nexports.getAllEntitlementsPaths = getAllEntitlementsPaths;\n\nfunction getEntitlementsPath(projectRoot) {\n  var _getAllEntitlementsPa = getAllEntitlementsPaths(projectRoot),\n      _getAllEntitlementsPa2 = _toArray(_getAllEntitlementsPa),\n      using = _getAllEntitlementsPa2[0],\n      extra = _getAllEntitlementsPa2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'entitlements',\n      fileName: '*.entitlements',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using !== null && using !== void 0 ? using : null;\n}\n\nexports.getEntitlementsPath = getEntitlementsPath;\n\nfunction getSupportingPath(projectRoot) {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexports.getSupportingPath = getSupportingPath;\n\nfunction getExpoPlistPath(projectRoot) {\n  var supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nexports.getExpoPlistPath = getExpoPlistPath;\n\nfunction warnMultipleFiles(_ref) {\n  var tag = _ref.tag,\n      fileName = _ref.fileName,\n      projectRoot = _ref.projectRoot,\n      using = _ref.using,\n      extra = _ref.extra;\n  var usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  var extraPaths = projectRoot ? extra.map(function (v) {\n    return path.relative(projectRoot, v);\n  }) : extra;\n  WarningAggregator.addWarningIOS(\"paths-\" + tag, \"Found multiple \" + fileName + \" file paths, using \\\"\" + usingPath + \"\\\". Ignored paths: \" + JSON.stringify(extraPaths));\n}","map":{"version":3,"sources":["../../src/ios/Paths.ts"],"names":[],"mappings":"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","sourcesContent":["import { pathExistsSync, readFileSync } from 'fs-extra';\nimport { sync as globSync } from 'glob';\nimport * as path from 'path';\n\nimport { UnexpectedError } from '../utils/errors';\nimport * as WarningAggregator from '../utils/warnings';\n\nconst ignoredPaths = ['**/@(Carthage|Pods|node_modules)/**'];\n\ninterface ProjectFile<L extends string = string> {\n  path: string;\n  language: L;\n  contents: string;\n}\n\nexport type AppDelegateProjectFile = ProjectFile<'objc' | 'swift'>;\n\nexport function getAppDelegate(projectRoot: string): AppDelegateProjectFile {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.@(m|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  const isSwift = using.match(/^.*\\.(swift)$/);\n  return {\n    path: using,\n    contents: readFileSync(using, 'utf8'),\n    language: isSwift ? 'swift' : 'objc',\n  };\n}\n\nexport function getSourceRoot(projectRoot: string): string {\n  const appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexport function findSchemePaths(projectRoot: string): string[] {\n  return globSync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n}\n\nexport function findSchemeNames(projectRoot: string): string[] {\n  const schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(schemePath => path.basename(schemePath).split('.')[0]);\n}\n\nexport function getAllXcodeProjectPaths(projectRoot: string): string[] {\n  const iosFolder = 'ios';\n  const pbxprojPaths = globSync('**/*.xcodeproj', { cwd: projectRoot, ignore: ignoredPaths })\n    .filter(project => !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder)\n    .sort(project => (path.dirname(project) === iosFolder ? -1 : 1))\n    // sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n    .sort();\n\n  if (!pbxprojPaths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return pbxprojPaths.map(value => path.join(projectRoot, value));\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getXcodeProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllXcodeProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllPBXProjectPaths(projectRoot: string): string[] {\n  const projectPaths = getAllXcodeProjectPaths(projectRoot);\n  const paths = projectPaths\n    .map(value => path.join(value, 'project.pbxproj'))\n    .filter(value => pathExistsSync(value));\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getPBXProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllPBXProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllInfoPlistPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  }).sort(\n    // longer name means more suffixes, we want the shortest possible one to be first.\n    (a, b) => a.length - b.length\n  );\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate Info.plist files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getInfoPlistPath(projectRoot: string): string {\n  const [using, ...extra] = getAllInfoPlistPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllEntitlementsPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n  return paths;\n}\n\n/**\n * Get the entitlements file path if it exists.\n *\n * @param projectRoot\n */\nexport function getEntitlementsPath(projectRoot: string): string | null {\n  const [using, ...extra] = getAllEntitlementsPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'entitlements',\n      fileName: '*.entitlements',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using ?? null;\n}\n\nexport function getSupportingPath(projectRoot: string): string {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexport function getExpoPlistPath(projectRoot: string): string {\n  const supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles({\n  tag,\n  fileName,\n  projectRoot,\n  using,\n  extra,\n}: {\n  tag: string;\n  fileName: string;\n  projectRoot?: string;\n  using: string;\n  extra: string[];\n}) {\n  const usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  const extraPaths = projectRoot ? extra.map(v => path.relative(projectRoot, v)) : extra;\n  WarningAggregator.addWarningIOS(\n    `paths-${tag}`,\n    `Found multiple ${fileName} file paths, using \"${usingPath}\". Ignored paths: ${JSON.stringify(\n      extraPaths\n    )}`\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}