{"ast":null,"code":"'use strict';","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/ImageProps.js"],"names":[],"mappings":"AAUA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {SyntheticEvent, LayoutEvent} from '../Types/CoreEventTypes';\nimport type {EdgeInsetsProp} from '../StyleSheet/EdgeInsetsPropType';\nimport type {ImageSource} from './ImageSource';\nimport type {ViewStyleProp, ImageStyleProp} from '../StyleSheet/StyleSheet';\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\n\nexport type ImageLoadEvent = SyntheticEvent<\n  $ReadOnly<{|\n    source: $ReadOnly<{|\n      width: number,\n      height: number,\n      url: string,\n    |}>,\n    uri?: string, // Only on Android\n  |}>,\n>;\n\ntype IOSImageProps = $ReadOnly<{|\n  /**\n   * A static image to display while loading the image source.\n   *\n   * See https://reactnative.dev/docs/image.html#defaultsource\n   */\n  defaultSource?: ?ImageSource,\n  /**\n   * Invoked when a partial load of the image is complete.\n   *\n   * See https://reactnative.dev/docs/image.html#onpartialload\n   */\n  onPartialLoad?: ?() => void,\n  /**\n   * Invoked on download progress with `{nativeEvent: {loaded, total}}`.\n   *\n   * See https://reactnative.dev/docs/image.html#onprogress\n   */\n  onProgress?: ?(\n    event: SyntheticEvent<$ReadOnly<{|loaded: number, total: number|}>>,\n  ) => void,\n|}>;\n\ntype AndroidImageProps = $ReadOnly<{|\n  loadingIndicatorSource?: ?(number | $ReadOnly<{|uri: string|}>),\n  progressiveRenderingEnabled?: ?boolean,\n  fadeDuration?: ?number,\n|}>;\n\nexport type ImageProps = {|\n  ...$Diff<ViewProps, $ReadOnly<{|style: ?ViewStyleProp|}>>,\n  ...IOSImageProps,\n  ...AndroidImageProps,\n\n  /**\n   * When true, indicates the image is an accessibility element.\n   *\n   * See https://reactnative.dev/docs/image.html#accessible\n   */\n  accessible?: ?boolean,\n\n  /**\n   * Internal prop to set an \"Analytics Tag\" that can will be set on the Image\n   */\n  internal_analyticTag?: ?string,\n\n  /**\n   * The text that's read by the screen reader when the user interacts with\n   * the image.\n   *\n   * See https://reactnative.dev/docs/image.html#accessibilitylabel\n   */\n  accessibilityLabel?: ?Stringish,\n\n  /**\n   * blurRadius: the blur radius of the blur filter added to the image\n   *\n   * See https://reactnative.dev/docs/image.html#blurradius\n   */\n  blurRadius?: ?number,\n\n  /**\n   * See https://reactnative.dev/docs/image.html#capinsets\n   */\n  capInsets?: ?EdgeInsetsProp,\n\n  /**\n   * Invoked on load error with `{nativeEvent: {error}}`.\n   *\n   * See https://reactnative.dev/docs/image.html#onerror\n   */\n  onError?: ?(\n    event: SyntheticEvent<\n      $ReadOnly<{|\n        error: string,\n      |}>,\n    >,\n  ) => void,\n\n  /**\n   * Invoked on mount and layout changes with\n   * `{nativeEvent: {layout: {x, y, width, height}}}`.\n   *\n   * See https://reactnative.dev/docs/image.html#onlayout\n   */\n\n  onLayout?: ?(event: LayoutEvent) => mixed,\n\n  /**\n   * Invoked when load completes successfully.\n   *\n   * See https://reactnative.dev/docs/image.html#onload\n   */\n  onLoad?: ?(event: ImageLoadEvent) => void,\n\n  /**\n   * Invoked when load either succeeds or fails.\n   *\n   * See https://reactnative.dev/docs/image.html#onloadend\n   */\n  onLoadEnd?: ?() => void,\n\n  /**\n   * Invoked on load start.\n   *\n   * See https://reactnative.dev/docs/image.html#onloadstart\n   */\n  onLoadStart?: ?() => void,\n\n  /**\n   * See https://reactnative.dev/docs/image.html#resizemethod\n   */\n  resizeMethod?: ?('auto' | 'resize' | 'scale'),\n\n  /**\n   * The image source (either a remote URL or a local file resource).\n   *\n   * See https://reactnative.dev/docs/image.html#source\n   */\n  source?: ?ImageSource,\n\n  /**\n   * See https://reactnative.dev/docs/image.html#style\n   */\n  style?: ?ImageStyleProp,\n\n  /**\n   * Determines how to resize the image when the frame doesn't match the raw\n   * image dimensions.\n   *\n   * See https://reactnative.dev/docs/image.html#resizemode\n   */\n  resizeMode?: ?('cover' | 'contain' | 'stretch' | 'repeat' | 'center'),\n\n  /**\n   * A unique identifier for this element to be used in UI Automation\n   * testing scripts.\n   *\n   * See https://reactnative.dev/docs/image.html#testid\n   */\n  testID?: ?string,\n\n  src?: empty,\n  children?: empty,\n|};\n"]},"metadata":{},"sourceType":"script"}