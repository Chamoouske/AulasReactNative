{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Paths_1 = require(\"./Paths\");\n\nfunction getProjectStringsXMLPathAsync(projectRoot) {\n  var _ref,\n      kind,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function getProjectStringsXMLPathAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, kind = _ref.kind;\n          return _context.abrupt(\"return\", Paths_1.getResourceXMLPathAsync(projectRoot, {\n            kind: kind,\n            name: 'strings'\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.getProjectStringsXMLPathAsync = getProjectStringsXMLPathAsync;\n\nfunction setStringItem(itemToAdd, stringFileContentsJSON) {\n  var _a;\n\n  if ((_a = stringFileContentsJSON === null || stringFileContentsJSON === void 0 ? void 0 : stringFileContentsJSON.resources) === null || _a === void 0 ? void 0 : _a.string) {\n    var stringNameExists = stringFileContentsJSON.resources.string.filter(function (e) {\n      return e.$.name === itemToAdd[0].$.name;\n    })[0];\n\n    if (stringNameExists) {\n      stringNameExists._ = itemToAdd[0]._;\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(itemToAdd);\n    }\n  } else {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      stringFileContentsJSON.resources = {};\n    }\n\n    stringFileContentsJSON.resources.string = itemToAdd;\n  }\n\n  return stringFileContentsJSON;\n}\n\nexports.setStringItem = setStringItem;\n\nfunction removeStringItem(named, stringFileContentsJSON) {\n  var _a;\n\n  if ((_a = stringFileContentsJSON === null || stringFileContentsJSON === void 0 ? void 0 : stringFileContentsJSON.resources) === null || _a === void 0 ? void 0 : _a.string) {\n    var stringNameExists = stringFileContentsJSON.resources.string.findIndex(function (e) {\n      return e.$.name === named;\n    });\n\n    if (stringNameExists > -1) {\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n\n  return stringFileContentsJSON;\n}\n\nexports.removeStringItem = removeStringItem;","map":{"version":3,"sources":["../../src/android/Strings.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,WAAA;;AAGO,SAAe,6BAAf,CACL,WADK;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yEAE+B,EAF/B,EAEH,IAFG,QAEH,IAFG;AAAA,2CAIE,OAAA,CAAA,uBAAA,CAAwB,WAAxB,EAAqC;AAAE,YAAA,IAAI,EAAJ,IAAF;AAAQ,YAAA,IAAI,EAAE;AAAd,WAArC,CAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP,OAAA,CAAA,6BAAA,GAAA,6BAAA;;AAOA,SAAgB,aAAhB,CACE,SADF,EAEE,sBAFF,EAEqC;;;AAEnC,MAAA,CAAA,EAAA,GAAI,sBAAsB,KAAA,IAAtB,IAAA,sBAAsB,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAA,sBAAsB,CAAE,SAA5B,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,KAAA,CAArC,GAAqC,EAAA,CAAE,MAAvC,EAA+C;AAC7C,QAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,CAAwC,MAAxC,CACvB,UAAC,CAAD;AAAA,aAAwB,CAAC,CAAC,CAAF,CAAI,IAAJ,KAAa,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,CAAe,IAApD;AAAA,KADuB,EAEvB,CAFuB,CAAzB;;AAGA,QAAI,gBAAJ,EAAsB;AAEpB,MAAA,gBAAgB,CAAC,CAAjB,GAAqB,SAAS,CAAC,CAAD,CAAT,CAAa,CAAlC;AACD,KAHD,MAGO;AACL,MAAA,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,GAA0C,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,CAAwC,MAAxC,CACxC,SADwC,CAA1C;AAGD;AACF,GAZD,MAYO;AACL,QAAI,CAAC,sBAAsB,CAAC,SAAxB,IAAqC,OAAO,sBAAsB,CAAC,SAA9B,KAA4C,QAArF,EAA+F;AAE7F,MAAA,sBAAsB,CAAC,SAAvB,GAAmC,EAAnC;AACD;;AACD,IAAA,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,GAA0C,SAA1C;AACD;;AACD,SAAO,sBAAP;AACD;;AAxBD,OAAA,CAAA,aAAA,GAAA,aAAA;;AA0BA,SAAgB,gBAAhB,CAAiC,KAAjC,EAAgD,sBAAhD,EAAmF;;;AACjF,MAAA,CAAA,EAAA,GAAI,sBAAsB,KAAA,IAAtB,IAAA,sBAAsB,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAA,sBAAsB,CAAE,SAA5B,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,KAAA,CAArC,GAAqC,EAAA,CAAE,MAAvC,EAA+C;AAC7C,QAAM,gBAAgB,GAAG,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,CAAwC,SAAxC,CACvB,UAAC,CAAD;AAAA,aAAwB,CAAC,CAAC,CAAF,CAAI,IAAJ,KAAa,KAArC;AAAA,KADuB,CAAzB;;AAGA,QAAI,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AAEzB,MAAA,sBAAsB,CAAC,SAAvB,CAAiC,MAAjC,CAAwC,MAAxC,CAA+C,gBAA/C,EAAiE,CAAjE;AACD;AACF;;AACD,SAAO,sBAAP;AACD;;AAXD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport { ResourceItemXML, ResourceKind, ResourceXML } from './Resources';\n\nexport async function getProjectStringsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'strings' });\n}\n\nexport function setStringItem(\n  itemToAdd: ResourceItemXML[],\n  stringFileContentsJSON: ResourceXML\n): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.filter(\n      (e: ResourceItemXML) => e.$.name === itemToAdd[0].$.name\n    )[0];\n    if (stringNameExists) {\n      // replace the previous value\n      stringNameExists._ = itemToAdd[0]._;\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(\n        itemToAdd\n      );\n    }\n  } else {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: ResourceXML): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}