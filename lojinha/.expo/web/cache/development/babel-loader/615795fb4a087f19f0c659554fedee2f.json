{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityAndroidExample.android.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar importantForAccessibilityValues = ['auto', 'yes', 'no', 'no-hide-descendants'];\n\nvar AccessibilityAndroidExample = function (_React$Component) {\n  _inherits(AccessibilityAndroidExample, _React$Component);\n\n  var _super = _createSuper(AccessibilityAndroidExample);\n\n  function AccessibilityAndroidExample() {\n    var _this;\n\n    _classCallCheck(this, AccessibilityAndroidExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      count: 0,\n      backgroundImportantForAcc: 0,\n      forgroundImportantForAcc: 0\n    };\n\n    _this._addOne = function () {\n      _this.setState({\n        count: ++_this.state.count\n      });\n    };\n\n    _this._changeBackgroundImportantForAcc = function () {\n      _this.setState({\n        backgroundImportantForAcc: (_this.state.backgroundImportantForAcc + 1) % 4\n      });\n    };\n\n    _this._changeForgroundImportantForAcc = function () {\n      _this.setState({\n        forgroundImportantForAcc: (_this.state.forgroundImportantForAcc + 1) % 4\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AccessibilityAndroidExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: 'Accessibility Android APIs',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"LiveRegion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this._addOne,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.embedded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, \"Click me\"))), React.createElement(Text, {\n        accessibilityLiveRegion: \"polite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Clicked \", this.state.count, \" times\")), React.createElement(RNTesterBlock, {\n        title: \"Overlapping views and importantForAccessibility property\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        style: {\n          position: 'absolute',\n          left: 10,\n          top: 10,\n          right: 10,\n          height: 100,\n          backgroundColor: 'green'\n        },\n        accessible: true,\n        accessibilityLabel: \"First layout\",\n        importantForAccessibility: importantForAccessibilityValues[this.state.backgroundImportantForAcc],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Hello\"))), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          left: 10,\n          top: 25,\n          right: 10,\n          height: 110,\n          backgroundColor: 'yellow',\n          opacity: 0.5\n        },\n        accessible: true,\n        accessibilityLabel: \"Second layout\",\n        importantForAccessibility: importantForAccessibilityValues[this.state.forgroundImportantForAcc],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, \"world\")))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this._changeBackgroundImportantForAcc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.embedded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, \"Change importantForAccessibility for background layout.\"))), React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"Background layout importantForAccessibility\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, importantForAccessibilityValues[this.state.backgroundImportantForAcc])), React.createElement(TouchableWithoutFeedback, {\n        onPress: this._changeForgroundImportantForAcc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.embedded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, \"Change importantForAccessibility for forground layout.\"))), React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, \"Forground layout importantForAccessibility\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, importantForAccessibilityValues[this.state.forgroundImportantForAcc]))));\n    }\n  }]);\n\n  return AccessibilityAndroidExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  embedded: {\n    backgroundColor: 'yellow',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 10,\n    height: 150\n  }\n});\nexports.title = 'AccessibilityAndroid';\nexports.description = 'Android specific Accessibility APIs.';\nexports.examples = [{\n  title: 'Accessibility elements',\n  render: function render() {\n    return React.createElement(AccessibilityAndroidExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityAndroidExample.android.js"],"names":["React","require","RNTesterBlock","RNTesterPage","importantForAccessibilityValues","AccessibilityAndroidExample","state","count","backgroundImportantForAcc","forgroundImportantForAcc","_addOne","setState","_changeBackgroundImportantForAcc","_changeForgroundImportantForAcc","styles","embedded","container","position","left","top","right","height","backgroundColor","fontSize","opacity","Component","StyleSheet","create","padding","flex","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  StyleSheet,\n  Text,\n  View,\n  TouchableWithoutFeedback,\n} = require('react-native');\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\n\nconst importantForAccessibilityValues = [\n  'auto',\n  'yes',\n  'no',\n  'no-hide-descendants',\n];\n\nclass AccessibilityAndroidExample extends React.Component {\n  state = {\n    count: 0,\n    backgroundImportantForAcc: 0,\n    forgroundImportantForAcc: 0,\n  };\n\n  _addOne = () => {\n    this.setState({\n      count: ++this.state.count,\n    });\n  };\n\n  _changeBackgroundImportantForAcc = () => {\n    this.setState({\n      backgroundImportantForAcc: (this.state.backgroundImportantForAcc + 1) % 4,\n    });\n  };\n\n  _changeForgroundImportantForAcc = () => {\n    this.setState({\n      forgroundImportantForAcc: (this.state.forgroundImportantForAcc + 1) % 4,\n    });\n  };\n\n  render() {\n    return (\n      <RNTesterPage title={'Accessibility Android APIs'}>\n        <RNTesterBlock title=\"LiveRegion\">\n          <TouchableWithoutFeedback onPress={this._addOne}>\n            <View style={styles.embedded}>\n              <Text>Click me</Text>\n            </View>\n          </TouchableWithoutFeedback>\n          <Text accessibilityLiveRegion=\"polite\">\n            Clicked {this.state.count} times\n          </Text>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Overlapping views and importantForAccessibility property\">\n          <View style={styles.container}>\n            <TouchableWithoutFeedback\n              style={{\n                position: 'absolute',\n                left: 10,\n                top: 10,\n                right: 10,\n                height: 100,\n                backgroundColor: 'green',\n              }}\n              accessible={true}\n              accessibilityLabel=\"First layout\"\n              importantForAccessibility={\n                importantForAccessibilityValues[\n                  this.state.backgroundImportantForAcc\n                ]\n              }>\n              <View accessible={true}>\n                <Text style={{fontSize: 25}}>Hello</Text>\n              </View>\n            </TouchableWithoutFeedback>\n            <View\n              style={{\n                position: 'absolute',\n                left: 10,\n                top: 25,\n                right: 10,\n                height: 110,\n                backgroundColor: 'yellow',\n                opacity: 0.5,\n              }}\n              accessible={true}\n              accessibilityLabel=\"Second layout\"\n              importantForAccessibility={\n                importantForAccessibilityValues[\n                  this.state.forgroundImportantForAcc\n                ]\n              }>\n              <View accessible={true}>\n                <Text style={{fontSize: 20}}>world</Text>\n              </View>\n            </View>\n          </View>\n          <TouchableWithoutFeedback\n            onPress={this._changeBackgroundImportantForAcc}>\n            <View style={styles.embedded}>\n              <Text>\n                Change importantForAccessibility for background layout.\n              </Text>\n            </View>\n          </TouchableWithoutFeedback>\n          <View accessible={true}>\n            <Text>Background layout importantForAccessibility</Text>\n            <Text>\n              {\n                importantForAccessibilityValues[\n                  this.state.backgroundImportantForAcc\n                ]\n              }\n            </Text>\n          </View>\n          <TouchableWithoutFeedback\n            onPress={this._changeForgroundImportantForAcc}>\n            <View style={styles.embedded}>\n              <Text>\n                Change importantForAccessibility for forground layout.\n              </Text>\n            </View>\n          </TouchableWithoutFeedback>\n          <View accessible={true}>\n            <Text>Forground layout importantForAccessibility</Text>\n            <Text>\n              {\n                importantForAccessibilityValues[\n                  this.state.forgroundImportantForAcc\n                ]\n              }\n            </Text>\n          </View>\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  embedded: {\n    backgroundColor: 'yellow',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 10,\n    height: 150,\n  },\n});\n\nexports.title = 'AccessibilityAndroid';\nexports.description = 'Android specific Accessibility APIs.';\nexports.examples = [\n  {\n    title: 'Accessibility elements',\n    render(): React.Element<typeof AccessibilityAndroidExample> {\n      return <AccessibilityAndroidExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}