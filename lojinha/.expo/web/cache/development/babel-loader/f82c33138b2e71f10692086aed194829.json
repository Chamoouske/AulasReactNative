{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { PermissionResponse, PermissionType } from './Permissions.types';\n/**\n * Get or ask permission for protected functionality within the app.\n * It returns the permission response after fetching or asking it.\n * The hook fetches the permissions when rendered, by default.\n * To ask the user permission, use the `askPermission` callback or `ask` option.\n *\n * @see https://docs.expo.io/versions/latest/sdk/permissions/\n * @example\n * ```tsx\n * const [permission, askPermission, getPermission] = usePermissions(Permissions.CAMERA);\n *\n * return permission?.granted\n *   ? <Camera ... />\n *   : <Button onPress={askPermission} />;\n * ```\n */\nexport declare function usePermissions(type: PermissionType | PermissionType[], options?: PermissionsOptions): [PermissionResponse | undefined, () => Promise<void>, () => Promise<void>];\nexport interface PermissionsOptions {\n    /** If it should ask the permissions when mounted, defaults to `false` */\n    ask?: boolean;\n    /** If it should fetch information about the permissions when mounted, defaults to `true` */\n    get?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}