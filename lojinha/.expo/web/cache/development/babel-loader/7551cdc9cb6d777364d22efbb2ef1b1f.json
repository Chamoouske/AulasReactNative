{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["export declare class UnexpectedError extends Error {\n    readonly name = \"UnexpectedError\";\n    constructor(message: string);\n}\nexport declare type PluginErrorCode = 'INVALID_PLUGIN_TYPE';\n/**\n * Based on `JsonFileError` from `@expo/json-file`\n */\nexport declare class PluginError extends Error {\n    code: PluginErrorCode;\n    cause?: Error | undefined;\n    readonly name = \"PluginError\";\n    readonly isPluginError = true;\n    constructor(message: string, code: PluginErrorCode, cause?: Error | undefined);\n}\nexport declare function assert(value: any, message?: string | Error): asserts value;\n"]},"metadata":{},"sourceType":"script"}