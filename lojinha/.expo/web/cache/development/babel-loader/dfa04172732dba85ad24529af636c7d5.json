{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/StatusBar/StatusBarExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StatusBar = require(\"react-native-web/dist/exports/StatusBar\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Modal = require(\"react-native-web/dist/exports/Modal\").default;\n\nvar colors = ['#ff0000', '#00ff00', '#0000ff', 'rgba(0, 0, 0, 0.4)'];\nvar barStyles = ['default', 'light-content'];\nvar showHideTransitions = ['fade', 'slide'];\n\nfunction getValue(values, index) {\n  return values[index % values.length];\n}\n\nvar StatusBarHiddenExample = function (_React$Component) {\n  _inherits(StatusBarHiddenExample, _React$Component);\n\n  var _super = _createSuper(StatusBarHiddenExample);\n\n  function StatusBarHiddenExample() {\n    var _this;\n\n    _classCallCheck(this, StatusBarHiddenExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      animated: true,\n      hidden: false,\n      showHideTransition: getValue(showHideTransitions, 0)\n    };\n    _this._showHideTransitionIndex = 0;\n\n    _this._onChangeAnimated = function () {\n      _this.setState({\n        animated: !_this.state.animated\n      });\n    };\n\n    _this._onChangeHidden = function () {\n      _this.setState({\n        hidden: !_this.state.hidden\n      });\n    };\n\n    _this._onChangeTransition = function () {\n      _this._showHideTransitionIndex++;\n\n      _this.setState({\n        showHideTransition: getValue(showHideTransitions, _this._showHideTransitionIndex)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StatusBarHiddenExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        hidden: this.state.hidden,\n        showHideTransition: this.state.showHideTransition,\n        animated: this.state.animated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeHidden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, \"hidden: \", this.state.hidden ? 'true' : 'false'))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeAnimated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"animated (ios only): \", this.state.animated ? 'true' : 'false'))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeTransition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"showHideTransition (ios only): '\", getValue(showHideTransitions, this._showHideTransitionIndex), \"'\"))), React.createElement(ModalExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return StatusBarHiddenExample;\n}(React.Component);\n\nvar StatusBarStyleExample = function (_React$Component2) {\n  _inherits(StatusBarStyleExample, _React$Component2);\n\n  var _super2 = _createSuper(StatusBarStyleExample);\n\n  function StatusBarStyleExample() {\n    var _this2;\n\n    _classCallCheck(this, StatusBarStyleExample);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _this2._barStyleIndex = 0;\n\n    _this2._onChangeBarStyle = function () {\n      _this2._barStyleIndex++;\n\n      _this2.setState({\n        barStyle: getValue(barStyles, _this2._barStyleIndex)\n      });\n    };\n\n    _this2._onChangeAnimated = function () {\n      _this2.setState({\n        animated: !_this2.state.animated\n      });\n    };\n\n    _this2.state = {\n      animated: true,\n      barStyle: getValue(barStyles, _this2._barStyleIndex)\n    };\n    return _this2;\n  }\n\n  _createClass(StatusBarStyleExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        animated: this.state.animated,\n        barStyle: this.state.barStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeBarStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, \"style: '\", getValue(barStyles, this._barStyleIndex), \"'\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeAnimated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, \"animated: \", this.state.animated ? 'true' : 'false'))));\n    }\n  }]);\n\n  return StatusBarStyleExample;\n}(React.Component);\n\nvar StatusBarNetworkActivityExample = function (_React$Component3) {\n  _inherits(StatusBarNetworkActivityExample, _React$Component3);\n\n  var _super3 = _createSuper(StatusBarNetworkActivityExample);\n\n  function StatusBarNetworkActivityExample() {\n    var _this3;\n\n    _classCallCheck(this, StatusBarNetworkActivityExample);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    _this3.state = {\n      networkActivityIndicatorVisible: false\n    };\n\n    _this3._onChangeNetworkIndicatorVisible = function () {\n      _this3.setState({\n        networkActivityIndicatorVisible: !_this3.state.networkActivityIndicatorVisible\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(StatusBarNetworkActivityExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        networkActivityIndicatorVisible: this.state.networkActivityIndicatorVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeNetworkIndicatorVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, \"networkActivityIndicatorVisible:\", this.state.networkActivityIndicatorVisible ? 'true' : 'false'))));\n    }\n  }]);\n\n  return StatusBarNetworkActivityExample;\n}(React.Component);\n\nvar StatusBarBackgroundColorExample = function (_React$Component4) {\n  _inherits(StatusBarBackgroundColorExample, _React$Component4);\n\n  var _super4 = _createSuper(StatusBarBackgroundColorExample);\n\n  function StatusBarBackgroundColorExample() {\n    var _this4;\n\n    _classCallCheck(this, StatusBarBackgroundColorExample);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this4 = _super4.call.apply(_super4, [this].concat(args));\n    _this4.state = {\n      animated: true,\n      backgroundColor: getValue(colors, 0)\n    };\n    _this4._colorIndex = 0;\n\n    _this4._onChangeBackgroundColor = function () {\n      _this4._colorIndex++;\n\n      _this4.setState({\n        backgroundColor: getValue(colors, _this4._colorIndex)\n      });\n    };\n\n    _this4._onChangeAnimated = function () {\n      _this4.setState({\n        animated: !_this4.state.animated\n      });\n    };\n\n    return _this4;\n  }\n\n  _createClass(StatusBarBackgroundColorExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        backgroundColor: this.state.backgroundColor,\n        animated: this.state.animated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeBackgroundColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, \"backgroundColor: '\", getValue(colors, this._colorIndex), \"'\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeAnimated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, \"animated: \", this.state.animated ? 'true' : 'false'))));\n    }\n  }]);\n\n  return StatusBarBackgroundColorExample;\n}(React.Component);\n\nvar StatusBarTranslucentExample = function (_React$Component5) {\n  _inherits(StatusBarTranslucentExample, _React$Component5);\n\n  var _super5 = _createSuper(StatusBarTranslucentExample);\n\n  function StatusBarTranslucentExample() {\n    var _this5;\n\n    _classCallCheck(this, StatusBarTranslucentExample);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this5 = _super5.call.apply(_super5, [this].concat(args));\n    _this5.state = {\n      translucent: false\n    };\n\n    _this5._onChangeTranslucent = function () {\n      _this5.setState({\n        translucent: !_this5.state.translucent\n      });\n    };\n\n    return _this5;\n  }\n\n  _createClass(StatusBarTranslucentExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        translucent: this.state.translucent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeTranslucent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, \"translucent: \", this.state.translucent ? 'true' : 'false'))));\n    }\n  }]);\n\n  return StatusBarTranslucentExample;\n}(React.Component);\n\nvar StatusBarStaticIOSExample = function (_React$Component6) {\n  _inherits(StatusBarStaticIOSExample, _React$Component6);\n\n  var _super6 = _createSuper(StatusBarStaticIOSExample);\n\n  function StatusBarStaticIOSExample() {\n    _classCallCheck(this, StatusBarStaticIOSExample);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(StatusBarStaticIOSExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setHidden(true, 'slide');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, \"setHidden(true, 'slide')\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setHidden(false, 'fade');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, \"setHidden(false, 'fade')\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setBarStyle('default', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, \"setBarStyle('default', true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setBarStyle('light-content', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, \"setBarStyle('light-content', true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setNetworkActivityIndicatorVisible(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      }, \"setNetworkActivityIndicatorVisible(true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setNetworkActivityIndicatorVisible(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, \"setNetworkActivityIndicatorVisible(false)\"))));\n    }\n  }]);\n\n  return StatusBarStaticIOSExample;\n}(React.Component);\n\nvar StatusBarStaticAndroidExample = function (_React$Component7) {\n  _inherits(StatusBarStaticAndroidExample, _React$Component7);\n\n  var _super7 = _createSuper(StatusBarStaticAndroidExample);\n\n  function StatusBarStaticAndroidExample() {\n    _classCallCheck(this, StatusBarStaticAndroidExample);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(StatusBarStaticAndroidExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setHidden(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }\n      }, \"setHidden(true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setHidden(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, \"setHidden(false)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setBackgroundColor('#ff00ff', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }\n      }, \"setBackgroundColor('#ff00ff', true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setBackgroundColor('#00ff00', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }\n      }, \"setBackgroundColor('#00ff00', true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setTranslucent(true);\n          StatusBar.setBackgroundColor('rgba(0, 0, 0, 0.4)', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, \"setTranslucent(true) and setBackgroundColor('rgba(0, 0, 0, 0.4)', true)\"))), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: function onPress() {\n          StatusBar.setTranslucent(false);\n          StatusBar.setBackgroundColor('black', true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }, \"setTranslucent(false) and setBackgroundColor('black', true)\"))));\n    }\n  }]);\n\n  return StatusBarStaticAndroidExample;\n}(React.Component);\n\nvar ModalExample = function (_React$Component8) {\n  _inherits(ModalExample, _React$Component8);\n\n  var _super8 = _createSuper(ModalExample);\n\n  function ModalExample() {\n    var _this6;\n\n    _classCallCheck(this, ModalExample);\n\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    _this6 = _super8.call.apply(_super8, [this].concat(args));\n    _this6.state = {\n      modalVisible: false\n    };\n\n    _this6._onChangeModalVisible = function () {\n      _this6.setState({\n        modalVisible: !_this6.state.modalVisible\n      });\n    };\n\n    return _this6;\n  }\n\n  _createClass(ModalExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._onChangeModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }, \"modal visible: \", this.state.hidden ? 'true' : 'false'))), React.createElement(Modal, {\n        visible: this.state.modalVisible,\n        transparent: true,\n        onRequestClose: this._onChangeModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.innerContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }\n      }, \"This modal was presented!\"), React.createElement(TouchableHighlight, {\n        onPress: this._onChangeModalVisible,\n        style: styles.modalButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 19\n        }\n      }, \"Close\")))))));\n    }\n  }]);\n\n  return ModalExample;\n}(React.Component);\n\nexports.framework = 'React';\nexports.title = '<StatusBar>';\nexports.description = 'Component for controlling the status bar';\nexports.examples = [{\n  title: 'StatusBar hidden',\n  render: function render() {\n    return React.createElement(StatusBarHiddenExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'StatusBar style',\n  render: function render() {\n    return React.createElement(StatusBarStyleExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'ios'\n}, {\n  title: 'StatusBar network activity indicator',\n  render: function render() {\n    return React.createElement(StatusBarNetworkActivityExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'ios'\n}, {\n  title: 'StatusBar background color',\n  render: function render() {\n    return React.createElement(StatusBarBackgroundColorExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'android'\n}, {\n  title: 'StatusBar translucent',\n  render: function render() {\n    return React.createElement(StatusBarTranslucentExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'android'\n}, {\n  title: 'StatusBar static API',\n  render: function render() {\n    return React.createElement(StatusBarStaticIOSExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'ios'\n}, {\n  title: 'StatusBar static API',\n  render: function render() {\n    return React.createElement(StatusBarStaticAndroidExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'android'\n}, {\n  title: 'StatusBar dimensions',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    }, \"Height (Android only): \", StatusBar.currentHeight, \" pts\"));\n  },\n  platform: 'android'\n}];\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f5fcff'\n  },\n  innerContainer: {\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  button: {\n    borderRadius: 5,\n    backgroundColor: '#eeeeee',\n    padding: 10\n  },\n  modalButton: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/StatusBar/StatusBarExample.js"],"names":["React","require","colors","barStyles","showHideTransitions","getValue","values","index","length","StatusBarHiddenExample","state","animated","hidden","showHideTransition","_showHideTransitionIndex","_onChangeAnimated","setState","_onChangeHidden","_onChangeTransition","styles","wrapper","button","Component","StatusBarStyleExample","_barStyleIndex","_onChangeBarStyle","barStyle","StatusBarNetworkActivityExample","networkActivityIndicatorVisible","_onChangeNetworkIndicatorVisible","StatusBarBackgroundColorExample","backgroundColor","_colorIndex","_onChangeBackgroundColor","StatusBarTranslucentExample","translucent","_onChangeTranslucent","StatusBarStaticIOSExample","StatusBar","setHidden","setBarStyle","setNetworkActivityIndicatorVisible","StatusBarStaticAndroidExample","setBackgroundColor","setTranslucent","ModalExample","modalVisible","_onChangeModalVisible","container","innerContainer","modalButton","exports","framework","title","description","examples","render","platform","currentHeight","StyleSheet","create","flex","justifyContent","padding","borderRadius","alignItems","marginBottom","marginTop"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View,\n  Modal,\n} = require('react-native');\n\nconst colors = ['#ff0000', '#00ff00', '#0000ff', 'rgba(0, 0, 0, 0.4)'];\n\nconst barStyles = ['default', 'light-content'];\n\nconst showHideTransitions = ['fade', 'slide'];\n\nfunction getValue<T>(values: Array<T>, index: number): T {\n  return values[index % values.length];\n}\n\nclass StatusBarHiddenExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    animated: true,\n    hidden: false,\n    showHideTransition: getValue(showHideTransitions, 0),\n  };\n\n  _showHideTransitionIndex = 0;\n\n  _onChangeAnimated = () => {\n    this.setState({animated: !this.state.animated});\n  };\n\n  _onChangeHidden = () => {\n    this.setState({hidden: !this.state.hidden});\n  };\n\n  _onChangeTransition = () => {\n    this._showHideTransitionIndex++;\n    this.setState({\n      showHideTransition: getValue(\n        showHideTransitions,\n        this._showHideTransitionIndex,\n      ),\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <StatusBar\n          hidden={this.state.hidden}\n          showHideTransition={this.state.showHideTransition}\n          animated={this.state.animated}\n        />\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeHidden}>\n          <View style={styles.button}>\n            <Text>hidden: {this.state.hidden ? 'true' : 'false'}</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeAnimated}>\n          <View style={styles.button}>\n            <Text>\n              animated (ios only): {this.state.animated ? 'true' : 'false'}\n            </Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeTransition}>\n          <View style={styles.button}>\n            <Text>\n              showHideTransition (ios only): '\n              {getValue(showHideTransitions, this._showHideTransitionIndex)}'\n            </Text>\n          </View>\n        </TouchableHighlight>\n        <ModalExample />\n      </View>\n    );\n  }\n}\n\nclass StatusBarStyleExample extends React.Component<{...}, $FlowFixMeState> {\n  _barStyleIndex = 0;\n\n  _onChangeBarStyle = () => {\n    this._barStyleIndex++;\n    this.setState({barStyle: getValue(barStyles, this._barStyleIndex)});\n  };\n\n  _onChangeAnimated = () => {\n    this.setState({animated: !this.state.animated});\n  };\n\n  state = {\n    animated: true,\n    barStyle: getValue(barStyles, this._barStyleIndex),\n  };\n\n  render() {\n    return (\n      <View>\n        <StatusBar\n          animated={this.state.animated}\n          barStyle={this.state.barStyle}\n        />\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeBarStyle}>\n          <View style={styles.button}>\n            <Text>style: '{getValue(barStyles, this._barStyleIndex)}'</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeAnimated}>\n          <View style={styles.button}>\n            <Text>animated: {this.state.animated ? 'true' : 'false'}</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass StatusBarNetworkActivityExample extends React.Component<\n  {...},\n  $FlowFixMeState,\n> {\n  state = {\n    networkActivityIndicatorVisible: false,\n  };\n\n  _onChangeNetworkIndicatorVisible = () => {\n    this.setState({\n      networkActivityIndicatorVisible: !this.state\n        .networkActivityIndicatorVisible,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <StatusBar\n          networkActivityIndicatorVisible={\n            this.state.networkActivityIndicatorVisible\n          }\n        />\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeNetworkIndicatorVisible}>\n          <View style={styles.button}>\n            <Text>\n              networkActivityIndicatorVisible:\n              {this.state.networkActivityIndicatorVisible ? 'true' : 'false'}\n            </Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass StatusBarBackgroundColorExample extends React.Component<\n  {...},\n  $FlowFixMeState,\n> {\n  state = {\n    animated: true,\n    backgroundColor: getValue(colors, 0),\n  };\n\n  _colorIndex = 0;\n\n  _onChangeBackgroundColor = () => {\n    this._colorIndex++;\n    this.setState({backgroundColor: getValue(colors, this._colorIndex)});\n  };\n\n  _onChangeAnimated = () => {\n    this.setState({animated: !this.state.animated});\n  };\n\n  render() {\n    return (\n      <View>\n        <StatusBar\n          backgroundColor={this.state.backgroundColor}\n          animated={this.state.animated}\n        />\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeBackgroundColor}>\n          <View style={styles.button}>\n            <Text>backgroundColor: '{getValue(colors, this._colorIndex)}'</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeAnimated}>\n          <View style={styles.button}>\n            <Text>animated: {this.state.animated ? 'true' : 'false'}</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass StatusBarTranslucentExample extends React.Component<\n  {...},\n  $FlowFixMeState,\n> {\n  state = {\n    translucent: false,\n  };\n\n  _onChangeTranslucent = () => {\n    this.setState({\n      translucent: !this.state.translucent,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <StatusBar translucent={this.state.translucent} />\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeTranslucent}>\n          <View style={styles.button}>\n            <Text>\n              translucent: {this.state.translucent ? 'true' : 'false'}\n            </Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass StatusBarStaticIOSExample extends React.Component<{...}> {\n  render() {\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setHidden(true, 'slide');\n          }}>\n          <View style={styles.button}>\n            <Text>setHidden(true, 'slide')</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setHidden(false, 'fade');\n          }}>\n          <View style={styles.button}>\n            <Text>setHidden(false, 'fade')</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setBarStyle('default', true);\n          }}>\n          <View style={styles.button}>\n            <Text>setBarStyle('default', true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setBarStyle('light-content', true);\n          }}>\n          <View style={styles.button}>\n            <Text>setBarStyle('light-content', true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setNetworkActivityIndicatorVisible(true);\n          }}>\n          <View style={styles.button}>\n            <Text>setNetworkActivityIndicatorVisible(true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setNetworkActivityIndicatorVisible(false);\n          }}>\n          <View style={styles.button}>\n            <Text>setNetworkActivityIndicatorVisible(false)</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass StatusBarStaticAndroidExample extends React.Component<{...}> {\n  render() {\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setHidden(true);\n          }}>\n          <View style={styles.button}>\n            <Text>setHidden(true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setHidden(false);\n          }}>\n          <View style={styles.button}>\n            <Text>setHidden(false)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setBackgroundColor('#ff00ff', true);\n          }}>\n          <View style={styles.button}>\n            <Text>setBackgroundColor('#ff00ff', true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setBackgroundColor('#00ff00', true);\n          }}>\n          <View style={styles.button}>\n            <Text>setBackgroundColor('#00ff00', true)</Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setTranslucent(true);\n            StatusBar.setBackgroundColor('rgba(0, 0, 0, 0.4)', true);\n          }}>\n          <View style={styles.button}>\n            <Text>\n              setTranslucent(true) and setBackgroundColor('rgba(0, 0, 0, 0.4)',\n              true)\n            </Text>\n          </View>\n        </TouchableHighlight>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => {\n            StatusBar.setTranslucent(false);\n            StatusBar.setBackgroundColor('black', true);\n          }}>\n          <View style={styles.button}>\n            <Text>\n              setTranslucent(false) and setBackgroundColor('black', true)\n            </Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nclass ModalExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    modalVisible: false,\n  };\n\n  _onChangeModalVisible = () => {\n    this.setState({modalVisible: !this.state.modalVisible});\n  };\n\n  render() {\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this._onChangeModalVisible}>\n          <View style={styles.button}>\n            <Text>modal visible: {this.state.hidden ? 'true' : 'false'}</Text>\n          </View>\n        </TouchableHighlight>\n        <Modal\n          visible={this.state.modalVisible}\n          transparent={true}\n          onRequestClose={this._onChangeModalVisible}>\n          <View style={[styles.container]}>\n            <View style={[styles.innerContainer]}>\n              <Text>This modal was presented!</Text>\n              <TouchableHighlight\n                onPress={this._onChangeModalVisible}\n                style={styles.modalButton}>\n                <View style={styles.button}>\n                  <Text>Close</Text>\n                </View>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nexports.framework = 'React';\nexports.title = '<StatusBar>';\nexports.description = 'Component for controlling the status bar';\nexports.examples = [\n  {\n    title: 'StatusBar hidden',\n    render(): React.Node {\n      return <StatusBarHiddenExample />;\n    },\n  },\n  {\n    title: 'StatusBar style',\n    render(): React.Node {\n      return <StatusBarStyleExample />;\n    },\n    platform: 'ios',\n  },\n  {\n    title: 'StatusBar network activity indicator',\n    render(): React.Node {\n      return <StatusBarNetworkActivityExample />;\n    },\n    platform: 'ios',\n  },\n  {\n    title: 'StatusBar background color',\n    render(): React.Node {\n      return <StatusBarBackgroundColorExample />;\n    },\n    platform: 'android',\n  },\n  {\n    title: 'StatusBar translucent',\n    render(): React.Node {\n      return <StatusBarTranslucentExample />;\n    },\n    platform: 'android',\n  },\n  {\n    title: 'StatusBar static API',\n    render(): React.Node {\n      return <StatusBarStaticIOSExample />;\n    },\n    platform: 'ios',\n  },\n  {\n    title: 'StatusBar static API',\n    render(): React.Node {\n      return <StatusBarStaticAndroidExample />;\n    },\n    platform: 'android',\n  },\n  {\n    title: 'StatusBar dimensions',\n    render(): React.Node {\n      return (\n        <View>\n          <Text>Height (Android only): {StatusBar.currentHeight} pts</Text>\n        </View>\n      );\n    },\n    platform: 'android',\n  },\n];\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f5fcff',\n  },\n  innerContainer: {\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  button: {\n    borderRadius: 5,\n    backgroundColor: '#eeeeee',\n    padding: 10,\n  },\n  modalButton: {\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}