{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/Touchable/TouchableBounce.js\",\n    _this4 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Pressability from \"../../Pressability/Pressability\";\nimport { PressabilityDebugView } from \"../../Pressability/PressabilityDebug\";\nimport TVTouchable from \"./TVTouchable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as React from 'react';\n\nvar TouchableBounce = function (_React$Component) {\n  _inherits(TouchableBounce, _React$Component);\n\n  var _super = _createSuper(TouchableBounce);\n\n  function TouchableBounce() {\n    var _this;\n\n    _classCallCheck(this, TouchableBounce);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pressability: new Pressability(_this._createPressabilityConfig()),\n      scale: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(TouchableBounce, [{\n    key: \"_createPressabilityConfig\",\n    value: function _createPressabilityConfig() {\n      var _this2 = this;\n\n      return {\n        cancelable: !this.props.rejectResponderTermination,\n        disabled: this.props.disabled,\n        hitSlop: this.props.hitSlop,\n        delayLongPress: this.props.delayLongPress,\n        delayPressIn: this.props.delayPressIn,\n        delayPressOut: this.props.delayPressOut,\n        minPressDuration: 0,\n        pressRectOffset: this.props.pressRetentionOffset,\n        android_disableSound: this.props.touchSoundDisabled,\n        onBlur: function onBlur(event) {\n          if (Platform.isTV) {\n            _this2._bounceTo(1, 0.4, 0);\n          }\n\n          if (_this2.props.onBlur != null) {\n            _this2.props.onBlur(event);\n          }\n        },\n        onFocus: function onFocus(event) {\n          if (Platform.isTV) {\n            _this2._bounceTo(0.93, 0.1, 0);\n          }\n\n          if (_this2.props.onFocus != null) {\n            _this2.props.onFocus(event);\n          }\n        },\n        onLongPress: function onLongPress(event) {\n          if (_this2.props.onLongPress != null) {\n            _this2.props.onLongPress(event);\n          }\n        },\n        onPress: function onPress(event) {\n          var _this2$props$releaseB, _this2$props$releaseV;\n\n          var _this2$props = _this2.props,\n              onPressAnimationComplete = _this2$props.onPressAnimationComplete,\n              onPressWithCompletion = _this2$props.onPressWithCompletion;\n          var releaseBounciness = (_this2$props$releaseB = _this2.props.releaseBounciness) != null ? _this2$props$releaseB : 10;\n          var releaseVelocity = (_this2$props$releaseV = _this2.props.releaseVelocity) != null ? _this2$props$releaseV : 10;\n\n          if (onPressWithCompletion != null) {\n            onPressWithCompletion(function () {\n              _this2.state.scale.setValue(0.93);\n\n              _this2._bounceTo(1, releaseVelocity, releaseBounciness, onPressAnimationComplete);\n            });\n            return;\n          }\n\n          _this2._bounceTo(1, releaseVelocity, releaseBounciness, onPressAnimationComplete);\n\n          if (_this2.props.onPress != null) {\n            _this2.props.onPress(event);\n          }\n        },\n        onPressIn: function onPressIn(event) {\n          _this2._bounceTo(0.93, 0.1, 0);\n\n          if (_this2.props.onPressIn != null) {\n            _this2.props.onPressIn(event);\n          }\n        },\n        onPressOut: function onPressOut(event) {\n          _this2._bounceTo(1, 0.4, 0);\n\n          if (_this2.props.onPressOut != null) {\n            _this2.props.onPressOut(event);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"_bounceTo\",\n    value: function _bounceTo(toValue, velocity, bounciness, callback) {\n      Animated.spring(this.state.scale, {\n        toValue: toValue,\n        velocity: velocity,\n        bounciness: bounciness,\n        useNativeDriver: true\n      }).start(callback);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$pressabil = this.state.pressability.getEventHandlers(),\n          onBlur = _this$state$pressabil.onBlur,\n          onFocus = _this$state$pressabil.onFocus,\n          eventHandlersWithoutBlurAndFocus = _objectWithoutProperties(_this$state$pressabil, [\"onBlur\", \"onFocus\"]);\n\n      return React.createElement(Animated.View, _extends({\n        style: [{\n          transform: [{\n            scale: this.state.scale\n          }]\n        }, this.props.style],\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: this.props.accessibilityState,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        accessibilityValue: this.props.accessibilityValue,\n        importantForAccessibility: this.props.importantForAccessibility,\n        accessibilityLiveRegion: this.props.accessibilityLiveRegion,\n        accessibilityViewIsModal: this.props.accessibilityViewIsModal,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        nativeID: this.props.nativeID,\n        testID: this.props.testID,\n        hitSlop: this.props.hitSlop,\n        focusable: this.props.focusable !== false && this.props.onPress !== undefined && !this.props.disabled,\n        ref: this.props.hostRef\n      }, eventHandlersWithoutBlurAndFocus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }), this.props.children, __DEV__ ? React.createElement(PressabilityDebugView, {\n        color: \"orange\",\n        hitSlop: this.props.hitSlop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }) : null);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (Platform.isTV) {\n        this._tvTouchable = new TVTouchable(this, {\n          getDisabled: function getDisabled() {\n            return _this3.props.disabled === true;\n          },\n          onBlur: function onBlur(event) {\n            if (_this3.props.onBlur != null) {\n              _this3.props.onBlur(event);\n            }\n          },\n          onFocus: function onFocus(event) {\n            if (_this3.props.onFocus != null) {\n              _this3.props.onFocus(event);\n            }\n          },\n          onPress: function onPress(event) {\n            if (_this3.props.onPress != null) {\n              _this3.props.onPress(event);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.state.pressability.configure(this._createPressabilityConfig());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.isTV) {\n        if (this._tvTouchable != null) {\n          this._tvTouchable.destroy();\n        }\n      }\n\n      this.state.pressability.reset();\n    }\n  }]);\n\n  return TouchableBounce;\n}(React.Component);\n\nmodule.exports = React.forwardRef(function (props, hostRef) {\n  return React.createElement(TouchableBounce, _extends({}, props, {\n    hostRef: hostRef,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 3\n    }\n  }));\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/Touchable/TouchableBounce.js"],"names":["Pressability","PressabilityDebugView","TVTouchable","React","TouchableBounce","state","pressability","_createPressabilityConfig","scale","Animated","Value","cancelable","props","rejectResponderTermination","disabled","hitSlop","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onBlur","event","Platform","isTV","_bounceTo","onFocus","onLongPress","onPress","onPressAnimationComplete","onPressWithCompletion","releaseBounciness","releaseVelocity","setValue","onPressIn","onPressOut","toValue","velocity","bounciness","callback","spring","useNativeDriver","start","getEventHandlers","eventHandlersWithoutBlurAndFocus","transform","style","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","accessibilityValue","importantForAccessibility","accessibilityLiveRegion","accessibilityViewIsModal","accessibilityElementsHidden","nativeID","testID","focusable","undefined","hostRef","children","__DEV__","_tvTouchable","getDisabled","prevProps","prevState","configure","destroy","reset","Component","module","exports","forwardRef"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport TVTouchable from './TVTouchable';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\nimport {Animated, Platform} from 'react-native';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n\n  onPressAnimationComplete?: ?() => void,\n  onPressWithCompletion?: ?(callback: () => void) => void,\n  releaseBounciness?: ?number,\n  releaseVelocity?: ?number,\n  style?: ?ViewStyleProp,\n\n  hostRef: React.Ref<typeof Animated.View>,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n  scale: Animated.Value,\n|}>;\n\nclass TouchableBounce extends React.Component<Props, State> {\n  _tvTouchable: ?TVTouchable;\n\n  state: State = {\n    pressability: new Pressability(this._createPressabilityConfig()),\n    scale: new Animated.Value(1),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled: this.props.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      android_disableSound: this.props.touchSoundDisabled,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._bounceTo(1, 0.4, 0);\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._bounceTo(0.93, 0.1, 0);\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: event => {\n        if (this.props.onLongPress != null) {\n          this.props.onLongPress(event);\n        }\n      },\n      onPress: event => {\n        const {onPressAnimationComplete, onPressWithCompletion} = this.props;\n        const releaseBounciness = this.props.releaseBounciness ?? 10;\n        const releaseVelocity = this.props.releaseVelocity ?? 10;\n\n        if (onPressWithCompletion != null) {\n          onPressWithCompletion(() => {\n            this.state.scale.setValue(0.93);\n            this._bounceTo(\n              1,\n              releaseVelocity,\n              releaseBounciness,\n              onPressAnimationComplete,\n            );\n          });\n          return;\n        }\n\n        this._bounceTo(\n          1,\n          releaseVelocity,\n          releaseBounciness,\n          onPressAnimationComplete,\n        );\n        if (this.props.onPress != null) {\n          this.props.onPress(event);\n        }\n      },\n      onPressIn: event => {\n        this._bounceTo(0.93, 0.1, 0);\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        this._bounceTo(1, 0.4, 0);\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  _bounceTo(\n    toValue: number,\n    velocity: number,\n    bounciness: number,\n    callback?: ?() => void,\n  ) {\n    Animated.spring(this.state.scale, {\n      toValue,\n      velocity,\n      bounciness,\n      useNativeDriver: true,\n    }).start(callback);\n  }\n\n  render(): React.Node {\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {\n      onBlur,\n      onFocus,\n      ...eventHandlersWithoutBlurAndFocus\n    } = this.state.pressability.getEventHandlers();\n\n    return (\n      <Animated.View\n        style={[{transform: [{scale: this.state.scale}]}, this.props.style]}\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={this.props.accessibilityState}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        accessibilityValue={this.props.accessibilityValue}\n        importantForAccessibility={this.props.importantForAccessibility}\n        accessibilityLiveRegion={this.props.accessibilityLiveRegion}\n        accessibilityViewIsModal={this.props.accessibilityViewIsModal}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        hitSlop={this.props.hitSlop}\n        focusable={\n          this.props.focusable !== false &&\n          this.props.onPress !== undefined &&\n          !this.props.disabled\n        }\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {this.props.children}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"orange\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  componentDidMount(): void {\n    if (Platform.isTV) {\n      this._tvTouchable = new TVTouchable(this, {\n        getDisabled: () => this.props.disabled === true,\n        onBlur: event => {\n          if (this.props.onBlur != null) {\n            this.props.onBlur(event);\n          }\n        },\n        onFocus: event => {\n          if (this.props.onFocus != null) {\n            this.props.onFocus(event);\n          }\n        },\n        onPress: event => {\n          if (this.props.onPress != null) {\n            this.props.onPress(event);\n          }\n        },\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n  }\n\n  componentWillUnmount(): void {\n    if (Platform.isTV) {\n      if (this._tvTouchable != null) {\n        this._tvTouchable.destroy();\n      }\n    }\n    this.state.pressability.reset();\n  }\n}\n\nmodule.exports = (React.forwardRef((props, hostRef) => (\n  <TouchableBounce {...props} hostRef={hostRef} />\n)): React.ComponentType<$ReadOnly<$Diff<Props, {|hostRef: mixed|}>>>);\n"]},"metadata":{},"sourceType":"module"}