{"ast":null,"code":"import React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styleToBarStyle from \"./styleToBarStyle\";\nimport useColorScheme from \"./useColorScheme\";\nexport default function ExpoStatusBar(props) {\n  var style = props.style,\n      animated = props.animated,\n      hidden = props.hidden,\n      hideTransitionAnimation = props.hideTransitionAnimation,\n      networkActivityIndicatorVisible = props.networkActivityIndicatorVisible;\n  var showHideTransition = hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation;\n  var colorScheme = useColorScheme();\n  var barStyle = styleToBarStyle(style, colorScheme);\n  return React.createElement(StatusBar, {\n    barStyle: barStyle,\n    animated: animated,\n    hidden: hidden,\n    networkActivityIndicatorVisible: networkActivityIndicatorVisible,\n    showHideTransition: showHideTransition\n  });\n}","map":{"version":3,"sources":["../src/ExpoStatusBar.ios.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;;AAIA,OAAO,eAAP;AACA,OAAO,cAAP;AAEA,eAAc,SAAU,aAAV,CAAwB,KAAxB,EAA6C;AAAA,MAEvD,KAFuD,GAOrD,KAPqD,CAEvD,KAFuD;AAAA,MAGvD,QAHuD,GAOrD,KAPqD,CAGvD,QAHuD;AAAA,MAIvD,MAJuD,GAOrD,KAPqD,CAIvD,MAJuD;AAAA,MAKvD,uBALuD,GAOrD,KAPqD,CAKvD,uBALuD;AAAA,MAMvD,+BANuD,GAOrD,KAPqD,CAMvD,+BANuD;AASzD,MAAM,kBAAkB,GACtB,uBAAuB,KAAK,MAA5B,GAAqC,SAArC,GAAiD,uBADnD;AAKA,MAAM,WAAW,GAAG,cAAc,EAAlC;AACA,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAD,EAAQ,WAAR,CAAhC;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,IAAA,QAAQ,EAAE,QADF;AAER,IAAA,QAAQ,EAAE,QAFF;AAGR,IAAA,MAAM,EAAE,MAHA;AAIR,IAAA,+BAA+B,EAAE,+BAJzB;AAKR,IAAA,kBAAkB,EAAE;AALZ,GAAV,CADF;AASD","sourcesContent":["import React from 'react';\nimport { StatusBar } from 'react-native';\n\nimport { StatusBarProps } from './StatusBar.types';\nimport styleToBarStyle from './styleToBarStyle';\nimport useColorScheme from './useColorScheme';\n\nexport default function ExpoStatusBar(props: StatusBarProps) {\n  const {\n    style,\n    animated,\n    hidden,\n    hideTransitionAnimation,\n    networkActivityIndicatorVisible,\n  } = props;\n\n  const showHideTransition =\n    hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation;\n\n  // Pick appropriate default value depending on current theme, so if we are\n  // locked to light mode we don't end up with a light status bar\n  const colorScheme = useColorScheme();\n  const barStyle = styleToBarStyle(style, colorScheme);\n\n  return (\n    <StatusBar\n      barStyle={barStyle}\n      animated={animated}\n      hidden={hidden}\n      networkActivityIndicatorVisible={networkActivityIndicatorVisible}\n      showHideTransition={showHideTransition}\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}