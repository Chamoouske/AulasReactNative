{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { ConfigPlugin } from '../Plugin.types';\nimport { InfoPlist } from './IosConfig.types';\nexport declare const withBundleIdentifier: ConfigPlugin<{\n    bundleIdentifier?: string;\n}>;\ndeclare function getBundleIdentifier(config: ExpoConfig): string | null;\n/**\n * In Turtle v1 we set the bundleIdentifier directly on Info.plist rather\n * than in pbxproj\n */\ndeclare function setBundleIdentifier(config: ExpoConfig, infoPlist: InfoPlist): InfoPlist;\n/**\n * Gets the bundle identifier of the Xcode project found in the project directory.\n * If either the Xcode project doesn't exist or the project is not configured\n * this function returns null.\n *\n * @param {string} projectRoot Path to project root containing the ios directory\n * @returns {string | null} bundle identifier of the Xcode project or null if the project is not configured\n */\ndeclare function getBundleIdentifierFromPbxproj(projectRoot: string): string | null;\n/**\n * Updates the bundle identifier for a given pbxproj\n *\n * @param {string} pbxprojPath Path to pbxproj file\n * @param {string} bundleIdentifier Bundle identifier to set in the pbxproj\n * @param {boolean} [updateProductName=true]  Whether to update PRODUCT_NAME\n */\ndeclare function updateBundleIdentifierForPbxproj(pbxprojPath: string, bundleIdentifier: string, updateProductName?: boolean): void;\n/**\n * Updates the bundle identifier for pbx projects inside the ios directory of the given project root\n *\n * @param {string} projectRoot Path to project root containing the ios directory\n * @param {string} bundleIdentifier Desired bundle identifier\n * @param {boolean} [updateProductName=true]  Whether to update PRODUCT_NAME\n */\ndeclare function setBundleIdentifierForPbxproj(projectRoot: string, bundleIdentifier: string, updateProductName?: boolean): void;\ndeclare function resetAllPlistBundleIdentifiers(projectRoot: string): void;\ndeclare function resetPlistBundleIdentifier(plistPath: string): void;\nexport { getBundleIdentifier, setBundleIdentifier, getBundleIdentifierFromPbxproj, updateBundleIdentifierForPbxproj, setBundleIdentifierForPbxproj, resetAllPlistBundleIdentifiers, resetPlistBundleIdentifier, };\n"]},"metadata":{},"sourceType":"module"}