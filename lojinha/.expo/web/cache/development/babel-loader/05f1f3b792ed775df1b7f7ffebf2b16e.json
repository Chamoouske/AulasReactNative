{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar babelRegisterOnly = require('metro-babel-register');\n\nvar createCacheKeyFunction = require('fbjs-scripts/jest/createCacheKeyFunction');\n\nvar _require = require('@babel/core'),\n    babelTransformSync = _require.transformSync;\n\nvar generate = require('@babel/generator').default;\n\nvar nodeFiles = new RegExp(['/metro(?:-[^/]*)?/'].join('|'));\nvar nodeOptions = babelRegisterOnly.config([nodeFiles]);\nbabelRegisterOnly([]);\n\nvar transformer = require('metro-react-native-babel-transformer');\n\nmodule.exports = {\n  process: function process(src, file) {\n    if (nodeFiles.test(file)) {\n      return babelTransformSync(src, _objectSpread(_objectSpread({\n        filename: file,\n        sourceType: 'script'\n      }, nodeOptions), {}, {\n        ast: false\n      })).code;\n    }\n\n    var _transformer$transfor = transformer.transform({\n      filename: file,\n      options: {\n        ast: true,\n        dev: true,\n        enableBabelRuntime: false,\n        experimentalImportSupport: false,\n        hot: false,\n        inlineRequires: true,\n        minify: false,\n        platform: '',\n        projectRoot: '',\n        publicPath: '/assets',\n        retainLines: true,\n        sourceType: 'unambiguous'\n      },\n      src: src,\n      plugins: [[require('@babel/plugin-transform-block-scoping')], [require('@babel/plugin-transform-flow-strip-types')], [require('@babel/plugin-proposal-class-properties'), {\n        loose: true\n      }], [require('@babel/plugin-transform-computed-properties')], [require('@babel/plugin-transform-destructuring')], [require('@babel/plugin-transform-function-name')], [require('@babel/plugin-transform-literals')], [require('@babel/plugin-transform-parameters')], [require('@babel/plugin-transform-shorthand-properties')], [require('@babel/plugin-transform-react-jsx')], [require('@babel/plugin-transform-regenerator')], [require('@babel/plugin-transform-sticky-regex')], [require('@babel/plugin-transform-unicode-regex')], [require('@babel/plugin-transform-modules-commonjs'), {\n        strict: false,\n        allowTopLevelThis: true\n      }], [require('@babel/plugin-transform-classes')], [require('@babel/plugin-transform-arrow-functions')], [require('@babel/plugin-transform-spread')], [require('@babel/plugin-proposal-object-rest-spread')], [require('@babel/plugin-transform-template-literals'), {\n        loose: true\n      }], [require('@babel/plugin-transform-exponentiation-operator')], [require('@babel/plugin-transform-object-assign')], [require('@babel/plugin-transform-for-of'), {\n        loose: true\n      }], [require('@babel/plugin-transform-react-display-name')], [require('@babel/plugin-transform-react-jsx-source')]]\n    }),\n        ast = _transformer$transfor.ast;\n\n    return generate(ast, {\n      code: true,\n      comments: false,\n      compact: false,\n      filename: file,\n      retainLines: true,\n      sourceFileName: file,\n      sourceMaps: true\n    }, src).code;\n  },\n  getCacheKey: createCacheKeyFunction([__filename, require.resolve('metro-react-native-babel-transformer'), require.resolve('@babel/core/package.json')])\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/jest/preprocessor.js"],"names":["babelRegisterOnly","require","createCacheKeyFunction","babelTransformSync","transformSync","generate","default","nodeFiles","RegExp","join","nodeOptions","config","transformer","module","exports","process","src","file","test","filename","sourceType","ast","code","transform","options","dev","enableBabelRuntime","experimentalImportSupport","hot","inlineRequires","minify","platform","projectRoot","publicPath","retainLines","plugins","loose","strict","allowTopLevelThis","comments","compact","sourceFileName","sourceMaps","getCacheKey","__filename","resolve"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n/* eslint-env node */\n\n'use strict';\n\nconst babelRegisterOnly = require('metro-babel-register');\nconst createCacheKeyFunction = require('fbjs-scripts/jest/createCacheKeyFunction');\n\nconst {transformSync: babelTransformSync} = require('@babel/core');\nconst generate = require('@babel/generator').default;\n\nconst nodeFiles = new RegExp(\n  [\n    '/metro(?:-[^/]*)?/', // metro, metro-core, metro-source-map, metro-etc.\n  ].join('|'),\n);\nconst nodeOptions = babelRegisterOnly.config([nodeFiles]);\n\nbabelRegisterOnly([]);\n\nconst transformer = require('metro-react-native-babel-transformer');\nmodule.exports = {\n  process(src /*: string */, file /*: string */) /*: string */ {\n    if (nodeFiles.test(file)) {\n      // node specific transforms only\n      return babelTransformSync(src, {\n        filename: file,\n        sourceType: 'script',\n        ...nodeOptions,\n        ast: false,\n      }).code;\n    }\n\n    const {ast} = transformer.transform({\n      filename: file,\n      options: {\n        ast: true, // needed for open source (?) https://github.com/facebook/react-native/commit/f8d6b97140cffe8d18b2558f94570c8d1b410d5c#r28647044\n        dev: true,\n        enableBabelRuntime: false,\n        experimentalImportSupport: false,\n        hot: false,\n        inlineRequires: true,\n        minify: false,\n        platform: '',\n        projectRoot: '',\n        publicPath: '/assets',\n        retainLines: true,\n        sourceType: 'unambiguous', // b7 required. detects module vs script mode\n      },\n      src,\n      plugins: [\n        [require('@babel/plugin-transform-block-scoping')],\n        // the flow strip types plugin must go BEFORE class properties!\n        // there'll be a test case that fails if you don't.\n        [require('@babel/plugin-transform-flow-strip-types')],\n        [\n          require('@babel/plugin-proposal-class-properties'),\n          // use `this.foo = bar` instead of `this.defineProperty('foo', ...)`\n          {loose: true},\n        ],\n        [require('@babel/plugin-transform-computed-properties')],\n        [require('@babel/plugin-transform-destructuring')],\n        [require('@babel/plugin-transform-function-name')],\n        [require('@babel/plugin-transform-literals')],\n        [require('@babel/plugin-transform-parameters')],\n        [require('@babel/plugin-transform-shorthand-properties')],\n        [require('@babel/plugin-transform-react-jsx')],\n        [require('@babel/plugin-transform-regenerator')],\n        [require('@babel/plugin-transform-sticky-regex')],\n        [require('@babel/plugin-transform-unicode-regex')],\n        [\n          require('@babel/plugin-transform-modules-commonjs'),\n          {strict: false, allowTopLevelThis: true},\n        ],\n        [require('@babel/plugin-transform-classes')],\n        [require('@babel/plugin-transform-arrow-functions')],\n        [require('@babel/plugin-transform-spread')],\n        [require('@babel/plugin-proposal-object-rest-spread')],\n        [\n          require('@babel/plugin-transform-template-literals'),\n          {loose: true}, // dont 'a'.concat('b'), just use 'a'+'b'\n        ],\n        [require('@babel/plugin-transform-exponentiation-operator')],\n        [require('@babel/plugin-transform-object-assign')],\n        [require('@babel/plugin-transform-for-of'), {loose: true}],\n        [require('@babel/plugin-transform-react-display-name')],\n        [require('@babel/plugin-transform-react-jsx-source')],\n      ],\n    });\n\n    return generate(\n      ast,\n      {\n        code: true,\n        comments: false,\n        compact: false,\n        filename: file,\n        retainLines: true,\n        sourceFileName: file,\n        sourceMaps: true,\n      },\n      src,\n    ).code;\n  },\n\n  getCacheKey: (createCacheKeyFunction([\n    __filename,\n    require.resolve('metro-react-native-babel-transformer'),\n    require.resolve('@babel/core/package.json'),\n  ]) /*: any */),\n};\n"]},"metadata":{},"sourceType":"script"}