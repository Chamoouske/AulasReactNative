{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _taggedTemplateLiteralLoose = require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nvar j = require('jscodeshift');\n\nvar template = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow\\n */\\n\\n'use strict';\\n\\n::_IMPORTS_::\\n\\n::_COMPONENT_CONFIG_::\\n\";\nvar UIMANAGER_IMPORT = 'const {UIManager} = require(\"react-native\")';\n\nfunction getReactDiffProcessValue(typeAnnotation) {\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n    case 'StringTypeAnnotation':\n    case 'Int32TypeAnnotation':\n    case 'DoubleTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'ObjectTypeAnnotation':\n    case 'StringEnumTypeAnnotation':\n    case 'Int32EnumTypeAnnotation':\n      return j.literal(true);\n\n    case 'NativePrimitiveTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          return j.template.expression(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"{ process: require('processColor') }\"])));\n\n        case 'ImageSourcePrimitive':\n          return j.template.expression(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"{ process: require('resolveAssetSource') }\"])));\n\n        case 'PointPrimitive':\n          return j.template.expression(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"{ diff: require('pointsDiffer') }\"])));\n\n        case 'EdgeInsetsPrimitive':\n          return j.template.expression(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"{ diff: require('insetsDiffer') }\"])));\n\n        default:\n          typeAnnotation.name;\n          throw new Error(\"Received unknown native typeAnnotation: \\\"\" + typeAnnotation.name + \"\\\"\");\n      }\n\n    case 'ArrayTypeAnnotation':\n      if (typeAnnotation.elementType.type === 'NativePrimitiveTypeAnnotation') {\n        switch (typeAnnotation.elementType.name) {\n          case 'ColorPrimitive':\n            return j.template.expression(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"{ process: require('processColorArray') }\"])));\n\n          case 'ImageSourcePrimitive':\n            return j.literal(true);\n\n          case 'PointPrimitive':\n            return j.literal(true);\n\n          default:\n            throw new Error(\"Received unknown array native typeAnnotation: \\\"\" + typeAnnotation.elementType.name + \"\\\"\");\n        }\n      }\n\n      return j.literal(true);\n\n    default:\n      typeAnnotation;\n      throw new Error(\"Received unknown typeAnnotation: \\\"\" + typeAnnotation.type + \"\\\"\");\n  }\n}\n\nvar componentTemplate = \"\\nconst ::_COMPONENT_NAME_::ViewConfig = VIEW_CONFIG;\\n\\nlet nativeComponentName = '::_COMPONENT_NAME_WITH_COMPAT_SUPPORT_::';\\n::_DEPRECATION_CHECK_::\\nregisterGeneratedViewConfig(nativeComponentName, ::_COMPONENT_NAME_::ViewConfig);\\n\\nexport const __INTERNAL_VIEW_CONFIG = ::_COMPONENT_NAME_::ViewConfig;\\n\\nexport default nativeComponentName;\\n\".trim();\nvar deprecatedComponentTemplate = \"\\nif (UIManager.getViewManagerConfig('::_COMPONENT_NAME_::')) {\\n  nativeComponentName = '::_COMPONENT_NAME_::';\\n} else if (UIManager.getViewManagerConfig('::_COMPONENT_NAME_DEPRECATED_::')){\\n  nativeComponentName = '::_COMPONENT_NAME_DEPRECATED_::';\\n} else {\\n  throw new Error('Failed to find native component for either \\\"::_COMPONENT_NAME_::\\\" or \\\"::_COMPONENT_NAME_DEPRECATED_::\\\"')\\n}\\n\".trim();\n\nfunction normalizeInputEventName(name) {\n  if (name.startsWith('on')) {\n    return name.replace(/^on/, 'top');\n  } else if (!name.startsWith('top')) {\n    return \"top\" + name[0].toUpperCase() + name.slice(1);\n  }\n\n  return name;\n}\n\nfunction getValidAttributesForEvents(events) {\n  return events.map(function (eventType) {\n    return j.property('init', j.identifier(eventType.name), j.literal(true));\n  });\n}\n\nfunction generateBubblingEventInfo(event, nameOveride) {\n  return j.property('init', j.identifier(nameOveride || normalizeInputEventName(event.name)), j.objectExpression([j.property('init', j.identifier('phasedRegistrationNames'), j.objectExpression([j.property('init', j.identifier('captured'), j.literal(event.name + \"Capture\")), j.property('init', j.identifier('bubbled'), j.literal(event.name))]))]));\n}\n\nfunction generateDirectEventInfo(event, nameOveride) {\n  return j.property('init', j.identifier(nameOveride || normalizeInputEventName(event.name)), j.objectExpression([j.property('init', j.identifier('registrationName'), j.literal(event.name))]));\n}\n\nfunction buildViewConfig(schema, componentName, component, imports) {\n  var componentProps = component.props;\n  var componentEvents = component.events;\n  component.extendsProps.forEach(function (extendProps) {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add(\"const registerGeneratedViewConfig = require('registerGeneratedViewConfig');\");\n            return;\n\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  });\n  var validAttributes = j.objectExpression([].concat(_toConsumableArray(componentProps.map(function (schemaProp) {\n    return j.property('init', j.identifier(schemaProp.name), getReactDiffProcessValue(schemaProp.typeAnnotation));\n  })), _toConsumableArray(getValidAttributesForEvents(componentEvents))));\n  var bubblingEventNames = component.events.filter(function (event) {\n    return event.bubblingType === 'bubble';\n  }).reduce(function (bubblingEvents, event) {\n    if (event.paperTopLevelNameDeprecated) {\n      bubblingEvents.push(generateBubblingEventInfo(event, event.paperTopLevelNameDeprecated));\n    }\n\n    bubblingEvents.push(generateBubblingEventInfo(event));\n    return bubblingEvents;\n  }, []);\n  var bubblingEvents = bubblingEventNames.length > 0 ? j.property('init', j.identifier('bubblingEventTypes'), j.objectExpression(bubblingEventNames)) : null;\n  var directEventNames = component.events.filter(function (event) {\n    return event.bubblingType === 'direct';\n  }).reduce(function (directEvents, event) {\n    if (event.paperTopLevelNameDeprecated) {\n      directEvents.push(generateDirectEventInfo(event, event.paperTopLevelNameDeprecated));\n    }\n\n    directEvents.push(generateDirectEventInfo(event));\n    return directEvents;\n  }, []);\n  var directEvents = directEventNames.length > 0 ? j.property('init', j.identifier('directEventTypes'), j.objectExpression(directEventNames)) : null;\n  var properties = [j.property('init', j.identifier('uiViewClassName'), j.literal(componentName)), bubblingEvents, directEvents, j.property('init', j.identifier('validAttributes'), validAttributes)].filter(Boolean);\n  return j.objectExpression(properties);\n}\n\nfunction buildCommands(schema, componentName, component, imports) {\n  var commands = component.commands;\n\n  if (commands.length === 0) {\n    return null;\n  }\n\n  imports.add('const {dispatchCommand} = require(\"react-native/Libraries/Renderer/shims/ReactNative\");');\n  var properties = commands.map(function (command) {\n    var commandName = command.name;\n    var params = command.typeAnnotation.params;\n    var commandNameLiteral = j.literal(commandName);\n    var commandNameIdentifier = j.identifier(commandName);\n    var arrayParams = j.arrayExpression(params.map(function (param) {\n      return j.identifier(param.name);\n    }));\n    var expression = j.template.expression(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"dispatchCommand(ref, \", \", \", \")\"])), commandNameLiteral, arrayParams);\n    var functionParams = params.map(function (param) {\n      return j.identifier(param.name);\n    });\n    var property = j.property('init', commandNameIdentifier, j.functionExpression(null, [j.identifier('ref')].concat(_toConsumableArray(functionParams)), j.blockStatement([j.expressionStatement(expression)])));\n    property.method = true;\n    return property;\n  });\n  return j.exportNamedDeclaration(j.variableDeclaration('const', [j.variableDeclarator(j.identifier('Commands'), j.objectExpression(properties))]));\n}\n\nmodule.exports = {\n  generate: function generate(libraryName, schema) {\n    try {\n      var fileName = libraryName + \"NativeViewConfig.js\";\n      var imports = new Set();\n      var moduleResults = Object.keys(schema.modules).map(function (moduleName) {\n        var components = schema.modules[moduleName].components;\n\n        if (components == null) {\n          return null;\n        }\n\n        return Object.keys(components).map(function (componentName) {\n          var component = components[componentName];\n          var paperComponentName = component.paperComponentName ? component.paperComponentName : componentName;\n\n          if (component.paperComponentNameDeprecated) {\n            imports.add(UIMANAGER_IMPORT);\n          }\n\n          var deprecatedCheckBlock = component.paperComponentNameDeprecated ? deprecatedComponentTemplate.replace(/::_COMPONENT_NAME_::/g, componentName).replace(/::_COMPONENT_NAME_DEPRECATED_::/g, component.paperComponentNameDeprecated || '') : '';\n          var replacedTemplate = componentTemplate.replace(/::_COMPONENT_NAME_::/g, componentName).replace(/::_COMPONENT_NAME_WITH_COMPAT_SUPPORT_::/g, paperComponentName).replace(/::_DEPRECATION_CHECK_::/, deprecatedCheckBlock);\n          var replacedSourceRoot = j.withParser('flow')(replacedTemplate);\n          replacedSourceRoot.find(j.Identifier, {\n            name: 'VIEW_CONFIG'\n          }).replaceWith(buildViewConfig(schema, paperComponentName, component, imports));\n          var commands = buildCommands(schema, paperComponentName, component, imports);\n\n          if (commands) {\n            replacedSourceRoot.find(j.ExportDefaultDeclaration).insertAfter(j(commands).toSource());\n          }\n\n          var replacedSource = replacedSourceRoot.toSource({\n            quote: 'single',\n            trailingComma: true\n          });\n          return replacedSource;\n        }).join('\\n\\n');\n      }).filter(Boolean).join('\\n\\n');\n      var replacedTemplate = template.replace(/::_COMPONENT_CONFIG_::/g, moduleResults).replace('::_IMPORTS_::', Array.from(imports).sort().join('\\n'));\n      return new Map([[fileName, replacedTemplate]]);\n    } catch (error) {\n      console.error(\"\\nError parsing schema for \" + libraryName + \"\\n\");\n      console.error(JSON.stringify(schema));\n      throw error;\n    }\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/components/GenerateViewConfigJs.js"],"names":["j","require","template","UIMANAGER_IMPORT","getReactDiffProcessValue","typeAnnotation","type","literal","name","expression","Error","elementType","componentTemplate","trim","deprecatedComponentTemplate","normalizeInputEventName","startsWith","replace","toUpperCase","slice","getValidAttributesForEvents","events","map","eventType","property","identifier","generateBubblingEventInfo","event","nameOveride","objectExpression","generateDirectEventInfo","buildViewConfig","schema","componentName","component","imports","componentProps","props","componentEvents","extendsProps","forEach","extendProps","knownTypeName","add","validAttributes","schemaProp","bubblingEventNames","filter","bubblingType","reduce","bubblingEvents","paperTopLevelNameDeprecated","push","length","directEventNames","directEvents","properties","Boolean","buildCommands","commands","command","commandName","params","commandNameLiteral","commandNameIdentifier","arrayParams","arrayExpression","param","functionParams","functionExpression","blockStatement","expressionStatement","method","exportNamedDeclaration","variableDeclaration","variableDeclarator","module","exports","generate","libraryName","fileName","Set","moduleResults","Object","keys","modules","moduleName","components","paperComponentName","paperComponentNameDeprecated","deprecatedCheckBlock","replacedTemplate","replacedSourceRoot","withParser","find","Identifier","replaceWith","ExportDefaultDeclaration","insertAfter","toSource","replacedSource","quote","trailingComma","join","Array","from","sort","Map","error","console","JSON","stringify"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst j = require('jscodeshift');\n\nimport type {SchemaType} from '../../CodegenSchema';\n\n// File path -> contents\ntype FilesOutput = Map<string, string>;\n\nconst template = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n'use strict';\n\n::_IMPORTS_::\n\n::_COMPONENT_CONFIG_::\n`;\n\n// We use this to add to a set. Need to make sure we aren't importing\n// this multiple times.\nconst UIMANAGER_IMPORT = 'const {UIManager} = require(\"react-native\")';\n\nfunction getReactDiffProcessValue(typeAnnotation) {\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n    case 'StringTypeAnnotation':\n    case 'Int32TypeAnnotation':\n    case 'DoubleTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'ObjectTypeAnnotation':\n    case 'StringEnumTypeAnnotation':\n    case 'Int32EnumTypeAnnotation':\n      return j.literal(true);\n    case 'NativePrimitiveTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          return j.template.expression`{ process: require('processColor') }`;\n        case 'ImageSourcePrimitive':\n          return j.template\n            .expression`{ process: require('resolveAssetSource') }`;\n        case 'PointPrimitive':\n          return j.template.expression`{ diff: require('pointsDiffer') }`;\n        case 'EdgeInsetsPrimitive':\n          return j.template.expression`{ diff: require('insetsDiffer') }`;\n        default:\n          (typeAnnotation.name: empty);\n          throw new Error(\n            `Received unknown native typeAnnotation: \"${typeAnnotation.name}\"`,\n          );\n      }\n    case 'ArrayTypeAnnotation':\n      if (typeAnnotation.elementType.type === 'NativePrimitiveTypeAnnotation') {\n        switch (typeAnnotation.elementType.name) {\n          case 'ColorPrimitive':\n            return j.template\n              .expression`{ process: require('processColorArray') }`;\n          case 'ImageSourcePrimitive':\n            return j.literal(true);\n          case 'PointPrimitive':\n            return j.literal(true);\n          default:\n            throw new Error(\n              `Received unknown array native typeAnnotation: \"${\n                typeAnnotation.elementType.name\n              }\"`,\n            );\n        }\n      }\n      return j.literal(true);\n    default:\n      (typeAnnotation: empty);\n      throw new Error(\n        `Received unknown typeAnnotation: \"${typeAnnotation.type}\"`,\n      );\n  }\n}\n\nconst componentTemplate = `\nconst ::_COMPONENT_NAME_::ViewConfig = VIEW_CONFIG;\n\nlet nativeComponentName = '::_COMPONENT_NAME_WITH_COMPAT_SUPPORT_::';\n::_DEPRECATION_CHECK_::\nregisterGeneratedViewConfig(nativeComponentName, ::_COMPONENT_NAME_::ViewConfig);\n\nexport const __INTERNAL_VIEW_CONFIG = ::_COMPONENT_NAME_::ViewConfig;\n\nexport default nativeComponentName;\n`.trim();\n\nconst deprecatedComponentTemplate = `\nif (UIManager.getViewManagerConfig('::_COMPONENT_NAME_::')) {\n  nativeComponentName = '::_COMPONENT_NAME_::';\n} else if (UIManager.getViewManagerConfig('::_COMPONENT_NAME_DEPRECATED_::')){\n  nativeComponentName = '::_COMPONENT_NAME_DEPRECATED_::';\n} else {\n  throw new Error('Failed to find native component for either \"::_COMPONENT_NAME_::\" or \"::_COMPONENT_NAME_DEPRECATED_::\"')\n}\n`.trim();\n\n// Replicates the behavior of RCTNormalizeInputEventName in RCTEventDispatcher.m\nfunction normalizeInputEventName(name) {\n  if (name.startsWith('on')) {\n    return name.replace(/^on/, 'top');\n  } else if (!name.startsWith('top')) {\n    return `top${name[0].toUpperCase()}${name.slice(1)}`;\n  }\n\n  return name;\n}\n\n// Replicates the behavior of viewConfig in RCTComponentData.m\nfunction getValidAttributesForEvents(events) {\n  return events.map(eventType => {\n    return j.property('init', j.identifier(eventType.name), j.literal(true));\n  });\n}\n\nfunction generateBubblingEventInfo(event, nameOveride) {\n  return j.property(\n    'init',\n    j.identifier(nameOveride || normalizeInputEventName(event.name)),\n    j.objectExpression([\n      j.property(\n        'init',\n        j.identifier('phasedRegistrationNames'),\n        j.objectExpression([\n          j.property(\n            'init',\n            j.identifier('captured'),\n            j.literal(`${event.name}Capture`),\n          ),\n          j.property('init', j.identifier('bubbled'), j.literal(event.name)),\n        ]),\n      ),\n    ]),\n  );\n}\n\nfunction generateDirectEventInfo(event, nameOveride) {\n  return j.property(\n    'init',\n    j.identifier(nameOveride || normalizeInputEventName(event.name)),\n    j.objectExpression([\n      j.property(\n        'init',\n        j.identifier('registrationName'),\n        j.literal(event.name),\n      ),\n    ]),\n  );\n}\n\nfunction buildViewConfig(\n  schema: SchemaType,\n  componentName: string,\n  component,\n  imports,\n) {\n  const componentProps = component.props;\n  const componentEvents = component.events;\n\n  component.extendsProps.forEach(extendProps => {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add(\n              \"const registerGeneratedViewConfig = require('registerGeneratedViewConfig');\",\n            );\n\n            return;\n          default:\n            (extendProps.knownTypeName: empty);\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        (extendProps.type: empty);\n        throw new Error('Invalid extended type');\n    }\n  });\n\n  const validAttributes = j.objectExpression([\n    ...componentProps.map(schemaProp => {\n      return j.property(\n        'init',\n        j.identifier(schemaProp.name),\n        getReactDiffProcessValue(schemaProp.typeAnnotation),\n      );\n    }),\n    ...getValidAttributesForEvents(componentEvents),\n  ]);\n\n  const bubblingEventNames = component.events\n    .filter(event => event.bubblingType === 'bubble')\n    .reduce((bubblingEvents, event) => {\n      // We add in the deprecated paper name so that it is in the view config.\n      // This means either the old event name or the new event name can fire\n      // and be sent to the listener until the old top level name is removed.\n      if (event.paperTopLevelNameDeprecated) {\n        bubblingEvents.push(\n          generateBubblingEventInfo(event, event.paperTopLevelNameDeprecated),\n        );\n      }\n      bubblingEvents.push(generateBubblingEventInfo(event));\n      return bubblingEvents;\n    }, []);\n\n  const bubblingEvents =\n    bubblingEventNames.length > 0\n      ? j.property(\n          'init',\n          j.identifier('bubblingEventTypes'),\n          j.objectExpression(bubblingEventNames),\n        )\n      : null;\n\n  const directEventNames = component.events\n    .filter(event => event.bubblingType === 'direct')\n    .reduce((directEvents, event) => {\n      // We add in the deprecated paper name so that it is in the view config.\n      // This means either the old event name or the new event name can fire\n      // and be sent to the listener until the old top level name is removed.\n      if (event.paperTopLevelNameDeprecated) {\n        directEvents.push(\n          generateDirectEventInfo(event, event.paperTopLevelNameDeprecated),\n        );\n      }\n      directEvents.push(generateDirectEventInfo(event));\n      return directEvents;\n    }, []);\n\n  const directEvents =\n    directEventNames.length > 0\n      ? j.property(\n          'init',\n          j.identifier('directEventTypes'),\n          j.objectExpression(directEventNames),\n        )\n      : null;\n\n  const properties = [\n    j.property(\n      'init',\n      j.identifier('uiViewClassName'),\n      j.literal(componentName),\n    ),\n    bubblingEvents,\n    directEvents,\n    j.property('init', j.identifier('validAttributes'), validAttributes),\n  ].filter(Boolean);\n\n  return j.objectExpression(properties);\n}\n\nfunction buildCommands(\n  schema: SchemaType,\n  componentName: string,\n  component,\n  imports,\n) {\n  const commands = component.commands;\n\n  if (commands.length === 0) {\n    return null;\n  }\n\n  imports.add(\n    'const {dispatchCommand} = require(\"react-native/Libraries/Renderer/shims/ReactNative\");',\n  );\n\n  const properties = commands.map(command => {\n    const commandName = command.name;\n    const params = command.typeAnnotation.params;\n\n    const commandNameLiteral = j.literal(commandName);\n    const commandNameIdentifier = j.identifier(commandName);\n    const arrayParams = j.arrayExpression(\n      params.map(param => {\n        return j.identifier(param.name);\n      }),\n    );\n\n    const expression = j.template\n      .expression`dispatchCommand(ref, ${commandNameLiteral}, ${arrayParams})`;\n\n    const functionParams = params.map(param => {\n      return j.identifier(param.name);\n    });\n\n    const property = j.property(\n      'init',\n      commandNameIdentifier,\n      j.functionExpression(\n        null,\n        [j.identifier('ref'), ...functionParams],\n        j.blockStatement([j.expressionStatement(expression)]),\n      ),\n    );\n    property.method = true;\n\n    return property;\n  });\n\n  return j.exportNamedDeclaration(\n    j.variableDeclaration('const', [\n      j.variableDeclarator(\n        j.identifier('Commands'),\n        j.objectExpression(properties),\n      ),\n    ]),\n  );\n}\n\nmodule.exports = {\n  generate(libraryName: string, schema: SchemaType): FilesOutput {\n    try {\n      const fileName = `${libraryName}NativeViewConfig.js`;\n      const imports: Set<string> = new Set();\n\n      const moduleResults = Object.keys(schema.modules)\n        .map(moduleName => {\n          const components = schema.modules[moduleName].components;\n          // No components in this module\n          if (components == null) {\n            return null;\n          }\n\n          return Object.keys(components)\n            .map(componentName => {\n              const component = components[componentName];\n\n              const paperComponentName = component.paperComponentName\n                ? component.paperComponentName\n                : componentName;\n\n              if (component.paperComponentNameDeprecated) {\n                imports.add(UIMANAGER_IMPORT);\n              }\n\n              const deprecatedCheckBlock = component.paperComponentNameDeprecated\n                ? deprecatedComponentTemplate\n                    .replace(/::_COMPONENT_NAME_::/g, componentName)\n                    .replace(\n                      /::_COMPONENT_NAME_DEPRECATED_::/g,\n                      component.paperComponentNameDeprecated || '',\n                    )\n                : '';\n\n              const replacedTemplate = componentTemplate\n                .replace(/::_COMPONENT_NAME_::/g, componentName)\n                .replace(\n                  /::_COMPONENT_NAME_WITH_COMPAT_SUPPORT_::/g,\n                  paperComponentName,\n                )\n                .replace(/::_DEPRECATION_CHECK_::/, deprecatedCheckBlock);\n\n              const replacedSourceRoot = j.withParser('flow')(replacedTemplate);\n\n              replacedSourceRoot\n                .find(j.Identifier, {\n                  name: 'VIEW_CONFIG',\n                })\n                .replaceWith(\n                  buildViewConfig(\n                    schema,\n                    paperComponentName,\n                    component,\n                    imports,\n                  ),\n                );\n\n              const commands = buildCommands(\n                schema,\n                paperComponentName,\n                component,\n                imports,\n              );\n              if (commands) {\n                replacedSourceRoot\n                  .find(j.ExportDefaultDeclaration)\n                  .insertAfter(j(commands).toSource());\n              }\n\n              const replacedSource: string = replacedSourceRoot.toSource({\n                quote: 'single',\n                trailingComma: true,\n              });\n\n              return replacedSource;\n            })\n            .join('\\n\\n');\n        })\n        .filter(Boolean)\n        .join('\\n\\n');\n\n      const replacedTemplate = template\n        .replace(/::_COMPONENT_CONFIG_::/g, moduleResults)\n        .replace(\n          '::_IMPORTS_::',\n          Array.from(imports)\n            .sort()\n            .join('\\n'),\n        );\n\n      return new Map([[fileName, replacedTemplate]]);\n    } catch (error) {\n      console.error(`\\nError parsing schema for ${libraryName}\\n`);\n      console.error(JSON.stringify(schema));\n      throw error;\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"script"}