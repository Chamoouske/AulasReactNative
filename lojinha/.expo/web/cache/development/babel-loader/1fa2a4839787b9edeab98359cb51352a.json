{"ast":null,"code":"#!/usr/bin/env node\n\nvar fs = require('fs');\n\nvar yargs = require('yargs');\n\nvar _yargs$usage$option$o = yargs.usage('').option('path', {\n  alias: 'p',\n  string: true\n}).option('output', {\n  alias: 'o',\n  string: true\n}).demandOption('path').demandOption('output'),\n    argv = _yargs$usage$option$o.argv;\n\nvar path = argv.path + \"/svgs/\";\nvar generatedJSON = {};\nfs.readdirSync(path).filter(function (file) {\n  return fs.statSync(path + file).isDirectory();\n}).forEach(function (file) {\n  var icons = fs.readdirSync(path + file);\n  generatedJSON[file] = icons.map(function (icon) {\n    return icon.split('.')[0];\n  });\n});\nfs.writeFileSync(argv.output, JSON.stringify(generatedJSON, null, 2) + \"\\r\\n\", 'utf8');","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/bin/generate-fontawesome5-metadata.js"],"names":["fs","require","yargs","usage","option","alias","string","demandOption","argv","path","generatedJSON","readdirSync","filter","file","statSync","isDirectory","forEach","icons","map","icon","split","writeFileSync","output","JSON","stringify"],"mappings":"AAAA;;AAGA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;4BAEiBC,KAAK,CACnBC,KADc,CACR,EADQ,EAEdC,MAFc,CAEP,MAFO,EAEC;AACdC,EAAAA,KAAK,EAAE,GADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAFD,EAMdF,MANc,CAMP,QANO,EAMG;AAChBC,EAAAA,KAAK,EAAE,GADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CANH,EAUdC,YAVc,CAUD,MAVC,EAWdA,YAXc,CAWD,QAXC,C;IAATC,I,yBAAAA,I;;AAaR,IAAMC,IAAI,GAAMD,IAAI,CAACC,IAAX,WAAV;AAEA,IAAMC,aAAa,GAAG,EAAtB;AACAV,EAAE,CAACW,WAAH,CAAeF,IAAf,EACGG,MADH,CACU,UAAAC,IAAI;AAAA,SAAIb,EAAE,CAACc,QAAH,CAAYL,IAAI,GAAGI,IAAnB,EAAyBE,WAAzB,EAAJ;AAAA,CADd,EAEGC,OAFH,CAEW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGjB,EAAE,CAACW,WAAH,CAAeF,IAAI,GAAGI,IAAtB,CAAd;AACAH,EAAAA,aAAa,CAACG,IAAD,CAAb,GAAsBI,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAJ;AAAA,GAAd,CAAtB;AACD,CALH;AAOApB,EAAE,CAACqB,aAAH,CACEb,IAAI,CAACc,MADP,EAEKC,IAAI,CAACC,SAAL,CAAed,aAAf,EAA8B,IAA9B,EAAoC,CAApC,CAFL,WAGE,MAHF","sourcesContent":["#!/usr/bin/env node\n/* eslint-disable no-console */\n\nconst fs = require('fs');\nconst yargs = require('yargs');\n\nconst { argv } = yargs\n  .usage('')\n  .option('path', {\n    alias: 'p',\n    string: true,\n  })\n  .option('output', {\n    alias: 'o',\n    string: true,\n  })\n  .demandOption('path')\n  .demandOption('output');\n\nconst path = `${argv.path}/svgs/`;\n\nconst generatedJSON = {};\nfs.readdirSync(path)\n  .filter(file => fs.statSync(path + file).isDirectory())\n  .forEach(file => {\n    const icons = fs.readdirSync(path + file);\n    generatedJSON[file] = icons.map(icon => icon.split('.')[0]);\n  });\n\nfs.writeFileSync(\n  argv.output,\n  `${JSON.stringify(generatedJSON, null, 2)}\\r\\n`,\n  'utf8'\n);\n"]},"metadata":{},"sourceType":"script"}