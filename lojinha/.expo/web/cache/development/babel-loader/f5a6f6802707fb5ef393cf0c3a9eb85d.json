{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ReactNativeViewViewConfig from \"../Components/View/ReactNativeViewViewConfig\";\nvar ImageViewViewConfig = {\n  uiViewClassName: 'RCTImageView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topLoadStart: {\n      registrationName: 'onLoadStart'\n    },\n    topProgress: {\n      registrationName: 'onProgress'\n    },\n    topError: {\n      registrationName: 'onError'\n    },\n    topPartialLoad: {\n      registrationName: 'onPartialLoad'\n    },\n    topLoad: {\n      registrationName: 'onLoad'\n    },\n    topLoadEnd: {\n      registrationName: 'onLoadEnd'\n    }\n  },\n  validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewViewConfig.validAttributes), {}, {\n    blurRadius: true,\n    capInsets: {\n      diff: require(\"../Utilities/differ/insetsDiffer\")\n    },\n    defaultSource: {\n      process: require(\"./resolveAssetSource\")\n    },\n    defaultSrc: true,\n    fadeDuration: true,\n    headers: true,\n    loadingIndicatorSrc: true,\n    onError: true,\n    onLoad: true,\n    onLoadEnd: true,\n    onLoadStart: true,\n    onPartialLoad: true,\n    onProgress: true,\n    overlayColor: {\n      process: require(\"../StyleSheet/processColor\")\n    },\n    progressiveRenderingEnabled: true,\n    resizeMethod: true,\n    resizeMode: true,\n    shouldNotifyLoadEvents: true,\n    source: true,\n    src: true,\n    tintColor: {\n      process: require(\"../StyleSheet/processColor\")\n    }\n  })\n};\nmodule.exports = ImageViewViewConfig;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/ImageViewViewConfig.js"],"names":["ReactNativeViewViewConfig","ImageViewViewConfig","uiViewClassName","bubblingEventTypes","directEventTypes","topLoadStart","registrationName","topProgress","topError","topPartialLoad","topLoad","topLoadEnd","validAttributes","blurRadius","capInsets","diff","require","defaultSource","process","defaultSrc","fadeDuration","headers","loadingIndicatorSrc","onError","onLoad","onLoadEnd","onLoadStart","onPartialLoad","onProgress","overlayColor","progressiveRenderingEnabled","resizeMethod","resizeMode","shouldNotifyLoadEvents","source","src","tintColor","module","exports"],"mappings":"AAUA;;;;;;;;AAEA,OAAOA,yBAAP;AAGA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,eAAe,EAAE,cADS;AAE1BC,EAAAA,kBAAkB,EAAE,EAFM;AAG1BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,gBAAgB,EAAE;AADN,KADE;AAIhBC,IAAAA,WAAW,EAAE;AACXD,MAAAA,gBAAgB,EAAE;AADP,KAJG;AAOhBE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,gBAAgB,EAAE;AADV,KAPM;AAUhBG,IAAAA,cAAc,EAAE;AACdH,MAAAA,gBAAgB,EAAE;AADJ,KAVA;AAahBI,IAAAA,OAAO,EAAE;AACPJ,MAAAA,gBAAgB,EAAE;AADX,KAbO;AAgBhBK,IAAAA,UAAU,EAAE;AACVL,MAAAA,gBAAgB,EAAE;AADR;AAhBI,GAHQ;AAuB1BM,EAAAA,eAAe,kCACVZ,yBAAyB,CAACY,eADhB;AAEbC,IAAAA,UAAU,EAAE,IAFC;AAIbC,IAAAA,SAAS,EAAE;AAACC,MAAAA,IAAI,EAAGC,OAAO;AAAf,KAJE;AAKbC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAEF,OAAO;AADH,KALF;AAQbG,IAAAA,UAAU,EAAE,IARC;AASbC,IAAAA,YAAY,EAAE,IATD;AAUbC,IAAAA,OAAO,EAAE,IAVI;AAWbC,IAAAA,mBAAmB,EAAE,IAXR;AAYbC,IAAAA,OAAO,EAAE,IAZI;AAabC,IAAAA,MAAM,EAAE,IAbK;AAcbC,IAAAA,SAAS,EAAE,IAdE;AAebC,IAAAA,WAAW,EAAE,IAfA;AAgBbC,IAAAA,aAAa,EAAE,IAhBF;AAiBbC,IAAAA,UAAU,EAAE,IAjBC;AAkBbC,IAAAA,YAAY,EAAE;AAACX,MAAAA,OAAO,EAAEF,OAAO;AAAjB,KAlBD;AAmBbc,IAAAA,2BAA2B,EAAE,IAnBhB;AAoBbC,IAAAA,YAAY,EAAE,IApBD;AAqBbC,IAAAA,UAAU,EAAE,IArBC;AAsBbC,IAAAA,sBAAsB,EAAE,IAtBX;AAuBbC,IAAAA,MAAM,EAAE,IAvBK;AAwBbC,IAAAA,GAAG,EAAE,IAxBQ;AAyBbC,IAAAA,SAAS,EAAE;AAAClB,MAAAA,OAAO,EAAEF,OAAO;AAAjB;AAzBE;AAvBW,CAA5B;AAoDAqB,MAAM,CAACC,OAAP,GAAkBrC,mBAAlB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport ReactNativeViewViewConfig from '../Components/View/ReactNativeViewViewConfig';\nimport type {ReactNativeBaseComponentViewConfig} from '../Renderer/shims/ReactNativeTypes';\n\nconst ImageViewViewConfig = {\n  uiViewClassName: 'RCTImageView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topLoadStart: {\n      registrationName: 'onLoadStart',\n    },\n    topProgress: {\n      registrationName: 'onProgress',\n    },\n    topError: {\n      registrationName: 'onError',\n    },\n    topPartialLoad: {\n      registrationName: 'onPartialLoad',\n    },\n    topLoad: {\n      registrationName: 'onLoad',\n    },\n    topLoadEnd: {\n      registrationName: 'onLoadEnd',\n    },\n  },\n  validAttributes: {\n    ...ReactNativeViewViewConfig.validAttributes,\n    blurRadius: true,\n    // flowlint-next-line unclear-type:off\n    capInsets: {diff: (require('../Utilities/differ/insetsDiffer'): any)},\n    defaultSource: {\n      process: require('./resolveAssetSource'),\n    },\n    defaultSrc: true,\n    fadeDuration: true,\n    headers: true,\n    loadingIndicatorSrc: true,\n    onError: true,\n    onLoad: true,\n    onLoadEnd: true,\n    onLoadStart: true,\n    onPartialLoad: true,\n    onProgress: true,\n    overlayColor: {process: require('../StyleSheet/processColor')},\n    progressiveRenderingEnabled: true,\n    resizeMethod: true,\n    resizeMode: true,\n    shouldNotifyLoadEvents: true,\n    source: true,\n    src: true,\n    tintColor: {process: require('../StyleSheet/processColor')},\n  },\n};\n\nmodule.exports = (ImageViewViewConfig: ReactNativeBaseComponentViewConfig<>);\n"]},"metadata":{},"sourceType":"module"}