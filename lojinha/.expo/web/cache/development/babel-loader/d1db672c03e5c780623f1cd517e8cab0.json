{"ast":null,"code":"'use strict';\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Timer/TimerExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterButton = require(\"../../components/RNTesterButton\");\n\nvar React = require('react');\n\nvar performanceNow = require('fbjs/lib/performanceNow');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar ToastAndroid = require(\"react-native-web/dist/exports/ToastAndroid\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nfunction burnCPU(milliseconds) {\n  var start = performanceNow();\n\n  while (performanceNow() < start + milliseconds) {}\n}\n\nvar RequestIdleCallbackTester = function (_React$Component) {\n  _inherits(RequestIdleCallbackTester, _React$Component);\n\n  var _super = _createSuper(RequestIdleCallbackTester);\n\n  function RequestIdleCallbackTester() {\n    var _this;\n\n    _classCallCheck(this, RequestIdleCallbackTester);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      message: '-'\n    };\n    _this._idleTimer = null;\n    _this._iters = 0;\n\n    _this._runWithTimeout = function () {\n      if (_this._idleTimer != null) {\n        cancelIdleCallback(_this._idleTimer);\n        _this._idleTimer = null;\n      }\n\n      _this._idleTimer = requestIdleCallback(function (deadline) {\n        _this.setState({\n          message: deadline.timeRemaining() + \"ms remaining in frame, it did timeout: \" + (deadline.didTimeout ? 'yes' : 'no')\n        });\n      }, {\n        timeout: 100\n      });\n      burnCPU(100);\n    };\n\n    _this._runBackground = function () {\n      if (_this._idleTimer != null) {\n        cancelIdleCallback(_this._idleTimer);\n        _this._idleTimer = null;\n      }\n\n      var handler = function handler(deadline) {\n        while (deadline.timeRemaining() > 5) {\n          burnCPU(5);\n\n          _this.setState({\n            message: \"Burned CPU for 5ms \" + _this._iters++ + \" times, \" + deadline.timeRemaining() + \"ms remaining in frame\"\n          });\n        }\n\n        _this._idleTimer = requestIdleCallback(handler);\n      };\n\n      _this._idleTimer = requestIdleCallback(handler);\n    };\n\n    _this._stopBackground = function () {\n      _this._iters = 0;\n\n      if (_this._idleTimer != null) {\n        cancelIdleCallback(_this._idleTimer);\n        _this._idleTimer = null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RequestIdleCallbackTester, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._idleTimer != null) {\n        cancelIdleCallback(this._idleTimer);\n        this._idleTimer = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterButton, {\n        onPress: this._run.bind(this, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, \"Run requestIdleCallback\"), React.createElement(RNTesterButton, {\n        onPress: this._run.bind(this, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"Burn CPU inside of requestIdleCallback\"), React.createElement(RNTesterButton, {\n        onPress: this._runWithTimeout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, \"Run requestIdleCallback with timeout option\"), React.createElement(RNTesterButton, {\n        onPress: this._runBackground,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"Run background task\"), React.createElement(RNTesterButton, {\n        onPress: this._stopBackground,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"Stop background task\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, this.state.message));\n    }\n  }, {\n    key: \"_run\",\n    value: function _run(shouldBurnCPU) {\n      var _this2 = this;\n\n      if (this._idleTimer != null) {\n        cancelIdleCallback(this._idleTimer);\n        this._idleTimer = null;\n      }\n\n      this._idleTimer = requestIdleCallback(function (deadline) {\n        var message = '';\n\n        if (shouldBurnCPU) {\n          burnCPU(10);\n          message = 'Burned CPU for 10ms,';\n        }\n\n        _this2.setState({\n          message: message + \" \" + deadline.timeRemaining() + \"ms remaining in frame\"\n        });\n      });\n    }\n  }]);\n\n  return RequestIdleCallbackTester;\n}(React.Component);\n\nvar TimerTester = function (_React$Component2) {\n  _inherits(TimerTester, _React$Component2);\n\n  var _super2 = _createSuper(TimerTester);\n\n  function TimerTester() {\n    var _this3;\n\n    _classCallCheck(this, TimerTester);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n    _this3._ii = 0;\n    _this3._iters = 0;\n    _this3._start = 0;\n    _this3._timerId = null;\n    _this3._rafId = null;\n    _this3._intervalId = null;\n    _this3._immediateId = null;\n    _this3._timerFn = null;\n\n    _this3._run = function () {\n      if (!_this3._start) {\n        var d = new Date();\n        _this3._start = d.getTime();\n        _this3._iters = 100;\n        _this3._ii = 0;\n\n        if (_this3.props.type === 'setTimeout') {\n          if (_this3.props.dt !== undefined && _this3.props.dt < 1) {\n            _this3._iters = 5000;\n          } else if (_this3.props.dt !== undefined && _this3.props.dt > 20) {\n            _this3._iters = 10;\n          }\n\n          _this3._timerFn = function () {\n            _this3._timerId = setTimeout(_this3._run, _this3.props.dt);\n          };\n        } else if (_this3.props.type === 'requestAnimationFrame') {\n          _this3._timerFn = function () {\n            _this3._rafId = requestAnimationFrame(_this3._run);\n          };\n        } else if (_this3.props.type === 'setImmediate') {\n          _this3._iters = 5000;\n\n          _this3._timerFn = function () {\n            _this3._immediateId = setImmediate(_this3._run);\n          };\n        } else if (_this3.props.type === 'setInterval') {\n          _this3._iters = 30;\n          _this3._timerFn = null;\n          _this3._intervalId = setInterval(_this3._run, _this3.props.dt);\n        }\n      }\n\n      if (_this3._ii >= _this3._iters && _this3._intervalId == null) {\n        var _d = new Date();\n\n        var e = _d.getTime() - _this3._start;\n\n        var msg = 'Finished ' + _this3._ii + ' ' + _this3.props.type + ' calls.\\n' + 'Elapsed time: ' + e + ' ms\\n' + e / _this3._ii + ' ms / iter';\n        console.log(msg);\n\n        if (Platform.OS === 'ios') {\n          Alert.alert(msg);\n        } else if (Platform.OS === 'android') {\n          ToastAndroid.show(msg, ToastAndroid.SHORT);\n        }\n\n        _this3._start = 0;\n\n        _this3.forceUpdate(function () {\n          _this3._ii = 0;\n        });\n\n        return;\n      }\n\n      _this3._ii++;\n\n      if (_this3._ii % (_this3._iters / 5) === 0) {\n        _this3.forceUpdate();\n      }\n\n      if (_this3._timerFn) {\n        _this3._timerId = _this3._timerFn();\n      }\n    };\n\n    _this3.clear = function () {\n      if (_this3._intervalId != null) {\n        clearInterval(_this3._intervalId);\n        _this3._intervalId = null;\n        _this3._iters = _this3._ii;\n\n        _this3._run();\n      }\n    };\n\n    return _this3;\n  }\n\n  _createClass(TimerTester, [{\n    key: \"render\",\n    value: function render() {\n      var args = 'fn' + (this.props.dt !== undefined ? ', ' + this.props.dt : '');\n      return React.createElement(RNTesterButton, {\n        onPress: this._run,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, \"Measure: \", this.props.type, \"(\", args, \") - \", this._ii || 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._timerId != null) {\n        clearTimeout(this._timerId);\n        this._timerId = null;\n      }\n\n      if (this._rafId != null) {\n        cancelAnimationFrame(this._rafId);\n        this._rafId = null;\n      }\n\n      if (this._immediateId != null) {\n        clearImmediate(this._immediateId);\n        this._immediateId = null;\n      }\n\n      if (this._intervalId != null) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    }\n  }]);\n\n  return TimerTester;\n}(React.Component);\n\nexports.framework = 'React';\nexports.title = 'Timers';\nexports.description = 'A demonstration of Timers in React Native.';\nexports.examples = [{\n  title: 'this.setTimeout(fn, t)',\n  description: 'Execute function fn t milliseconds in the future.  If ' + 't === 0, it will be enqueued immediately in the next event loop.  ' + 'Larger values will fire on the closest frame.',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }\n    }, React.createElement(TimerTester, {\n      type: \"setTimeout\",\n      dt: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }), React.createElement(TimerTester, {\n      type: \"setTimeout\",\n      dt: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }), React.createElement(TimerTester, {\n      type: \"setTimeout\",\n      dt: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'this.requestAnimationFrame(fn)',\n  description: 'Execute function fn on the next frame.',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, React.createElement(TimerTester, {\n      type: \"requestAnimationFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'this.requestIdleCallback(fn)',\n  description: 'Execute function fn on the next JS frame that has idle time',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }\n    }, React.createElement(RequestIdleCallbackTester, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'this.setImmediate(fn)',\n  description: 'Execute function fn at the end of the current JS event loop.',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, React.createElement(TimerTester, {\n      type: \"setImmediate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'this.setInterval(fn, t)',\n  description: 'Execute function fn every t milliseconds until cancelled ' + 'or component is unmounted.',\n  render: function render() {\n    var IntervalExample = function (_React$Component3) {\n      _inherits(IntervalExample, _React$Component3);\n\n      var _super3 = _createSuper(IntervalExample);\n\n      function IntervalExample() {\n        var _this4;\n\n        _classCallCheck(this, IntervalExample);\n\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        _this4 = _super3.call.apply(_super3, [this].concat(args));\n        _this4.state = {\n          showTimer: true\n        };\n\n        _this4._renderTimer = function () {\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this4),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 13\n            }\n          }, React.createElement(TimerTester, {\n            ref: function ref(_ref) {\n              return _this4._timerTester = _ref;\n            },\n            dt: 25,\n            type: \"setInterval\",\n            __self: _assertThisInitialized(_this4),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }\n          }), React.createElement(RNTesterButton, {\n            onPress: function onPress() {\n              return _this4._timerTester && _this4._timerTester.clear();\n            },\n            __self: _assertThisInitialized(_this4),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }\n          }, \"Clear interval\"));\n        };\n\n        _this4._toggleTimer = function () {\n          _this4.setState({\n            showTimer: !_this4.state.showTimer\n          });\n        };\n\n        return _this4;\n      }\n\n      _createClass(IntervalExample, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 13\n            }\n          }, this.state.showTimer && this._renderTimer(), React.createElement(RNTesterButton, {\n            onPress: this._toggleTimer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }\n          }, this.state.showTimer ? 'Unmount timer' : 'Mount new timer'));\n        }\n      }]);\n\n      return IntervalExample;\n    }(React.Component);\n\n    return React.createElement(IntervalExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Timer/TimerExample.js"],"names":["RNTesterButton","require","React","performanceNow","burnCPU","milliseconds","start","RequestIdleCallbackTester","state","message","_idleTimer","_iters","_runWithTimeout","cancelIdleCallback","requestIdleCallback","deadline","setState","timeRemaining","didTimeout","timeout","_runBackground","handler","_stopBackground","_run","bind","shouldBurnCPU","Component","TimerTester","_ii","_start","_timerId","_rafId","_intervalId","_immediateId","_timerFn","d","Date","getTime","props","type","dt","undefined","setTimeout","requestAnimationFrame","setImmediate","setInterval","e","msg","console","log","Platform","OS","Alert","alert","ToastAndroid","show","SHORT","forceUpdate","clear","clearInterval","args","clearTimeout","cancelAnimationFrame","clearImmediate","exports","framework","title","description","examples","render","IntervalExample","showTimer","_renderTimer","ref","_timerTester","_toggleTimer"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst RNTesterButton = require('../../components/RNTesterButton');\nconst React = require('react');\n\nconst performanceNow = require('fbjs/lib/performanceNow');\n\nconst {Alert, Platform, ToastAndroid, Text, View} = require('react-native');\n\nfunction burnCPU(milliseconds) {\n  const start = performanceNow();\n  while (performanceNow() < start + milliseconds) {}\n}\n\ntype RequestIdleCallbackTesterProps = $ReadOnly<{||}>;\ntype RequestIdleCallbackTesterState = {|message: string|};\n\nclass RequestIdleCallbackTester extends React.Component<\n  RequestIdleCallbackTesterProps,\n  RequestIdleCallbackTesterState,\n> {\n  state = {\n    message: '-',\n  };\n\n  _idleTimer: ?IdleCallbackID = null;\n  _iters = 0;\n\n  componentWillUnmount() {\n    if (this._idleTimer != null) {\n      cancelIdleCallback(this._idleTimer);\n      this._idleTimer = null;\n    }\n  }\n\n  render() {\n    return (\n      <View>\n        <RNTesterButton onPress={this._run.bind(this, false)}>\n          Run requestIdleCallback\n        </RNTesterButton>\n\n        <RNTesterButton onPress={this._run.bind(this, true)}>\n          Burn CPU inside of requestIdleCallback\n        </RNTesterButton>\n\n        <RNTesterButton onPress={this._runWithTimeout}>\n          Run requestIdleCallback with timeout option\n        </RNTesterButton>\n\n        <RNTesterButton onPress={this._runBackground}>\n          Run background task\n        </RNTesterButton>\n\n        <RNTesterButton onPress={this._stopBackground}>\n          Stop background task\n        </RNTesterButton>\n\n        <Text>{this.state.message}</Text>\n      </View>\n    );\n  }\n\n  _run(shouldBurnCPU: boolean) {\n    if (this._idleTimer != null) {\n      cancelIdleCallback(this._idleTimer);\n      this._idleTimer = null;\n    }\n\n    this._idleTimer = requestIdleCallback(deadline => {\n      let message = '';\n\n      if (shouldBurnCPU) {\n        burnCPU(10);\n        message = 'Burned CPU for 10ms,';\n      }\n      this.setState({\n        message: `${message} ${deadline.timeRemaining()}ms remaining in frame`,\n      });\n    });\n  }\n\n  _runWithTimeout = () => {\n    if (this._idleTimer != null) {\n      cancelIdleCallback(this._idleTimer);\n      this._idleTimer = null;\n    }\n\n    this._idleTimer = requestIdleCallback(\n      deadline => {\n        this.setState({\n          message: `${deadline.timeRemaining()}ms remaining in frame, it did timeout: ${\n            deadline.didTimeout ? 'yes' : 'no'\n          }`,\n        });\n      },\n      {timeout: 100},\n    );\n    burnCPU(100);\n  };\n\n  _runBackground = () => {\n    if (this._idleTimer != null) {\n      cancelIdleCallback(this._idleTimer);\n      this._idleTimer = null;\n    }\n\n    const handler = deadline => {\n      while (deadline.timeRemaining() > 5) {\n        burnCPU(5);\n        this.setState({\n          message: `Burned CPU for 5ms ${this\n            ._iters++} times, ${deadline.timeRemaining()}ms remaining in frame`,\n        });\n      }\n\n      this._idleTimer = requestIdleCallback(handler);\n    };\n    this._idleTimer = requestIdleCallback(handler);\n  };\n\n  _stopBackground = () => {\n    this._iters = 0;\n    if (this._idleTimer != null) {\n      cancelIdleCallback(this._idleTimer);\n      this._idleTimer = null;\n    }\n  };\n}\n\ntype TimerTesterProps = $ReadOnly<{|\n  dt?: number,\n  type: string,\n|}>;\n\nclass TimerTester extends React.Component<TimerTesterProps> {\n  _ii = 0;\n  _iters = 0;\n  _start = 0;\n  _timerId: ?TimeoutID = null;\n  _rafId: ?AnimationFrameID = null;\n  _intervalId: ?IntervalID = null;\n  _immediateId: ?Object = null;\n  _timerFn: ?() => any = null;\n\n  render() {\n    const args =\n      'fn' + (this.props.dt !== undefined ? ', ' + this.props.dt : '');\n    return (\n      <RNTesterButton onPress={this._run}>\n        Measure: {this.props.type}({args}) - {this._ii || 0}\n      </RNTesterButton>\n    );\n  }\n\n  componentWillUnmount() {\n    if (this._timerId != null) {\n      clearTimeout(this._timerId);\n      this._timerId = null;\n    }\n\n    if (this._rafId != null) {\n      cancelAnimationFrame(this._rafId);\n      this._rafId = null;\n    }\n\n    if (this._immediateId != null) {\n      clearImmediate(this._immediateId);\n      this._immediateId = null;\n    }\n\n    if (this._intervalId != null) {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n    }\n  }\n\n  _run = () => {\n    if (!this._start) {\n      const d = new Date();\n      this._start = d.getTime();\n      this._iters = 100;\n      this._ii = 0;\n      if (this.props.type === 'setTimeout') {\n        if (this.props.dt !== undefined && this.props.dt < 1) {\n          this._iters = 5000;\n        } else if (this.props.dt !== undefined && this.props.dt > 20) {\n          this._iters = 10;\n        }\n        this._timerFn = () => {\n          this._timerId = setTimeout(this._run, this.props.dt);\n        };\n      } else if (this.props.type === 'requestAnimationFrame') {\n        this._timerFn = () => {\n          this._rafId = requestAnimationFrame(this._run);\n        };\n      } else if (this.props.type === 'setImmediate') {\n        this._iters = 5000;\n        this._timerFn = () => {\n          this._immediateId = setImmediate(this._run);\n        };\n      } else if (this.props.type === 'setInterval') {\n        this._iters = 30; // Only used for forceUpdate periodicity\n        this._timerFn = null;\n        this._intervalId = setInterval(this._run, this.props.dt);\n      }\n    }\n    if (this._ii >= this._iters && this._intervalId == null) {\n      const d = new Date();\n      const e = d.getTime() - this._start;\n      const msg =\n        'Finished ' +\n        this._ii +\n        ' ' +\n        this.props.type +\n        ' calls.\\n' +\n        'Elapsed time: ' +\n        e +\n        ' ms\\n' +\n        e / this._ii +\n        ' ms / iter';\n      console.log(msg);\n      if (Platform.OS === 'ios') {\n        Alert.alert(msg);\n      } else if (Platform.OS === 'android') {\n        ToastAndroid.show(msg, ToastAndroid.SHORT);\n      }\n      this._start = 0;\n      this.forceUpdate(() => {\n        this._ii = 0;\n      });\n      return;\n    }\n    this._ii++;\n    // Only re-render occasionally so we don't slow down timers.\n    if (this._ii % (this._iters / 5) === 0) {\n      this.forceUpdate();\n    }\n    if (this._timerFn) {\n      this._timerId = this._timerFn();\n    }\n  };\n\n  clear = () => {\n    if (this._intervalId != null) {\n      clearInterval(this._intervalId);\n      // Configure things so we can do a final run to update UI and reset state.\n      this._intervalId = null;\n      this._iters = this._ii;\n      this._run();\n    }\n  };\n}\n\nexports.framework = 'React';\nexports.title = 'Timers';\nexports.description = 'A demonstration of Timers in React Native.';\n\nexports.examples = [\n  {\n    title: 'this.setTimeout(fn, t)',\n    description: ('Execute function fn t milliseconds in the future.  If ' +\n      't === 0, it will be enqueued immediately in the next event loop.  ' +\n      'Larger values will fire on the closest frame.': string),\n    render: function(): React.Node {\n      return (\n        <View>\n          <TimerTester type=\"setTimeout\" dt={0} />\n          <TimerTester type=\"setTimeout\" dt={1} />\n          <TimerTester type=\"setTimeout\" dt={100} />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'this.requestAnimationFrame(fn)',\n    description: 'Execute function fn on the next frame.',\n    render: function(): React.Node {\n      return (\n        <View>\n          <TimerTester type=\"requestAnimationFrame\" />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'this.requestIdleCallback(fn)',\n    description: 'Execute function fn on the next JS frame that has idle time',\n    render: function(): React.Node {\n      return (\n        <View>\n          <RequestIdleCallbackTester />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'this.setImmediate(fn)',\n    description: 'Execute function fn at the end of the current JS event loop.',\n    render: function(): React.Node {\n      return (\n        <View>\n          <TimerTester type=\"setImmediate\" />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'this.setInterval(fn, t)',\n    description: ('Execute function fn every t milliseconds until cancelled ' +\n      'or component is unmounted.': string),\n    render: function(): React.Node {\n      type IntervalExampleProps = $ReadOnly<{||}>;\n      type IntervalExampleState = {|\n        showTimer: boolean,\n      |};\n\n      class IntervalExample extends React.Component<\n        IntervalExampleProps,\n        IntervalExampleState,\n      > {\n        state = {\n          showTimer: true,\n        };\n\n        _timerTester: ?React.ElementRef<typeof TimerTester>;\n\n        render() {\n          return (\n            <View>\n              {this.state.showTimer && this._renderTimer()}\n              <RNTesterButton onPress={this._toggleTimer}>\n                {this.state.showTimer ? 'Unmount timer' : 'Mount new timer'}\n              </RNTesterButton>\n            </View>\n          );\n        }\n\n        _renderTimer = () => {\n          return (\n            <View>\n              <TimerTester\n                ref={ref => (this._timerTester = ref)}\n                dt={25}\n                type=\"setInterval\"\n              />\n              <RNTesterButton\n                onPress={() => this._timerTester && this._timerTester.clear()}>\n                Clear interval\n              </RNTesterButton>\n            </View>\n          );\n        };\n\n        _toggleTimer = () => {\n          this.setState({showTimer: !this.state.showTimer});\n        };\n      }\n\n      return <IntervalExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}