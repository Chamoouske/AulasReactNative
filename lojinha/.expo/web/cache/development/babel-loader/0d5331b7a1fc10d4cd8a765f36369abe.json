{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SignedSource = require('signedsource');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar path = require('path');\n\nvar reactDocs = require('react-docgen');\n\nvar GENERATE_ANNOTATION = '@' + 'generate-docs';\nvar RN_ROOT = path.join(__dirname, '..');\nvar OUTPUT_PATH = path.join(RN_ROOT, 'docs', 'generatedComponentApiDocs.js');\nvar TEMPLATE = \"/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * This file is used by the React Native website to show the props of core components\\n * This file was generated by running scripts/generate-api-docs.js\\n *\\n * ::_SIGNING_TOKEN_::\\n */\\n\\n'use strict';\\n\\nmodule.exports = ::_CONTENT_::\\n\";\nvar allComponentFiles = glob.sync(path.join(RN_ROOT, '/Libraries/Components/**/*.js'), {\n  nodir: true\n});\nvar docs = allComponentFiles.reduce(function (acc, file) {\n  var contents = fs.readFileSync(file, {\n    encoding: 'utf-8'\n  });\n\n  if (!contents.includes(GENERATE_ANNOTATION)) {\n    return acc;\n  }\n\n  var result = reactDocs.parse(contents, reactDocs.resolver.findExportedComponentDefinition);\n  acc.push(cleanComponentResult(result));\n  return acc;\n}, []);\nvar content = TEMPLATE.replace('::_CONTENT_::', JSON.stringify(docs, null, 2)).replace('::_SIGNING_TOKEN_::', SignedSource.getSigningToken());\nvar signedContent = SignedSource.signFile(content);\n\nif (process.env.NODE_ENV === 'test') {\n  var existingContent = fs.readFileSync(OUTPUT_PATH, 'utf8');\n\n  if (signedContent !== existingContent) {\n    console.error(path.relative(RN_ROOT, OUTPUT_PATH), 'is not up to date. Run', 'scripts/generate-api-docs.js', 'to regenerate the file.');\n    process.exit(1);\n  }\n} else {\n  fs.writeFileSync(OUTPUT_PATH, SignedSource.signFile(content));\n}\n\nfunction cleanComponentResult(component) {\n  return _objectSpread(_objectSpread({}, component), {}, {\n    methods: component.methods.filter(function (method) {\n      return !method.name.startsWith('_');\n    })\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/scripts/generate-api-docs.js"],"names":["SignedSource","require","fs","glob","path","reactDocs","GENERATE_ANNOTATION","RN_ROOT","join","__dirname","OUTPUT_PATH","TEMPLATE","allComponentFiles","sync","nodir","docs","reduce","acc","file","contents","readFileSync","encoding","includes","result","parse","resolver","findExportedComponentDefinition","push","cleanComponentResult","content","replace","JSON","stringify","getSigningToken","signedContent","signFile","process","env","NODE_ENV","existingContent","console","error","relative","exit","writeFileSync","component","methods","filter","method","name","startsWith"],"mappings":"AAAA;AAUA;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAzB;;AAEA,IAAMK,mBAAmB,GAAG,MAAM,eAAlC;AACA,IAAMC,OAAO,GAAGH,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,IAArB,CAAhB;AACA,IAAMC,WAAW,GAAGN,IAAI,CAACI,IAAL,CAAUD,OAAV,EAAmB,MAAnB,EAA2B,8BAA3B,CAApB;AAEA,IAAMI,QAAQ,sbAAd;AAiBA,IAAMC,iBAAiB,GAAGT,IAAI,CAACU,IAAL,CACxBT,IAAI,CAACI,IAAL,CAAUD,OAAV,EAAmB,+BAAnB,CADwB,EAExB;AACEO,EAAAA,KAAK,EAAE;AADT,CAFwB,CAA1B;AAOA,IAAMC,IAAI,GAAGH,iBAAiB,CAACI,MAAlB,CAAyB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnD,MAAMC,QAAQ,GAAGjB,EAAE,CAACkB,YAAH,CAAgBF,IAAhB,EAAsB;AAACG,IAAAA,QAAQ,EAAE;AAAX,GAAtB,CAAjB;;AACA,MAAI,CAACF,QAAQ,CAACG,QAAT,CAAkBhB,mBAAlB,CAAL,EAA6C;AAC3C,WAAOW,GAAP;AACD;;AAED,MAAMM,MAAM,GAAGlB,SAAS,CAACmB,KAAV,CACbL,QADa,EAEbd,SAAS,CAACoB,QAAV,CAAmBC,+BAFN,CAAf;AAKAT,EAAAA,GAAG,CAACU,IAAJ,CAASC,oBAAoB,CAACL,MAAD,CAA7B;AAEA,SAAON,GAAP;AACD,CAdY,EAcV,EAdU,CAAb;AAgBA,IAAMY,OAAO,GAAGlB,QAAQ,CAACmB,OAAT,CACd,eADc,EAEdC,IAAI,CAACC,SAAL,CAAejB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAFc,EAGde,OAHc,CAGN,qBAHM,EAGiB9B,YAAY,CAACiC,eAAb,EAHjB,CAAhB;AAKA,IAAMC,aAAa,GAAGlC,YAAY,CAACmC,QAAb,CAAsBN,OAAtB,CAAtB;;AAEA,IAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,MAAMC,eAAe,GAAGrC,EAAE,CAACkB,YAAH,CAAgBV,WAAhB,EAA6B,MAA7B,CAAxB;;AACA,MAAIwB,aAAa,KAAKK,eAAtB,EAAuC;AACrCC,IAAAA,OAAO,CAACC,KAAR,CACErC,IAAI,CAACsC,QAAL,CAAcnC,OAAd,EAAuBG,WAAvB,CADF,EAEE,wBAFF,EAGE,8BAHF,EAIE,yBAJF;AAMA0B,IAAAA,OAAO,CAACO,IAAR,CAAa,CAAb;AACD;AACF,CAXD,MAWO;AACLzC,EAAAA,EAAE,CAAC0C,aAAH,CAAiBlC,WAAjB,EAA8BV,YAAY,CAACmC,QAAb,CAAsBN,OAAtB,CAA9B;AACD;;AAED,SAASD,oBAAT,CAA8BiB,SAA9B,EAAyC;AACvC,yCACKA,SADL;AAEEC,IAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,MAAM;AAAA,aAAI,CAACA,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuB,GAAvB,CAAL;AAAA,KAA/B;AAFX;AAID","sourcesContent":["#!/usr/bin/env node\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst SignedSource = require('signedsource');\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\nconst reactDocs = require('react-docgen');\n\nconst GENERATE_ANNOTATION = '@' + 'generate-docs';\nconst RN_ROOT = path.join(__dirname, '..');\nconst OUTPUT_PATH = path.join(RN_ROOT, 'docs', 'generatedComponentApiDocs.js');\n\nconst TEMPLATE = `/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * This file is used by the React Native website to show the props of core components\n * This file was generated by running scripts/generate-api-docs.js\n *\n * ::_SIGNING_TOKEN_::\n */\n\n'use strict';\n\nmodule.exports = ::_CONTENT_::\n`;\n\nconst allComponentFiles = glob.sync(\n  path.join(RN_ROOT, '/Libraries/Components/**/*.js'),\n  {\n    nodir: true,\n  },\n);\n\nconst docs = allComponentFiles.reduce((acc, file) => {\n  const contents = fs.readFileSync(file, {encoding: 'utf-8'});\n  if (!contents.includes(GENERATE_ANNOTATION)) {\n    return acc;\n  }\n\n  const result = reactDocs.parse(\n    contents,\n    reactDocs.resolver.findExportedComponentDefinition,\n  );\n\n  acc.push(cleanComponentResult(result));\n\n  return acc;\n}, []);\n\nconst content = TEMPLATE.replace(\n  '::_CONTENT_::',\n  JSON.stringify(docs, null, 2),\n).replace('::_SIGNING_TOKEN_::', SignedSource.getSigningToken());\n\nconst signedContent = SignedSource.signFile(content);\n\nif (process.env.NODE_ENV === 'test') {\n  const existingContent = fs.readFileSync(OUTPUT_PATH, 'utf8');\n  if (signedContent !== existingContent) {\n    console.error(\n      path.relative(RN_ROOT, OUTPUT_PATH),\n      'is not up to date. Run',\n      'scripts/generate-api-docs.js',\n      'to regenerate the file.',\n    );\n    process.exit(1);\n  }\n} else {\n  fs.writeFileSync(OUTPUT_PATH, SignedSource.signFile(content));\n}\n\nfunction cleanComponentResult(component) {\n  return {\n    ...component,\n    methods: component.methods.filter(method => !method.name.startsWith('_')),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}