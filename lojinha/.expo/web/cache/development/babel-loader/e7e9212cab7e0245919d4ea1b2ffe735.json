{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/Image.ios.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar DeprecatedImagePropType = require(\"../DeprecatedPropTypes/DeprecatedImagePropType\");\n\nvar React = require('react');\n\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar flattenStyle = require(\"../StyleSheet/flattenStyle\");\n\nvar resolveAssetSource = require(\"./resolveAssetSource\");\n\nimport NativeImageLoaderIOS from \"./NativeImageLoaderIOS\";\nimport ImageViewNativeComponent from \"./ImageViewNativeComponent\";\n\nfunction getSize(uri, success, failure) {\n  NativeImageLoaderIOS.getSize(uri).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        width = _ref2[0],\n        height = _ref2[1];\n\n    return success(width, height);\n  }).catch(failure || function () {\n    console.warn('Failed to get size for image ' + uri);\n  });\n}\n\nfunction getSizeWithHeaders(uri, headers, success, failure) {\n  return NativeImageLoaderIOS.getSizeWithHeaders(uri, headers).then(function (sizes) {\n    success(sizes.width, sizes.height);\n  }).catch(failure || function () {\n    console.warn('Failed to get size for image: ' + uri);\n  });\n}\n\nfunction prefetch(url) {\n  return NativeImageLoaderIOS.prefetchImage(url);\n}\n\nfunction queryCache(urls) {\n  return _regeneratorRuntime.async(function queryCache$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(NativeImageLoaderIOS.queryCache(urls));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar Image = function Image(props, forwardedRef) {\n  var source = resolveAssetSource(props.source) || {\n    uri: undefined,\n    width: undefined,\n    height: undefined\n  };\n  var sources;\n  var style;\n\n  if (Array.isArray(source)) {\n    style = flattenStyle([styles.base, props.style]) || {};\n    sources = source;\n  } else {\n    var _width = source.width,\n        _height = source.height,\n        uri = source.uri;\n    style = flattenStyle([{\n      width: _width,\n      height: _height\n    }, styles.base, props.style]) || {};\n    sources = [source];\n\n    if (uri === '') {\n      console.warn('source.uri should not be an empty string');\n    }\n  }\n\n  var resizeMode = props.resizeMode || style.resizeMode || 'cover';\n  var tintColor = style.tintColor;\n\n  if (props.src != null) {\n    console.warn('The <Image> component requires a `source` property rather than `src`.');\n  }\n\n  if (props.children != null) {\n    throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');\n  }\n\n  return React.createElement(ImageViewNativeComponent, _extends({}, props, {\n    ref: forwardedRef,\n    style: style,\n    resizeMode: resizeMode,\n    tintColor: tintColor,\n    source: sources,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }));\n};\n\nImage = React.forwardRef(Image);\nImage.displayName = 'Image';\nImage.getSize = getSize;\nImage.getSizeWithHeaders = getSizeWithHeaders;\nImage.prefetch = prefetch;\nImage.queryCache = queryCache;\nImage.resolveAssetSource = resolveAssetSource;\nImage.propTypes = DeprecatedImagePropType;\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nmodule.exports = Image;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/Image.ios.js"],"names":["DeprecatedImagePropType","require","React","ReactNative","StyleSheet","flattenStyle","resolveAssetSource","NativeImageLoaderIOS","ImageViewNativeComponent","getSize","uri","success","failure","then","width","height","catch","console","warn","getSizeWithHeaders","headers","sizes","prefetch","url","prefetchImage","queryCache","urls","Image","props","forwardedRef","source","undefined","sources","style","Array","isArray","styles","base","resizeMode","tintColor","src","children","Error","forwardRef","displayName","propTypes","create","overflow","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst DeprecatedImagePropType = require('../DeprecatedPropTypes/DeprecatedImagePropType');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative'); // eslint-disable-line no-unused-vars\nconst StyleSheet = require('../StyleSheet/StyleSheet');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst resolveAssetSource = require('./resolveAssetSource');\n\nimport type {ImageProps as ImagePropsType} from './ImageProps';\n\nimport type {ImageStyleProp} from '../StyleSheet/StyleSheet';\nimport NativeImageLoaderIOS from './NativeImageLoaderIOS';\n\nimport ImageViewNativeComponent from './ImageViewNativeComponent';\n\nfunction getSize(\n  uri: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n) {\n  NativeImageLoaderIOS.getSize(uri)\n    .then(([width, height]) => success(width, height))\n    .catch(\n      failure ||\n        function() {\n          console.warn('Failed to get size for image ' + uri);\n        },\n    );\n}\n\nfunction getSizeWithHeaders(\n  uri: string,\n  headers: {[string]: string, ...},\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n): any {\n  return NativeImageLoaderIOS.getSizeWithHeaders(uri, headers)\n    .then(function(sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function() {\n          console.warn('Failed to get size for image: ' + uri);\n        },\n    );\n}\n\nfunction prefetch(url: string): any {\n  return NativeImageLoaderIOS.prefetchImage(url);\n}\n\nasync function queryCache(\n  urls: Array<string>,\n): Promise<{[string]: 'memory' | 'disk' | 'disk/memory', ...}> {\n  return await NativeImageLoaderIOS.queryCache(urls);\n}\n\ntype ImageComponentStatics = $ReadOnly<{|\n  getSize: typeof getSize,\n  getSizeWithHeaders: typeof getSizeWithHeaders,\n  prefetch: typeof prefetch,\n  queryCache: typeof queryCache,\n  resolveAssetSource: typeof resolveAssetSource,\n  propTypes: typeof DeprecatedImagePropType,\n|}>;\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://reactnative.dev/docs/image.html\n */\nlet Image = (props: ImagePropsType, forwardedRef) => {\n  const source = resolveAssetSource(props.source) || {\n    uri: undefined,\n    width: undefined,\n    height: undefined,\n  };\n\n  let sources;\n  let style: ImageStyleProp;\n  if (Array.isArray(source)) {\n    // $FlowFixMe flattenStyle is not strong enough\n    style = flattenStyle([styles.base, props.style]) || {};\n    sources = source;\n  } else {\n    const {width, height, uri} = source;\n    // $FlowFixMe flattenStyle is not strong enough\n    style = flattenStyle([{width, height}, styles.base, props.style]) || {};\n    sources = [source];\n\n    if (uri === '') {\n      console.warn('source.uri should not be an empty string');\n    }\n  }\n\n  const resizeMode = props.resizeMode || style.resizeMode || 'cover';\n  const tintColor = style.tintColor;\n\n  if (props.src != null) {\n    console.warn(\n      'The <Image> component requires a `source` property rather than `src`.',\n    );\n  }\n\n  if (props.children != null) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n\n  return (\n    <ImageViewNativeComponent\n      {...props}\n      ref={forwardedRef}\n      style={style}\n      resizeMode={resizeMode}\n      tintColor={tintColor}\n      source={sources}\n    />\n  );\n};\n\nImage = React.forwardRef<\n  ImagePropsType,\n  React.ElementRef<typeof ImageViewNativeComponent>,\n>(Image);\nImage.displayName = 'Image';\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it.\n *\n * See https://reactnative.dev/docs/image.html#getsize\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.getSize = getSize;\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request.\n *\n * See https://reactnative.dev/docs/image.html#getsizewithheaders\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.getSizeWithHeaders = getSizeWithHeaders;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache.\n *\n * See https://reactnative.dev/docs/image.html#prefetch\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.prefetch = prefetch;\n\n/**\n * Performs cache interrogation.\n *\n *  See https://reactnative.dev/docs/image.html#querycache\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://reactnative.dev/docs/image.html#resolveassetsource\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.resolveAssetSource = resolveAssetSource;\n\n/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.propTypes = DeprecatedImagePropType;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = ((Image: any): React.AbstractComponent<\n  ImagePropsType,\n  React.ElementRef<typeof ImageViewNativeComponent>,\n> &\n  ImageComponentStatics);\n"]},"metadata":{},"sourceType":"module"}