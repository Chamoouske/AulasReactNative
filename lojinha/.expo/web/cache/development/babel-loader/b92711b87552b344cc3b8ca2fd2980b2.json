{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _mkdirp() {\n  var data = _interopRequireDefault(require(\"mkdirp\"));\n\n  _mkdirp = function _mkdirp() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _filterPlatformAssetScales = _interopRequireDefault(require(\"./filterPlatformAssetScales\"));\n\nvar _getAssetDestPathAndroid = _interopRequireDefault(require(\"./getAssetDestPathAndroid\"));\n\nvar _getAssetDestPathIOS = _interopRequireDefault(require(\"./getAssetDestPathIOS\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction saveAssets(assets, platform, assetsDest) {\n  if (!assetsDest) {\n    _cliTools().logger.warn('Assets destination folder is not set, skipping...');\n\n    return Promise.resolve();\n  }\n\n  var getAssetDestPath = platform === 'android' ? _getAssetDestPathAndroid.default : _getAssetDestPathIOS.default;\n  var filesToCopy = Object.create(null);\n  assets.forEach(function (asset) {\n    var validScales = new Set((0, _filterPlatformAssetScales.default)(platform, asset.scales));\n    asset.scales.forEach(function (scale, idx) {\n      if (!validScales.has(scale)) {\n        return;\n      }\n\n      var src = asset.files[idx];\n\n      var dest = _path().default.join(assetsDest, getAssetDestPath(asset, scale));\n\n      filesToCopy[src] = dest;\n    });\n  });\n  return copyAll(filesToCopy);\n}\n\nfunction copyAll(filesToCopy) {\n  var queue = Object.keys(filesToCopy);\n\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n\n  _cliTools().logger.info(\"Copying \" + queue.length + \" asset files\");\n\n  return new Promise(function (resolve, reject) {\n    var copyNext = function copyNext(error) {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      if (queue.length === 0) {\n        _cliTools().logger.info('Done copying assets');\n\n        resolve();\n      } else {\n        var src = queue.shift();\n        var dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n\n    copyNext();\n  });\n}\n\nfunction copy(src, dest, callback) {\n  var destDir = _path().default.dirname(dest);\n\n  (0, _mkdirp().default)(destDir, function (err) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    _fs().default.createReadStream(src).pipe(_fs().default.createWriteStream(dest)).on('finish', callback);\n  });\n}\n\nvar _default = saveAssets;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/bundle/saveAssets.js"],"names":["Object","defineProperty","exports","value","default","_mkdirp","data","_interopRequireDefault","require","_path","_fs","_filterPlatformAssetScales","_getAssetDestPathAndroid","_getAssetDestPathIOS","_cliTools","obj","__esModule","saveAssets","assets","platform","assetsDest","logger","warn","Promise","resolve","getAssetDestPath","filesToCopy","create","forEach","asset","validScales","Set","scales","scale","idx","has","src","files","dest","join","copyAll","queue","keys","length","info","reject","copyNext","error","shift","copy","callback","destDir","dirname","err","createReadStream","pipe","createWriteStream","on","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _mkdirp() {\n  const data = _interopRequireDefault(require(\"mkdirp\"));\n\n  _mkdirp = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _filterPlatformAssetScales = _interopRequireDefault(require(\"./filterPlatformAssetScales\"));\n\nvar _getAssetDestPathAndroid = _interopRequireDefault(require(\"./getAssetDestPathAndroid\"));\n\nvar _getAssetDestPathIOS = _interopRequireDefault(require(\"./getAssetDestPathIOS\"));\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction saveAssets(assets, platform, assetsDest) {\n  if (!assetsDest) {\n    _cliTools().logger.warn('Assets destination folder is not set, skipping...');\n\n    return Promise.resolve();\n  }\n\n  const getAssetDestPath = platform === 'android' ? _getAssetDestPathAndroid.default : _getAssetDestPathIOS.default;\n  const filesToCopy = Object.create(null); // Map src -> dest\n\n  assets.forEach(asset => {\n    const validScales = new Set((0, _filterPlatformAssetScales.default)(platform, asset.scales));\n    asset.scales.forEach((scale, idx) => {\n      if (!validScales.has(scale)) {\n        return;\n      }\n\n      const src = asset.files[idx];\n\n      const dest = _path().default.join(assetsDest, getAssetDestPath(asset, scale));\n\n      filesToCopy[src] = dest;\n    });\n  });\n  return copyAll(filesToCopy);\n}\n\nfunction copyAll(filesToCopy) {\n  const queue = Object.keys(filesToCopy);\n\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n\n  _cliTools().logger.info(`Copying ${queue.length} asset files`);\n\n  return new Promise((resolve, reject) => {\n    const copyNext = error => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      if (queue.length === 0) {\n        _cliTools().logger.info('Done copying assets');\n\n        resolve();\n      } else {\n        // queue.length === 0 is checked in previous branch, so this is string\n        const src = queue.shift();\n        const dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n\n    copyNext();\n  });\n}\n\nfunction copy(src, dest, callback) {\n  const destDir = _path().default.dirname(dest);\n\n  (0, _mkdirp().default)(destDir, err => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    _fs().default.createReadStream(src).pipe(_fs().default.createWriteStream(dest)).on('finish', callback);\n  });\n}\n\nvar _default = saveAssets;\nexports.default = _default;\n\n//# sourceMappingURL=saveAssets.js.map"]},"metadata":{},"sourceType":"script"}