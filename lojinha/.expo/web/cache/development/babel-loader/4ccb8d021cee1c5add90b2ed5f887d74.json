{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js\",\n    _this = this;\n\nvar React = require('react');\n\nvar SectionList = require(\"../SectionList\");\n\nfunction renderMyListItem(info) {\n  return React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  });\n}\n\nvar renderMyHeader = function renderMyHeader(_ref) {\n  var section = _ref.section;\n  return React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  });\n};\n\nmodule.exports = {\n  testGoodDataWithGoodItem: function testGoodDataWithGoodItem() {\n    var sections = [{\n      key: 'a',\n      data: [{\n        title: 'foo',\n        key: 1\n      }]\n    }];\n    return React.createElement(SectionList, {\n      renderItem: renderMyListItem,\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  },\n  testBadRenderItemFunction: function testBadRenderItemFunction() {\n    var _this2 = this;\n\n    var sections = [{\n      key: 'a',\n      data: [{\n        title: 'foo',\n        key: 1\n      }]\n    }];\n    return [React.createElement(SectionList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 53\n          }\n        });\n      },\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), React.createElement(SectionList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 48\n          }\n        });\n      },\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), React.createElement(SectionList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 66\n          }\n        });\n      },\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    })];\n  },\n  testBadInheritedDefaultProp: function testBadInheritedDefaultProp() {\n    var sections = [];\n    return React.createElement(SectionList, {\n      renderItem: renderMyListItem,\n      sections: sections,\n      windowSize: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  },\n  testMissingData: function testMissingData() {\n    return React.createElement(SectionList, {\n      renderItem: renderMyListItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    });\n  },\n  testBadSectionsShape: function testBadSectionsShape() {\n    var sections = [{\n      key: 'a',\n      items: [{\n        title: 'foo',\n        key: 1\n      }]\n    }];\n    return React.createElement(SectionList, {\n      renderItem: renderMyListItem,\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 12\n      }\n    });\n  },\n  testBadSectionsMetadata: function testBadSectionsMetadata() {\n    var sections = [{\n      key: 'a',\n      fooNumber: 'string',\n      data: [{\n        title: 'foo',\n        key: 1\n      }]\n    }];\n    return React.createElement(SectionList, {\n      renderSectionHeader: renderMyHeader,\n      renderItem: renderMyListItem,\n      sections: sections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js"],"names":["React","require","SectionList","renderMyListItem","info","renderMyHeader","section","module","exports","testGoodDataWithGoodItem","sections","key","data","title","testBadRenderItemFunction","testBadInheritedDefaultProp","testMissingData","testBadSectionsShape","items","testBadSectionsMetadata","fooNumber"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst SectionList = require('../SectionList');\n\nfunction renderMyListItem(info: {\n  item: {title: string, ...},\n  index: number,\n  ...\n}) {\n  return <span />;\n}\n\nconst renderMyHeader = ({\n  section,\n}: {\n  section: {fooNumber: number, ...} & Object,\n  ...\n}) => <span />;\n\nmodule.exports = {\n  testGoodDataWithGoodItem(): React.Node {\n    const sections = [\n      {\n        key: 'a',\n        data: [\n          {\n            title: 'foo',\n            key: 1,\n          },\n        ],\n      },\n    ];\n    return <SectionList renderItem={renderMyListItem} sections={sections} />;\n  },\n\n  testBadRenderItemFunction(): $TEMPORARY$array<React.Node> {\n    const sections = [\n      {\n        key: 'a',\n        data: [\n          {\n            title: 'foo',\n            key: 1,\n          },\n        ],\n      },\n    ];\n    return [\n      <SectionList\n        // $FlowExpectedError - title should be inside `item`\n        renderItem={(info: {title: string, ...}) => <span />}\n        sections={sections}\n      />,\n      <SectionList\n        // $FlowExpectedError - bad index type string, should be number\n        renderItem={(info: {index: string}) => <span />}\n        sections={sections}\n      />,\n      // EverythingIsFine\n      <SectionList\n        renderItem={(info: {item: {title: string, ...}, ...}) => <span />}\n        sections={sections}\n      />,\n    ];\n  },\n\n  testBadInheritedDefaultProp(): React.Element<*> {\n    const sections = [];\n    return (\n      <SectionList\n        renderItem={renderMyListItem}\n        sections={sections}\n        // $FlowExpectedError - bad windowSize type \"big\"\n        windowSize=\"big\"\n      />\n    );\n  },\n\n  testMissingData(): React.Element<*> {\n    // $FlowExpectedError - missing `sections` prop\n    return <SectionList renderItem={renderMyListItem} />;\n  },\n\n  testBadSectionsShape(): React.Element<*> {\n    const sections = [\n      {\n        key: 'a',\n        items: [\n          {\n            title: 'foo',\n            key: 1,\n          },\n        ],\n      },\n    ];\n    // $FlowExpectedError - section missing `data` field\n    return <SectionList renderItem={renderMyListItem} sections={sections} />;\n  },\n\n  testBadSectionsMetadata(): React.Element<*> {\n    const sections = [\n      {\n        key: 'a',\n        fooNumber: 'string',\n        data: [\n          {\n            title: 'foo',\n            key: 1,\n          },\n        ],\n      },\n    ];\n    return (\n      <SectionList\n        renderSectionHeader={renderMyHeader}\n        renderItem={renderMyListItem}\n        /* $FlowExpectedError - section has bad meta data `fooNumber` field of\n         * type string */\n        sections={sections}\n      />\n    );\n  },\n};\n"]},"metadata":{},"sourceType":"script"}