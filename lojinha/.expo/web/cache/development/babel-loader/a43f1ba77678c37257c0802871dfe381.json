{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\nObject.defineProperty(exports, \"init\", {\n  enumerable: true,\n  get: function get() {\n    return _initCompat.default;\n  }\n});\nexports.bin = void 0;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _child_process() {\n  var data = _interopRequireDefault(require(\"child_process\"));\n\n  _child_process = function _child_process() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _commander() {\n  var data = _interopRequireDefault(require(\"commander\"));\n\n  _commander = function _commander() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _leven() {\n  var data = _interopRequireDefault(require(\"leven\"));\n\n  _leven = function _leven() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _commands = require(\"./commands\");\n\nvar _initCompat = _interopRequireDefault(require(\"./commands/init/initCompat\"));\n\nvar _assertRequiredOptions = _interopRequireDefault(require(\"./tools/assertRequiredOptions\"));\n\nvar _config = _interopRequireDefault(require(\"./tools/config\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar pkgJson = require(\"../package.json\");\n\n_commander().default.usage('<command> [options]').option('--version', 'Print CLI version').option('--verbose', 'Increase logging verbosity');\n\n_commander().default.arguments('<command>').action(function (cmd) {\n  printUnknownCommand(cmd);\n  process.exit(1);\n});\n\nvar handleError = function handleError(err) {\n  if (_commander().default.verbose) {\n    _cliTools().logger.error(err.message);\n  } else {\n    var message = err.message.replace(/\\.$/, '');\n\n    _cliTools().logger.error(message + \". \" + _chalk().default.dim(\"Run CLI with \" + _chalk().default.reset('--verbose') + \" \" + _chalk().default.dim('flag for more details.')));\n  }\n\n  if (err.stack) {\n    _cliTools().logger.log(_chalk().default.dim(err.stack));\n  }\n\n  process.exit(1);\n};\n\nfunction printHelpInformation(examples, pkg) {\n  var cmdName = this._name;\n\n  var argsList = this._args.map(function (arg) {\n    return arg.required ? \"<\" + arg.name + \">\" : \"[\" + arg.name + \"]\";\n  }).join(' ');\n\n  if (this._alias) {\n    cmdName = cmdName + \"|\" + this._alias;\n  }\n\n  var sourceInformation = pkg ? [_chalk().default.bold('Source:') + \" \" + pkg.name + \"@\" + pkg.version, ''] : [];\n  var output = [_chalk().default.bold(\"react-native \" + cmdName + \" \" + argsList), this._description ? \"\\n\" + this._description + \"\\n\" : ''].concat(sourceInformation, [\"\" + _chalk().default.bold('Options:'), this.optionHelp().replace(/^/gm, '  ')]);\n\n  if (examples && examples.length > 0) {\n    var formattedUsage = examples.map(function (example) {\n      return \"  \" + example.desc + \": \\n  \" + _chalk().default.cyan(example.cmd);\n    }).join('\\n\\n');\n    output = output.concat([_chalk().default.bold('\\nExample usage:'), formattedUsage]);\n  }\n\n  return output.join('\\n').concat('\\n');\n}\n\nfunction printUnknownCommand(cmdName) {\n  var availableCommands = _commander().default.commands.map(function (cmd) {\n    return cmd._name;\n  });\n\n  var suggestion = availableCommands.find(function (cmd) {\n    return (0, _leven().default)(cmd, cmdName) < cmd.length * 0.4;\n  });\n  var errorMsg = \"Unrecognized command \\\"\" + _chalk().default.bold(cmdName) + \"\\\".\";\n\n  if (suggestion) {\n    errorMsg += \" Did you mean \\\"\" + suggestion + \"\\\"?\";\n  }\n\n  if (cmdName) {\n    _cliTools().logger.error(errorMsg);\n\n    _cliTools().logger.info(\"Run \" + _chalk().default.bold('\"react-native --help\"') + \" to see a list of all available commands.\");\n  } else {\n    _commander().default.outputHelp();\n  }\n}\n\nvar isDetachedCommand = function isDetachedCommand(command) {\n  return command.detached === true;\n};\n\nfunction attachCommand(command) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var options = command.options || [];\n\n  var cmd = _commander().default.command(command.name).action(function handleAction() {\n    var passedOptions,\n        _len2,\n        args,\n        _key2,\n        argv,\n        _args = arguments;\n\n    return _regeneratorRuntime.async(function handleAction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            passedOptions = this.opts();\n\n            for (_len2 = _args.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = _args[_key2];\n            }\n\n            argv = Array.from(args).slice(0, -1);\n            _context.prev = 3;\n            (0, _assertRequiredOptions.default)(options, passedOptions);\n\n            if (!isDetachedCommand(command)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(command.func(argv, passedOptions));\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(command.func(argv, rest[0], passedOptions));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](3);\n            handleError(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this, [[3, 14]], Promise);\n  });\n\n  if (command.description) {\n    cmd.description(command.description);\n  }\n\n  cmd.helpInformation = printHelpInformation.bind(cmd, command.examples, command.pkg);\n\n  for (var _iterator = _createForOfIteratorHelperLoose(command.options || []), _step; !(_step = _iterator()).done;) {\n    var opt = _step.value;\n    cmd.option(opt.name, opt.description, opt.parse || function (val) {\n      return val;\n    }, typeof opt.default === 'function' ? opt.default(rest[0]) : opt.default);\n  }\n}\n\nfunction run() {\n  return _regeneratorRuntime.async(function run$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(setupAndRun());\n\n        case 3:\n          _context2.next = 8;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          handleError(_context2.t0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\n\nfunction setupAndRun() {\n  var scriptName, absolutePath, _iterator2, _step2, command, config, _i, _arr, _command;\n\n  return _regeneratorRuntime.async(function setupAndRun$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (process.argv.includes('config')) {\n            _cliTools().logger.disable();\n          }\n\n          _cliTools().logger.setVerbose(process.argv.includes('--verbose'));\n\n          if (process.platform !== 'win32') {\n            scriptName = 'setup_env.sh';\n            absolutePath = _path().default.join(__dirname, '..', scriptName);\n\n            try {\n              _child_process().default.execFileSync(absolutePath, {\n                stdio: 'pipe'\n              });\n            } catch (error) {\n              _cliTools().logger.warn(\"Failed to run environment setup script \\\"\" + scriptName + \"\\\"\\n\\n\" + _chalk().default.red(error));\n\n              _cliTools().logger.info(\"React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \\\"\" + absolutePath + \"\\\" and adjust your environment to match it.\");\n            }\n          }\n\n          for (_iterator2 = _createForOfIteratorHelperLoose(_commands.detachedCommands); !(_step2 = _iterator2()).done;) {\n            command = _step2.value;\n            attachCommand(command);\n          }\n\n          _context3.prev = 4;\n          config = (0, _config.default)();\n\n          _cliTools().logger.enable();\n\n          for (_i = 0, _arr = [].concat(_toConsumableArray(_commands.projectCommands), _toConsumableArray(config.commands)); _i < _arr.length; _i++) {\n            _command = _arr[_i];\n            attachCommand(_command, config);\n          }\n\n          _context3.next = 19;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](4);\n\n          if (!_context3.t0.message.includes(\"We couldn't find a package.json\")) {\n            _context3.next = 18;\n            break;\n          }\n\n          _cliTools().logger.enable();\n\n          _cliTools().logger.debug(_context3.t0.message);\n\n          _cliTools().logger.debug('Failed to load configuration of your project. Only a subset of commands will be available.');\n\n          _context3.next = 19;\n          break;\n\n        case 18:\n          throw new (_cliTools().CLIError)('Failed to load configuration of your project.', _context3.t0);\n\n        case 19:\n          _commander().default.parse(process.argv);\n\n          if (_commander().default.rawArgs.length === 2) {\n            _commander().default.outputHelp();\n          }\n\n          if (_commander().default.args.length === 0 && _commander().default.rawArgs.includes('--version')) {\n            console.log(pkgJson.version);\n          }\n\n        case 22:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[4, 10]], Promise);\n}\n\nvar bin = require.resolve(\"./bin\");\n\nexports.bin = bin;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/index.js"],"names":["Object","defineProperty","exports","value","run","enumerable","get","_initCompat","default","bin","_chalk","data","_interopRequireDefault","require","_child_process","_commander","_leven","_path","_cliTools","_commands","_assertRequiredOptions","_config","obj","__esModule","pkgJson","usage","option","arguments","action","cmd","printUnknownCommand","process","exit","handleError","err","verbose","logger","error","message","replace","dim","reset","stack","log","printHelpInformation","examples","pkg","cmdName","_name","argsList","_args","map","arg","required","name","join","_alias","sourceInformation","bold","version","output","_description","optionHelp","length","formattedUsage","example","desc","cyan","concat","availableCommands","commands","suggestion","find","errorMsg","info","outputHelp","isDetachedCommand","command","detached","attachCommand","rest","options","handleAction","passedOptions","opts","args","argv","Array","from","slice","func","description","helpInformation","bind","opt","parse","val","setupAndRun","includes","disable","setVerbose","platform","scriptName","absolutePath","__dirname","execFileSync","stdio","warn","red","detachedCommands","config","enable","projectCommands","debug","CLIError","rawArgs","console","resolve"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\nObject.defineProperty(exports, \"init\", {\n  enumerable: true,\n  get: function () {\n    return _initCompat.default;\n  }\n});\nexports.bin = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _child_process() {\n  const data = _interopRequireDefault(require(\"child_process\"));\n\n  _child_process = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _commander() {\n  const data = _interopRequireDefault(require(\"commander\"));\n\n  _commander = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _leven() {\n  const data = _interopRequireDefault(require(\"leven\"));\n\n  _leven = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _commands = require(\"./commands\");\n\nvar _initCompat = _interopRequireDefault(require(\"./commands/init/initCompat\"));\n\nvar _assertRequiredOptions = _interopRequireDefault(require(\"./tools/assertRequiredOptions\"));\n\nvar _config = _interopRequireDefault(require(\"./tools/config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pkgJson = require(\"../package.json\");\n\n_commander().default.usage('<command> [options]').option('--version', 'Print CLI version').option('--verbose', 'Increase logging verbosity');\n\n_commander().default.arguments('<command>').action(cmd => {\n  printUnknownCommand(cmd);\n  process.exit(1);\n});\n\nconst handleError = err => {\n  if (_commander().default.verbose) {\n    _cliTools().logger.error(err.message);\n  } else {\n    // Some error messages (esp. custom ones) might have `.` at the end already.\n    const message = err.message.replace(/\\.$/, '');\n\n    _cliTools().logger.error(`${message}. ${_chalk().default.dim(`Run CLI with ${_chalk().default.reset('--verbose')} ${_chalk().default.dim('flag for more details.')}`)}`);\n  }\n\n  if (err.stack) {\n    _cliTools().logger.log(_chalk().default.dim(err.stack));\n  }\n\n  process.exit(1);\n};\n/**\n * Custom printHelpInformation command inspired by internal Commander.js\n * one modified to suit our needs\n */\n\n\nfunction printHelpInformation(examples, pkg) {\n  let cmdName = this._name;\n\n  const argsList = this._args.map(arg => arg.required ? `<${arg.name}>` : `[${arg.name}]`).join(' ');\n\n  if (this._alias) {\n    cmdName = `${cmdName}|${this._alias}`;\n  }\n\n  const sourceInformation = pkg ? [`${_chalk().default.bold('Source:')} ${pkg.name}@${pkg.version}`, ''] : [];\n  let output = [_chalk().default.bold(`react-native ${cmdName} ${argsList}`), this._description ? `\\n${this._description}\\n` : '', ...sourceInformation, `${_chalk().default.bold('Options:')}`, this.optionHelp().replace(/^/gm, '  ')];\n\n  if (examples && examples.length > 0) {\n    const formattedUsage = examples.map(example => `  ${example.desc}: \\n  ${_chalk().default.cyan(example.cmd)}`).join('\\n\\n');\n    output = output.concat([_chalk().default.bold('\\nExample usage:'), formattedUsage]);\n  }\n\n  return output.join('\\n').concat('\\n');\n}\n\nfunction printUnknownCommand(cmdName) {\n  const availableCommands = _commander().default.commands.map(cmd => cmd._name);\n\n  const suggestion = availableCommands.find(cmd => {\n    return (0, _leven().default)(cmd, cmdName) < cmd.length * 0.4;\n  });\n  let errorMsg = `Unrecognized command \"${_chalk().default.bold(cmdName)}\".`;\n\n  if (suggestion) {\n    errorMsg += ` Did you mean \"${suggestion}\"?`;\n  }\n\n  if (cmdName) {\n    _cliTools().logger.error(errorMsg);\n\n    _cliTools().logger.info(`Run ${_chalk().default.bold('\"react-native --help\"')} to see a list of all available commands.`);\n  } else {\n    _commander().default.outputHelp();\n  }\n}\n/**\n * Custom type assertion needed for the `makeCommand` conditional\n * types to be properly resolved.\n */\n\n\nconst isDetachedCommand = command => {\n  return command.detached === true;\n};\n/**\n * Attaches a new command onto global `commander` instance.\n *\n * Note that this function takes additional argument of `Config` type in case\n * passed `command` needs it for its execution.\n */\n\n\nfunction attachCommand(command, ...rest) {\n  const options = command.options || [];\n\n  const cmd = _commander().default.command(command.name).action(async function handleAction(...args) {\n    const passedOptions = this.opts();\n    const argv = Array.from(args).slice(0, -1);\n\n    try {\n      (0, _assertRequiredOptions.default)(options, passedOptions);\n\n      if (isDetachedCommand(command)) {\n        await command.func(argv, passedOptions);\n      } else {\n        await command.func(argv, rest[0], passedOptions);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n  });\n\n  if (command.description) {\n    cmd.description(command.description);\n  }\n\n  cmd.helpInformation = printHelpInformation.bind(cmd, command.examples, command.pkg);\n\n  for (const opt of command.options || []) {\n    cmd.option(opt.name, opt.description, opt.parse || (val => val), typeof opt.default === 'function' ? opt.default(rest[0]) : opt.default);\n  }\n}\n\nasync function run() {\n  try {\n    await setupAndRun();\n  } catch (e) {\n    handleError(e);\n  }\n}\n\nasync function setupAndRun() {\n  // Commander is not available yet\n  // when we run `config`, we don't want to output anything to the console. We\n  // expect it to return valid JSON\n  if (process.argv.includes('config')) {\n    _cliTools().logger.disable();\n  }\n\n  _cliTools().logger.setVerbose(process.argv.includes('--verbose')); // We only have a setup script for UNIX envs currently\n\n\n  if (process.platform !== 'win32') {\n    const scriptName = 'setup_env.sh';\n\n    const absolutePath = _path().default.join(__dirname, '..', scriptName);\n\n    try {\n      _child_process().default.execFileSync(absolutePath, {\n        stdio: 'pipe'\n      });\n    } catch (error) {\n      _cliTools().logger.warn(`Failed to run environment setup script \"${scriptName}\"\\n\\n${_chalk().default.red(error)}`);\n\n      _cliTools().logger.info(`React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \"${absolutePath}\" and adjust your environment to match it.`);\n    }\n  }\n\n  for (const command of _commands.detachedCommands) {\n    attachCommand(command);\n  }\n\n  try {\n    const config = (0, _config.default)();\n\n    _cliTools().logger.enable();\n\n    for (const command of [..._commands.projectCommands, ...config.commands]) {\n      attachCommand(command, config);\n    }\n  } catch (error) {\n    /**\n     * When there is no `package.json` found, the CLI will enter `detached` mode and a subset\n     * of commands will be available. That's why we don't throw on such kind of error.\n     */\n    if (error.message.includes(\"We couldn't find a package.json\")) {\n      _cliTools().logger.enable();\n\n      _cliTools().logger.debug(error.message);\n\n      _cliTools().logger.debug('Failed to load configuration of your project. Only a subset of commands will be available.');\n    } else {\n      throw new (_cliTools().CLIError)('Failed to load configuration of your project.', error);\n    }\n  }\n\n  _commander().default.parse(process.argv);\n\n  if (_commander().default.rawArgs.length === 2) {\n    _commander().default.outputHelp();\n  } // We handle --version as a special case like this because both `commander`\n  // and `yargs` append it to every command and we don't want to do that.\n  // E.g. outside command `init` has --version flag and we want to preserve it.\n\n\n  if (_commander().default.args.length === 0 && _commander().default.rawArgs.includes('--version')) {\n    console.log(pkgJson.version);\n  }\n}\n\nconst bin = require.resolve(\"./bin\");\n\nexports.bin = bin;\n\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}