{"ast":null,"code":"var _require = require('@expo/config'),\n    getConfig = _require.getConfig;\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar possibleProjectRoot = process.argv[2];\nvar destinationDir = process.argv[3];\nvar projectRoot;\n\nif (fs.existsSync(path.join(possibleProjectRoot, 'package.json'))) {\n  projectRoot = possibleProjectRoot;\n} else if (fs.existsSync(path.join(possibleProjectRoot, '..', 'package.json'))) {\n  projectRoot = path.resolve(possibleProjectRoot, '..');\n}\n\nvar _getConfig = getConfig(projectRoot, {\n  isPublicConfig: true,\n  skipSDKVersionRequirement: true\n}),\n    exp = _getConfig.exp;\n\nfs.writeFileSync(path.join(destinationDir, 'app.config'), JSON.stringify(exp));","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/expo-constants/scripts/getAppConfig.js"],"names":["require","getConfig","fs","path","possibleProjectRoot","process","argv","destinationDir","projectRoot","existsSync","join","resolve","isPublicConfig","skipSDKVersionRequirement","exp","writeFileSync","JSON","stringify"],"mappings":"eAAsBA,OAAO,CAAC,cAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMI,mBAAmB,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,CAA5B;AACA,IAAMC,cAAc,GAAGF,OAAO,CAACC,IAAR,CAAa,CAAb,CAAvB;AAGA,IAAIE,WAAJ;;AACA,IAAIN,EAAE,CAACO,UAAH,CAAcN,IAAI,CAACO,IAAL,CAAUN,mBAAV,EAA+B,cAA/B,CAAd,CAAJ,EAAmE;AACjEI,EAAAA,WAAW,GAAGJ,mBAAd;AACD,CAFD,MAEO,IAAIF,EAAE,CAACO,UAAH,CAAcN,IAAI,CAACO,IAAL,CAAUN,mBAAV,EAA+B,IAA/B,EAAqC,cAArC,CAAd,CAAJ,EAAyE;AAC9EI,EAAAA,WAAW,GAAGL,IAAI,CAACQ,OAAL,CAAaP,mBAAb,EAAkC,IAAlC,CAAd;AACD;;iBAEeH,SAAS,CAACO,WAAD,EAAc;AACrCI,EAAAA,cAAc,EAAE,IADqB;AAErCC,EAAAA,yBAAyB,EAAE;AAFU,CAAd,C;IAAjBC,G,cAAAA,G;;AAIRZ,EAAE,CAACa,aAAH,CAAiBZ,IAAI,CAACO,IAAL,CAAUH,cAAV,EAA0B,YAA1B,CAAjB,EAA0DS,IAAI,CAACC,SAAL,CAAeH,GAAf,CAA1D","sourcesContent":["const { getConfig } = require('@expo/config');\nconst fs = require('fs');\nconst path = require('path');\n\nconst possibleProjectRoot = process.argv[2];\nconst destinationDir = process.argv[3];\n\n// Remove projectRoot validation when we no longer support React Native <= 62\nlet projectRoot;\nif (fs.existsSync(path.join(possibleProjectRoot, 'package.json'))) {\n  projectRoot = possibleProjectRoot;\n} else if (fs.existsSync(path.join(possibleProjectRoot, '..', 'package.json'))) {\n  projectRoot = path.resolve(possibleProjectRoot, '..');\n}\n\nconst { exp } = getConfig(projectRoot, {\n  isPublicConfig: true,\n  skipSDKVersionRequirement: true,\n});\nfs.writeFileSync(path.join(destinationDir, 'app.config'), JSON.stringify(exp));\n"]},"metadata":{},"sourceType":"script"}