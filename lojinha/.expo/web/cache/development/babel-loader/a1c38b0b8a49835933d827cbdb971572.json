{"ast":null,"code":"'use strict';\n\nimport codegenNativeComponent from \"../../Utilities/codegenNativeComponent\";\nexport default codegenNativeComponent('RCTSegmentedControl');","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/SegmentedControlIOS/RCTSegmentedControlNativeComponent.js"],"names":["codegenNativeComponent"],"mappings":"AAUA;;AAEA,OAAOA,sBAAP;AA+BA,eAAgBA,sBAAsB,CACpC,qBADoC,CAAtC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {\n  BubblingEventHandler,\n  WithDefault,\n  Int32,\n} from '../../Types/CodegenTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheetTypes';\n\nexport type OnChangeEvent = $ReadOnly<{|\n  value: Int32,\n  selectedSegmentIndex: Int32,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  values?: $ReadOnlyArray<string>,\n  selectedIndex?: WithDefault<Int32, 0>,\n  enabled?: WithDefault<boolean, true>,\n  tintColor?: ?ColorValue,\n  textColor?: ?ColorValue,\n  backgroundColor?: ?ColorValue,\n  momentary?: WithDefault<boolean, false>,\n\n  // Events\n  onChange?: ?BubblingEventHandler<OnChangeEvent>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>(\n  'RCTSegmentedControl',\n): HostComponent<NativeProps>);\n"]},"metadata":{},"sourceType":"module"}