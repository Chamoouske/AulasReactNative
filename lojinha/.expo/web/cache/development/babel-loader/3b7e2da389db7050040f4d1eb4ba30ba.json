{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nvar NativeProxy = NativeModules.NativeUnimoduleProxy;\nvar modulesConstantsKey = 'modulesConstants';\nvar exportedMethodsKey = 'exportedMethods';\nvar NativeModulesProxy = {};\n\nif (NativeProxy) {\n  Object.keys(NativeProxy[exportedMethodsKey]).forEach(function (moduleName) {\n    NativeModulesProxy[moduleName] = NativeProxy[modulesConstantsKey][moduleName] || {};\n    NativeProxy[exportedMethodsKey][moduleName].forEach(function (methodInfo) {\n      NativeModulesProxy[moduleName][methodInfo.name] = function () {\n        var key = methodInfo.key,\n            argumentsCount = methodInfo.argumentsCount;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (argumentsCount !== args.length) {\n          return Promise.reject(new Error(\"Native method \" + moduleName + \".\" + methodInfo.name + \" expects \" + argumentsCount + \" \" + (argumentsCount === 1 ? 'argument' : 'arguments') + \" but received \" + args.length));\n        }\n\n        return NativeProxy.callMethod(moduleName, key, args);\n      };\n    });\n\n    NativeModulesProxy[moduleName].addListener = function () {\n      var _NativeModules$UMReac;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return (_NativeModules$UMReac = NativeModules.UMReactNativeEventEmitter).addProxiedListener.apply(_NativeModules$UMReac, [moduleName].concat(args));\n    };\n\n    NativeModulesProxy[moduleName].removeListeners = function () {\n      var _NativeModules$UMReac2;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_NativeModules$UMReac2 = NativeModules.UMReactNativeEventEmitter).removeProxiedListeners.apply(_NativeModules$UMReac2, [moduleName].concat(args));\n    };\n  });\n} else {\n  console.warn(\"The \\\"UMNativeModulesProxy\\\" native module is not exported through NativeModules; verify that @unimodules/react-native-adapter's native code is linked properly\");\n}\n\nexport default NativeModulesProxy;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@unimodules/react-native-adapter/src/NativeModulesProxy.native.ts"],"names":["NativeProxy","NativeModules","NativeUnimoduleProxy","modulesConstantsKey","exportedMethodsKey","NativeModulesProxy","Object","keys","forEach","moduleName","methodInfo","name","key","argumentsCount","args","length","Promise","reject","Error","callMethod","addListener","UMReactNativeEventEmitter","addProxiedListener","removeListeners","removeProxiedListeners","console","warn"],"mappings":";AAIA,IAAMA,WAAW,GAAGC,aAAa,CAACC,oBAAlC;AACA,IAAMC,mBAAmB,GAAG,kBAA5B;AACA,IAAMC,kBAAkB,GAAG,iBAA3B;AAEA,IAAMC,kBAA+D,GAAG,EAAxE;;AAEA,IAAIL,WAAJ,EAAiB;AACfM,EAAAA,MAAM,CAACC,IAAP,CAAYP,WAAW,CAACI,kBAAD,CAAvB,EAA6CI,OAA7C,CAAqD,UAAAC,UAAU,EAAI;AACjEJ,IAAAA,kBAAkB,CAACI,UAAD,CAAlB,GAAiCT,WAAW,CAACG,mBAAD,CAAX,CAAiCM,UAAjC,KAAgD,EAAjF;AACAT,IAAAA,WAAW,CAACI,kBAAD,CAAX,CAAgCK,UAAhC,EAA4CD,OAA5C,CAAoD,UAAAE,UAAU,EAAI;AAChEL,MAAAA,kBAAkB,CAACI,UAAD,CAAlB,CAA+BC,UAAU,CAACC,IAA1C,IAAkD,YAAsC;AAAA,YAC9EC,GAD8E,GACtDF,UADsD,CAC9EE,GAD8E;AAAA,YACzEC,cADyE,GACtDH,UADsD,CACzEG,cADyE;;AAAA,0CAAlCC,IAAkC;AAAlCA,UAAAA,IAAkC;AAAA;;AAEtF,YAAID,cAAc,KAAKC,IAAI,CAACC,MAA5B,EAAoC;AAClC,iBAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,oBACmBT,UADnB,SACiCC,UAAU,CAACC,IAD5C,iBAC4DE,cAD5D,UAEIA,cAAc,KAAK,CAAnB,GAAuB,UAAvB,GAAoC,WAFxC,uBAGmBC,IAAI,CAACC,MAHxB,CADK,CAAP;AAOD;;AACD,eAAOf,WAAW,CAACmB,UAAZ,CAAuBV,UAAvB,EAAmCG,GAAnC,EAAwCE,IAAxC,CAAP;AACD,OAZD;AAaD,KAdD;;AAqBAT,IAAAA,kBAAkB,CAACI,UAAD,CAAlB,CAA+BW,WAA/B,GAA6C;AAAA;;AAAA,yCAAIN,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAC3C,yBAAAb,aAAa,CAACoB,yBAAd,EAAwCC,kBAAxC,+BAA2Db,UAA3D,SAA0EK,IAA1E,EAD2C;AAAA,KAA7C;;AAEAT,IAAAA,kBAAkB,CAACI,UAAD,CAAlB,CAA+Bc,eAA/B,GAAiD;AAAA;;AAAA,yCAAIT,IAAJ;AAAIA,QAAAA,IAAJ;AAAA;;AAAA,aAC/C,0BAAAb,aAAa,CAACoB,yBAAd,EAAwCG,sBAAxC,gCAA+Df,UAA/D,SAA8EK,IAA9E,EAD+C;AAAA,KAAjD;AAED,GA3BD;AA4BD,CA7BD,MA6BO;AACLW,EAAAA,OAAO,CAACC,IAAR;AAGD;;AAED,eAAerB,kBAAf","sourcesContent":["import { NativeModules } from 'react-native';\n\nimport { ProxyNativeModule } from './NativeModulesProxy.types';\n\nconst NativeProxy = NativeModules.NativeUnimoduleProxy;\nconst modulesConstantsKey = 'modulesConstants';\nconst exportedMethodsKey = 'exportedMethods';\n\nconst NativeModulesProxy: { [moduleName: string]: ProxyNativeModule } = {};\n\nif (NativeProxy) {\n  Object.keys(NativeProxy[exportedMethodsKey]).forEach(moduleName => {\n    NativeModulesProxy[moduleName] = NativeProxy[modulesConstantsKey][moduleName] || {};\n    NativeProxy[exportedMethodsKey][moduleName].forEach(methodInfo => {\n      NativeModulesProxy[moduleName][methodInfo.name] = (...args: unknown[]): Promise<any> => {\n        const { key, argumentsCount } = methodInfo;\n        if (argumentsCount !== args.length) {\n          return Promise.reject(\n            new Error(\n              `Native method ${moduleName}.${methodInfo.name} expects ${argumentsCount} ${\n                argumentsCount === 1 ? 'argument' : 'arguments'\n              } but received ${args.length}`\n            )\n          );\n        }\n        return NativeProxy.callMethod(moduleName, key, args);\n      };\n    });\n\n    // These are called by EventEmitter (which is a wrapper for NativeEventEmitter)\n    // only on iOS and they use iOS-specific native module, EXReactNativeEventEmitter.\n    //\n    // On Android only {start,stop}Observing are called on the native module\n    // and these should be exported as Expo methods.\n    NativeModulesProxy[moduleName].addListener = (...args) =>\n      NativeModules.UMReactNativeEventEmitter.addProxiedListener(moduleName, ...args);\n    NativeModulesProxy[moduleName].removeListeners = (...args) =>\n      NativeModules.UMReactNativeEventEmitter.removeProxiedListeners(moduleName, ...args);\n  });\n} else {\n  console.warn(\n    `The \"UMNativeModulesProxy\" native module is not exported through NativeModules; verify that @unimodules/react-native-adapter's native code is linked properly`\n  );\n}\n\nexport default NativeModulesProxy;\n"]},"metadata":{},"sourceType":"module"}