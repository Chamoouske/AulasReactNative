{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\n\nvar StaticContainer = function (_React$Component) {\n  _inherits(StaticContainer, _React$Component);\n\n  var _super = _createSuper(StaticContainer);\n\n  function StaticContainer() {\n    _classCallCheck(this, StaticContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StaticContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return !!nextProps.shouldUpdate;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var child = this.props.children;\n      return child === null || child === false ? null : React.Children.only(child);\n    }\n  }]);\n\n  return StaticContainer;\n}(React.Component);\n\nexport default StaticContainer;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/StaticContainer/index.js"],"names":["React","StaticContainer","nextProps","shouldUpdate","child","props","children","Children","only","Component"],"mappings":"AAUA;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IA4BMC,e;;;;;;;;;;;;;WACJ,+BAAsBC,SAAtB,EAAiD;AAC/C,aAAO,CAAC,CAACA,SAAS,CAACC,YAAnB;AACD;;;WAED,kBAAS;AACP,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAzB;AACA,aAAOF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAA5B,GACH,IADG,GAEHJ,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoBJ,KAApB,CAFJ;AAGD;;;;EAV2BJ,KAAK,CAACS,S;;AAapC,eAAeR,eAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport * as React from 'react';\n\n/**\n * Renders static content efficiently by allowing React to short-circuit the\n * reconciliation process. This component should be used when you know that a\n * subtree of components will never need to be updated.\n *\n *   const someValue = ...; // We know for certain this value will never change.\n *   return (\n *     <StaticContainer>\n *       <MyComponent value={someValue} />\n *     </StaticContainer>\n *   );\n *\n * Typically, you will not need to use this component and should opt for normal\n * React reconciliation.\n */\n\ntype Props = $ReadOnly<{|\n  /**\n   * Whether or not this component should update.\n   */\n  shouldUpdate: ?boolean,\n  /**\n   * Content short-circuited by React reconciliation process.\n   */\n  children: React.Node,\n|}>;\nclass StaticContainer extends React.Component<Props> {\n  shouldComponentUpdate(nextProps: Props): boolean {\n    return !!nextProps.shouldUpdate;\n  }\n\n  render() {\n    const child = this.props.children;\n    return child === null || child === false\n      ? null\n      : React.Children.only(child);\n  }\n}\n\nexport default StaticContainer;\n\n"]},"metadata":{},"sourceType":"module"}