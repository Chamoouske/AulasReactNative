{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processTemplateName = processTemplateName;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  var data = require(\"url\");\n\n  _url = function _url() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar FILE_PROTOCOL = /file:/;\nvar TARBALL = /\\.tgz$/;\nvar VERSION_POSTFIX = /(.*)(-\\d+\\.\\d+\\.\\d+)/;\nvar VERSIONED_PACKAGE = /(@?.+)(@)(.+)/;\n\nfunction handleFileProtocol(filePath) {\n  var uri = new (_url().URL)(filePath).pathname;\n\n  if (process.platform === 'win32') {\n    uri = uri.substring(1);\n  }\n\n  if (!_fs().default.existsSync(uri)) {\n    throw new (_cliTools().CLIError)(\"Failed to retrieve template name. The specified template directory path \\\"\" + uri + \"\\\" does not exist or is invalid.\");\n  }\n\n  var packageJsonPath = _path().default.join(uri, 'package.json');\n\n  var packageJson;\n\n  try {\n    packageJson = JSON.parse(_fs().default.readFileSync(packageJsonPath, {\n      encoding: 'utf8'\n    }));\n  } catch (_unused) {\n    throw new (_cliTools().CLIError)('Failed to retrieve template name. We expect the template directory to include \"package.json\" file, but it was not found.');\n  }\n\n  if (!packageJson || !packageJson.name) {\n    throw new (_cliTools().CLIError)(\"Failed to retrieve template name. We expect the \\\"package.json\\\" of the template to include the \\\"name\\\" property, but we found \\\"\" + (packageJson ? packageJson.name : 'undefined') + \"\\\" which is invalid.\");\n  }\n\n  return {\n    uri: uri,\n    name: packageJson.name\n  };\n}\n\nfunction handleTarball(filePath) {\n  if (!_fs().default.existsSync(filePath)) {\n    throw new (_cliTools().CLIError)(\"Failed to retrieve tarball name. The specified tarball path \\\"\" + filePath + \"\\\" does not exist or is invalid.\");\n  }\n\n  var nameWithVersion = _path().default.parse(_path().default.basename(filePath)).name;\n\n  var tarballVersionMatch = nameWithVersion.match(VERSION_POSTFIX);\n\n  if (!tarballVersionMatch) {\n    throw new (_cliTools().CLIError)(\"Failed to retrieve tarball name. We expect the tarball to include package name and version, e.g.: \\\"template-name-1.2.3-rc.0.tgz\\\", but received: \\\"\" + nameWithVersion + \"\\\".\");\n  }\n\n  return {\n    uri: filePath,\n    name: tarballVersionMatch[1]\n  };\n}\n\nfunction handleVersionedPackage(versionedPackage) {\n  var versionedPackageMatch = versionedPackage.match(VERSIONED_PACKAGE);\n\n  if (!versionedPackageMatch) {\n    throw new (_cliTools().CLIError)(\"Failed to retrieve package name. We expect the package to include name and version, e.g.: \\\"template-name@1.2.3-rc.0\\\", but received: \\\"\" + versionedPackage + \"\\\".\");\n  }\n\n  return {\n    uri: versionedPackage,\n    name: versionedPackageMatch[1]\n  };\n}\n\nfunction processTemplateName(templateName) {\n  if (templateName.match(TARBALL)) {\n    return handleTarball(templateName);\n  }\n\n  if (templateName.match(FILE_PROTOCOL)) {\n    return handleFileProtocol(templateName);\n  }\n\n  if (templateName.match(VERSIONED_PACKAGE)) {\n    return handleVersionedPackage(templateName);\n  }\n\n  return {\n    uri: templateName,\n    name: templateName\n  };\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/init/templateName.js"],"names":["Object","defineProperty","exports","value","processTemplateName","_path","data","_interopRequireDefault","require","_url","_fs","_cliTools","obj","__esModule","default","FILE_PROTOCOL","TARBALL","VERSION_POSTFIX","VERSIONED_PACKAGE","handleFileProtocol","filePath","uri","URL","pathname","process","platform","substring","existsSync","CLIError","packageJsonPath","join","packageJson","JSON","parse","readFileSync","encoding","_unused","name","handleTarball","nameWithVersion","basename","tarballVersionMatch","match","handleVersionedPackage","versionedPackage","versionedPackageMatch","templateName"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processTemplateName = processTemplateName;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require(\"url\");\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst FILE_PROTOCOL = /file:/;\nconst TARBALL = /\\.tgz$/;\nconst VERSION_POSTFIX = /(.*)(-\\d+\\.\\d+\\.\\d+)/;\nconst VERSIONED_PACKAGE = /(@?.+)(@)(.+)/;\n\nfunction handleFileProtocol(filePath) {\n  let uri = new (_url().URL)(filePath).pathname;\n\n  if (process.platform === 'win32') {\n    // On Windows, the pathname has an extra / at the start, so remove that\n    uri = uri.substring(1);\n  }\n\n  if (!_fs().default.existsSync(uri)) {\n    throw new (_cliTools().CLIError)(`Failed to retrieve template name. The specified template directory path \"${uri}\" does not exist or is invalid.`);\n  }\n\n  const packageJsonPath = _path().default.join(uri, 'package.json');\n\n  let packageJson;\n\n  try {\n    packageJson = JSON.parse(_fs().default.readFileSync(packageJsonPath, {\n      encoding: 'utf8'\n    }));\n  } catch (_unused) {\n    throw new (_cliTools().CLIError)('Failed to retrieve template name. We expect the template directory to include \"package.json\" file, but it was not found.');\n  }\n\n  if (!packageJson || !packageJson.name) {\n    throw new (_cliTools().CLIError)(`Failed to retrieve template name. We expect the \"package.json\" of the template to include the \"name\" property, but we found \"${packageJson ? packageJson.name : 'undefined'}\" which is invalid.`);\n  }\n\n  return {\n    uri,\n    name: packageJson.name\n  };\n}\n\nfunction handleTarball(filePath) {\n  if (!_fs().default.existsSync(filePath)) {\n    throw new (_cliTools().CLIError)(`Failed to retrieve tarball name. The specified tarball path \"${filePath}\" does not exist or is invalid.`);\n  }\n\n  const nameWithVersion = _path().default.parse(_path().default.basename(filePath)).name;\n\n  const tarballVersionMatch = nameWithVersion.match(VERSION_POSTFIX);\n\n  if (!tarballVersionMatch) {\n    throw new (_cliTools().CLIError)(`Failed to retrieve tarball name. We expect the tarball to include package name and version, e.g.: \"template-name-1.2.3-rc.0.tgz\", but received: \"${nameWithVersion}\".`);\n  }\n\n  return {\n    uri: filePath,\n    name: tarballVersionMatch[1]\n  };\n}\n\nfunction handleVersionedPackage(versionedPackage) {\n  const versionedPackageMatch = versionedPackage.match(VERSIONED_PACKAGE);\n\n  if (!versionedPackageMatch) {\n    throw new (_cliTools().CLIError)(`Failed to retrieve package name. We expect the package to include name and version, e.g.: \"template-name@1.2.3-rc.0\", but received: \"${versionedPackage}\".`);\n  }\n\n  return {\n    uri: versionedPackage,\n    name: versionedPackageMatch[1]\n  };\n}\n\nfunction processTemplateName(templateName) {\n  if (templateName.match(TARBALL)) {\n    return handleTarball(templateName);\n  }\n\n  if (templateName.match(FILE_PROTOCOL)) {\n    return handleFileProtocol(templateName);\n  }\n\n  if (templateName.match(VERSIONED_PACKAGE)) {\n    return handleVersionedPackage(templateName);\n  }\n\n  return {\n    uri: templateName,\n    name: templateName\n  };\n}\n\n//# sourceMappingURL=templateName.js.map"]},"metadata":{},"sourceType":"script"}