{"ast":null,"code":"'use strict';\n\nvar EventEmitterWithHolding = function () {\n  function EventEmitterWithHolding(emitter, holder) {\n    this._emitter = emitter;\n    this._eventHolder = holder;\n    this._currentEventToken = null;\n    this._emittingHeldEvents = false;\n  }\n\n  var _proto = EventEmitterWithHolding.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    return this._emitter.addListener(eventType, listener, context);\n  };\n\n  _proto.once = function once(eventType, listener, context) {\n    return this._emitter.once(eventType, listener, context);\n  };\n\n  _proto.addRetroactiveListener = function addRetroactiveListener(eventType, listener, context) {\n    var subscription = this._emitter.addListener(eventType, listener, context);\n\n    this._emittingHeldEvents = true;\n\n    this._eventHolder.emitToListener(eventType, listener, context);\n\n    this._emittingHeldEvents = false;\n    return subscription;\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    this._emitter.removeAllListeners(eventType);\n  };\n\n  _proto.removeCurrentListener = function removeCurrentListener() {\n    this._emitter.removeCurrentListener();\n  };\n\n  _proto.listeners = function listeners(eventType) {\n    return this._emitter.listeners(eventType);\n  };\n\n  _proto.emit = function emit(eventType) {\n    var _this$_emitter;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_this$_emitter = this._emitter).emit.apply(_this$_emitter, [eventType].concat(args));\n  };\n\n  _proto.emitAndHold = function emitAndHold(eventType) {\n    var _this$_eventHolder, _this$_emitter2;\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    this._currentEventToken = (_this$_eventHolder = this._eventHolder).holdEvent.apply(_this$_eventHolder, [eventType].concat(args));\n\n    (_this$_emitter2 = this._emitter).emit.apply(_this$_emitter2, [eventType].concat(args));\n\n    this._currentEventToken = null;\n  };\n\n  _proto.releaseCurrentEvent = function releaseCurrentEvent() {\n    if (this._currentEventToken) {\n      this._eventHolder.releaseEvent(this._currentEventToken);\n    } else if (this._emittingHeldEvents) {\n      this._eventHolder.releaseCurrentEvent();\n    }\n  };\n\n  _proto.releaseHeldEventType = function releaseHeldEventType(eventType) {\n    this._eventHolder.releaseEventType(eventType);\n  };\n\n  return EventEmitterWithHolding;\n}();\n\nexport default EventEmitterWithHolding;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/dist/vendor/react-native/emitter/EventEmitterWithHolding.js"],"names":["EventEmitterWithHolding","emitter","holder","_emitter","_eventHolder","_currentEventToken","_emittingHeldEvents","_proto","prototype","addListener","eventType","listener","context","once","addRetroactiveListener","subscription","emitToListener","removeAllListeners","removeCurrentListener","listeners","emit","_this$_emitter","_len","arguments","length","args","Array","_key","apply","concat","emitAndHold","_this$_eventHolder","_this$_emitter2","_len2","_key2","holdEvent","releaseCurrentEvent","releaseEvent","releaseHeldEventType","releaseEventType"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\n/**\n * @class EventEmitterWithHolding\n * @description\n * An EventEmitterWithHolding decorates an event emitter and enables one to\n * \"hold\" or cache events and then have a handler register later to actually\n * handle them.\n *\n * This is separated into its own decorator so that only those who want to use\n * the holding functionality have to and others can just use an emitter. Since\n * it implements the emitter interface it can also be combined with anything\n * that uses an emitter.\n */\nvar EventEmitterWithHolding =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @constructor\n   * @param {object} emitter - The object responsible for emitting the actual\n   *   events.\n   * @param {object} holder - The event holder that is responsible for holding\n   *   and then emitting held events.\n   */\n  function EventEmitterWithHolding(emitter, holder) {\n    this._emitter = emitter;\n    this._eventHolder = holder;\n    this._currentEventToken = null;\n    this._emittingHeldEvents = false;\n  }\n  /**\n   * @see EventEmitter#addListener\n   */\n\n\n  var _proto = EventEmitterWithHolding.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    return this._emitter.addListener(eventType, listener, context);\n  }\n  /**\n   * @see EventEmitter#once\n   */\n  ;\n\n  _proto.once = function once(eventType, listener, context) {\n    return this._emitter.once(eventType, listener, context);\n  }\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function. In addition to subscribing\n   * to all subsequent events, this method will also handle any events that have\n   * already been emitted, held, and not released.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   *\n   * @example\n   *   emitter.emitAndHold('someEvent', 'abc');\n   *\n   *   emitter.addRetroactiveListener('someEvent', function(message) {\n   *     console.log(message);\n   *   }); // logs 'abc'\n   */\n  ;\n\n  _proto.addRetroactiveListener = function addRetroactiveListener(eventType, listener, context) {\n    var subscription = this._emitter.addListener(eventType, listener, context);\n\n    this._emittingHeldEvents = true;\n\n    this._eventHolder.emitToListener(eventType, listener, context);\n\n    this._emittingHeldEvents = false;\n    return subscription;\n  }\n  /**\n   * @see EventEmitter#removeAllListeners\n   */\n  ;\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    this._emitter.removeAllListeners(eventType);\n  }\n  /**\n   * @see EventEmitter#removeCurrentListener\n   */\n  ;\n\n  _proto.removeCurrentListener = function removeCurrentListener() {\n    this._emitter.removeCurrentListener();\n  }\n  /**\n   * @see EventEmitter#listeners\n   */\n  ;\n\n  _proto.listeners = function listeners(eventType)\n  /* TODO: Annotate return type here */\n  {\n    return this._emitter.listeners(eventType);\n  }\n  /**\n   * @see EventEmitter#emit\n   */\n  ;\n\n  _proto.emit = function emit(eventType) {\n    var _this$_emitter;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_this$_emitter = this._emitter).emit.apply(_this$_emitter, [eventType].concat(args));\n  }\n  /**\n   * Emits an event of the given type with the given data, and holds that event\n   * in order to be able to dispatch it to a later subscriber when they say they\n   * want to handle held events.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {...*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.emitAndHold('someEvent', 'abc');\n   *\n   *   emitter.addRetroactiveListener('someEvent', function(message) {\n   *     console.log(message);\n   *   }); // logs 'abc'\n   */\n  ;\n\n  _proto.emitAndHold = function emitAndHold(eventType) {\n    var _this$_eventHolder, _this$_emitter2;\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    this._currentEventToken = (_this$_eventHolder = this._eventHolder).holdEvent.apply(_this$_eventHolder, [eventType].concat(args));\n\n    (_this$_emitter2 = this._emitter).emit.apply(_this$_emitter2, [eventType].concat(args));\n\n    this._currentEventToken = null;\n  }\n  /**\n   * @see EventHolder#releaseCurrentEvent\n   */\n  ;\n\n  _proto.releaseCurrentEvent = function releaseCurrentEvent() {\n    if (this._currentEventToken) {\n      this._eventHolder.releaseEvent(this._currentEventToken);\n    } else if (this._emittingHeldEvents) {\n      this._eventHolder.releaseCurrentEvent();\n    }\n  }\n  /**\n   * @see EventHolder#releaseEventType\n   * @param {string} eventType\n   */\n  ;\n\n  _proto.releaseHeldEventType = function releaseHeldEventType(eventType) {\n    this._eventHolder.releaseEventType(eventType);\n  };\n\n  return EventEmitterWithHolding;\n}();\n\nexport default EventEmitterWithHolding;"]},"metadata":{},"sourceType":"module"}