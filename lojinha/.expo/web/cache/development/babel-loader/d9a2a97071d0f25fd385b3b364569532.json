{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { PlatformOSType } from 'react-native';\nexport declare type PlatformSelectOSType = PlatformOSType | 'native' | 'electron' | 'default';\nexport declare type PlatformSelect = <T>(specifics: {\n    [platform in PlatformSelectOSType]?: T;\n}) => T;\ndeclare const Platform: {\n    /**\n     * Denotes the currently running platform.\n     * Can be one of ios, android, web.\n     */\n    OS: \"ios\" | \"android\" | \"windows\" | \"macos\" | \"web\";\n    /**\n     * Returns the value with the matching platform.\n     * Object keys can be any of ios, android, native, web, default.\n     *\n     * @ios ios, native, default\n     * @android android, native, default\n     * @web web, default\n     */\n    select: PlatformSelect;\n    /**\n     * Denotes if the DOM API is available in the current environment.\n     * The DOM is not available in native React runtimes and Node.js.\n     */\n    isDOMAvailable: boolean;\n};\nexport default Platform;\n"]},"metadata":{},"sourceType":"module"}