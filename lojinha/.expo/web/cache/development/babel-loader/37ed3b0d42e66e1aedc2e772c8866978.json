{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityIOSExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar AccessibilityIOSExample = function (_React$Component) {\n  _inherits(AccessibilityIOSExample, _React$Component);\n\n  var _super = _createSuper(AccessibilityIOSExample);\n\n  function AccessibilityIOSExample() {\n    _classCallCheck(this, AccessibilityIOSExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccessibilityIOSExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterBlock, {\n        title: \"Accessibility iOS APIs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          if (event.nativeEvent.actionName === 'activate') {\n            Alert.alert('Alert', 'onAccessibilityTap success');\n          }\n        },\n        accessible: true,\n        accessibilityActions: [{\n          name: 'activate'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, \"Accessibility normal tap example\")), React.createElement(View, {\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          if (event.nativeEvent.actionName === 'magicTap') {\n            Alert.alert('Alert', 'onMagicTap success');\n          }\n        },\n        accessible: true,\n        accessibilityActions: [{\n          name: 'magicTap'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Accessibility magic tap example\")), React.createElement(View, {\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          if (event.nativeEvent.actionName === 'escape') {\n            Alert.alert('onAccessibilityEscape success');\n          }\n        },\n        accessible: true,\n        accessibilityActions: [{\n          name: 'escape'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Accessibility escape example\")), React.createElement(View, {\n        accessibilityElementsHidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"This view's children are hidden from the accessibility tree\")));\n    }\n  }]);\n\n  return AccessibilityIOSExample;\n}(React.Component);\n\nexports.title = 'AccessibilityIOS';\nexports.description = 'iOS specific Accessibility APIs';\nexports.examples = [{\n  title: 'iOS Accessibility elements',\n  render: function render() {\n    return React.createElement(AccessibilityIOSExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityIOSExample.js"],"names":["React","require","RNTesterBlock","AccessibilityIOSExample","event","nativeEvent","actionName","Alert","alert","name","Component","exports","title","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;AAGA,IAAMC,aAAa,GAAGD,OAAO,kCAA7B;;IAGME,uB;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,qBAAqB,EAAE,+BAAAC,KAAK,EAAI;AAC9B,cAAIA,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,UAArC,EAAiD;AAC/CC,YAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,4BAArB;AACD;AACF,SALH;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,oBAAoB,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CARF,CADF,EAWE,oBAAC,IAAD;AACE,QAAA,qBAAqB,EAAE,+BAAAL,KAAK,EAAI;AAC9B,cAAIA,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,UAArC,EAAiD;AAC/CC,YAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,oBAArB;AACD;AACF,SALH;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,oBAAoB,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CARF,CAXF,EAqBE,oBAAC,IAAD;AACE,QAAA,qBAAqB,EAAE,+BAAAL,KAAK,EAAI;AAC9B,cAAIA,KAAK,CAACC,WAAN,CAAkBC,UAAlB,KAAiC,QAArC,EAA+C;AAC7CC,YAAAA,KAAK,CAACC,KAAN,CAAY,+BAAZ;AACD;AACF,SALH;AAME,QAAA,UAAU,EAAE,IANd;AAOE,QAAA,oBAAoB,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCARF,CArBF,EA+BE,oBAAC,IAAD;AAAM,QAAA,2BAA2B,EAAE,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,CA/BF,CADF;AAuCD;;;;EAzCmCT,KAAK,CAACU,S;;AA4C5CC,OAAO,CAACC,KAAR,GAAgB,kBAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,iCAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,4BADT;AAEEG,EAAAA,MAFF,oBAE+B;AAC3B,WAAO,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {Text, View, Alert} = require('react-native');\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\n\ntype Props = $ReadOnly<{||}>;\nclass AccessibilityIOSExample extends React.Component<Props> {\n  render() {\n    return (\n      <RNTesterBlock title=\"Accessibility iOS APIs\">\n        <View\n          onAccessibilityAction={event => {\n            if (event.nativeEvent.actionName === 'activate') {\n              Alert.alert('Alert', 'onAccessibilityTap success');\n            }\n          }}\n          accessible={true}\n          accessibilityActions={[{name: 'activate'}]}>\n          <Text>Accessibility normal tap example</Text>\n        </View>\n        <View\n          onAccessibilityAction={event => {\n            if (event.nativeEvent.actionName === 'magicTap') {\n              Alert.alert('Alert', 'onMagicTap success');\n            }\n          }}\n          accessible={true}\n          accessibilityActions={[{name: 'magicTap'}]}>\n          <Text>Accessibility magic tap example</Text>\n        </View>\n        <View\n          onAccessibilityAction={event => {\n            if (event.nativeEvent.actionName === 'escape') {\n              Alert.alert('onAccessibilityEscape success');\n            }\n          }}\n          accessible={true}\n          accessibilityActions={[{name: 'escape'}]}>\n          <Text>Accessibility escape example</Text>\n        </View>\n        <View accessibilityElementsHidden={true}>\n          <Text>\n            This view's children are hidden from the accessibility tree\n          </Text>\n        </View>\n      </RNTesterBlock>\n    );\n  }\n}\n\nexports.title = 'AccessibilityIOS';\nexports.description = 'iOS specific Accessibility APIs';\nexports.examples = [\n  {\n    title: 'iOS Accessibility elements',\n    render(): React.Element<any> {\n      return <AccessibilityIOSExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}