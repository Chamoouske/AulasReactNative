{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar DirectoryAlreadyExistsError = function (_Error) {\n  _inherits(DirectoryAlreadyExistsError, _Error);\n\n  var _super = _createSuper(DirectoryAlreadyExistsError);\n\n  function DirectoryAlreadyExistsError(directory) {\n    _classCallCheck(this, DirectoryAlreadyExistsError);\n\n    return _super.call(this, \"Cannot initialize new project because directory \\\"\" + directory + \"\\\" already exists.\");\n  }\n\n  return DirectoryAlreadyExistsError;\n}(_wrapNativeSuper(Error));\n\nexports.default = DirectoryAlreadyExistsError;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/init/errors/DirectoryAlreadyExistsError.js"],"names":["Object","defineProperty","exports","value","default","DirectoryAlreadyExistsError","directory","Error"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;IAEMC,2B;;;;;AACJ,uCAAYC,SAAZ,EAAuB;AAAA;;AAAA,oFACqCA,SADrC;AAEtB;;;mBAHuCC,K;;AAO1CL,OAAO,CAACE,OAAR,GAAkBC,2BAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass DirectoryAlreadyExistsError extends Error {\n  constructor(directory) {\n    super(`Cannot initialize new project because directory \"${directory}\" already exists.`);\n  }\n\n}\n\nexports.default = DirectoryAlreadyExistsError;\n\n//# sourceMappingURL=DirectoryAlreadyExistsError.js.map"]},"metadata":{},"sourceType":"script"}