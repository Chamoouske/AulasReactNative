{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Appearance/AppearanceExample.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RNTesterThemeContext, themes } from \"../../components/RNTesterTheme\";\n\nvar ColorSchemeSubscription = function (_React$Component) {\n  _inherits(ColorSchemeSubscription, _React$Component);\n\n  var _super = _createSuper(ColorSchemeSubscription);\n\n  function ColorSchemeSubscription() {\n    var _this;\n\n    _classCallCheck(this, ColorSchemeSubscription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      colorScheme: Appearance.getColorScheme()\n    };\n\n    _this._handleAppearanceChange = function (preferences) {\n      var colorScheme = preferences.colorScheme;\n\n      _this.setState({\n        colorScheme: colorScheme\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorSchemeSubscription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Appearance.addChangeListener(this._handleAppearanceChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Appearance.removeChangeListener(this._handleAppearanceChange);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(RNTesterThemeContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, function (theme) {\n        return React.createElement(ThemedContainer, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, React.createElement(ThemedText, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }\n        }, _this2.state.colorScheme));\n      });\n    }\n  }]);\n\n  return ColorSchemeSubscription;\n}(React.Component);\n\nvar ThemedContainer = function ThemedContainer(props) {\n  return React.createElement(RNTesterThemeContext.Consumer, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, function (theme) {\n    return React.createElement(View, {\n      style: {\n        paddingHorizontal: 8,\n        paddingVertical: 16,\n        backgroundColor: theme.SystemBackgroundColor\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, props.children);\n  });\n};\n\nvar ThemedText = function ThemedText(props) {\n  return React.createElement(RNTesterThemeContext.Consumer, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, function (theme) {\n    return React.createElement(Text, {\n      style: {\n        color: theme.LabelColor\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }\n    }, props.children);\n  });\n};\n\nexports.title = 'Appearance';\nexports.description = 'Light and dark user interface examples.';\nexports.examples = [{\n  title: 'useColorScheme hook',\n  render: function render() {\n    var _this4 = this;\n\n    var AppearanceViaHook = function AppearanceViaHook() {\n      var colorScheme = useColorScheme();\n      return React.createElement(RNTesterThemeContext.Provider, {\n        value: colorScheme === 'dark' ? themes.dark : themes.light,\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(ThemedContainer, {\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(ThemedText, {\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, \"useColorScheme(): \", colorScheme)));\n    };\n\n    return React.createElement(AppearanceViaHook, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Non-component `getColorScheme` API',\n  render: function render() {\n    return React.createElement(ColorSchemeSubscription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Consuming Context',\n  render: function render() {\n    var _this5 = this;\n\n    return React.createElement(RNTesterThemeContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, function (theme) {\n      return React.createElement(ThemedContainer, {\n        __self: _this5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, React.createElement(ThemedText, {\n        __self: _this5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, \"This block of text inherits its theme via Context.\"));\n    });\n  }\n}, {\n  title: 'Context forced to light theme',\n  render: function render() {\n    return React.createElement(RNTesterThemeContext.Provider, {\n      value: themes.light,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, React.createElement(ThemedContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, React.createElement(ThemedText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"This block of text will always render with a light theme.\")));\n  }\n}, {\n  title: 'Context forced to dark theme',\n  render: function render() {\n    return React.createElement(RNTesterThemeContext.Provider, {\n      value: themes.dark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, React.createElement(ThemedContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, React.createElement(ThemedText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"This block of text will always render with a dark theme.\")));\n  }\n}, {\n  title: 'RNTester App Colors',\n  description: 'A light and a dark theme based on standard iOS 13 colors.',\n  render: function render() {\n    var _this6 = this;\n\n    var ColorShowcase = function ColorShowcase(props) {\n      return React.createElement(RNTesterThemeContext.Consumer, {\n        __self: _this6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, function (theme) {\n        return React.createElement(View, {\n          style: {\n            marginVertical: 20,\n            backgroundColor: theme.SystemBackgroundColor\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: '700',\n            color: theme.LabelColor\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }\n        }, props.themeName), Object.keys(theme).map(function (key) {\n          return React.createElement(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            key: key,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }\n          }, React.createElement(View, {\n            style: {\n              width: 50,\n              height: 50,\n              paddingHorizontal: 8,\n              paddingVertical: 2,\n              backgroundColor: theme[key]\n            },\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }\n          }), React.createElement(View, {\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: {\n              paddingHorizontal: 16,\n              paddingVertical: 2,\n              color: theme.LabelColor,\n              fontWeight: '600'\n            },\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 23\n            }\n          }, key), React.createElement(Text, {\n            style: {\n              paddingHorizontal: 16,\n              paddingVertical: 2,\n              color: theme.LabelColor\n            },\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 23\n            }\n          }, typeof theme[key] === 'string' ? theme[key] : JSON.stringify(theme[key]))));\n        }));\n      });\n    };\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, React.createElement(RNTesterThemeContext.Provider, {\n      value: themes.light,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, React.createElement(ColorShowcase, {\n      themeName: \"Light Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    })), React.createElement(RNTesterThemeContext.Provider, {\n      value: themes.dark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, React.createElement(ColorShowcase, {\n      themeName: \"Dark Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    })));\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Appearance/AppearanceExample.js"],"names":["React","RNTesterThemeContext","themes","ColorSchemeSubscription","state","colorScheme","Appearance","getColorScheme","_handleAppearanceChange","preferences","setState","addChangeListener","removeChangeListener","theme","Component","ThemedContainer","props","paddingHorizontal","paddingVertical","backgroundColor","SystemBackgroundColor","children","ThemedText","color","LabelColor","exports","title","description","examples","render","AppearanceViaHook","useColorScheme","dark","light","ColorShowcase","marginVertical","fontWeight","themeName","Object","keys","map","key","flexDirection","width","height","JSON","stringify"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {Appearance, Text, useColorScheme, View} from 'react-native';\nimport type {AppearancePreferences} from '../../../../Libraries/Utilities/NativeAppearance';\nimport {RNTesterThemeContext, themes} from '../../components/RNTesterTheme';\n\nclass ColorSchemeSubscription extends React.Component<\n  {...},\n  {colorScheme: ?string, ...},\n> {\n  state = {\n    colorScheme: Appearance.getColorScheme(),\n  };\n\n  componentDidMount() {\n    Appearance.addChangeListener(this._handleAppearanceChange);\n  }\n\n  componentWillUnmount() {\n    Appearance.removeChangeListener(this._handleAppearanceChange);\n  }\n\n  _handleAppearanceChange = (preferences: AppearancePreferences) => {\n    const {colorScheme} = preferences;\n    this.setState({colorScheme});\n  };\n\n  render() {\n    return (\n      <RNTesterThemeContext.Consumer>\n        {theme => {\n          return (\n            <ThemedContainer>\n              <ThemedText>{this.state.colorScheme}</ThemedText>\n            </ThemedContainer>\n          );\n        }}\n      </RNTesterThemeContext.Consumer>\n    );\n  }\n}\n\nconst ThemedContainer = props => (\n  <RNTesterThemeContext.Consumer>\n    {theme => {\n      return (\n        <View\n          style={{\n            paddingHorizontal: 8,\n            paddingVertical: 16,\n            backgroundColor: theme.SystemBackgroundColor,\n          }}>\n          {props.children}\n        </View>\n      );\n    }}\n  </RNTesterThemeContext.Consumer>\n);\n\nconst ThemedText = props => (\n  <RNTesterThemeContext.Consumer>\n    {theme => {\n      return <Text style={{color: theme.LabelColor}}>{props.children}</Text>;\n    }}\n  </RNTesterThemeContext.Consumer>\n);\n\nexports.title = 'Appearance';\nexports.description = 'Light and dark user interface examples.';\nexports.examples = [\n  {\n    title: 'useColorScheme hook',\n    render(): React.Node {\n      const AppearanceViaHook = () => {\n        const colorScheme = useColorScheme();\n        return (\n          <RNTesterThemeContext.Provider\n            value={colorScheme === 'dark' ? themes.dark : themes.light}>\n            <ThemedContainer>\n              <ThemedText>useColorScheme(): {colorScheme}</ThemedText>\n            </ThemedContainer>\n          </RNTesterThemeContext.Provider>\n        );\n      };\n      return <AppearanceViaHook />;\n    },\n  },\n  {\n    title: 'Non-component `getColorScheme` API',\n    render(): React.Element<any> {\n      return <ColorSchemeSubscription />;\n    },\n  },\n  {\n    title: 'Consuming Context',\n    render(): React.Element<any> {\n      return (\n        <RNTesterThemeContext.Consumer>\n          {theme => {\n            return (\n              <ThemedContainer>\n                <ThemedText>\n                  This block of text inherits its theme via Context.\n                </ThemedText>\n              </ThemedContainer>\n            );\n          }}\n        </RNTesterThemeContext.Consumer>\n      );\n    },\n  },\n  {\n    title: 'Context forced to light theme',\n    render(): React.Element<any> {\n      return (\n        <RNTesterThemeContext.Provider value={themes.light}>\n          <ThemedContainer>\n            <ThemedText>\n              This block of text will always render with a light theme.\n            </ThemedText>\n          </ThemedContainer>\n        </RNTesterThemeContext.Provider>\n      );\n    },\n  },\n  {\n    title: 'Context forced to dark theme',\n    render(): React.Element<any> {\n      return (\n        <RNTesterThemeContext.Provider value={themes.dark}>\n          <ThemedContainer>\n            <ThemedText>\n              This block of text will always render with a dark theme.\n            </ThemedText>\n          </ThemedContainer>\n        </RNTesterThemeContext.Provider>\n      );\n    },\n  },\n  {\n    title: 'RNTester App Colors',\n    description: 'A light and a dark theme based on standard iOS 13 colors.',\n    render(): React.Element<any> {\n      const ColorShowcase = props => (\n        <RNTesterThemeContext.Consumer>\n          {theme => {\n            return (\n              <View\n                style={{\n                  marginVertical: 20,\n                  backgroundColor: theme.SystemBackgroundColor,\n                }}>\n                <Text style={{fontWeight: '700', color: theme.LabelColor}}>\n                  {props.themeName}\n                </Text>\n                {Object.keys(theme).map(key => (\n                  <View style={{flexDirection: 'row'}} key={key}>\n                    <View\n                      style={{\n                        width: 50,\n                        height: 50,\n                        paddingHorizontal: 8,\n                        paddingVertical: 2,\n                        backgroundColor: theme[key],\n                      }}\n                    />\n                    <View>\n                      <Text\n                        style={{\n                          paddingHorizontal: 16,\n                          paddingVertical: 2,\n                          color: theme.LabelColor,\n                          fontWeight: '600',\n                        }}>\n                        {key}\n                      </Text>\n                      <Text\n                        style={{\n                          paddingHorizontal: 16,\n                          paddingVertical: 2,\n                          color: theme.LabelColor,\n                        }}>\n                        {typeof theme[key] === 'string'\n                          ? theme[key]\n                          : JSON.stringify(theme[key])}\n                      </Text>\n                    </View>\n                  </View>\n                ))}\n              </View>\n            );\n          }}\n        </RNTesterThemeContext.Consumer>\n      );\n\n      return (\n        <View>\n          <RNTesterThemeContext.Provider value={themes.light}>\n            <ColorShowcase themeName=\"Light Mode\" />\n          </RNTesterThemeContext.Provider>\n          <RNTesterThemeContext.Provider value={themes.dark}>\n            <ColorShowcase themeName=\"Dark Mode\" />\n          </RNTesterThemeContext.Provider>\n        </View>\n      );\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}