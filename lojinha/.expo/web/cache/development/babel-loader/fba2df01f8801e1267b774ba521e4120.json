{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar AccessibilityInfo = require(\"react-native-web/dist/exports/AccessibilityInfo\").default;\n\nvar Button = require(\"react-native-web/dist/exports/Button\").default;\n\nvar Image = require(\"react-native-web/dist/exports/Image\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar TouchableOpacity = require(\"react-native-web/dist/exports/TouchableOpacity\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar checkImageSource = require(\"./check.png\");\n\nvar uncheckImageSource = require(\"./uncheck.png\");\n\nvar mixedCheckboxImageSource = require(\"./mixed.png\");\n\nvar styles = StyleSheet.create({\n  image: {\n    width: 20,\n    height: 20,\n    resizeMode: 'contain',\n    marginRight: 10\n  }\n});\n\nvar AccessibilityExample = function (_React$Component) {\n  _inherits(AccessibilityExample, _React$Component);\n\n  var _super = _createSuper(AccessibilityExample);\n\n  function AccessibilityExample() {\n    _classCallCheck(this, AccessibilityExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccessibilityExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"TextView without label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Text's accessibilityLabel is the raw text itself unless it is set explicitly.\")), React.createElement(RNTesterBlock, {\n        title: \"TextView with label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        accessibilityLabel: \"I have label, so I read it instead of embedded text.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"This text component's accessibilityLabel is set explicitly.\")), React.createElement(RNTesterBlock, {\n        title: \"Nonaccessible view with TextViews\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"This is text one.\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"This is text two.\"))), React.createElement(RNTesterBlock, {\n        title: \"Accessible view with TextViews wihout label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"This is text one.\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \"This is text two.\"))), React.createElement(RNTesterBlock, {\n        title: \"Accessible view with TextViews with label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityLabel: \"I have label, so I read it instead of embedded text.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"This is text one.\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"This is text two.\"))), React.createElement(RNTesterBlock, {\n        title: \"Accessible view with TextViews with hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessibilityHint: \"Accessibility hint.\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"This is text one.\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, \"This is text two.\"))), React.createElement(RNTesterBlock, {\n        title: \"Accessible view TextViews with label and hint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessibilityLabel: \"Accessibility label.\",\n        accessibilityHint: \"Accessibility hint.\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"This is text one.\"), React.createElement(Text, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"This is text two.\"))), React.createElement(RNTesterBlock, {\n        title: \"Text with accessibilityRole = header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        accessibilityRole: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, \"This is a title.\")), React.createElement(RNTesterBlock, {\n        title: \"Touchable with accessibilityRole = link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Alert.alert('Link has been clicked!');\n        },\n        accessibilityRole: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Click me\")))), React.createElement(RNTesterBlock, {\n        title: \"Touchable with accessibilityRole = button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Alert.alert('Button has been pressed!');\n        },\n        accessibilityRole: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, \"Click me\"))), React.createElement(RNTesterBlock, {\n        title: \"Disabled Touchable with role\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return Alert.alert('Button has been pressed!');\n        },\n        accessibilityRole: \"button\",\n        accessibilityState: {\n          disabled: true\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"I am disabled. Clicking me will not trigger any action.\")))), React.createElement(RNTesterBlock, {\n        title: \"View with multiple states\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityState: {\n          selected: true,\n          disabled: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, \"This view is selected and disabled.\"))), React.createElement(RNTesterBlock, {\n        title: \"View with label, hint, role, and state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityLabel: \"Accessibility label.\",\n        accessibilityRole: \"button\",\n        accessibilityState: {\n          selected: true\n        },\n        accessibilityHint: \"Accessibility hint.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, \"Accessible view with label, hint, role, and state\"))));\n    }\n  }]);\n\n  return AccessibilityExample;\n}(React.Component);\n\nvar CheckboxExample = function (_React$Component2) {\n  _inherits(CheckboxExample, _React$Component2);\n\n  var _super2 = _createSuper(CheckboxExample);\n\n  function CheckboxExample() {\n    var _this;\n\n    _classCallCheck(this, CheckboxExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      checkboxState: true\n    };\n\n    _this._onCheckboxPress = function () {\n      var checkboxState = false;\n\n      if (_this.state.checkboxState === false) {\n        checkboxState = 'mixed';\n      } else if (_this.state.checkboxState === 'mixed') {\n        checkboxState = true;\n      } else {\n        checkboxState = false;\n      }\n\n      _this.setState({\n        checkboxState: checkboxState\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this._onCheckboxPress,\n        accessibilityLabel: \"element 2\",\n        accessibilityRole: \"checkbox\",\n        accessibilityState: {\n          checked: this.state.checkboxState\n        },\n        accessibilityHint: \"click me to change state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, \"Checkbox example\"));\n    }\n  }]);\n\n  return CheckboxExample;\n}(React.Component);\n\nvar SwitchExample = function (_React$Component3) {\n  _inherits(SwitchExample, _React$Component3);\n\n  var _super3 = _createSuper(SwitchExample);\n\n  function SwitchExample() {\n    var _this2;\n\n    _classCallCheck(this, SwitchExample);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super3.call.apply(_super3, [this].concat(args));\n    _this2.state = {\n      switchState: true\n    };\n\n    _this2._onSwitchToggle = function () {\n      var switchState = !_this2.state.switchState;\n\n      _this2.setState({\n        switchState: switchState\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(SwitchExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this._onSwitchToggle,\n        accessibilityLabel: \"element 12\",\n        accessibilityRole: \"switch\",\n        accessibilityState: {\n          checked: this.state.switchState\n        },\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, \"Switch example\"));\n    }\n  }]);\n\n  return SwitchExample;\n}(React.Component);\n\nvar SelectionExample = function (_React$Component4) {\n  _inherits(SelectionExample, _React$Component4);\n\n  var _super4 = _createSuper(SelectionExample);\n\n  function SelectionExample(props) {\n    var _this3;\n\n    _classCallCheck(this, SelectionExample);\n\n    _this3 = _super4.call(this, props);\n    _this3.state = {\n      isSelected: true,\n      isEnabled: false\n    };\n    _this3.selectableElement = React.createRef();\n    return _this3;\n  }\n\n  _createClass(SelectionExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var accessibilityHint = 'click me to select';\n\n      if (this.state.isSelected) {\n        accessibilityHint = 'click me to unselect';\n      }\n\n      if (!this.state.isEnabled) {\n        accessibilityHint = 'use the button on the right to enable selection';\n      }\n\n      var buttonTitle = this.state.isEnabled ? 'Disable selection' : 'Enable selection';\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        ref: this.selectableElement,\n        accessible: true,\n        onPress: function onPress() {\n          if (_this4.state.isEnabled) {\n            _this4.setState({\n              isSelected: !_this4.state.isSelected\n            });\n          }\n        },\n        accessibilityLabel: \"element 19\",\n        accessibilityState: {\n          selected: this.state.isSelected,\n          disabled: !this.state.isEnabled\n        },\n        accessibilityHint: accessibilityHint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, \"Selectable element example\")), React.createElement(Button, {\n        onPress: function onPress() {\n          _this4.setState({\n            isEnabled: !_this4.state.isEnabled\n          });\n        },\n        title: buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SelectionExample;\n}(React.Component);\n\nvar ExpandableElementExample = function (_React$Component5) {\n  _inherits(ExpandableElementExample, _React$Component5);\n\n  var _super5 = _createSuper(ExpandableElementExample);\n\n  function ExpandableElementExample() {\n    var _this5;\n\n    _classCallCheck(this, ExpandableElementExample);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this5 = _super5.call.apply(_super5, [this].concat(args));\n    _this5.state = {\n      expandState: false\n    };\n\n    _this5._onElementPress = function () {\n      var expandState = !_this5.state.expandState;\n\n      _this5.setState({\n        expandState: expandState\n      });\n    };\n\n    return _this5;\n  }\n\n  _createClass(ExpandableElementExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: this._onElementPress,\n        accessibilityLabel: \"element 18\",\n        accessibilityState: {\n          expanded: this.state.expandState\n        },\n        accessibilityHint: \"click me to change state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, \"Expandable element example\"));\n    }\n  }]);\n\n  return ExpandableElementExample;\n}(React.Component);\n\nvar NestedCheckBox = function (_React$Component6) {\n  _inherits(NestedCheckBox, _React$Component6);\n\n  var _super6 = _createSuper(NestedCheckBox);\n\n  function NestedCheckBox() {\n    var _this6;\n\n    _classCallCheck(this, NestedCheckBox);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this6 = _super6.call.apply(_super6, [this].concat(args));\n    _this6.state = {\n      checkbox1: false,\n      checkbox2: false,\n      checkbox3: false\n    };\n\n    _this6._onPress1 = function () {\n      var checkbox1 = false;\n\n      if (_this6.state.checkbox1 === false) {\n        checkbox1 = true;\n      } else if (_this6.state.checkbox1 === 'mixed') {\n        checkbox1 = false;\n      } else {\n        checkbox1 = false;\n      }\n\n      setTimeout(function () {\n        _this6.setState({\n          checkbox1: checkbox1,\n          checkbox2: checkbox1,\n          checkbox3: checkbox1\n        });\n      }, 2000);\n    };\n\n    _this6._onPress2 = function () {\n      var checkbox2 = !_this6.state.checkbox2;\n\n      _this6.setState({\n        checkbox2: checkbox2,\n        checkbox1: checkbox2 && _this6.state.checkbox3 ? true : checkbox2 || _this6.state.checkbox3 ? 'mixed' : false\n      });\n    };\n\n    _this6._onPress3 = function () {\n      var checkbox3 = !_this6.state.checkbox3;\n\n      _this6.setState({\n        checkbox3: checkbox3,\n        checkbox1: _this6.state.checkbox2 && checkbox3 ? true : _this6.state.checkbox2 || checkbox3 ? 'mixed' : false\n      });\n    };\n\n    return _this6;\n  }\n\n  _createClass(NestedCheckBox, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        onPress: this._onPress1,\n        accessibilityLabel: \"Meat\",\n        accessibilityHint: \"State changes in 2 seconds after clicking.\",\n        accessibilityRole: \"checkbox\",\n        accessibilityState: {\n          checked: this.state.checkbox1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: this.state.checkbox1 === 'mixed' ? mixedCheckboxImageSource : this.state.checkbox1 ? checkImageSource : uncheckImageSource,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, \"Meat\")), React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        onPress: this._onPress2,\n        accessibilityLabel: \"Beef\",\n        accessibilityRole: \"checkbox\",\n        accessibilityState: {\n          checked: this.state.checkbox2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: this.state.checkbox2 ? checkImageSource : uncheckImageSource,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }\n      }, \"Beef\")), React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        onPress: this._onPress3,\n        accessibilityLabel: \"Bacon\",\n        accessibilityRole: \"checkbox\",\n        accessibilityState: {\n          checked: this.state.checkbox3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: this.state.checkbox3 ? checkImageSource : uncheckImageSource,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, \"Bacon\")));\n    }\n  }]);\n\n  return NestedCheckBox;\n}(React.Component);\n\nvar AccessibilityRoleAndStateExample = function (_React$Component7) {\n  _inherits(AccessibilityRoleAndStateExample, _React$Component7);\n\n  var _super7 = _createSuper(AccessibilityRoleAndStateExample);\n\n  function AccessibilityRoleAndStateExample() {\n    _classCallCheck(this, AccessibilityRoleAndStateExample);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(AccessibilityRoleAndStateExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        accessibilityLabel: \"element 1\",\n        accessibilityRole: \"alert\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }\n      }, \"Alert example\")), React.createElement(CheckboxExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        accessibilityLabel: \"element 3\",\n        accessibilityRole: \"combobox\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }\n      }, \"Combobox example\")), React.createElement(View, {\n        accessibilityLabel: \"element 4\",\n        accessibilityRole: \"menu\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }\n      }, \"Menu example\")), React.createElement(View, {\n        accessibilityLabel: \"element 5\",\n        accessibilityRole: \"menubar\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }\n      }, \"Menu bar example\")), React.createElement(View, {\n        accessibilityLabel: \"element 6\",\n        accessibilityRole: \"menuitem\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }\n      }, \"Menu item example\")), React.createElement(View, {\n        accessibilityLabel: \"element 7\",\n        accessibilityRole: \"progressbar\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }\n      }, \"Progress bar example\")), React.createElement(View, {\n        accessibilityLabel: \"element 8\",\n        accessibilityRole: \"radio\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }\n      }, \"Radio button example\")), React.createElement(View, {\n        accessibilityLabel: \"element 9\",\n        accessibilityRole: \"radiogroup\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }\n      }, \"Radio group example\")), React.createElement(View, {\n        accessibilityLabel: \"element 10\",\n        accessibilityRole: \"scrollbar\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }\n      }, \"Scrollbar example\")), React.createElement(View, {\n        accessibilityLabel: \"element 11\",\n        accessibilityRole: \"spinbutton\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }\n      }, \"Spin button example\")), React.createElement(SwitchExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        accessibilityLabel: \"element 13\",\n        accessibilityRole: \"tab\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }\n      }, \"Tab example\")), React.createElement(View, {\n        accessibilityLabel: \"element 14\",\n        accessibilityRole: \"tablist\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }\n      }, \"Tab list example\")), React.createElement(View, {\n        accessibilityLabel: \"element 15\",\n        accessibilityRole: \"timer\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }\n      }, \"Timer example\")), React.createElement(View, {\n        accessibilityLabel: \"element 16\",\n        accessibilityRole: \"toolbar\",\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }\n      }, \"Toolbar example\")), React.createElement(View, {\n        accessibilityLabel: \"element 17\",\n        accessibilityState: {\n          busy: true\n        },\n        accessible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }\n      }, \"State busy example\")), React.createElement(ExpandableElementExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 9\n        }\n      }), React.createElement(SelectionExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 9\n        }\n      }), React.createElement(RNTesterBlock, {\n        title: \"Nested checkbox with delayed state change\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 9\n        }\n      }, React.createElement(NestedCheckBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return AccessibilityRoleAndStateExample;\n}(React.Component);\n\nvar AccessibilityActionsExample = function (_React$Component8) {\n  _inherits(AccessibilityActionsExample, _React$Component8);\n\n  var _super8 = _createSuper(AccessibilityActionsExample);\n\n  function AccessibilityActionsExample() {\n    _classCallCheck(this, AccessibilityActionsExample);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(AccessibilityActionsExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Non-touchable with activate action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityActions: [{\n          name: 'activate'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'activate':\n              Alert.alert('Alert', 'View is clicked');\n              break;\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }\n      }, \"Click me\"))), React.createElement(RNTesterBlock, {\n        title: \"View with multiple actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityActions: [{\n          name: 'cut',\n          label: 'cut label'\n        }, {\n          name: 'copy',\n          label: 'copy label'\n        }, {\n          name: 'paste',\n          label: 'paste label'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'cut':\n              Alert.alert('Alert', 'cut action success');\n              break;\n\n            case 'copy':\n              Alert.alert('Alert', 'copy action success');\n              break;\n\n            case 'paste':\n              Alert.alert('Alert', 'paste action success');\n              break;\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }\n      }, \"This view supports many actions.\"))), React.createElement(RNTesterBlock, {\n        title: \"Adjustable with increment/decrement actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityRole: \"adjustable\",\n        accessibilityActions: [{\n          name: 'increment'\n        }, {\n          name: 'decrement'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'increment':\n              Alert.alert('Alert', 'increment action success');\n              break;\n\n            case 'decrement':\n              Alert.alert('Alert', 'decrement action success');\n              break;\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }\n      }, \"Slider\"))), React.createElement(RNTesterBlock, {\n        title: \"Button with custom accessibility actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        accessible: true,\n        accessibilityActions: [{\n          name: 'cut',\n          label: 'cut label'\n        }, {\n          name: 'copy',\n          label: 'copy label'\n        }, {\n          name: 'paste',\n          label: 'paste label'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'cut':\n              Alert.alert('Alert', 'cut action success');\n              break;\n\n            case 'copy':\n              Alert.alert('Alert', 'copy action success');\n              break;\n\n            case 'paste':\n              Alert.alert('Alert', 'paste action success');\n              break;\n          }\n        },\n        onPress: function onPress() {\n          return Alert.alert('Button has been pressed!');\n        },\n        accessibilityRole: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 15\n        }\n      }, \"Click me\")))));\n    }\n  }]);\n\n  return AccessibilityActionsExample;\n}(React.Component);\n\nvar FakeSliderExample = function (_React$Component9) {\n  _inherits(FakeSliderExample, _React$Component9);\n\n  var _super9 = _createSuper(FakeSliderExample);\n\n  function FakeSliderExample() {\n    var _this7;\n\n    _classCallCheck(this, FakeSliderExample);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this7 = _super9.call.apply(_super9, [this].concat(args));\n    _this7.state = {\n      current: 50,\n      textualValue: 'center'\n    };\n\n    _this7.increment = function () {\n      var newValue = _this7.state.current + 2;\n\n      if (newValue > 100) {\n        newValue = 100;\n      }\n\n      _this7.setState({\n        current: newValue\n      });\n    };\n\n    _this7.decrement = function () {\n      var newValue = _this7.state.current - 2;\n\n      if (newValue < 0) {\n        newValue = 0;\n      }\n\n      _this7.setState({\n        current: newValue\n      });\n    };\n\n    return _this7;\n  }\n\n  _createClass(FakeSliderExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        accessible: true,\n        accessibilityLabel: \"Fake Slider\",\n        accessibilityRole: \"adjustable\",\n        accessibilityActions: [{\n          name: 'increment'\n        }, {\n          name: 'decrement'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'increment':\n              _this8.increment();\n\n              break;\n\n            case 'decrement':\n              _this8.decrement();\n\n              break;\n          }\n        },\n        accessibilityValue: {\n          min: 0,\n          now: this.state.current,\n          max: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 11\n        }\n      }, \"Fake Slider\")), React.createElement(TouchableWithoutFeedback, {\n        accessible: true,\n        accessibilityLabel: \"Equalizer\",\n        accessibilityRole: \"adjustable\",\n        accessibilityActions: [{\n          name: 'increment'\n        }, {\n          name: 'decrement'\n        }],\n        onAccessibilityAction: function onAccessibilityAction(event) {\n          switch (event.nativeEvent.actionName) {\n            case 'increment':\n              if (_this8.state.textualValue === 'center') {\n                _this8.setState({\n                  textualValue: 'right'\n                });\n              } else if (_this8.state.textualValue === 'left') {\n                _this8.setState({\n                  textualValue: 'center'\n                });\n              }\n\n              break;\n\n            case 'decrement':\n              if (_this8.state.textualValue === 'center') {\n                _this8.setState({\n                  textualValue: 'left'\n                });\n              } else if (_this8.state.textualValue === 'right') {\n                _this8.setState({\n                  textualValue: 'center'\n                });\n              }\n\n              break;\n          }\n        },\n        accessibilityValue: {\n          text: this.state.textualValue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }\n      }, \"Equalizer\"))));\n    }\n  }]);\n\n  return FakeSliderExample;\n}(React.Component);\n\nvar ScreenReaderStatusExample = function (_React$Component10) {\n  _inherits(ScreenReaderStatusExample, _React$Component10);\n\n  var _super10 = _createSuper(ScreenReaderStatusExample);\n\n  function ScreenReaderStatusExample() {\n    var _this9;\n\n    _classCallCheck(this, ScreenReaderStatusExample);\n\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    _this9 = _super10.call.apply(_super10, [this].concat(args));\n    _this9.state = {\n      screenReaderEnabled: false\n    };\n\n    _this9._handleScreenReaderToggled = function (isEnabled) {\n      _this9.setState({\n        screenReaderEnabled: isEnabled\n      });\n    };\n\n    return _this9;\n  }\n\n  _createClass(ScreenReaderStatusExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this10 = this;\n\n      AccessibilityInfo.addEventListener('change', this._handleScreenReaderToggled);\n      AccessibilityInfo.fetch().done(function (isEnabled) {\n        _this10.setState({\n          screenReaderEnabled: isEnabled\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AccessibilityInfo.removeEventListener('change', this._handleScreenReaderToggled);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 9\n        }\n      }, \"The screen reader is\", ' ', this.state.screenReaderEnabled ? 'enabled' : 'disabled', \".\"));\n    }\n  }]);\n\n  return ScreenReaderStatusExample;\n}(React.Component);\n\nvar AnnounceForAccessibility = function (_React$Component11) {\n  _inherits(AnnounceForAccessibility, _React$Component11);\n\n  var _super11 = _createSuper(AnnounceForAccessibility);\n\n  function AnnounceForAccessibility() {\n    var _this11;\n\n    _classCallCheck(this, AnnounceForAccessibility);\n\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    _this11 = _super11.call.apply(_super11, [this].concat(args));\n\n    _this11._handleOnPress = function () {\n      return AccessibilityInfo.announceForAccessibility('Announcement Test');\n    };\n\n    return _this11;\n  }\n\n  _createClass(AnnounceForAccessibility, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        onPress: this._handleOnPress,\n        title: \"Announce for Accessibility\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AnnounceForAccessibility;\n}(React.Component);\n\nexports.title = 'Accessibility';\nexports.description = 'Examples of using Accessibility APIs.';\nexports.examples = [{\n  title: 'Accessibility elements',\n  render: function render() {\n    return React.createElement(AccessibilityExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'New accessibility roles and states',\n  render: function render() {\n    return React.createElement(AccessibilityRoleAndStateExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Accessibility action examples',\n  render: function render() {\n    return React.createElement(AccessibilityActionsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Fake Slider Example',\n  render: function render() {\n    return React.createElement(FakeSliderExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Check if the screen reader is enabled',\n  render: function render() {\n    return React.createElement(ScreenReaderStatusExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Check if the screen reader announces',\n  render: function render() {\n    return React.createElement(AnnounceForAccessibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Accessibility/AccessibilityExample.js"],"names":["React","require","RNTesterBlock","checkImageSource","uncheckImageSource","mixedCheckboxImageSource","styles","StyleSheet","create","image","width","height","resizeMode","marginRight","AccessibilityExample","color","Alert","alert","disabled","selected","Component","CheckboxExample","state","checkboxState","_onCheckboxPress","setState","checked","SwitchExample","switchState","_onSwitchToggle","SelectionExample","props","isSelected","isEnabled","selectableElement","createRef","accessibilityHint","buttonTitle","flex","flexDirection","ExpandableElementExample","expandState","_onElementPress","expanded","NestedCheckBox","checkbox1","checkbox2","checkbox3","_onPress1","setTimeout","_onPress2","_onPress3","AccessibilityRoleAndStateExample","busy","AccessibilityActionsExample","name","event","nativeEvent","actionName","label","FakeSliderExample","current","textualValue","increment","newValue","decrement","min","now","max","text","ScreenReaderStatusExample","screenReaderEnabled","_handleScreenReaderToggled","AccessibilityInfo","addEventListener","fetch","done","removeEventListener","AnnounceForAccessibility","_handleOnPress","announceForAccessibility","exports","title","description","examples","render"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;;;;;;;;;;;AAaA,IAAMC,aAAa,GAAGD,OAAO,kCAA7B;;AAEA,IAAME,gBAAgB,GAAGF,OAAO,eAAhC;;AACA,IAAMG,kBAAkB,GAAGH,OAAO,iBAAlC;;AACA,IAAMI,wBAAwB,GAAGJ,OAAO,eAAxC;;AAEA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,UAAU,EAAE,SAHP;AAILC,IAAAA,WAAW,EAAE;AAJR;AADwB,CAAlB,CAAf;;IASMC,oB;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADF,CADF,EAQE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,kBAAkB,EAAC,sDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,CARF,EAcE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,mCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CAdF,EAqBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,6CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CArBF,EA4BE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,2CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,kBAAkB,EAAC,sDAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CADF,CA5BF,EAuCE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,0CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,iBAAiB,EAAC,qBAAxB;AAA8C,QAAA,UAAU,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CAvCF,EA8CE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,+CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,sBADrB;AAEE,QAAA,iBAAiB,EAAC,qBAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,CADF,CA9CF,EAwDE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,sCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,iBAAiB,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAxDF,EA4DE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,yCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAACC,KAAN,CAAY,wBAAZ,CAAN;AAAA,SADX;AAEE,QAAA,iBAAiB,EAAC,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAHF,CADF,CA5DF,EAsEE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,2CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMD,KAAK,CAACC,KAAN,CAAY,0BAAZ,CAAN;AAAA,SADX;AAEE,QAAA,iBAAiB,EAAC,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CAtEF,EA8EE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMD,KAAK,CAACC,KAAN,CAAY,0BAAZ,CAAN;AAAA,SADX;AAEE,QAAA,iBAAiB,EAAC,QAFpB;AAGE,QAAA,kBAAkB,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAHtB;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,CALF,CADF,CA9EF,EA4FE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,kBAAkB,EAAE;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBD,UAAAA,QAAQ,EAAE;AAA3B,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAHF,CADF,CA5FF,EAoGE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,wCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,kBAAkB,EAAC,sBAFrB;AAGE,QAAA,iBAAiB,EAAC,QAHpB;AAIE,QAAA,kBAAkB,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAJtB;AAKE,QAAA,iBAAiB,EAAC,qBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DANF,CADF,CApGF,CADF;AAiHD;;;;EAnHgCnB,KAAK,CAACoB,S;;IAsHnCC,e;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,K;;UAIRC,gB,GAAmB,YAAM;AACvB,UAAID,aAAa,GAAG,KAApB;;AACA,UAAI,MAAKD,KAAL,CAAWC,aAAX,KAA6B,KAAjC,EAAwC;AACtCA,QAAAA,aAAa,GAAG,OAAhB;AACD,OAFD,MAEO,IAAI,MAAKD,KAAL,CAAWC,aAAX,KAA6B,OAAjC,EAA0C;AAC/CA,QAAAA,aAAa,GAAG,IAAhB;AACD,OAFM,MAEA;AACLA,QAAAA,aAAa,GAAG,KAAhB;AACD;;AAED,YAAKE,QAAL,CAAc;AACZF,QAAAA,aAAa,EAAEA;AADH,OAAd;AAGD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,gBADhB;AAEE,QAAA,kBAAkB,EAAC,WAFrB;AAGE,QAAA,iBAAiB,EAAC,UAHpB;AAIE,QAAA,kBAAkB,EAAE;AAACE,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC;AAArB,SAJtB;AAKE,QAAA,iBAAiB,EAAC,0BALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,CADF;AAUD;;;;EA/B2BvB,KAAK,CAACoB,S;;IAkC9BO,a;;;;;;;;;;;;;;;WACJL,K,GAAQ;AACNM,MAAAA,WAAW,EAAE;AADP,K;;WAIRC,e,GAAkB,YAAM;AACtB,UAAMD,WAAW,GAAG,CAAC,OAAKN,KAAL,CAAWM,WAAhC;;AAEA,aAAKH,QAAL,CAAc;AACZG,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,eADhB;AAEE,QAAA,kBAAkB,EAAC,YAFrB;AAGE,QAAA,iBAAiB,EAAC,QAHpB;AAIE,QAAA,kBAAkB,EAAE;AAACH,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM;AAArB,SAJtB;AAKE,QAAA,UAAU,EAAE,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,CADF;AAUD;;;;EAxByB5B,KAAK,CAACoB,S;;IA2B5BU,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AADiB,WAKnBT,KALmB,GAKX;AACNU,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,SAAS,EAAE;AAFL,KALW;AAEjB,WAAKC,iBAAL,GAAyBlC,KAAK,CAACmC,SAAN,EAAzB;AAFiB;AAGlB;;;;WAOD,kBAAS;AAAA;;AACP,UAAIC,iBAAiB,GAAG,oBAAxB;;AACA,UAAI,KAAKd,KAAL,CAAWU,UAAf,EAA2B;AACzBI,QAAAA,iBAAiB,GAAG,sBAApB;AACD;;AACD,UAAI,CAAC,KAAKd,KAAL,CAAWW,SAAhB,EAA2B;AACzBG,QAAAA,iBAAiB,GAAG,iDAApB;AACD;;AACD,UAAIC,WAAW,GAAG,KAAKf,KAAL,CAAWW,SAAX,GACd,mBADc,GAEd,kBAFJ;AAIA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,aAAa,EAAE;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAE,KAAKL,iBADZ;AAEE,QAAA,UAAU,EAAE,IAFd;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAI,MAAI,CAACZ,KAAL,CAAWW,SAAf,EAA0B;AACxB,YAAA,MAAI,CAACR,QAAL,CAAc;AACZO,cAAAA,UAAU,EAAE,CAAC,MAAI,CAACV,KAAL,CAAWU;AADZ,aAAd;AAGD;AACF,SATH;AAUE,QAAA,kBAAkB,EAAC,YAVrB;AAWE,QAAA,kBAAkB,EAAE;AAClBb,UAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWU,UADH;AAElBd,UAAAA,QAAQ,EAAE,CAAC,KAAKI,KAAL,CAAWW;AAFJ,SAXtB;AAeE,QAAA,iBAAiB,EAAEG,iBAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAhBF,CADF,EAmBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACX,QAAL,CAAc;AACZQ,YAAAA,SAAS,EAAE,CAAC,MAAI,CAACX,KAAL,CAAWW;AADX,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAEI,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF;AA8BD;;;;EArD4BrC,KAAK,CAACoB,S;;IAwD/BoB,wB;;;;;;;;;;;;;;;WACJlB,K,GAAQ;AACNmB,MAAAA,WAAW,EAAE;AADP,K;;WAIRC,e,GAAkB,YAAM;AACtB,UAAMD,WAAW,GAAG,CAAC,OAAKnB,KAAL,CAAWmB,WAAhC;;AAEA,aAAKhB,QAAL,CAAc;AACZgB,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,eADhB;AAEE,QAAA,kBAAkB,EAAC,YAFrB;AAGE,QAAA,kBAAkB,EAAE;AAACC,UAAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWmB;AAAtB,SAHtB;AAIE,QAAA,iBAAiB,EAAC,0BAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCALF,CADF;AASD;;;;EAvBoCzC,KAAK,CAACoB,S;;IA0BvCwB,c;;;;;;;;;;;;;;;WACJtB,K,GAAQ;AACNuB,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;WAMRC,S,GAAY,YAAM;AAChB,UAAIH,SAAS,GAAG,KAAhB;;AACA,UAAI,OAAKvB,KAAL,CAAWuB,SAAX,KAAyB,KAA7B,EAAoC;AAClCA,QAAAA,SAAS,GAAG,IAAZ;AACD,OAFD,MAEO,IAAI,OAAKvB,KAAL,CAAWuB,SAAX,KAAyB,OAA7B,EAAsC;AAC3CA,QAAAA,SAAS,GAAG,KAAZ;AACD,OAFM,MAEA;AACLA,QAAAA,SAAS,GAAG,KAAZ;AACD;;AACDI,MAAAA,UAAU,CAAC,YAAM;AACf,eAAKxB,QAAL,CAAc;AACZoB,UAAAA,SAAS,EAAEA,SADC;AAEZC,UAAAA,SAAS,EAAED,SAFC;AAGZE,UAAAA,SAAS,EAAEF;AAHC,SAAd;AAKD,OANS,EAMP,IANO,CAAV;AAOD,K;;WAEDK,S,GAAY,YAAM;AAChB,UAAMJ,SAAS,GAAG,CAAC,OAAKxB,KAAL,CAAWwB,SAA9B;;AAEA,aAAKrB,QAAL,CAAc;AACZqB,QAAAA,SAAS,EAAEA,SADC;AAEZD,QAAAA,SAAS,EACPC,SAAS,IAAI,OAAKxB,KAAL,CAAWyB,SAAxB,GACI,IADJ,GAEID,SAAS,IAAI,OAAKxB,KAAL,CAAWyB,SAAxB,GACA,OADA,GAEA;AAPM,OAAd;AASD,K;;WAEDI,S,GAAY,YAAM;AAChB,UAAMJ,SAAS,GAAG,CAAC,OAAKzB,KAAL,CAAWyB,SAA9B;;AAEA,aAAKtB,QAAL,CAAc;AACZsB,QAAAA,SAAS,EAAEA,SADC;AAEZF,QAAAA,SAAS,EACP,OAAKvB,KAAL,CAAWwB,SAAX,IAAwBC,SAAxB,GACI,IADJ,GAEI,OAAKzB,KAAL,CAAWwB,SAAX,IAAwBC,SAAxB,GACA,OADA,GAEA;AAPM,OAAd;AASD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACT,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,aAAa,EAAE;AAAzB,SADT;AAEE,QAAA,OAAO,EAAE,KAAKS,SAFhB;AAGE,QAAA,kBAAkB,EAAC,MAHrB;AAIE,QAAA,iBAAiB,EAAC,4CAJpB;AAKE,QAAA,iBAAiB,EAAC,UALpB;AAME,QAAA,kBAAkB,EAAE;AAACtB,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWuB;AAArB,SANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEvC,MAAM,CAACG,KADhB;AAEE,QAAA,MAAM,EACJ,KAAKa,KAAL,CAAWuB,SAAX,KAAyB,OAAzB,GACIxC,wBADJ,GAEI,KAAKiB,KAAL,CAAWuB,SAAX,GACA1C,gBADA,GAEAC,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAiBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF,EAoBE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACkC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,aAAa,EAAE;AAAzB,SADT;AAEE,QAAA,OAAO,EAAE,KAAKW,SAFhB;AAGE,QAAA,kBAAkB,EAAC,MAHrB;AAIE,QAAA,iBAAiB,EAAC,UAJpB;AAKE,QAAA,kBAAkB,EAAE;AAACxB,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWwB;AAArB,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,KAAD;AACE,QAAA,KAAK,EAAExC,MAAM,CAACG,KADhB;AAEE,QAAA,MAAM,EACJ,KAAKa,KAAL,CAAWwB,SAAX,GAAuB3C,gBAAvB,GAA0CC,kBAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CApBF,EAkCE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AAACkC,UAAAA,IAAI,EAAE,CAAP;AAAUC,UAAAA,aAAa,EAAE;AAAzB,SADT;AAEE,QAAA,OAAO,EAAE,KAAKY,SAFhB;AAGE,QAAA,kBAAkB,EAAC,OAHrB;AAIE,QAAA,iBAAiB,EAAC,UAJpB;AAKE,QAAA,kBAAkB,EAAE;AAACzB,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWyB;AAArB,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEzC,MAAM,CAACG,KADhB;AAEE,QAAA,MAAM,EACJ,KAAKa,KAAL,CAAWyB,SAAX,GAAuB5C,gBAAvB,GAA0CC,kBAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,CAlCF,CADF;AAmDD;;;;EAzG0BJ,KAAK,CAACoB,S;;IA4G7BgC,gC;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,OAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,EAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,UAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CARF,EAcE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,MAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CAdF,EAoBE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,SAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CApBF,EA0BE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,UAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CA1BF,EAgCE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,aAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,CAhCF,EAsCE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,OAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,CAtCF,EA4CE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,WADrB;AAEE,QAAA,iBAAiB,EAAC,YAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,CA5CF,EAkDE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,WAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CAlDF,EAwDE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,YAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,CAxDF,EA8DE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9DF,EA+DE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,KAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CA/DF,EAqEE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,SAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CArEF,EA2EE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,OAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CA3EF,EAiFE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,iBAAiB,EAAC,SAFpB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,CAjFF,EAuFE,oBAAC,IAAD;AACE,QAAA,kBAAkB,EAAC,YADrB;AAEE,QAAA,kBAAkB,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SAFtB;AAGE,QAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJF,CAvFF,EA6FE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7FF,EA8FE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9FF,EA+FE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,2CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA/FF,CADF;AAqGD;;;;EAvG4CrD,KAAK,CAACoB,S;;IA0G/CkC,2B;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,oCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,oBAAoB,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAFxB;AAGE,QAAA,qBAAqB,EAAE,+BAAAC,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,UAAL;AACE1C,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,iBAArB;AACA;AAHJ;AAKD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF,CADF,EAgBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,oBAAoB,EAAE,CACpB;AAACsC,UAAAA,IAAI,EAAE,KAAP;AAAcI,UAAAA,KAAK,EAAE;AAArB,SADoB,EAEpB;AAACJ,UAAAA,IAAI,EAAE,MAAP;AAAeI,UAAAA,KAAK,EAAE;AAAtB,SAFoB,EAGpB;AAACJ,UAAAA,IAAI,EAAE,OAAP;AAAgBI,UAAAA,KAAK,EAAE;AAAvB,SAHoB,CAFxB;AAOE,QAAA,qBAAqB,EAAE,+BAAAH,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,KAAL;AACE1C,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,oBAArB;AACA;;AACF,iBAAK,MAAL;AACED,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,qBAArB;AACA;;AACF,iBAAK,OAAL;AACED,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,sBAArB;AACA;AATJ;AAWD,SAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CApBF,CADF,CAhBF,EAyCE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,6CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,iBAAiB,EAAC,YAFpB;AAGE,QAAA,oBAAoB,EAAE,CAAC;AAACsC,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAsB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAtB,CAHxB;AAIE,QAAA,qBAAqB,EAAE,+BAAAC,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,WAAL;AACE1C,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,0BAArB;AACA;;AACF,iBAAK,WAAL;AACED,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,0BAArB;AACA;AANJ;AAQD,SAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,CADF,CAzCF,EA4DE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,0CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,oBAAoB,EAAE,CACpB;AAACsC,UAAAA,IAAI,EAAE,KAAP;AAAcI,UAAAA,KAAK,EAAE;AAArB,SADoB,EAEpB;AAACJ,UAAAA,IAAI,EAAE,MAAP;AAAeI,UAAAA,KAAK,EAAE;AAAtB,SAFoB,EAGpB;AAACJ,UAAAA,IAAI,EAAE,OAAP;AAAgBI,UAAAA,KAAK,EAAE;AAAvB,SAHoB,CAFxB;AAOE,QAAA,qBAAqB,EAAE,+BAAAH,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,KAAL;AACE1C,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,oBAArB;AACA;;AACF,iBAAK,MAAL;AACED,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,qBAArB;AACA;;AACF,iBAAK,OAAL;AACED,cAAAA,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,sBAArB;AACA;AATJ;AAWD,SAnBH;AAoBE,QAAA,OAAO,EAAE;AAAA,iBAAMD,KAAK,CAACC,KAAN,CAAY,0BAAZ,CAAN;AAAA,SApBX;AAqBE,QAAA,iBAAiB,EAAC,QArBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAtBF,CADF,CA5DF,CADF;AA2FD;;;;EA7FuCjB,KAAK,CAACoB,S;;IAgG1CwC,iB;;;;;;;;;;;;;;;WACJtC,K,GAAQ;AACNuC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;WAKRC,S,GAAY,YAAM;AAChB,UAAIC,QAAQ,GAAG,OAAK1C,KAAL,CAAWuC,OAAX,GAAqB,CAApC;;AACA,UAAIG,QAAQ,GAAG,GAAf,EAAoB;AAClBA,QAAAA,QAAQ,GAAG,GAAX;AACD;;AACD,aAAKvC,QAAL,CAAc;AACZoC,QAAAA,OAAO,EAAEG;AADG,OAAd;AAGD,K;;WAEDC,S,GAAY,YAAM;AAChB,UAAID,QAAQ,GAAG,OAAK1C,KAAL,CAAWuC,OAAX,GAAqB,CAApC;;AACA,UAAIG,QAAQ,GAAG,CAAf,EAAkB;AAChBA,QAAAA,QAAQ,GAAG,CAAX;AACD;;AACD,aAAKvC,QAAL,CAAc;AACZoC,QAAAA,OAAO,EAAEG;AADG,OAAd;AAGD,K;;;;;;;WAED,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,kBAAkB,EAAC,aAFrB;AAGE,QAAA,iBAAiB,EAAC,YAHpB;AAIE,QAAA,oBAAoB,EAAE,CAAC;AAACT,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAsB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAtB,CAJxB;AAKE,QAAA,qBAAqB,EAAE,+BAAAC,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,WAAL;AACE,cAAA,MAAI,CAACK,SAAL;;AACA;;AACF,iBAAK,WAAL;AACE,cAAA,MAAI,CAACE,SAAL;;AACA;AANJ;AAQD,SAdH;AAeE,QAAA,kBAAkB,EAAE;AAClBC,UAAAA,GAAG,EAAE,CADa;AAElBC,UAAAA,GAAG,EAAE,KAAK7C,KAAL,CAAWuC,OAFE;AAGlBO,UAAAA,GAAG,EAAE;AAHa,SAftB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBF,CADF,EAuBE,oBAAC,wBAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,kBAAkB,EAAC,WAFrB;AAGE,QAAA,iBAAiB,EAAC,YAHpB;AAIE,QAAA,oBAAoB,EAAE,CAAC;AAACb,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAsB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAAtB,CAJxB;AAKE,QAAA,qBAAqB,EAAE,+BAAAC,KAAK,EAAI;AAC9B,kBAAQA,KAAK,CAACC,WAAN,CAAkBC,UAA1B;AACE,iBAAK,WAAL;AACE,kBAAI,MAAI,CAACpC,KAAL,CAAWwC,YAAX,KAA4B,QAAhC,EAA0C;AACxC,gBAAA,MAAI,CAACrC,QAAL,CAAc;AAACqC,kBAAAA,YAAY,EAAE;AAAf,iBAAd;AACD,eAFD,MAEO,IAAI,MAAI,CAACxC,KAAL,CAAWwC,YAAX,KAA4B,MAAhC,EAAwC;AAC7C,gBAAA,MAAI,CAACrC,QAAL,CAAc;AAACqC,kBAAAA,YAAY,EAAE;AAAf,iBAAd;AACD;;AACD;;AACF,iBAAK,WAAL;AACE,kBAAI,MAAI,CAACxC,KAAL,CAAWwC,YAAX,KAA4B,QAAhC,EAA0C;AACxC,gBAAA,MAAI,CAACrC,QAAL,CAAc;AAACqC,kBAAAA,YAAY,EAAE;AAAf,iBAAd;AACD,eAFD,MAEO,IAAI,MAAI,CAACxC,KAAL,CAAWwC,YAAX,KAA4B,OAAhC,EAAyC;AAC9C,gBAAA,MAAI,CAACrC,QAAL,CAAc;AAACqC,kBAAAA,YAAY,EAAE;AAAf,iBAAd;AACD;;AACD;AAdJ;AAgBD,SAtBH;AAuBE,QAAA,kBAAkB,EAAE;AAACO,UAAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWwC;AAAlB,SAvBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAwBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAxBF,CAvBF,CADF;AAsDD;;;;EAjF6B9D,KAAK,CAACoB,S;;IAoFhCkD,yB;;;;;;;;;;;;;;;WACJhD,K,GAAQ;AACNiD,MAAAA,mBAAmB,EAAE;AADf,K;;WAuBRC,0B,GAA6B,UAAAvC,SAAS,EAAI;AACxC,aAAKR,QAAL,CAAc;AACZ8C,QAAAA,mBAAmB,EAAEtC;AADT,OAAd;AAGD,K;;;;;;;WAvBD,6BAAoB;AAAA;;AAClBwC,MAAAA,iBAAiB,CAACC,gBAAlB,CACE,QADF,EAEE,KAAKF,0BAFP;AAIAC,MAAAA,iBAAiB,CAACE,KAAlB,GAA0BC,IAA1B,CAA+B,UAAA3C,SAAS,EAAI;AAC1C,QAAA,OAAI,CAACR,QAAL,CAAc;AACZ8C,UAAAA,mBAAmB,EAAEtC;AADT,SAAd;AAGD,OAJD;AAKD;;;WAED,gCAAuB;AACrBwC,MAAAA,iBAAiB,CAACI,mBAAlB,CACE,QADF,EAEE,KAAKL,0BAFP;AAID;;;WAQD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACuB,GADvB,EAEG,KAAKlD,KAAL,CAAWiD,mBAAX,GAAiC,SAAjC,GAA6C,UAFhD,MADF,CADF;AAQD;;;;EAvCqCvE,KAAK,CAACoB,S;;IA0CxC0D,wB;;;;;;;;;;;;;;;;YACJC,c,GAAiB;AAAA,aACfN,iBAAiB,CAACO,wBAAlB,CAA2C,mBAA3C,CADe;AAAA,K;;;;;;;WAGjB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKD,cADhB;AAEE,QAAA,KAAK,EAAC,4BAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EAboC/E,KAAK,CAACoB,S;;AAgB7C6D,OAAO,CAACC,KAAR,GAAgB,eAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,uCAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,wBADT;AAEEG,EAAAA,MAFF,oBAEuD;AACnD,WAAO,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,EAOjB;AACEH,EAAAA,KAAK,EAAE,oCADT;AAEEG,EAAAA,MAFF,oBAEoE;AAChE,WAAO,oBAAC,gCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAPiB,EAajB;AACEH,EAAAA,KAAK,EAAE,+BADT;AAEEG,EAAAA,MAFF,oBAE8D;AAC1D,WAAO,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAbiB,EAmBjB;AACEH,EAAAA,KAAK,EAAE,qBADT;AAEEG,EAAAA,MAFF,oBAEoD;AAChD,WAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAnBiB,EAyBjB;AACEH,EAAAA,KAAK,EAAE,uCADT;AAEEG,EAAAA,MAFF,oBAE4D;AACxD,WAAO,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CAzBiB,EA+BjB;AACEH,EAAAA,KAAK,EAAE,sCADT;AAEEG,EAAAA,MAFF,oBAE2D;AACvD,WAAO,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CA/BiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  AccessibilityInfo,\n  Button,\n  Image,\n  Text,\n  View,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Alert,\n  StyleSheet,\n} = require('react-native');\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\n\nconst checkImageSource = require('./check.png');\nconst uncheckImageSource = require('./uncheck.png');\nconst mixedCheckboxImageSource = require('./mixed.png');\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 20,\n    height: 20,\n    resizeMode: 'contain',\n    marginRight: 10,\n  },\n});\n\nclass AccessibilityExample extends React.Component {\n  render() {\n    return (\n      <View>\n        <RNTesterBlock title=\"TextView without label\">\n          <Text>\n            Text's accessibilityLabel is the raw text itself unless it is set\n            explicitly.\n          </Text>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"TextView with label\">\n          <Text accessibilityLabel=\"I have label, so I read it instead of embedded text.\">\n            This text component's accessibilityLabel is set explicitly.\n          </Text>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Nonaccessible view with TextViews\">\n          <View>\n            <Text style={{color: 'green'}}>This is text one.</Text>\n            <Text style={{color: 'blue'}}>This is text two.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Accessible view with TextViews wihout label\">\n          <View accessible={true}>\n            <Text style={{color: 'green'}}>This is text one.</Text>\n            <Text style={{color: 'blue'}}>This is text two.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Accessible view with TextViews with label\">\n          <View\n            accessible={true}\n            accessibilityLabel=\"I have label, so I read it instead of embedded text.\">\n            <Text style={{color: 'green'}}>This is text one.</Text>\n            <Text style={{color: 'blue'}}>This is text two.</Text>\n          </View>\n        </RNTesterBlock>\n\n        {/* Android screen readers will say the accessibility hint instead of the text\n        since the view doesn't have a label. */}\n        <RNTesterBlock title=\"Accessible view with TextViews with hint\">\n          <View accessibilityHint=\"Accessibility hint.\" accessible={true}>\n            <Text style={{color: 'green'}}>This is text one.</Text>\n            <Text style={{color: 'blue'}}>This is text two.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Accessible view TextViews with label and hint\">\n          <View\n            accessibilityLabel=\"Accessibility label.\"\n            accessibilityHint=\"Accessibility hint.\"\n            accessible={true}>\n            <Text style={{color: 'green'}}>This is text one.</Text>\n            <Text style={{color: 'blue'}}>This is text two.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Text with accessibilityRole = header\">\n          <Text accessibilityRole=\"header\">This is a title.</Text>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Touchable with accessibilityRole = link\">\n          <TouchableOpacity\n            onPress={() => Alert.alert('Link has been clicked!')}\n            accessibilityRole=\"link\">\n            <View>\n              <Text>Click me</Text>\n            </View>\n          </TouchableOpacity>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Touchable with accessibilityRole = button\">\n          <TouchableOpacity\n            onPress={() => Alert.alert('Button has been pressed!')}\n            accessibilityRole=\"button\">\n            <Text>Click me</Text>\n          </TouchableOpacity>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Disabled Touchable with role\">\n          <TouchableOpacity\n            onPress={() => Alert.alert('Button has been pressed!')}\n            accessibilityRole=\"button\"\n            accessibilityState={{disabled: true}}\n            disabled={true}>\n            <View>\n              <Text>\n                I am disabled. Clicking me will not trigger any action.\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"View with multiple states\">\n          <View\n            accessible={true}\n            accessibilityState={{selected: true, disabled: true}}>\n            <Text>This view is selected and disabled.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"View with label, hint, role, and state\">\n          <View\n            accessible={true}\n            accessibilityLabel=\"Accessibility label.\"\n            accessibilityRole=\"button\"\n            accessibilityState={{selected: true}}\n            accessibilityHint=\"Accessibility hint.\">\n            <Text>Accessible view with label, hint, role, and state</Text>\n          </View>\n        </RNTesterBlock>\n      </View>\n    );\n  }\n}\n\nclass CheckboxExample extends React.Component {\n  state = {\n    checkboxState: true,\n  };\n\n  _onCheckboxPress = () => {\n    let checkboxState = false;\n    if (this.state.checkboxState === false) {\n      checkboxState = 'mixed';\n    } else if (this.state.checkboxState === 'mixed') {\n      checkboxState = true;\n    } else {\n      checkboxState = false;\n    }\n\n    this.setState({\n      checkboxState: checkboxState,\n    });\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={this._onCheckboxPress}\n        accessibilityLabel=\"element 2\"\n        accessibilityRole=\"checkbox\"\n        accessibilityState={{checked: this.state.checkboxState}}\n        accessibilityHint=\"click me to change state\">\n        <Text>Checkbox example</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass SwitchExample extends React.Component {\n  state = {\n    switchState: true,\n  };\n\n  _onSwitchToggle = () => {\n    const switchState = !this.state.switchState;\n\n    this.setState({\n      switchState: switchState,\n    });\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={this._onSwitchToggle}\n        accessibilityLabel=\"element 12\"\n        accessibilityRole=\"switch\"\n        accessibilityState={{checked: this.state.switchState}}\n        accessible={true}>\n        <Text>Switch example</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass SelectionExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectableElement = React.createRef();\n  }\n\n  state = {\n    isSelected: true,\n    isEnabled: false,\n  };\n\n  render() {\n    let accessibilityHint = 'click me to select';\n    if (this.state.isSelected) {\n      accessibilityHint = 'click me to unselect';\n    }\n    if (!this.state.isEnabled) {\n      accessibilityHint = 'use the button on the right to enable selection';\n    }\n    let buttonTitle = this.state.isEnabled\n      ? 'Disable selection'\n      : 'Enable selection';\n\n    return (\n      <View style={{flex: 1, flexDirection: 'row'}}>\n        <TouchableOpacity\n          ref={this.selectableElement}\n          accessible={true}\n          onPress={() => {\n            if (this.state.isEnabled) {\n              this.setState({\n                isSelected: !this.state.isSelected,\n              });\n            }\n          }}\n          accessibilityLabel=\"element 19\"\n          accessibilityState={{\n            selected: this.state.isSelected,\n            disabled: !this.state.isEnabled,\n          }}\n          accessibilityHint={accessibilityHint}>\n          <Text>Selectable element example</Text>\n        </TouchableOpacity>\n        <Button\n          onPress={() => {\n            this.setState({\n              isEnabled: !this.state.isEnabled,\n            });\n          }}\n          title={buttonTitle}\n        />\n      </View>\n    );\n  }\n}\n\nclass ExpandableElementExample extends React.Component {\n  state = {\n    expandState: false,\n  };\n\n  _onElementPress = () => {\n    const expandState = !this.state.expandState;\n\n    this.setState({\n      expandState: expandState,\n    });\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={this._onElementPress}\n        accessibilityLabel=\"element 18\"\n        accessibilityState={{expanded: this.state.expandState}}\n        accessibilityHint=\"click me to change state\">\n        <Text>Expandable element example</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass NestedCheckBox extends React.Component {\n  state = {\n    checkbox1: false,\n    checkbox2: false,\n    checkbox3: false,\n  };\n\n  _onPress1 = () => {\n    let checkbox1 = false;\n    if (this.state.checkbox1 === false) {\n      checkbox1 = true;\n    } else if (this.state.checkbox1 === 'mixed') {\n      checkbox1 = false;\n    } else {\n      checkbox1 = false;\n    }\n    setTimeout(() => {\n      this.setState({\n        checkbox1: checkbox1,\n        checkbox2: checkbox1,\n        checkbox3: checkbox1,\n      });\n    }, 2000);\n  };\n\n  _onPress2 = () => {\n    const checkbox2 = !this.state.checkbox2;\n\n    this.setState({\n      checkbox2: checkbox2,\n      checkbox1:\n        checkbox2 && this.state.checkbox3\n          ? true\n          : checkbox2 || this.state.checkbox3\n          ? 'mixed'\n          : false,\n    });\n  };\n\n  _onPress3 = () => {\n    const checkbox3 = !this.state.checkbox3;\n\n    this.setState({\n      checkbox3: checkbox3,\n      checkbox1:\n        this.state.checkbox2 && checkbox3\n          ? true\n          : this.state.checkbox2 || checkbox3\n          ? 'mixed'\n          : false,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <TouchableOpacity\n          style={{flex: 1, flexDirection: 'row'}}\n          onPress={this._onPress1}\n          accessibilityLabel=\"Meat\"\n          accessibilityHint=\"State changes in 2 seconds after clicking.\"\n          accessibilityRole=\"checkbox\"\n          accessibilityState={{checked: this.state.checkbox1}}>\n          <Image\n            style={styles.image}\n            source={\n              this.state.checkbox1 === 'mixed'\n                ? mixedCheckboxImageSource\n                : this.state.checkbox1\n                ? checkImageSource\n                : uncheckImageSource\n            }\n          />\n          <Text>Meat</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{flex: 1, flexDirection: 'row'}}\n          onPress={this._onPress2}\n          accessibilityLabel=\"Beef\"\n          accessibilityRole=\"checkbox\"\n          accessibilityState={{checked: this.state.checkbox2}}>\n          <Image\n            style={styles.image}\n            source={\n              this.state.checkbox2 ? checkImageSource : uncheckImageSource\n            }\n          />\n          <Text>Beef</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{flex: 1, flexDirection: 'row'}}\n          onPress={this._onPress3}\n          accessibilityLabel=\"Bacon\"\n          accessibilityRole=\"checkbox\"\n          accessibilityState={{checked: this.state.checkbox3}}>\n          <Image\n            style={styles.image}\n            source={\n              this.state.checkbox3 ? checkImageSource : uncheckImageSource\n            }\n          />\n          <Text>Bacon</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nclass AccessibilityRoleAndStateExample extends React.Component<{}> {\n  render() {\n    return (\n      <View>\n        <View\n          accessibilityLabel=\"element 1\"\n          accessibilityRole=\"alert\"\n          accessible={true}>\n          <Text>Alert example</Text>\n        </View>\n        <CheckboxExample />\n        <View\n          accessibilityLabel=\"element 3\"\n          accessibilityRole=\"combobox\"\n          accessible={true}>\n          <Text>Combobox example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 4\"\n          accessibilityRole=\"menu\"\n          accessible={true}>\n          <Text>Menu example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 5\"\n          accessibilityRole=\"menubar\"\n          accessible={true}>\n          <Text>Menu bar example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 6\"\n          accessibilityRole=\"menuitem\"\n          accessible={true}>\n          <Text>Menu item example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 7\"\n          accessibilityRole=\"progressbar\"\n          accessible={true}>\n          <Text>Progress bar example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 8\"\n          accessibilityRole=\"radio\"\n          accessible={true}>\n          <Text>Radio button example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 9\"\n          accessibilityRole=\"radiogroup\"\n          accessible={true}>\n          <Text>Radio group example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 10\"\n          accessibilityRole=\"scrollbar\"\n          accessible={true}>\n          <Text>Scrollbar example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 11\"\n          accessibilityRole=\"spinbutton\"\n          accessible={true}>\n          <Text>Spin button example</Text>\n        </View>\n        <SwitchExample />\n        <View\n          accessibilityLabel=\"element 13\"\n          accessibilityRole=\"tab\"\n          accessible={true}>\n          <Text>Tab example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 14\"\n          accessibilityRole=\"tablist\"\n          accessible={true}>\n          <Text>Tab list example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 15\"\n          accessibilityRole=\"timer\"\n          accessible={true}>\n          <Text>Timer example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 16\"\n          accessibilityRole=\"toolbar\"\n          accessible={true}>\n          <Text>Toolbar example</Text>\n        </View>\n        <View\n          accessibilityLabel=\"element 17\"\n          accessibilityState={{busy: true}}\n          accessible={true}>\n          <Text>State busy example</Text>\n        </View>\n        <ExpandableElementExample />\n        <SelectionExample />\n        <RNTesterBlock title=\"Nested checkbox with delayed state change\">\n          <NestedCheckBox />\n        </RNTesterBlock>\n      </View>\n    );\n  }\n}\n\nclass AccessibilityActionsExample extends React.Component {\n  render() {\n    return (\n      <View>\n        <RNTesterBlock title=\"Non-touchable with activate action\">\n          <View\n            accessible={true}\n            accessibilityActions={[{name: 'activate'}]}\n            onAccessibilityAction={event => {\n              switch (event.nativeEvent.actionName) {\n                case 'activate':\n                  Alert.alert('Alert', 'View is clicked');\n                  break;\n              }\n            }}>\n            <Text>Click me</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"View with multiple actions\">\n          <View\n            accessible={true}\n            accessibilityActions={[\n              {name: 'cut', label: 'cut label'},\n              {name: 'copy', label: 'copy label'},\n              {name: 'paste', label: 'paste label'},\n            ]}\n            onAccessibilityAction={event => {\n              switch (event.nativeEvent.actionName) {\n                case 'cut':\n                  Alert.alert('Alert', 'cut action success');\n                  break;\n                case 'copy':\n                  Alert.alert('Alert', 'copy action success');\n                  break;\n                case 'paste':\n                  Alert.alert('Alert', 'paste action success');\n                  break;\n              }\n            }}>\n            <Text>This view supports many actions.</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Adjustable with increment/decrement actions\">\n          <View\n            accessible={true}\n            accessibilityRole=\"adjustable\"\n            accessibilityActions={[{name: 'increment'}, {name: 'decrement'}]}\n            onAccessibilityAction={event => {\n              switch (event.nativeEvent.actionName) {\n                case 'increment':\n                  Alert.alert('Alert', 'increment action success');\n                  break;\n                case 'decrement':\n                  Alert.alert('Alert', 'decrement action success');\n                  break;\n              }\n            }}>\n            <Text>Slider</Text>\n          </View>\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Button with custom accessibility actions\">\n          <TouchableWithoutFeedback\n            accessible={true}\n            accessibilityActions={[\n              {name: 'cut', label: 'cut label'},\n              {name: 'copy', label: 'copy label'},\n              {name: 'paste', label: 'paste label'},\n            ]}\n            onAccessibilityAction={event => {\n              switch (event.nativeEvent.actionName) {\n                case 'cut':\n                  Alert.alert('Alert', 'cut action success');\n                  break;\n                case 'copy':\n                  Alert.alert('Alert', 'copy action success');\n                  break;\n                case 'paste':\n                  Alert.alert('Alert', 'paste action success');\n                  break;\n              }\n            }}\n            onPress={() => Alert.alert('Button has been pressed!')}\n            accessibilityRole=\"button\">\n            <View>\n              <Text>Click me</Text>\n            </View>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n      </View>\n    );\n  }\n}\n\nclass FakeSliderExample extends React.Component {\n  state = {\n    current: 50,\n    textualValue: 'center',\n  };\n\n  increment = () => {\n    let newValue = this.state.current + 2;\n    if (newValue > 100) {\n      newValue = 100;\n    }\n    this.setState({\n      current: newValue,\n    });\n  };\n\n  decrement = () => {\n    let newValue = this.state.current - 2;\n    if (newValue < 0) {\n      newValue = 0;\n    }\n    this.setState({\n      current: newValue,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <View\n          accessible={true}\n          accessibilityLabel=\"Fake Slider\"\n          accessibilityRole=\"adjustable\"\n          accessibilityActions={[{name: 'increment'}, {name: 'decrement'}]}\n          onAccessibilityAction={event => {\n            switch (event.nativeEvent.actionName) {\n              case 'increment':\n                this.increment();\n                break;\n              case 'decrement':\n                this.decrement();\n                break;\n            }\n          }}\n          accessibilityValue={{\n            min: 0,\n            now: this.state.current,\n            max: 100,\n          }}>\n          <Text>Fake Slider</Text>\n        </View>\n        <TouchableWithoutFeedback\n          accessible={true}\n          accessibilityLabel=\"Equalizer\"\n          accessibilityRole=\"adjustable\"\n          accessibilityActions={[{name: 'increment'}, {name: 'decrement'}]}\n          onAccessibilityAction={event => {\n            switch (event.nativeEvent.actionName) {\n              case 'increment':\n                if (this.state.textualValue === 'center') {\n                  this.setState({textualValue: 'right'});\n                } else if (this.state.textualValue === 'left') {\n                  this.setState({textualValue: 'center'});\n                }\n                break;\n              case 'decrement':\n                if (this.state.textualValue === 'center') {\n                  this.setState({textualValue: 'left'});\n                } else if (this.state.textualValue === 'right') {\n                  this.setState({textualValue: 'center'});\n                }\n                break;\n            }\n          }}\n          accessibilityValue={{text: this.state.textualValue}}>\n          <View>\n            <Text>Equalizer</Text>\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n}\n\nclass ScreenReaderStatusExample extends React.Component<{}> {\n  state = {\n    screenReaderEnabled: false,\n  };\n\n  componentDidMount() {\n    AccessibilityInfo.addEventListener(\n      'change',\n      this._handleScreenReaderToggled,\n    );\n    AccessibilityInfo.fetch().done(isEnabled => {\n      this.setState({\n        screenReaderEnabled: isEnabled,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    AccessibilityInfo.removeEventListener(\n      'change',\n      this._handleScreenReaderToggled,\n    );\n  }\n\n  _handleScreenReaderToggled = isEnabled => {\n    this.setState({\n      screenReaderEnabled: isEnabled,\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <Text>\n          The screen reader is{' '}\n          {this.state.screenReaderEnabled ? 'enabled' : 'disabled'}.\n        </Text>\n      </View>\n    );\n  }\n}\n\nclass AnnounceForAccessibility extends React.Component<{}> {\n  _handleOnPress = () =>\n    AccessibilityInfo.announceForAccessibility('Announcement Test');\n\n  render() {\n    return (\n      <View>\n        <Button\n          onPress={this._handleOnPress}\n          title=\"Announce for Accessibility\"\n        />\n      </View>\n    );\n  }\n}\n\nexports.title = 'Accessibility';\nexports.description = 'Examples of using Accessibility APIs.';\nexports.examples = [\n  {\n    title: 'Accessibility elements',\n    render(): React.Element<typeof AccessibilityExample> {\n      return <AccessibilityExample />;\n    },\n  },\n  {\n    title: 'New accessibility roles and states',\n    render(): React.Element<typeof AccessibilityRoleAndStateExamples> {\n      return <AccessibilityRoleAndStateExample />;\n    },\n  },\n  {\n    title: 'Accessibility action examples',\n    render(): React.Element<typeof AccessibilityActionsExample> {\n      return <AccessibilityActionsExample />;\n    },\n  },\n  {\n    title: 'Fake Slider Example',\n    render(): React.Element<typeof FakeSliderExample> {\n      return <FakeSliderExample />;\n    },\n  },\n  {\n    title: 'Check if the screen reader is enabled',\n    render(): React.Element<typeof ScreenReaderStatusExample> {\n      return <ScreenReaderStatusExample />;\n    },\n  },\n  {\n    title: 'Check if the screen reader announces',\n    render(): React.Element<typeof AnnounceForAccessibility> {\n      return <AnnounceForAccessibility />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}