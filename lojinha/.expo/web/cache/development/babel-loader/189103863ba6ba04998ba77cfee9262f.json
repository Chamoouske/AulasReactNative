{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ActivityIndicator/index.js\";\n\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nimport React, { forwardRef } from 'react';\nvar accessibilityValue = {\n  max: 1,\n  min: 0\n};\n\nvar createSvgCircle = function createSvgCircle(style) {\n  return React.createElement(\"circle\", {\n    cx: \"16\",\n    cy: \"16\",\n    fill: \"none\",\n    r: \"14\",\n    strokeWidth: \"4\",\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  });\n};\n\nvar ActivityIndicator = forwardRef(function (props, forwardedRef) {\n  var _props$animating = props.animating,\n      animating = _props$animating === void 0 ? true : _props$animating,\n      _props$color = props.color,\n      color = _props$color === void 0 ? '#1976D2' : _props$color,\n      _props$hidesWhenStopp = props.hidesWhenStopped,\n      hidesWhenStopped = _props$hidesWhenStopp === void 0 ? true : _props$hidesWhenStopp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'small' : _props$size,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\"]);\n\n  var svg = React.createElement(\"svg\", {\n    height: \"100%\",\n    viewBox: \"0 0 32 32\",\n    width: \"100%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, createSvgCircle({\n    stroke: color,\n    opacity: 0.2\n  }), createSvgCircle({\n    stroke: color,\n    strokeDasharray: 80,\n    strokeDashoffset: 60\n  }));\n  return React.createElement(View, _extends({}, other, {\n    accessibilityRole: \"progressbar\",\n    accessibilityValue: accessibilityValue,\n    ref: forwardedRef,\n    style: [styles.container, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    children: svg,\n    style: [typeof size === 'number' ? {\n      height: size,\n      width: size\n    } : indicatorSizes[size], styles.animation, !animating && styles.animationPause, !animating && hidesWhenStopped && styles.hidesWhenStopped],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n});\nActivityIndicator.displayName = 'ActivityIndicator';\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [{\n      '0%': {\n        transform: [{\n          rotate: '0deg'\n        }]\n      },\n      '100%': {\n        transform: [{\n          rotate: '360deg'\n        }]\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\nvar indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\nexport default ActivityIndicator;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ActivityIndicator/index.js"],"names":["StyleSheet","View","React","forwardRef","accessibilityValue","max","min","createSvgCircle","style","ActivityIndicator","props","forwardedRef","animating","color","hidesWhenStopped","size","other","svg","stroke","opacity","strokeDasharray","strokeDashoffset","styles","container","height","width","indicatorSizes","animation","animationPause","displayName","create","alignItems","justifyContent","visibility","animationDuration","animationKeyframes","transform","rotate","animationTimingFunction","animationIterationCount","animationPlayState","small","large"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { ViewProps } from '../View';\n\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport React, { forwardRef } from 'react';\n\nconst accessibilityValue = { max: 1, min: 0 };\n\nconst createSvgCircle = style => (\n  <circle cx=\"16\" cy=\"16\" fill=\"none\" r=\"14\" strokeWidth=\"4\" style={style} />\n);\n\ntype ActivityIndicatorProps = {\n  ...ViewProps,\n  animating?: boolean,\n  color?: ?string,\n  hidesWhenStopped?: boolean,\n  size?: 'small' | 'large' | number\n};\n\nconst ActivityIndicator = forwardRef<ActivityIndicatorProps, *>((props, forwardedRef) => {\n  const {\n    animating = true,\n    color = '#1976D2',\n    hidesWhenStopped = true,\n    size = 'small',\n    style,\n    ...other\n  } = props;\n\n  const svg = (\n    <svg height=\"100%\" viewBox=\"0 0 32 32\" width=\"100%\">\n      {createSvgCircle({\n        stroke: color,\n        opacity: 0.2\n      })}\n      {createSvgCircle({\n        stroke: color,\n        strokeDasharray: 80,\n        strokeDashoffset: 60\n      })}\n    </svg>\n  );\n\n  return (\n    <View\n      {...other}\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={accessibilityValue}\n      ref={forwardedRef}\n      style={[styles.container, style]}\n    >\n      <View\n        children={svg}\n        style={[\n          typeof size === 'number' ? { height: size, width: size } : indicatorSizes[size],\n          styles.animation,\n          !animating && styles.animationPause,\n          !animating && hidesWhenStopped && styles.hidesWhenStopped\n        ]}\n      />\n    </View>\n  );\n});\n\nActivityIndicator.displayName = 'ActivityIndicator';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [\n      {\n        '0%': { transform: [{ rotate: '0deg' }] },\n        '100%': { transform: [{ rotate: '360deg' }] }\n      }\n    ],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\n\nconst indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\n\nexport default ActivityIndicator;\n"]},"metadata":{},"sourceType":"module"}