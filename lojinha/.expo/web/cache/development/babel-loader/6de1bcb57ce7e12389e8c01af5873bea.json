{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/TextInput/TextInputSharedExamples.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Button = require(\"react-native-web/dist/exports/Button\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TextInput = require(\"react-native-web/dist/exports/TextInput\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar styles = StyleSheet.create({\n  default: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#0f0f0f',\n    flex: 1,\n    fontSize: 13,\n    padding: 4\n  },\n  multiline: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#0f0f0f',\n    flex: 1,\n    fontSize: 13,\n    height: 50,\n    padding: 4,\n    marginBottom: 4\n  },\n  singleLine: {\n    fontSize: 16\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    marginVertical: 2,\n    flex: 1\n  },\n  label: {\n    width: 115,\n    alignItems: 'flex-end',\n    marginRight: 10,\n    paddingTop: 2\n  },\n  rewriteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  remainder: {\n    textAlign: 'right',\n    width: 24\n  },\n  hashtag: {\n    color: 'blue',\n    fontWeight: 'bold'\n  },\n  eventLabel: {\n    margin: 3,\n    fontSize: 12\n  }\n});\n\nvar WithLabel = function (_React$Component) {\n  _inherits(WithLabel, _React$Component);\n\n  var _super = _createSuper(WithLabel);\n\n  function WithLabel() {\n    _classCallCheck(this, WithLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WithLabel, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.labelContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, this.props.label)), this.props.children);\n    }\n  }]);\n\n  return WithLabel;\n}(React.Component);\n\nvar RewriteExample = function (_React$Component2) {\n  _inherits(RewriteExample, _React$Component2);\n\n  var _super2 = _createSuper(RewriteExample);\n\n  function RewriteExample(props) {\n    var _this;\n\n    _classCallCheck(this, RewriteExample);\n\n    _this = _super2.call(this, props);\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(RewriteExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var limit = 20;\n      var remainder = limit - this.state.text.length;\n      var remainderColor = remainder > 5 ? 'blue' : 'red';\n      return React.createElement(View, {\n        style: styles.rewriteContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        testID: \"rewrite_sp_underscore_input\",\n        autoCorrect: false,\n        multiline: false,\n        maxLength: limit,\n        onChangeText: function onChangeText(text) {\n          text = text.replace(/ /g, '_');\n\n          _this2.setState({\n            text: text\n          });\n        },\n        style: styles.default,\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: [styles.remainder, {\n          color: remainderColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, remainder));\n    }\n  }]);\n\n  return RewriteExample;\n}(React.Component);\n\nvar RewriteExampleInvalidCharacters = function (_React$Component3) {\n  _inherits(RewriteExampleInvalidCharacters, _React$Component3);\n\n  var _super3 = _createSuper(RewriteExampleInvalidCharacters);\n\n  function RewriteExampleInvalidCharacters(props) {\n    var _this3;\n\n    _classCallCheck(this, RewriteExampleInvalidCharacters);\n\n    _this3 = _super3.call(this, props);\n    _this3.state = {\n      text: ''\n    };\n    return _this3;\n  }\n\n  _createClass(RewriteExampleInvalidCharacters, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.rewriteContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        testID: \"rewrite_no_sp_input\",\n        autoCorrect: false,\n        multiline: false,\n        onChangeText: function onChangeText(text) {\n          _this4.setState({\n            text: text.replace(/\\s/g, '')\n          });\n        },\n        style: styles.default,\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return RewriteExampleInvalidCharacters;\n}(React.Component);\n\nvar RewriteInvalidCharactersAndClearExample = function (_React$Component4) {\n  _inherits(RewriteInvalidCharactersAndClearExample, _React$Component4);\n\n  var _super4 = _createSuper(RewriteInvalidCharactersAndClearExample);\n\n  function RewriteInvalidCharactersAndClearExample(props) {\n    var _this5;\n\n    _classCallCheck(this, RewriteInvalidCharactersAndClearExample);\n\n    _this5 = _super4.call(this, props);\n    _this5.inputRef = null;\n    _this5.state = {\n      text: ''\n    };\n    return _this5;\n  }\n\n  _createClass(RewriteInvalidCharactersAndClearExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(View, {\n        style: styles.rewriteContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        testID: \"rewrite_clear_input\",\n        autoCorrect: false,\n        ref: function ref(_ref) {\n          _this6.inputRef = _ref;\n        },\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this6.setState({\n            text: text.replace(/ /g, '')\n          });\n        },\n        style: styles.default,\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        testID: \"rewrite_clear_button\",\n        onPress: function onPress() {\n          if (_this6.inputRef != null) {\n            _this6.inputRef.clear();\n          }\n        },\n        title: \"Clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return RewriteInvalidCharactersAndClearExample;\n}(React.Component);\n\nvar BlurOnSubmitExample = function (_React$Component5) {\n  _inherits(BlurOnSubmitExample, _React$Component5);\n\n  var _super5 = _createSuper(BlurOnSubmitExample);\n\n  function BlurOnSubmitExample() {\n    var _this7;\n\n    _classCallCheck(this, BlurOnSubmitExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this7 = _super5.call.apply(_super5, [this].concat(args));\n\n    _this7.focusNextField = function (nextField) {\n      _this7.refs[nextField].focus();\n    };\n\n    return _this7;\n  }\n\n  _createClass(BlurOnSubmitExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        ref: \"1\",\n        style: styles.singleLine,\n        placeholder: \"blurOnSubmit = false\",\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this8.focusNextField('2');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        ref: \"2\",\n        style: styles.singleLine,\n        keyboardType: \"email-address\",\n        placeholder: \"blurOnSubmit = false\",\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this8.focusNextField('3');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        ref: \"3\",\n        style: styles.singleLine,\n        keyboardType: \"url\",\n        placeholder: \"blurOnSubmit = false\",\n        returnKeyType: \"next\",\n        blurOnSubmit: false,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this8.focusNextField('4');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        ref: \"4\",\n        style: styles.singleLine,\n        keyboardType: \"numeric\",\n        placeholder: \"blurOnSubmit = false\",\n        blurOnSubmit: false,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this8.focusNextField('5');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        ref: \"5\",\n        style: styles.singleLine,\n        keyboardType: \"numbers-and-punctuation\",\n        placeholder: \"blurOnSubmit = true\",\n        returnKeyType: \"done\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return BlurOnSubmitExample;\n}(React.Component);\n\nvar TextEventsExample = function (_React$Component6) {\n  _inherits(TextEventsExample, _React$Component6);\n\n  var _super6 = _createSuper(TextEventsExample);\n\n  function TextEventsExample() {\n    var _this9;\n\n    _classCallCheck(this, TextEventsExample);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this9 = _super6.call.apply(_super6, [this].concat(args));\n    _this9.state = {\n      curText: '<No Event>',\n      prevText: '<No Event>',\n      prev2Text: '<No Event>',\n      prev3Text: '<No Event>'\n    };\n\n    _this9.updateText = function (text) {\n      _this9.setState(function (state) {\n        return {\n          curText: text,\n          prevText: state.curText,\n          prev2Text: state.prevText,\n          prev3Text: state.prev2Text\n        };\n      });\n    };\n\n    return _this9;\n  }\n\n  _createClass(TextEventsExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this10 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        placeholder: \"Enter text to see events\",\n        autoCorrect: false,\n        multiline: true,\n        onFocus: function onFocus() {\n          return _this10.updateText('onFocus');\n        },\n        onBlur: function onBlur() {\n          return _this10.updateText('onBlur');\n        },\n        onChange: function onChange(event) {\n          return _this10.updateText('onChange text: ' + event.nativeEvent.text);\n        },\n        onContentSizeChange: function onContentSizeChange(event) {\n          return _this10.updateText('onContentSizeChange size: ' + JSON.stringify(event.nativeEvent.contentSize));\n        },\n        onEndEditing: function onEndEditing(event) {\n          return _this10.updateText('onEndEditing text: ' + event.nativeEvent.text);\n        },\n        onSubmitEditing: function onSubmitEditing(event) {\n          return _this10.updateText('onSubmitEditing text: ' + event.nativeEvent.text);\n        },\n        onKeyPress: function onKeyPress(event) {\n          return _this10.updateText('onKeyPress key: ' + event.nativeEvent.key);\n        },\n        style: styles.singleLine,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.eventLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }, this.state.curText, '\\n', \"(prev: \", this.state.prevText, \")\", '\\n', \"(prev2: \", this.state.prev2Text, \")\", '\\n', \"(prev3: \", this.state.prev3Text, \")\"));\n    }\n  }]);\n\n  return TextEventsExample;\n}(React.Component);\n\nvar TokenizedTextExample = function (_React$Component7) {\n  _inherits(TokenizedTextExample, _React$Component7);\n\n  var _super7 = _createSuper(TokenizedTextExample);\n\n  function TokenizedTextExample(props) {\n    var _this11;\n\n    _classCallCheck(this, TokenizedTextExample);\n\n    _this11 = _super7.call(this, props);\n    _this11.state = {\n      text: 'Hello #World'\n    };\n    return _this11;\n  }\n\n  _createClass(TokenizedTextExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      var delimiter = /\\s+/;\n      var _text = this.state.text;\n      var token,\n          index,\n          parts = [];\n\n      while (_text) {\n        delimiter.lastIndex = 0;\n        token = delimiter.exec(_text);\n\n        if (token === null) {\n          break;\n        }\n\n        index = token.index;\n\n        if (token[0].length === 0) {\n          index = 1;\n        }\n\n        parts.push(_text.substr(0, index));\n        parts.push(token[0]);\n        index = index + token[0].length;\n        _text = _text.slice(index);\n      }\n\n      parts.push(_text);\n      parts = parts.map(function (text) {\n        if (/^#/.test(text)) {\n          return React.createElement(Text, {\n            key: text,\n            style: styles.hashtag,\n            __self: _this12,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 11\n            }\n          }, text);\n        } else {\n          return text;\n        }\n      });\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        multiline: true,\n        style: styles.multiline,\n        onChangeText: function onChangeText(text) {\n          _this12.setState({\n            text: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }\n      }, parts)));\n    }\n  }]);\n\n  return TokenizedTextExample;\n}(React.Component);\n\nvar SelectionExample = function (_React$Component8) {\n  _inherits(SelectionExample, _React$Component8);\n\n  var _super8 = _createSuper(SelectionExample);\n\n  function SelectionExample(props) {\n    var _this13;\n\n    _classCallCheck(this, SelectionExample);\n\n    _this13 = _super8.call(this, props);\n    _this13.state = {\n      selection: {\n        start: 0,\n        end: 0\n      },\n      value: props.value\n    };\n    return _this13;\n  }\n\n  _createClass(SelectionExample, [{\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(_ref2) {\n      var selection = _ref2.nativeEvent.selection;\n      this.setState({\n        selection: selection\n      });\n    }\n  }, {\n    key: \"getRandomPosition\",\n    value: function getRandomPosition() {\n      var length = this.state.value.length;\n      return Math.round(Math.random() * length);\n    }\n  }, {\n    key: \"select\",\n    value: function select(start, end) {\n      this._textInput.focus();\n\n      this.setState({\n        selection: {\n          start: start,\n          end: end\n        }\n      });\n    }\n  }, {\n    key: \"selectRandom\",\n    value: function selectRandom() {\n      var positions = [this.getRandomPosition(), this.getRandomPosition()].sort();\n      this.select.apply(this, _toConsumableArray(positions));\n    }\n  }, {\n    key: \"placeAt\",\n    value: function placeAt(position) {\n      this.select(position, position);\n    }\n  }, {\n    key: \"placeAtRandom\",\n    value: function placeAtRandom() {\n      this.placeAt(this.getRandomPosition());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this14 = this;\n\n      var length = this.state.value.length;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        multiline: this.props.multiline,\n        onChangeText: function onChangeText(value) {\n          return _this14.setState({\n            value: value\n          });\n        },\n        onSelectionChange: this.onSelectionChange.bind(this),\n        ref: function ref(textInput) {\n          return _this14._textInput = textInput;\n        },\n        selection: this.state.selection,\n        style: this.props.style,\n        value: this.state.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }\n      }, \"selection = \", JSON.stringify(this.state.selection)), React.createElement(Text, {\n        onPress: this.placeAt.bind(this, 0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }\n      }, \"Place at Start (0, 0)\"), React.createElement(Text, {\n        onPress: this.placeAt.bind(this, length),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }\n      }, \"Place at End (\", length, \", \", length, \")\"), React.createElement(Text, {\n        onPress: this.placeAtRandom.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }\n      }, \"Place at Random\"), React.createElement(Text, {\n        onPress: this.select.bind(this, 0, length),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }\n      }, \"Select All\"), React.createElement(Text, {\n        onPress: this.selectRandom.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }\n      }, \"Select Random\")));\n    }\n  }]);\n\n  return SelectionExample;\n}(React.Component);\n\nmodule.exports = [{\n  title: 'Auto-focus',\n  render: function render() {\n    return React.createElement(TextInput, {\n      autoFocus: true,\n      style: styles.default,\n      accessibilityLabel: \"I am the accessibility label for text input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: \"Live Re-Write (<sp>  ->  '_') + maxLength\",\n  render: function render() {\n    return React.createElement(RewriteExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Live Re-Write (no spaces allowed)',\n  render: function render() {\n    return React.createElement(RewriteExampleInvalidCharacters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Live Re-Write (no spaces allowed) and clear',\n  render: function render() {\n    return React.createElement(RewriteInvalidCharactersAndClearExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Auto-capitalize',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }\n    }, React.createElement(WithLabel, {\n      label: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"none\",\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 13\n      }\n    })), React.createElement(WithLabel, {\n      label: \"sentences\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"sentences\",\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    })), React.createElement(WithLabel, {\n      label: \"words\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"words\",\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }\n    })), React.createElement(WithLabel, {\n      label: \"characters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCapitalize: \"characters\",\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }\n    })));\n  }\n}, {\n  title: 'Auto-correct',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }\n    }, React.createElement(WithLabel, {\n      label: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCorrect: true,\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    })), React.createElement(WithLabel, {\n      label: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      autoCorrect: false,\n      style: styles.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 13\n      }\n    })));\n  }\n}, {\n  title: 'Keyboard types',\n  render: function render() {\n    var _this15 = this;\n\n    var keyboardTypes = ['default', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'phone-pad', 'name-phone-pad', 'email-address', 'decimal-pad', 'twitter', 'web-search', 'ascii-capable-number-pad', 'numeric'];\n    var examples = keyboardTypes.map(function (type) {\n      return React.createElement(WithLabel, {\n        key: type,\n        label: type,\n        __self: _this15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        keyboardType: type,\n        style: styles.default,\n        __self: _this15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }\n      }));\n    });\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 14\n      }\n    }, examples);\n  }\n}, {\n  title: 'Blur on submit',\n  render: function render() {\n    return React.createElement(BlurOnSubmitExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Event handling',\n  render: function render() {\n    return React.createElement(TextEventsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'fontFamily, fontWeight and fontStyle',\n  render: function render() {\n    var fontFamilyA = Platform.OS === 'ios' ? 'Cochin' : 'sans-serif';\n    var fontFamilyB = Platform.OS === 'ios' ? 'Courier' : 'serif';\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }\n    }, React.createElement(TextInput, {\n      style: [styles.singleLine, {\n        fontFamily: fontFamilyA\n      }],\n      placeholder: \"Custom fonts like \" + fontFamilyA + \" are supported\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.singleLine, {\n        fontFamily: fontFamilyA,\n        fontWeight: 'bold'\n      }],\n      placeholder: fontFamilyA + \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.singleLine, {\n        fontFamily: fontFamilyA,\n        fontWeight: '500'\n      }],\n      placeholder: fontFamilyA + \" 500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.singleLine, {\n        fontFamily: fontFamilyA,\n        fontStyle: 'italic'\n      }],\n      placeholder: fontFamilyA + \" italic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.singleLine, {\n        fontFamily: fontFamilyB\n      }],\n      placeholder: fontFamilyB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'Attributed text',\n  render: function render() {\n    return React.createElement(TokenizedTextExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Text selection & cursor placement',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }\n    }, React.createElement(SelectionExample, {\n      style: styles.default,\n      value: \"text selection can be changed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }\n    }), React.createElement(SelectionExample, {\n      multiline: true,\n      style: styles.multiline,\n      value: 'multiline text selection\\ncan also be changed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }\n    }));\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/TextInput/TextInputSharedExamples.js"],"names":["React","require","styles","StyleSheet","create","default","borderWidth","hairlineWidth","borderColor","flex","fontSize","padding","multiline","height","marginBottom","singleLine","labelContainer","flexDirection","marginVertical","label","width","alignItems","marginRight","paddingTop","rewriteContainer","remainder","textAlign","hashtag","color","fontWeight","eventLabel","margin","WithLabel","props","children","Component","RewriteExample","state","text","limit","length","remainderColor","replace","setState","RewriteExampleInvalidCharacters","RewriteInvalidCharactersAndClearExample","inputRef","ref","clear","BlurOnSubmitExample","focusNextField","nextField","refs","focus","TextEventsExample","curText","prevText","prev2Text","prev3Text","updateText","event","nativeEvent","JSON","stringify","contentSize","key","TokenizedTextExample","delimiter","_text","token","index","parts","lastIndex","exec","push","substr","slice","map","test","SelectionExample","selection","start","end","value","Math","round","random","_textInput","positions","getRandomPosition","sort","select","position","placeAt","onSelectionChange","bind","textInput","style","placeAtRandom","selectRandom","module","exports","title","render","keyboardTypes","examples","type","fontFamilyA","Platform","OS","fontFamilyB","fontFamily","fontStyle"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Button,\n  Platform,\n  Text,\n  TextInput,\n  View,\n  StyleSheet,\n} = require('react-native');\n\nimport type {RNTesterExampleModuleItem} from '../../types/RNTesterTypes';\n\nconst styles = StyleSheet.create({\n  default: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#0f0f0f',\n    flex: 1,\n    fontSize: 13,\n    padding: 4,\n  },\n  multiline: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#0f0f0f',\n    flex: 1,\n    fontSize: 13,\n    height: 50,\n    padding: 4,\n    marginBottom: 4,\n  },\n  singleLine: {\n    fontSize: 16,\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    marginVertical: 2,\n    flex: 1,\n  },\n  label: {\n    width: 115,\n    alignItems: 'flex-end',\n    marginRight: 10,\n    paddingTop: 2,\n  },\n  rewriteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  remainder: {\n    textAlign: 'right',\n    width: 24,\n  },\n  hashtag: {\n    color: 'blue',\n    fontWeight: 'bold',\n  },\n  eventLabel: {\n    margin: 3,\n    fontSize: 12,\n  },\n});\n\nclass WithLabel extends React.Component<$FlowFixMeProps> {\n  render() {\n    return (\n      <View style={styles.labelContainer}>\n        <View style={styles.label}>\n          <Text>{this.props.label}</Text>\n        </View>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nclass RewriteExample extends React.Component<$FlowFixMeProps, any> {\n  constructor(props) {\n    super(props);\n    this.state = {text: ''};\n  }\n  render() {\n    const limit = 20;\n    const remainder = limit - this.state.text.length;\n    const remainderColor = remainder > 5 ? 'blue' : 'red';\n    return (\n      <View style={styles.rewriteContainer}>\n        <TextInput\n          testID=\"rewrite_sp_underscore_input\"\n          autoCorrect={false}\n          multiline={false}\n          maxLength={limit}\n          onChangeText={text => {\n            text = text.replace(/ /g, '_');\n            this.setState({text});\n          }}\n          style={styles.default}\n          value={this.state.text}\n        />\n        <Text style={[styles.remainder, {color: remainderColor}]}>\n          {remainder}\n        </Text>\n      </View>\n    );\n  }\n}\n\nclass RewriteExampleInvalidCharacters extends React.Component<\n  $FlowFixMeProps,\n  any,\n> {\n  constructor(props) {\n    super(props);\n    this.state = {text: ''};\n  }\n  render() {\n    return (\n      <View style={styles.rewriteContainer}>\n        <TextInput\n          testID=\"rewrite_no_sp_input\"\n          autoCorrect={false}\n          multiline={false}\n          onChangeText={text => {\n            this.setState({text: text.replace(/\\s/g, '')});\n          }}\n          style={styles.default}\n          value={this.state.text}\n        />\n      </View>\n    );\n  }\n}\n\nclass RewriteInvalidCharactersAndClearExample extends React.Component<\n  $FlowFixMeProps,\n  any,\n> {\n  inputRef: ?React.ElementRef<typeof TextInput> = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {text: ''};\n  }\n  render() {\n    return (\n      <View style={styles.rewriteContainer}>\n        <TextInput\n          testID=\"rewrite_clear_input\"\n          autoCorrect={false}\n          ref={ref => {\n            this.inputRef = ref;\n          }}\n          multiline={true}\n          onChangeText={text => {\n            this.setState({text: text.replace(/ /g, '')});\n          }}\n          style={styles.default}\n          value={this.state.text}\n        />\n        <Button\n          testID=\"rewrite_clear_button\"\n          onPress={() => {\n            if (this.inputRef != null) {\n              this.inputRef.clear();\n            }\n          }}\n          title=\"Clear\"\n        />\n      </View>\n    );\n  }\n}\n\nclass BlurOnSubmitExample extends React.Component<{...}> {\n  focusNextField = nextField => {\n    this.refs[nextField].focus();\n  };\n\n  render() {\n    return (\n      <View>\n        <TextInput\n          ref=\"1\"\n          style={styles.singleLine}\n          placeholder=\"blurOnSubmit = false\"\n          returnKeyType=\"next\"\n          blurOnSubmit={false}\n          onSubmitEditing={() => this.focusNextField('2')}\n        />\n        <TextInput\n          ref=\"2\"\n          style={styles.singleLine}\n          keyboardType=\"email-address\"\n          placeholder=\"blurOnSubmit = false\"\n          returnKeyType=\"next\"\n          blurOnSubmit={false}\n          onSubmitEditing={() => this.focusNextField('3')}\n        />\n        <TextInput\n          ref=\"3\"\n          style={styles.singleLine}\n          keyboardType=\"url\"\n          placeholder=\"blurOnSubmit = false\"\n          returnKeyType=\"next\"\n          blurOnSubmit={false}\n          onSubmitEditing={() => this.focusNextField('4')}\n        />\n        <TextInput\n          ref=\"4\"\n          style={styles.singleLine}\n          keyboardType=\"numeric\"\n          placeholder=\"blurOnSubmit = false\"\n          blurOnSubmit={false}\n          onSubmitEditing={() => this.focusNextField('5')}\n        />\n        <TextInput\n          ref=\"5\"\n          style={styles.singleLine}\n          keyboardType=\"numbers-and-punctuation\"\n          placeholder=\"blurOnSubmit = true\"\n          returnKeyType=\"done\"\n        />\n      </View>\n    );\n  }\n}\n\nclass TextEventsExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    curText: '<No Event>',\n    prevText: '<No Event>',\n    prev2Text: '<No Event>',\n    prev3Text: '<No Event>',\n  };\n\n  updateText = text => {\n    this.setState(state => {\n      return {\n        curText: text,\n        prevText: state.curText,\n        prev2Text: state.prevText,\n        prev3Text: state.prev2Text,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <View>\n        <TextInput\n          autoCapitalize=\"none\"\n          placeholder=\"Enter text to see events\"\n          autoCorrect={false}\n          multiline\n          onFocus={() => this.updateText('onFocus')}\n          onBlur={() => this.updateText('onBlur')}\n          onChange={event =>\n            this.updateText('onChange text: ' + event.nativeEvent.text)\n          }\n          onContentSizeChange={event =>\n            this.updateText(\n              'onContentSizeChange size: ' +\n                JSON.stringify(event.nativeEvent.contentSize),\n            )\n          }\n          onEndEditing={event =>\n            this.updateText('onEndEditing text: ' + event.nativeEvent.text)\n          }\n          onSubmitEditing={event =>\n            this.updateText('onSubmitEditing text: ' + event.nativeEvent.text)\n          }\n          onKeyPress={event =>\n            this.updateText('onKeyPress key: ' + event.nativeEvent.key)\n          }\n          style={styles.singleLine}\n        />\n        <Text style={styles.eventLabel}>\n          {this.state.curText}\n          {'\\n'}\n          (prev: {this.state.prevText}){'\\n'}\n          (prev2: {this.state.prev2Text}){'\\n'}\n          (prev3: {this.state.prev3Text})\n        </Text>\n      </View>\n    );\n  }\n}\n\nclass TokenizedTextExample extends React.Component<\n  $FlowFixMeProps,\n  $FlowFixMeState,\n> {\n  constructor(props) {\n    super(props);\n    this.state = {text: 'Hello #World'};\n  }\n  render() {\n    //define delimiter\n    let delimiter = /\\s+/;\n\n    //split string\n    let _text = this.state.text;\n    let token,\n      index,\n      parts = [];\n    while (_text) {\n      delimiter.lastIndex = 0;\n      token = delimiter.exec(_text);\n      if (token === null) {\n        break;\n      }\n      index = token.index;\n      if (token[0].length === 0) {\n        index = 1;\n      }\n      parts.push(_text.substr(0, index));\n      parts.push(token[0]);\n      index = index + token[0].length;\n      _text = _text.slice(index);\n    }\n    parts.push(_text);\n\n    //highlight hashtags\n    parts = parts.map(text => {\n      if (/^#/.test(text)) {\n        return (\n          <Text key={text} style={styles.hashtag}>\n            {text}\n          </Text>\n        );\n      } else {\n        return text;\n      }\n    });\n\n    return (\n      <View>\n        <TextInput\n          multiline={true}\n          style={styles.multiline}\n          onChangeText={text => {\n            this.setState({text});\n          }}>\n          <Text>{parts}</Text>\n        </TextInput>\n      </View>\n    );\n  }\n}\n\ntype SelectionExampleState = {\n  selection: $ReadOnly<{|\n    start: number,\n    end?: number,\n  |}>,\n  value: string,\n  ...\n};\n\nclass SelectionExample extends React.Component<\n  $FlowFixMeProps,\n  SelectionExampleState,\n> {\n  _textInput: any;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: {start: 0, end: 0},\n      value: props.value,\n    };\n  }\n\n  onSelectionChange({nativeEvent: {selection}}) {\n    this.setState({selection});\n  }\n\n  getRandomPosition() {\n    const length = this.state.value.length;\n    return Math.round(Math.random() * length);\n  }\n\n  select(start, end) {\n    this._textInput.focus();\n    this.setState({selection: {start, end}});\n  }\n\n  selectRandom() {\n    const positions = [\n      this.getRandomPosition(),\n      this.getRandomPosition(),\n    ].sort();\n    this.select(...positions);\n  }\n\n  placeAt(position) {\n    this.select(position, position);\n  }\n\n  placeAtRandom() {\n    this.placeAt(this.getRandomPosition());\n  }\n\n  render() {\n    const length = this.state.value.length;\n\n    return (\n      <View>\n        <TextInput\n          multiline={this.props.multiline}\n          onChangeText={value => this.setState({value})}\n          onSelectionChange={this.onSelectionChange.bind(this)}\n          ref={textInput => (this._textInput = textInput)}\n          selection={this.state.selection}\n          style={this.props.style}\n          value={this.state.value}\n        />\n        <View>\n          <Text>selection = {JSON.stringify(this.state.selection)}</Text>\n          <Text onPress={this.placeAt.bind(this, 0)}>\n            Place at Start (0, 0)\n          </Text>\n          <Text onPress={this.placeAt.bind(this, length)}>\n            Place at End ({length}, {length})\n          </Text>\n          <Text onPress={this.placeAtRandom.bind(this)}>Place at Random</Text>\n          <Text onPress={this.select.bind(this, 0, length)}>Select All</Text>\n          <Text onPress={this.selectRandom.bind(this)}>Select Random</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nmodule.exports = ([\n  {\n    title: 'Auto-focus',\n    render: function(): React.Node {\n      return (\n        <TextInput\n          autoFocus={true}\n          style={styles.default}\n          accessibilityLabel=\"I am the accessibility label for text input\"\n        />\n      );\n    },\n  },\n  {\n    title: \"Live Re-Write (<sp>  ->  '_') + maxLength\",\n    render: function(): React.Node {\n      return <RewriteExample />;\n    },\n  },\n  {\n    title: 'Live Re-Write (no spaces allowed)',\n    render: function(): React.Node {\n      return <RewriteExampleInvalidCharacters />;\n    },\n  },\n  {\n    title: 'Live Re-Write (no spaces allowed) and clear',\n    render: function(): React.Node {\n      return <RewriteInvalidCharactersAndClearExample />;\n    },\n  },\n  {\n    title: 'Auto-capitalize',\n    render: function(): React.Node {\n      return (\n        <View>\n          <WithLabel label=\"none\">\n            <TextInput autoCapitalize=\"none\" style={styles.default} />\n          </WithLabel>\n          <WithLabel label=\"sentences\">\n            <TextInput autoCapitalize=\"sentences\" style={styles.default} />\n          </WithLabel>\n          <WithLabel label=\"words\">\n            <TextInput autoCapitalize=\"words\" style={styles.default} />\n          </WithLabel>\n          <WithLabel label=\"characters\">\n            <TextInput autoCapitalize=\"characters\" style={styles.default} />\n          </WithLabel>\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Auto-correct',\n    render: function(): React.Node {\n      return (\n        <View>\n          <WithLabel label=\"true\">\n            <TextInput autoCorrect={true} style={styles.default} />\n          </WithLabel>\n          <WithLabel label=\"false\">\n            <TextInput autoCorrect={false} style={styles.default} />\n          </WithLabel>\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Keyboard types',\n    render: function(): React.Node {\n      const keyboardTypes = [\n        'default',\n        'ascii-capable',\n        'numbers-and-punctuation',\n        'url',\n        'number-pad',\n        'phone-pad',\n        'name-phone-pad',\n        'email-address',\n        'decimal-pad',\n        'twitter',\n        'web-search',\n        'ascii-capable-number-pad',\n        'numeric',\n      ];\n      const examples = keyboardTypes.map(type => {\n        return (\n          <WithLabel key={type} label={type}>\n            <TextInput keyboardType={type} style={styles.default} />\n          </WithLabel>\n        );\n      });\n      return <View>{examples}</View>;\n    },\n  },\n  {\n    title: 'Blur on submit',\n    render: function(): React.Element<any> {\n      return <BlurOnSubmitExample />;\n    },\n  },\n  {\n    title: 'Event handling',\n    render: function(): React.Element<any> {\n      return <TextEventsExample />;\n    },\n  },\n  {\n    title: 'fontFamily, fontWeight and fontStyle',\n    render: function(): React.Node {\n      const fontFamilyA = Platform.OS === 'ios' ? 'Cochin' : 'sans-serif';\n      const fontFamilyB = Platform.OS === 'ios' ? 'Courier' : 'serif';\n\n      return (\n        <View>\n          <TextInput\n            style={[styles.singleLine, {fontFamily: fontFamilyA}]}\n            placeholder={`Custom fonts like ${fontFamilyA} are supported`}\n          />\n          <TextInput\n            style={[\n              styles.singleLine,\n              {fontFamily: fontFamilyA, fontWeight: 'bold'},\n            ]}\n            placeholder={`${fontFamilyA} bold`}\n          />\n          <TextInput\n            style={[\n              styles.singleLine,\n              {fontFamily: fontFamilyA, fontWeight: '500'},\n            ]}\n            placeholder={`${fontFamilyA} 500`}\n          />\n          <TextInput\n            style={[\n              styles.singleLine,\n              {fontFamily: fontFamilyA, fontStyle: 'italic'},\n            ]}\n            placeholder={`${fontFamilyA} italic`}\n          />\n          <TextInput\n            style={[styles.singleLine, {fontFamily: fontFamilyB}]}\n            placeholder={fontFamilyB}\n          />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Attributed text',\n    render: function(): React.Node {\n      return <TokenizedTextExample />;\n    },\n  },\n  {\n    title: 'Text selection & cursor placement',\n    render: function(): React.Node {\n      return (\n        <View>\n          <SelectionExample\n            style={styles.default}\n            value=\"text selection can be changed\"\n          />\n          <SelectionExample\n            multiline\n            style={styles.multiline}\n            value={'multiline text selection\\ncan also be changed'}\n          />\n        </View>\n      );\n    },\n  },\n]: Array<RNTesterExampleModuleItem>);\n"]},"metadata":{},"sourceType":"script"}