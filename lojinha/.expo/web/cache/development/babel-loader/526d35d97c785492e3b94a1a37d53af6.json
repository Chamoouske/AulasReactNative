{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _defineEnumerableProperties = require(\"@babel/runtime/helpers/defineEnumerableProperties\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _findDependencies = _interopRequireDefault(require(\"./findDependencies\"));\n\nvar _findProjectRoot = _interopRequireDefault(require(\"./findProjectRoot\"));\n\nvar _resolveReactNativePath = _interopRequireDefault(require(\"./resolveReactNativePath\"));\n\nvar _findAssets = _interopRequireDefault(require(\"./findAssets\"));\n\nvar _readConfigFromDisk = require(\"./readConfigFromDisk\");\n\nvar _assign = _interopRequireDefault(require(\"../assign\"));\n\nvar _merge = _interopRequireDefault(require(\"../merge\"));\n\nvar _resolveNodeModuleDir = _interopRequireDefault(require(\"./resolveNodeModuleDir\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getDependencyConfig(root, dependencyName, finalConfig, config, userConfig, isPlatform) {\n  return (0, _merge.default)({\n    root: root,\n    name: dependencyName,\n    platforms: Object.keys(finalConfig.platforms).reduce(function (dependency, platform) {\n      var platformConfig = finalConfig.platforms[platform];\n      dependency[platform] = isPlatform || !platformConfig ? null : platformConfig.dependencyConfig(root, config.dependency.platforms[platform]);\n      return dependency;\n    }, {}),\n    assets: (0, _findAssets.default)(root, config.dependency.assets),\n    hooks: config.dependency.hooks,\n    params: config.dependency.params\n  }, userConfig.dependencies[dependencyName] || {});\n}\n\nfunction loadConfig() {\n  var projectRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _findProjectRoot.default)();\n  var lazyProject;\n  var userConfig = (0, _readConfigFromDisk.readConfigFromDisk)(projectRoot);\n  var initialConfig = {\n    root: projectRoot,\n\n    get reactNativePath() {\n      return userConfig.reactNativePath ? _path().default.resolve(projectRoot, userConfig.reactNativePath) : (0, _resolveReactNativePath.default)(projectRoot);\n    },\n\n    dependencies: userConfig.dependencies,\n    commands: userConfig.commands,\n\n    get assets() {\n      return (0, _findAssets.default)(projectRoot, userConfig.assets);\n    },\n\n    platforms: userConfig.platforms,\n\n    get project() {\n      if (lazyProject) {\n        return lazyProject;\n      }\n\n      lazyProject = {};\n\n      for (var platform in finalConfig.platforms) {\n        var platformConfig = finalConfig.platforms[platform];\n\n        if (platformConfig) {\n          lazyProject[platform] = platformConfig.projectConfig(projectRoot, userConfig.project[platform] || {});\n        }\n      }\n\n      return lazyProject;\n    }\n\n  };\n  var finalConfig = Array.from(new Set([].concat(_toConsumableArray(Object.keys(userConfig.dependencies)), _toConsumableArray((0, _findDependencies.default)(projectRoot))))).reduce(function (acc, dependencyName) {\n    var _ref, _mutatorMap;\n\n    var localDependencyRoot = userConfig.dependencies[dependencyName] && userConfig.dependencies[dependencyName].root;\n    var root;\n    var config;\n\n    try {\n      root = localDependencyRoot || (0, _resolveNodeModuleDir.default)(projectRoot, dependencyName);\n      config = (0, _readConfigFromDisk.readDependencyConfigFromDisk)(root);\n    } catch (error) {\n      _cliTools().logger.warn((0, _cliTools().inlineString)(\"\\n          Package \" + _chalk().default.bold(dependencyName) + \" has been ignored because it contains invalid configuration.\\n\\n          Reason: \" + _chalk().default.dim(error.message)));\n\n      return acc;\n    }\n\n    var isPlatform = Object.keys(config.platforms).length > 0;\n    return (0, _assign.default)({}, acc, {\n      dependencies: (0, _assign.default)({}, acc.dependencies, (_ref = {}, _mutatorMap = {}, _mutatorMap[dependencyName] = _mutatorMap[dependencyName] || {}, _mutatorMap[dependencyName].get = function () {\n        return getDependencyConfig(root, dependencyName, finalConfig, config, userConfig, isPlatform);\n      }, _defineEnumerableProperties(_ref, _mutatorMap), _ref)),\n      commands: [].concat(_toConsumableArray(acc.commands), _toConsumableArray(config.commands)),\n      platforms: _objectSpread(_objectSpread({}, acc.platforms), config.platforms)\n    });\n  }, initialConfig);\n  return finalConfig;\n}\n\nvar _default = loadConfig;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/config/index.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_chalk","_cliTools","_findDependencies","_findProjectRoot","_resolveReactNativePath","_findAssets","_readConfigFromDisk","_assign","_merge","_resolveNodeModuleDir","obj","__esModule","getDependencyConfig","root","dependencyName","finalConfig","config","userConfig","isPlatform","name","platforms","keys","reduce","dependency","platform","platformConfig","dependencyConfig","assets","hooks","params","dependencies","loadConfig","projectRoot","lazyProject","readConfigFromDisk","initialConfig","reactNativePath","resolve","commands","project","projectConfig","Array","from","Set","acc","localDependencyRoot","readDependencyConfigFromDisk","error","logger","warn","inlineString","bold","dim","message","length","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _findDependencies = _interopRequireDefault(require(\"./findDependencies\"));\n\nvar _findProjectRoot = _interopRequireDefault(require(\"./findProjectRoot\"));\n\nvar _resolveReactNativePath = _interopRequireDefault(require(\"./resolveReactNativePath\"));\n\nvar _findAssets = _interopRequireDefault(require(\"./findAssets\"));\n\nvar _readConfigFromDisk = require(\"./readConfigFromDisk\");\n\nvar _assign = _interopRequireDefault(require(\"../assign\"));\n\nvar _merge = _interopRequireDefault(require(\"../merge\"));\n\nvar _resolveNodeModuleDir = _interopRequireDefault(require(\"./resolveNodeModuleDir\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getDependencyConfig(root, dependencyName, finalConfig, config, userConfig, isPlatform) {\n  return (0, _merge.default)({\n    root,\n    name: dependencyName,\n    platforms: Object.keys(finalConfig.platforms).reduce((dependency, platform) => {\n      const platformConfig = finalConfig.platforms[platform];\n      dependency[platform] = // Linking platforms is not supported\n      isPlatform || !platformConfig ? null : platformConfig.dependencyConfig(root, config.dependency.platforms[platform]);\n      return dependency;\n    }, {}),\n    assets: (0, _findAssets.default)(root, config.dependency.assets),\n    hooks: config.dependency.hooks,\n    params: config.dependency.params\n  }, userConfig.dependencies[dependencyName] || {});\n}\n/**\n * Loads CLI configuration\n */\n\n\nfunction loadConfig(projectRoot = (0, _findProjectRoot.default)()) {\n  let lazyProject;\n  const userConfig = (0, _readConfigFromDisk.readConfigFromDisk)(projectRoot);\n  const initialConfig = {\n    root: projectRoot,\n\n    get reactNativePath() {\n      return userConfig.reactNativePath ? _path().default.resolve(projectRoot, userConfig.reactNativePath) : (0, _resolveReactNativePath.default)(projectRoot);\n    },\n\n    dependencies: userConfig.dependencies,\n    commands: userConfig.commands,\n\n    get assets() {\n      return (0, _findAssets.default)(projectRoot, userConfig.assets);\n    },\n\n    platforms: userConfig.platforms,\n\n    get project() {\n      if (lazyProject) {\n        return lazyProject;\n      }\n\n      lazyProject = {};\n\n      for (const platform in finalConfig.platforms) {\n        const platformConfig = finalConfig.platforms[platform];\n\n        if (platformConfig) {\n          lazyProject[platform] = platformConfig.projectConfig(projectRoot, userConfig.project[platform] || {});\n        }\n      }\n\n      return lazyProject;\n    }\n\n  };\n  const finalConfig = Array.from(new Set([...Object.keys(userConfig.dependencies), ...(0, _findDependencies.default)(projectRoot)])).reduce((acc, dependencyName) => {\n    const localDependencyRoot = userConfig.dependencies[dependencyName] && userConfig.dependencies[dependencyName].root;\n    let root;\n    let config;\n\n    try {\n      root = localDependencyRoot || (0, _resolveNodeModuleDir.default)(projectRoot, dependencyName);\n      config = (0, _readConfigFromDisk.readDependencyConfigFromDisk)(root);\n    } catch (error) {\n      _cliTools().logger.warn((0, _cliTools().inlineString)(`\n          Package ${_chalk().default.bold(dependencyName)} has been ignored because it contains invalid configuration.\n\n          Reason: ${_chalk().default.dim(error.message)}`));\n\n      return acc;\n    }\n\n    const isPlatform = Object.keys(config.platforms).length > 0;\n    return (0, _assign.default)({}, acc, {\n      dependencies: (0, _assign.default)({}, acc.dependencies, {\n        get [dependencyName]() {\n          return getDependencyConfig(root, dependencyName, finalConfig, config, userConfig, isPlatform);\n        }\n\n      }),\n      commands: [...acc.commands, ...config.commands],\n      platforms: { ...acc.platforms,\n        ...config.platforms\n      }\n    });\n  }, initialConfig);\n  return finalConfig;\n}\n\nvar _default = loadConfig;\nexports.default = _default;\n\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}