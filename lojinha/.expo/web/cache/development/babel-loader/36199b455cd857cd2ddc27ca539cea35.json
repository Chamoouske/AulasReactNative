{"ast":null,"code":"'use strict';\n\nvar NativeTiming = {\n  createTimer: jest.fn(),\n  deleteTimer: jest.fn(),\n  setSendIdleEvents: jest.fn()\n};\nvar warning = jest.fn();\njest.enableAutomock().mock('fbjs/lib/warning', function () {\n  return warning;\n}, {\n  virtual: true\n}).mock('../NativeTiming', function () {\n  return {\n    __esModule: true,\n    default: NativeTiming\n  };\n}).unmock('../JSTimers');\n\nvar JSTimers = require(\"../JSTimers\");\n\ndescribe('JSTimers', function () {\n  var firstArgumentOfTheLastCallTo = function firstArgumentOfTheLastCallTo(func) {\n    return func.mock.calls[func.mock.calls.length - 1][0];\n  };\n\n  beforeEach(function () {\n    global.setTimeout = JSTimers.setTimeout;\n  });\n  it('should call function with setTimeout', function () {\n    var didCall = false;\n    var id = JSTimers.setTimeout(function () {\n      didCall = true;\n    });\n    JSTimers.callTimers([id]);\n    expect(didCall).toBe(true);\n  });\n  it('should call nested setTimeout when cleared', function () {\n    var id1, id2, id3;\n    var callCount = 0;\n    id1 = JSTimers.setTimeout(function () {\n      JSTimers.clearTimeout(id1);\n      id2 = JSTimers.setTimeout(function () {\n        JSTimers.clearTimeout(id2);\n        id3 = JSTimers.setTimeout(function () {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n    expect(callCount).toBe(1);\n  });\n  it('should call nested setImmediate when cleared', function () {\n    var id1, id2, id3;\n    var callCount = 0;\n    id1 = JSTimers.setImmediate(function () {\n      JSTimers.clearImmediate(id1);\n      id2 = JSTimers.setImmediate(function () {\n        JSTimers.clearImmediate(id2);\n        id3 = JSTimers.setImmediate(function () {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n    expect(callCount).toBe(1);\n  });\n  it('should call nested requestAnimationFrame when cleared', function () {\n    var id1, id2, id3;\n    var callCount = 0;\n    id1 = JSTimers.requestAnimationFrame(function () {\n      JSTimers.cancelAnimationFrame(id1);\n      id2 = JSTimers.requestAnimationFrame(function () {\n        JSTimers.cancelAnimationFrame(id2);\n        id3 = JSTimers.requestAnimationFrame(function () {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n    expect(callCount).toBe(1);\n  });\n  it('should call nested setInterval when cleared', function () {\n    var id1, id2, id3;\n    var callCount = 0;\n    id1 = JSTimers.setInterval(function () {\n      JSTimers.clearInterval(id1);\n      id2 = JSTimers.setInterval(function () {\n        JSTimers.clearInterval(id2);\n        id3 = JSTimers.setInterval(function () {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n    expect(callCount).toBe(1);\n  });\n  it('should call function with setInterval', function () {\n    var callback = jest.fn();\n    var id = JSTimers.setInterval(callback);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(1);\n  });\n  it('should call function with setImmediate', function () {\n    var callback = jest.fn();\n    JSTimers.setImmediate(callback);\n    JSTimers.callImmediates();\n    expect(callback).toBeCalledTimes(1);\n  });\n  it('should not call function with clearImmediate', function () {\n    var callback = jest.fn();\n    var id = JSTimers.setImmediate(callback);\n    JSTimers.clearImmediate(id);\n    JSTimers.callImmediates();\n    expect(callback).not.toBeCalled();\n  });\n  it('should call functions in the right order with setImmediate', function () {\n    var count = 0;\n    var firstCalled = null;\n    var secondCalled = null;\n    JSTimers.setImmediate(function () {\n      firstCalled = count++;\n    });\n    JSTimers.setImmediate(function () {\n      secondCalled = count++;\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(0);\n    expect(secondCalled).toBe(1);\n  });\n  it('should call functions in the right order with nested setImmediate', function () {\n    var count = 0;\n    var firstCalled = null;\n    var secondCalled = null;\n    var thirdCalled = null;\n    JSTimers.setImmediate(function () {\n      firstCalled = count++;\n      JSTimers.setImmediate(function () {\n        thirdCalled = count++;\n      });\n      secondCalled = count++;\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(0);\n    expect(secondCalled).toBe(1);\n    expect(thirdCalled).toBe(2);\n  });\n  it('should call nested setImmediate', function () {\n    var firstCalled = false;\n    var secondCalled = false;\n    JSTimers.setImmediate(function () {\n      firstCalled = true;\n      JSTimers.setImmediate(function () {\n        secondCalled = true;\n      });\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(true);\n    expect(secondCalled).toBe(true);\n  });\n  it('should call function with requestAnimationFrame', function () {\n    var callback = jest.fn();\n    var id = JSTimers.requestAnimationFrame(callback);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(1);\n  });\n  it(\"should not call function if we don't callTimers\", function () {\n    var callback = jest.fn();\n    JSTimers.setTimeout(callback, 10);\n    expect(callback).not.toBeCalled();\n    JSTimers.setInterval(callback, 10);\n    expect(callback).not.toBeCalled();\n    JSTimers.requestAnimationFrame(callback);\n    expect(callback).not.toBeCalled();\n  });\n  it('should call setInterval as many times as callTimers is called', function () {\n    var callback = jest.fn();\n    var id = JSTimers.setInterval(callback, 10);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(4);\n  });\n  it(\"should only call the function who's id we pass in\", function () {\n    var firstCalled = false;\n    var secondCalled = false;\n    JSTimers.setTimeout(function () {\n      firstCalled = true;\n    });\n    var secondID = JSTimers.setTimeout(function () {\n      secondCalled = true;\n    });\n    JSTimers.callTimers([secondID]);\n    expect(firstCalled).toBe(false);\n    expect(secondCalled).toBe(true);\n  });\n  it('should work with calling multiple timers', function () {\n    var firstCalled = false;\n    var secondCalled = false;\n    var firstID = JSTimers.setTimeout(function () {\n      firstCalled = true;\n    });\n    var secondID = JSTimers.setTimeout(function () {\n      secondCalled = true;\n    });\n    JSTimers.callTimers([firstID, secondID]);\n    expect(firstCalled).toBe(true);\n    expect(secondCalled).toBe(true);\n  });\n  it('should still execute all callbacks even if one throws', function () {\n    var firstID = JSTimers.setTimeout(function () {\n      throw new Error('error');\n    }, 10);\n    var secondCalled = false;\n    var secondID = JSTimers.setTimeout(function () {\n      secondCalled = true;\n    }, 10);\n    expect(JSTimers.callTimers.bind(null, [firstID, secondID])).toThrow();\n    expect(secondCalled).toBe(true);\n  });\n  it('should clear timers even if callback throws', function () {\n    var timerID = JSTimers.setTimeout(function () {\n      throw new Error('error');\n    }, 10);\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrow('error');\n    JSTimers.callTimers.bind(null, [timerID]);\n  });\n  it('should not warn if callback is called on cancelled timer', function () {\n    var callback = jest.fn();\n    var timerID = JSTimers.setTimeout(callback, 10);\n    JSTimers.clearTimeout(timerID);\n    JSTimers.callTimers([timerID]);\n    expect(callback).not.toBeCalled();\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n  it('should warn when callTimers is called with garbage timer id', function () {\n    JSTimers.callTimers([1337]);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(false);\n  });\n  it('should only call callback once for setTimeout', function () {\n    var callback = jest.fn();\n    var timerID = JSTimers.setTimeout(callback, 10);\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n  it('should only call callback once for requestAnimationFrame', function () {\n    var callback = jest.fn();\n    var timerID = JSTimers.requestAnimationFrame(callback, 10);\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n  it('should re-throw first exception', function () {\n    var timerID1 = JSTimers.setTimeout(function () {\n      throw new Error('first error');\n    });\n    var timerID2 = JSTimers.setTimeout(function () {\n      throw new Error('second error');\n    });\n    expect(JSTimers.callTimers.bind(null, [timerID1, timerID2])).toThrowError('first error');\n  });\n  it('should pass along errors thrown from setImmediate', function () {\n    JSTimers.setImmediate(function () {\n      throw new Error('error within setImmediate');\n    });\n    NativeTiming.createTimer = jest.fn();\n    JSTimers.callImmediates();\n    expect(NativeTiming.createTimer).toBeCalled();\n    var timerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError('error within setImmediate');\n  });\n  it('should throw all errors from setImmediate', function () {\n    JSTimers.setImmediate(function () {\n      throw new Error('first error');\n    });\n    JSTimers.setImmediate(function () {\n      throw new Error('second error');\n    });\n    NativeTiming.createTimer = jest.fn();\n    JSTimers.callImmediates();\n    expect(NativeTiming.createTimer.mock.calls.length).toBe(2);\n    var firstTimerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [firstTimerID])).toThrowError('first error');\n    var secondTimerID = NativeTiming.createTimer.mock.calls[1][0];\n    expect(JSTimers.callTimers.bind(null, [secondTimerID])).toThrowError('second error');\n  });\n  it('should pass along errors thrown from setTimeout', function () {\n    var timerID = JSTimers.setTimeout(function () {\n      throw new Error('error within setTimeout');\n    });\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError('error within setTimeout');\n  });\n  it('should throw all errors from setTimeout', function () {\n    var firstTimerID = JSTimers.setTimeout(function () {\n      throw new Error('first error');\n    });\n    var secondTimerID = JSTimers.setTimeout(function () {\n      throw new Error('second error');\n    });\n    NativeTiming.createTimer = jest.fn();\n    expect(JSTimers.callTimers.bind(null, [firstTimerID, secondTimerID])).toThrowError('first error');\n    expect(NativeTiming.createTimer.mock.calls.length).toBe(1);\n    var thirdTimerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [thirdTimerID])).toThrowError('second error');\n  });\n  it('should pass along errors thrown from setInterval', function () {\n    var timerID = JSTimers.setInterval(function () {\n      throw new Error('error within setInterval');\n    });\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError('error within setInterval');\n  });\n  it('should not call to native when clearing a null timer', function () {\n    var timerID = JSTimers.setTimeout(function () {});\n    JSTimers.clearTimeout(timerID);\n    NativeTiming.deleteTimer = jest.fn();\n    JSTimers.clearTimeout(null);\n    expect(NativeTiming.deleteTimer.mock.calls.length).toBe(0);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Core/Timers/__tests__/JSTimers-test.js"],"names":["NativeTiming","createTimer","jest","fn","deleteTimer","setSendIdleEvents","warning","enableAutomock","mock","virtual","__esModule","default","unmock","JSTimers","require","describe","firstArgumentOfTheLastCallTo","func","calls","length","beforeEach","global","setTimeout","it","didCall","id","callTimers","expect","toBe","id1","id2","id3","callCount","clearTimeout","setImmediate","clearImmediate","requestAnimationFrame","cancelAnimationFrame","setInterval","clearInterval","callback","toBeCalledTimes","callImmediates","not","toBeCalled","count","firstCalled","secondCalled","thirdCalled","secondID","firstID","Error","bind","toThrow","timerID","timerID1","timerID2","toThrowError","firstTimerID","secondTimerID","thirdTimerID"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst NativeTiming = {\n  createTimer: jest.fn(),\n  deleteTimer: jest.fn(),\n  setSendIdleEvents: jest.fn(),\n};\n\nconst warning = jest.fn();\n\njest\n  .enableAutomock()\n  .mock('fbjs/lib/warning', () => warning, {virtual: true})\n  .mock('../NativeTiming', () => ({\n    __esModule: true,\n    default: NativeTiming,\n  }))\n  .unmock('../JSTimers');\n\nconst JSTimers = require('../JSTimers');\n\ndescribe('JSTimers', function() {\n  const firstArgumentOfTheLastCallTo = function(func) {\n    return func.mock.calls[func.mock.calls.length - 1][0];\n  };\n\n  beforeEach(function() {\n    global.setTimeout = JSTimers.setTimeout;\n  });\n\n  it('should call function with setTimeout', function() {\n    let didCall = false;\n    const id = JSTimers.setTimeout(function() {\n      didCall = true;\n    });\n    JSTimers.callTimers([id]);\n    expect(didCall).toBe(true);\n  });\n\n  it('should call nested setTimeout when cleared', function() {\n    let id1, id2, id3;\n    let callCount = 0;\n\n    id1 = JSTimers.setTimeout(function() {\n      JSTimers.clearTimeout(id1);\n      id2 = JSTimers.setTimeout(function() {\n        JSTimers.clearTimeout(id2);\n        id3 = JSTimers.setTimeout(function() {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n\n    expect(callCount).toBe(1);\n  });\n\n  it('should call nested setImmediate when cleared', function() {\n    let id1, id2, id3;\n    let callCount = 0;\n\n    id1 = JSTimers.setImmediate(function() {\n      JSTimers.clearImmediate(id1);\n      id2 = JSTimers.setImmediate(function() {\n        JSTimers.clearImmediate(id2);\n        id3 = JSTimers.setImmediate(function() {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n\n    expect(callCount).toBe(1);\n  });\n\n  it('should call nested requestAnimationFrame when cleared', function() {\n    let id1, id2, id3;\n    let callCount = 0;\n\n    id1 = JSTimers.requestAnimationFrame(function() {\n      JSTimers.cancelAnimationFrame(id1);\n      id2 = JSTimers.requestAnimationFrame(function() {\n        JSTimers.cancelAnimationFrame(id2);\n        id3 = JSTimers.requestAnimationFrame(function() {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n\n    expect(callCount).toBe(1);\n  });\n\n  it('should call nested setInterval when cleared', function() {\n    let id1, id2, id3;\n    let callCount = 0;\n\n    id1 = JSTimers.setInterval(function() {\n      JSTimers.clearInterval(id1);\n      id2 = JSTimers.setInterval(function() {\n        JSTimers.clearInterval(id2);\n        id3 = JSTimers.setInterval(function() {\n          callCount += 1;\n        });\n      });\n    });\n    JSTimers.callTimers([id1]);\n    JSTimers.callTimers([id2]);\n    JSTimers.callTimers([id3]);\n\n    expect(callCount).toBe(1);\n  });\n\n  it('should call function with setInterval', function() {\n    const callback = jest.fn();\n    const id = JSTimers.setInterval(callback);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(1);\n  });\n\n  it('should call function with setImmediate', function() {\n    const callback = jest.fn();\n    JSTimers.setImmediate(callback);\n    JSTimers.callImmediates();\n    expect(callback).toBeCalledTimes(1);\n  });\n\n  it('should not call function with clearImmediate', function() {\n    const callback = jest.fn();\n    const id = JSTimers.setImmediate(callback);\n    JSTimers.clearImmediate(id);\n    JSTimers.callImmediates();\n    expect(callback).not.toBeCalled();\n  });\n\n  it('should call functions in the right order with setImmediate', function() {\n    let count = 0;\n    let firstCalled = null;\n    let secondCalled = null;\n    JSTimers.setImmediate(function() {\n      firstCalled = count++;\n    });\n    JSTimers.setImmediate(function() {\n      secondCalled = count++;\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(0);\n    expect(secondCalled).toBe(1);\n  });\n\n  it('should call functions in the right order with nested setImmediate', function() {\n    let count = 0;\n    let firstCalled = null;\n    let secondCalled = null;\n    let thirdCalled = null;\n    JSTimers.setImmediate(function() {\n      firstCalled = count++;\n      JSTimers.setImmediate(function() {\n        thirdCalled = count++;\n      });\n      secondCalled = count++;\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(0);\n    expect(secondCalled).toBe(1);\n    expect(thirdCalled).toBe(2);\n  });\n\n  it('should call nested setImmediate', function() {\n    let firstCalled = false;\n    let secondCalled = false;\n    JSTimers.setImmediate(function() {\n      firstCalled = true;\n      JSTimers.setImmediate(function() {\n        secondCalled = true;\n      });\n    });\n    JSTimers.callImmediates();\n    expect(firstCalled).toBe(true);\n    expect(secondCalled).toBe(true);\n  });\n\n  it('should call function with requestAnimationFrame', function() {\n    const callback = jest.fn();\n    const id = JSTimers.requestAnimationFrame(callback);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(1);\n  });\n\n  it(\"should not call function if we don't callTimers\", function() {\n    const callback = jest.fn();\n    JSTimers.setTimeout(callback, 10);\n    expect(callback).not.toBeCalled();\n    JSTimers.setInterval(callback, 10);\n    expect(callback).not.toBeCalled();\n    JSTimers.requestAnimationFrame(callback);\n    expect(callback).not.toBeCalled();\n  });\n\n  it('should call setInterval as many times as callTimers is called', function() {\n    const callback = jest.fn();\n    const id = JSTimers.setInterval(callback, 10);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    JSTimers.callTimers([id]);\n    expect(callback).toBeCalledTimes(4);\n  });\n\n  it(\"should only call the function who's id we pass in\", function() {\n    let firstCalled = false;\n    let secondCalled = false;\n    JSTimers.setTimeout(function() {\n      firstCalled = true;\n    });\n    const secondID = JSTimers.setTimeout(function() {\n      secondCalled = true;\n    });\n    JSTimers.callTimers([secondID]);\n    expect(firstCalled).toBe(false);\n    expect(secondCalled).toBe(true);\n  });\n\n  it('should work with calling multiple timers', function() {\n    let firstCalled = false;\n    let secondCalled = false;\n    const firstID = JSTimers.setTimeout(function() {\n      firstCalled = true;\n    });\n    const secondID = JSTimers.setTimeout(function() {\n      secondCalled = true;\n    });\n    JSTimers.callTimers([firstID, secondID]);\n    expect(firstCalled).toBe(true);\n    expect(secondCalled).toBe(true);\n  });\n\n  it('should still execute all callbacks even if one throws', function() {\n    const firstID = JSTimers.setTimeout(function() {\n      throw new Error('error');\n    }, 10);\n    let secondCalled = false;\n    const secondID = JSTimers.setTimeout(function() {\n      secondCalled = true;\n    }, 10);\n    expect(JSTimers.callTimers.bind(null, [firstID, secondID])).toThrow();\n    expect(secondCalled).toBe(true);\n  });\n\n  it('should clear timers even if callback throws', function() {\n    const timerID = JSTimers.setTimeout(function() {\n      throw new Error('error');\n    }, 10);\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrow('error');\n    JSTimers.callTimers.bind(null, [timerID]);\n  });\n\n  it('should not warn if callback is called on cancelled timer', function() {\n    const callback = jest.fn();\n    const timerID = JSTimers.setTimeout(callback, 10);\n    JSTimers.clearTimeout(timerID);\n    JSTimers.callTimers([timerID]);\n    expect(callback).not.toBeCalled();\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n\n  it('should warn when callTimers is called with garbage timer id', function() {\n    JSTimers.callTimers([1337]);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(false);\n  });\n\n  it('should only call callback once for setTimeout', function() {\n    const callback = jest.fn();\n    const timerID = JSTimers.setTimeout(callback, 10);\n    // First time the timer fires, should call callback\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    // Second time it should be ignored\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n\n  it('should only call callback once for requestAnimationFrame', function() {\n    const callback = jest.fn();\n    const timerID = JSTimers.requestAnimationFrame(callback, 10);\n    // First time the timer fires, should call callback\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    // Second time it should be ignored\n    JSTimers.callTimers([timerID]);\n    expect(callback).toBeCalledTimes(1);\n    expect(firstArgumentOfTheLastCallTo(warning)).toBe(true);\n  });\n\n  it('should re-throw first exception', function() {\n    const timerID1 = JSTimers.setTimeout(function() {\n      throw new Error('first error');\n    });\n    const timerID2 = JSTimers.setTimeout(function() {\n      throw new Error('second error');\n    });\n    expect(JSTimers.callTimers.bind(null, [timerID1, timerID2])).toThrowError(\n      'first error',\n    );\n  });\n\n  it('should pass along errors thrown from setImmediate', function() {\n    JSTimers.setImmediate(function() {\n      throw new Error('error within setImmediate');\n    });\n\n    NativeTiming.createTimer = jest.fn();\n    JSTimers.callImmediates();\n\n    // The remaining errors should be called within setTimeout, in case there\n    // are a series of them\n    expect(NativeTiming.createTimer).toBeCalled();\n    const timerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError(\n      'error within setImmediate',\n    );\n  });\n\n  it('should throw all errors from setImmediate', function() {\n    JSTimers.setImmediate(function() {\n      throw new Error('first error');\n    });\n\n    JSTimers.setImmediate(function() {\n      throw new Error('second error');\n    });\n\n    NativeTiming.createTimer = jest.fn();\n    JSTimers.callImmediates();\n\n    expect(NativeTiming.createTimer.mock.calls.length).toBe(2);\n\n    const firstTimerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [firstTimerID])).toThrowError(\n      'first error',\n    );\n\n    const secondTimerID = NativeTiming.createTimer.mock.calls[1][0];\n    expect(JSTimers.callTimers.bind(null, [secondTimerID])).toThrowError(\n      'second error',\n    );\n  });\n\n  it('should pass along errors thrown from setTimeout', function() {\n    const timerID = JSTimers.setTimeout(function() {\n      throw new Error('error within setTimeout');\n    });\n\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError(\n      'error within setTimeout',\n    );\n  });\n\n  it('should throw all errors from setTimeout', function() {\n    const firstTimerID = JSTimers.setTimeout(function() {\n      throw new Error('first error');\n    });\n    const secondTimerID = JSTimers.setTimeout(function() {\n      throw new Error('second error');\n    });\n\n    NativeTiming.createTimer = jest.fn();\n    expect(\n      JSTimers.callTimers.bind(null, [firstTimerID, secondTimerID]),\n    ).toThrowError('first error');\n\n    expect(NativeTiming.createTimer.mock.calls.length).toBe(1);\n    const thirdTimerID = NativeTiming.createTimer.mock.calls[0][0];\n    expect(JSTimers.callTimers.bind(null, [thirdTimerID])).toThrowError(\n      'second error',\n    );\n  });\n\n  it('should pass along errors thrown from setInterval', function() {\n    const timerID = JSTimers.setInterval(function() {\n      throw new Error('error within setInterval');\n    });\n    expect(JSTimers.callTimers.bind(null, [timerID])).toThrowError(\n      'error within setInterval',\n    );\n  });\n\n  it('should not call to native when clearing a null timer', function() {\n    const timerID = JSTimers.setTimeout(() => {});\n    JSTimers.clearTimeout(timerID);\n    NativeTiming.deleteTimer = jest.fn();\n\n    JSTimers.clearTimeout(null);\n    expect(NativeTiming.deleteTimer.mock.calls.length).toBe(0);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}