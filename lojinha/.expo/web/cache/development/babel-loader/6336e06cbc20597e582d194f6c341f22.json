{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction normalizeOptions(config) {\n  var _config$options = config.options,\n      filename = _config$options.filename,\n      cwd = _config$options.cwd,\n      _config$options$filen = _config$options.filenameRelative,\n      filenameRelative = _config$options$filen === void 0 ? typeof filename === \"string\" ? _path().default.relative(cwd, filename) : \"unknown\" : _config$options$filen,\n      _config$options$sourc = _config$options.sourceType,\n      sourceType = _config$options$sourc === void 0 ? \"module\" : _config$options$sourc,\n      inputSourceMap = _config$options.inputSourceMap,\n      _config$options$sourc2 = _config$options.sourceMaps,\n      sourceMaps = _config$options$sourc2 === void 0 ? !!inputSourceMap : _config$options$sourc2,\n      moduleRoot = _config$options.moduleRoot,\n      _config$options$sourc3 = _config$options.sourceRoot,\n      sourceRoot = _config$options$sourc3 === void 0 ? moduleRoot : _config$options$sourc3,\n      _config$options$sourc4 = _config$options.sourceFileName,\n      sourceFileName = _config$options$sourc4 === void 0 ? _path().default.basename(filenameRelative) : _config$options$sourc4,\n      _config$options$comme = _config$options.comments,\n      comments = _config$options$comme === void 0 ? true : _config$options$comme,\n      _config$options$compa = _config$options.compact,\n      compact = _config$options$compa === void 0 ? \"auto\" : _config$options$compa;\n  var opts = config.options;\n\n  var options = _extends({}, opts, {\n    parserOpts: _extends({\n      sourceType: _path().default.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: _extends({\n      filename: filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments: comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact: compact,\n      minified: opts.minified,\n      sourceMaps: sourceMaps,\n      sourceRoot: sourceRoot,\n      sourceFileName: sourceFileName\n    }, opts.generatorOpts)\n  });\n\n  for (var _iterator = _createForOfIteratorHelperLoose(config.passes), _step; !(_step = _iterator()).done;) {\n    var plugins = _step.value;\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(plugins), _step2; !(_step2 = _iterator2()).done;) {\n      var plugin = _step2.value;\n\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/config/node_modules/@babel/core/lib/transformation/normalize-opts.js"],"names":["Object","defineProperty","exports","value","default","normalizeOptions","_path","data","_interopRequireDefault","require","obj","__esModule","config","options","filename","cwd","filenameRelative","relative","sourceType","inputSourceMap","sourceMaps","moduleRoot","sourceRoot","sourceFileName","basename","comments","compact","opts","parserOpts","extname","plugins","generatorOpts","auxiliaryCommentBefore","auxiliaryCommentAfter","retainLines","shouldPrintComment","minified","passes","plugin","manipulateOptions"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normalizeOptions(config) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\" ? _path().default.relative(cwd, filename) : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    moduleRoot,\n    sourceRoot = moduleRoot,\n    sourceFileName = _path().default.basename(filenameRelative),\n    comments = true,\n    compact = \"auto\"\n  } = config.options;\n  const opts = config.options;\n  const options = Object.assign({}, opts, {\n    parserOpts: Object.assign({\n      sourceType: _path().default.extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: Object.assign({\n      filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n      sourceMaps,\n      sourceRoot,\n      sourceFileName\n    }, opts.generatorOpts)\n  });\n\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}"]},"metadata":{},"sourceType":"script"}