{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar android_plugins_1 = require(\"../plugins/android-plugins\");\n\nvar Manifest_1 = require(\"./Manifest\");\n\nexports.withAllowBackup = android_plugins_1.createAndroidManifestPlugin(setAllowBackup, 'withAllowBackup');\n\nfunction getAllowBackup(config) {\n  var _a, _b;\n\n  return (_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.allowBackup) !== null && _b !== void 0 ? _b : true;\n}\n\nexports.getAllowBackup = getAllowBackup;\n\nfunction setAllowBackup(config, androidManifest) {\n  var allowBackup = getAllowBackup(config);\n  var mainApplication = Manifest_1.getMainApplication(androidManifest);\n\n  if (mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication.$) {\n    mainApplication.$['android:allowBackup'] = String(allowBackup);\n  }\n\n  return androidManifest;\n}\n\nexports.setAllowBackup = setAllowBackup;\n\nfunction getAllowBackupFromManifest(androidManifest) {\n  var mainApplication = Manifest_1.getMainApplication(androidManifest);\n\n  if (mainApplication === null || mainApplication === void 0 ? void 0 : mainApplication.$) {\n    return String(mainApplication.$['android:allowBackup']) === 'true';\n  }\n\n  return null;\n}\n\nexports.getAllowBackupFromManifest = getAllowBackupFromManifest;","map":{"version":3,"sources":["../../src/android/AllowBackup.ts"],"names":[],"mappings":";;;;;;AAEA,IAAA,iBAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,UAAA,GAAA,OAAA,cAAA;;AAEa,OAAA,CAAA,eAAA,GAAkB,iBAAA,CAAA,2BAAA,CAA4B,cAA5B,EAA4C,iBAA5C,CAAlB;;AAEb,SAAgB,cAAhB,CAA+B,MAA/B,EAAkE;;;AAGhE,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAO,MAAM,CAAC,OAAd,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,WAAvB,MAAkC,IAAlC,IAAkC,EAAA,KAAA,KAAA,CAAlC,GAAkC,EAAlC,GAAsC,IAAtC;AACD;;AAJD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAMA,SAAgB,cAAhB,CACE,MADF,EAEE,eAFF,EAEkC;AAEhC,MAAM,WAAW,GAAG,cAAc,CAAC,MAAD,CAAlC;AAEA,MAAM,eAAe,GAAG,UAAA,CAAA,kBAAA,CAAmB,eAAnB,CAAxB;;AACA,MAAI,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,CAArB,EAAwB;AACtB,IAAA,eAAe,CAAC,CAAhB,CAAkB,qBAAlB,IAA2C,MAAM,CAAC,WAAD,CAAjD;AACD;;AAED,SAAO,eAAP;AACD;;AAZD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAcA,SAAgB,0BAAhB,CAA2C,eAA3C,EAA2E;AACzE,MAAM,eAAe,GAAG,UAAA,CAAA,kBAAA,CAAmB,eAAnB,CAAxB;;AAEA,MAAI,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,CAArB,EAAwB;AACtB,WAAO,MAAM,CAAC,eAAe,CAAC,CAAhB,CAAkB,qBAAlB,CAAD,CAAN,KAAqD,MAA5D;AACD;;AAED,SAAO,IAAP;AACD;;AARD,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainApplication, StringBoolean } from './Manifest';\n\nexport const withAllowBackup = createAndroidManifestPlugin(setAllowBackup, 'withAllowBackup');\n\nexport function getAllowBackup(config: Pick<ExpoConfig, 'android'>) {\n  // Defaults to true.\n  // https://docs.expo.io/versions/latest/config/app/#allowbackup\n  return config.android?.allowBackup ?? true;\n}\n\nexport function setAllowBackup(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const allowBackup = getAllowBackup(config);\n\n  const mainApplication = getMainApplication(androidManifest);\n  if (mainApplication?.$) {\n    mainApplication.$['android:allowBackup'] = String(allowBackup) as StringBoolean;\n  }\n\n  return androidManifest;\n}\n\nexport function getAllowBackupFromManifest(androidManifest: AndroidManifest): boolean | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.$) {\n    return String(mainApplication.$['android:allowBackup']) === 'true';\n  }\n\n  return null;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}