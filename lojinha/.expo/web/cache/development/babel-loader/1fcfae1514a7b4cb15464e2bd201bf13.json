{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Animated/src/__tests__/Animated-test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TestRenderer from 'react-test-renderer';\nimport * as React from 'react';\njest.mock(\"../../../BatchedBridge/NativeModules\", function () {\n  return {\n    NativeAnimatedModule: {},\n    PlatformConstants: {\n      getConstants: function getConstants() {\n        return {};\n      }\n    }\n  };\n});\n\nvar Animated = require(\"../Animated\");\n\ndescribe('Animated tests', function () {\n  beforeEach(function () {\n    jest.resetModules();\n  });\n  describe('Animated', function () {\n    it('works end to end', function () {\n      var anim = new Animated.Value(0);\n      var callback = jest.fn();\n      var node = new Animated.__PropsOnlyForTests({\n        style: {\n          backgroundColor: 'red',\n          opacity: anim,\n          transform: [{\n            translateX: anim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [100, 200]\n            })\n          }, {\n            scale: anim\n          }],\n          shadowOffset: {\n            width: anim,\n            height: anim\n          }\n        }\n      }, callback);\n      expect(anim.__getChildren().length).toBe(3);\n      expect(node.__getValue()).toEqual({\n        style: {\n          backgroundColor: 'red',\n          opacity: 0,\n          transform: [{\n            translateX: 100\n          }, {\n            scale: 0\n          }],\n          shadowOffset: {\n            width: 0,\n            height: 0\n          }\n        }\n      });\n      anim.setValue(0.5);\n      expect(callback).toBeCalled();\n      expect(node.__getValue()).toEqual({\n        style: {\n          backgroundColor: 'red',\n          opacity: 0.5,\n          transform: [{\n            translateX: 150\n          }, {\n            scale: 0.5\n          }],\n          shadowOffset: {\n            width: 0.5,\n            height: 0.5\n          }\n        }\n      });\n\n      node.__detach();\n\n      expect(anim.__getChildren().length).toBe(0);\n      anim.setValue(1);\n      expect(callback.mock.calls.length).toBe(1);\n    });\n    it('does not detach on updates', function () {\n      var opacity = new Animated.Value(0);\n      opacity.__detach = jest.fn();\n      var root = TestRenderer.create(React.createElement(Animated.View, {\n        style: {\n          opacity: opacity\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }\n      }));\n      expect(opacity.__detach).not.toBeCalled();\n      root.update(React.createElement(Animated.View, {\n        style: {\n          opacity: opacity\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }));\n      expect(opacity.__detach).not.toBeCalled();\n      root.unmount();\n      expect(opacity.__detach).toBeCalled();\n    });\n    it('stops animation when detached', function () {\n      var opacity = new Animated.Value(0);\n      var callback = jest.fn();\n      var root = TestRenderer.create(React.createElement(Animated.View, {\n        style: {\n          opacity: opacity\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 40\n        }\n      }));\n      Animated.timing(opacity, {\n        toValue: 10,\n        duration: 1000,\n        useNativeDriver: false\n      }).start(callback);\n      root.unmount();\n      expect(callback).toBeCalledWith({\n        finished: false\n      });\n    });\n    it('triggers callback when spring is at rest', function () {\n      var anim = new Animated.Value(0);\n      var callback = jest.fn();\n      Animated.spring(anim, {\n        toValue: 0,\n        velocity: 0,\n        useNativeDriver: false\n      }).start(callback);\n      expect(callback).toBeCalled();\n    });\n    it.skip('send toValue when an underdamped spring stops', function () {\n      var anim = new Animated.Value(0);\n      var listener = jest.fn();\n      anim.addListener(listener);\n      Animated.spring(anim, {\n        toValue: 15,\n        useNativeDriver: false\n      }).start();\n      jest.runAllTimers();\n      var lastValue = listener.mock.calls[listener.mock.calls.length - 2][0].value;\n      expect(lastValue).not.toBe(15);\n      expect(lastValue).toBeCloseTo(15);\n      expect(anim.__getValue()).toBe(15);\n    });\n    it('send toValue when a critically damped spring stops', function () {\n      var anim = new Animated.Value(0);\n      var listener = jest.fn();\n      anim.addListener(listener);\n      Animated.spring(anim, {\n        stiffness: 8000,\n        damping: 2000,\n        toValue: 15,\n        useNativeDriver: false\n      }).start();\n      jest.runAllTimers();\n      var lastValue = listener.mock.calls[listener.mock.calls.length - 2][0].value;\n      expect(lastValue).not.toBe(15);\n      expect(lastValue).toBeCloseTo(15);\n      expect(anim.__getValue()).toBe(15);\n    });\n    it('convert to JSON', function () {\n      expect(JSON.stringify(new Animated.Value(10))).toBe('10');\n    });\n    it('bypasses `setNativeProps` in test environments', function () {\n      var opacity = new Animated.Value(0);\n      var testRenderer = TestRenderer.create(React.createElement(Animated.View, {\n        style: {\n          opacity: opacity\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }));\n      expect(testRenderer.toJSON().props.style.opacity).toEqual(0);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      expect(testRenderer.toJSON().props.style.opacity).toEqual(1);\n    });\n    it('warns if `useNativeDriver` is missing', function () {\n      jest.spyOn(console, 'warn').mockImplementationOnce(function () {});\n      Animated.spring(new Animated.Value(0), {\n        toValue: 0,\n        velocity: 0\n      }).start();\n      expect(console.warn).toBeCalledWith('Animated: `useNativeDriver` was not specified. This is a required option and must be explicitly set to `true` or `false`');\n      console.warn.mockRestore();\n    });\n  });\n  describe('Animated Sequence', function () {\n    it('works with an empty sequence', function () {\n      var cb = jest.fn();\n      Animated.sequence([]).start(cb);\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('sequences well', function () {\n      var anim1 = {\n        start: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn()\n      };\n      var cb = jest.fn();\n      var seq = Animated.sequence([anim1, anim2]);\n      expect(anim1.start).not.toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      seq.start(cb);\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      expect(cb).not.toBeCalled();\n      anim1.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(anim2.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n      anim2.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('supports interrupting sequence', function () {\n      var anim1 = {\n        start: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn()\n      };\n      var cb = jest.fn();\n      Animated.sequence([anim1, anim2]).start(cb);\n      anim1.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      expect(cb).toBeCalledWith({\n        finished: false\n      });\n    });\n    it('supports stopping sequence', function () {\n      var anim1 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var cb = jest.fn();\n      var seq = Animated.sequence([anim1, anim2]);\n      seq.start(cb);\n      seq.stop();\n      expect(anim1.stop).toBeCalled();\n      expect(anim2.stop).not.toBeCalled();\n      expect(cb).not.toBeCalled();\n      anim1.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(cb).toBeCalledWith({\n        finished: false\n      });\n    });\n  });\n  describe('Animated Loop', function () {\n    it('loops indefinitely if config not specified', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation);\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n    it('loops indefinitely if iterations is -1', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation, {\n        iterations: -1\n      });\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n    it('loops indefinitely if iterations not specified', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation, {\n        anotherKey: 'value'\n      });\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n    it('loops three times if iterations is 3', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation, {\n        iterations: 3\n      });\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('does not loop if iterations is 1', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation, {\n        iterations: 1\n      });\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('does not animate if iterations is 0', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation, {\n        iterations: 0\n      });\n      expect(animation.start).not.toBeCalled();\n      loop.start(cb);\n      expect(animation.start).not.toBeCalled();\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('supports interrupting an indefinite loop', function () {\n      var animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      Animated.loop(animation).start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).toBeCalledWith({\n        finished: false\n      });\n    });\n    it('supports stopping loop', function () {\n      var animation = {\n        start: jest.fn(),\n        stop: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: function _isUsingNativeDriver() {\n          return false;\n        }\n      };\n      var cb = jest.fn();\n      var loop = Animated.loop(animation);\n      loop.start(cb);\n      loop.stop();\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(animation.stop).toBeCalled();\n      animation.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).toBeCalledWith({\n        finished: false\n      });\n    });\n  });\n  it('does not reset animation in a loop if resetBeforeIteration is false', function () {\n    var animation = {\n      start: jest.fn(),\n      reset: jest.fn(),\n      _isUsingNativeDriver: function _isUsingNativeDriver() {\n        return false;\n      }\n    };\n    var cb = jest.fn();\n    var loop = Animated.loop(animation, {\n      resetBeforeIteration: false\n    });\n    expect(animation.start).not.toBeCalled();\n    loop.start(cb);\n    expect(animation.start).toBeCalled();\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n    animation.start.mock.calls[0][0]({\n      finished: true\n    });\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n    animation.start.mock.calls[0][0]({\n      finished: true\n    });\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n    animation.start.mock.calls[0][0]({\n      finished: true\n    });\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n  });\n  describe('Animated Parallel', function () {\n    it('works with an empty parallel', function () {\n      var cb = jest.fn();\n      Animated.parallel([]).start(cb);\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('works with an empty element in array', function () {\n      var anim1 = {\n        start: jest.fn()\n      };\n      var cb = jest.fn();\n      Animated.parallel([null, anim1]).start(cb);\n      expect(anim1.start).toBeCalled();\n      anim1.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('parellelizes well', function () {\n      var anim1 = {\n        start: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn()\n      };\n      var cb = jest.fn();\n      var par = Animated.parallel([anim1, anim2]);\n      expect(anim1.start).not.toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      par.start(cb);\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n      anim1.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).not.toBeCalled();\n      anim2.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('supports stopping parallel', function () {\n      var anim1 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var cb = jest.fn();\n      var seq = Animated.parallel([anim1, anim2]);\n      seq.start(cb);\n      seq.stop();\n      expect(anim1.stop).toBeCalled();\n      expect(anim2.stop).toBeCalled();\n      expect(cb).not.toBeCalled();\n      anim1.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(cb).not.toBeCalled();\n      anim2.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(cb).toBeCalledWith({\n        finished: false\n      });\n    });\n    it('does not call stop more than once when stopping', function () {\n      var anim1 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var anim2 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var anim3 = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var cb = jest.fn();\n      var seq = Animated.parallel([anim1, anim2, anim3]);\n      seq.start(cb);\n      anim1.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n      anim2.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n      anim3.start.mock.calls[0][0]({\n        finished: false\n      });\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n    });\n  });\n  describe('Animated delays', function () {\n    it('should call anim after delay in sequence', function () {\n      var anim = {\n        start: jest.fn(),\n        stop: jest.fn()\n      };\n      var cb = jest.fn();\n      Animated.sequence([Animated.delay(1000), anim]).start(cb);\n      jest.runAllTimers();\n      expect(anim.start.mock.calls.length).toBe(1);\n      expect(cb).not.toBeCalled();\n      anim.start.mock.calls[0][0]({\n        finished: true\n      });\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('should run stagger to end', function () {\n      var cb = jest.fn();\n      Animated.stagger(1000, [Animated.delay(1000), Animated.delay(1000), Animated.delay(1000)]).start(cb);\n      jest.runAllTimers();\n      expect(cb).toBeCalledWith({\n        finished: true\n      });\n    });\n  });\n  describe('Animated Events', function () {\n    it('should map events', function () {\n      var value = new Animated.Value(0);\n      var handler = Animated.event([null, {\n        state: {\n          foo: value\n        }\n      }], {\n        useNativeDriver: false\n      });\n      handler({\n        bar: 'ignoreBar'\n      }, {\n        state: {\n          baz: 'ignoreBaz',\n          foo: 42\n        }\n      });\n      expect(value.__getValue()).toBe(42);\n    });\n    it('should call listeners', function () {\n      var value = new Animated.Value(0);\n      var listener = jest.fn();\n      var handler = Animated.event([{\n        foo: value\n      }], {\n        listener: listener,\n        useNativeDriver: false\n      });\n      handler({\n        foo: 42\n      });\n      expect(value.__getValue()).toBe(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({\n        foo: 42\n      });\n    });\n    it('should call forked event listeners, with Animated.event() listener', function () {\n      var value = new Animated.Value(0);\n      var listener = jest.fn();\n      var handler = Animated.event([{\n        foo: value\n      }], {\n        listener: listener,\n        useNativeDriver: false\n      });\n      var listener2 = jest.fn();\n      var forkedHandler = Animated.forkEvent(handler, listener2);\n      forkedHandler({\n        foo: 42\n      });\n      expect(value.__getValue()).toBe(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({\n        foo: 42\n      });\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({\n        foo: 42\n      });\n    });\n    it('should call forked event listeners, with js listener', function () {\n      var listener = jest.fn();\n      var listener2 = jest.fn();\n      var forkedHandler = Animated.forkEvent(listener, listener2);\n      forkedHandler({\n        foo: 42\n      });\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({\n        foo: 42\n      });\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({\n        foo: 42\n      });\n    });\n    it('should call forked event listeners, with undefined listener', function () {\n      var listener = undefined;\n      var listener2 = jest.fn();\n      var forkedHandler = Animated.forkEvent(listener, listener2);\n      forkedHandler({\n        foo: 42\n      });\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({\n        foo: 42\n      });\n    });\n  });\n  describe('Animated Interactions', function () {\n    var Animated;\n    var InteractionManager;\n    beforeEach(function () {\n      jest.mock(\"../../../Interaction/InteractionManager\");\n      Animated = require(\"../Animated\");\n      InteractionManager = require(\"../../../Interaction/InteractionManager\");\n    });\n    afterEach(function () {\n      jest.unmock(\"../../../Interaction/InteractionManager\");\n    });\n    it('registers an interaction by default', function () {\n      InteractionManager.createInteractionHandle.mockReturnValue(777);\n      var value = new Animated.Value(0);\n      var callback = jest.fn();\n      Animated.timing(value, {\n        toValue: 100,\n        duration: 100,\n        useNativeDriver: false\n      }).start(callback);\n      jest.runAllTimers();\n      expect(InteractionManager.createInteractionHandle).toBeCalled();\n      expect(InteractionManager.clearInteractionHandle).toBeCalledWith(777);\n      expect(callback).toBeCalledWith({\n        finished: true\n      });\n    });\n    it('does not register an interaction when specified', function () {\n      var value = new Animated.Value(0);\n      var callback = jest.fn();\n      Animated.timing(value, {\n        toValue: 100,\n        duration: 100,\n        isInteraction: false,\n        useNativeDriver: false\n      }).start(callback);\n      jest.runAllTimers();\n      expect(InteractionManager.createInteractionHandle).not.toBeCalled();\n      expect(InteractionManager.clearInteractionHandle).not.toBeCalled();\n      expect(callback).toBeCalledWith({\n        finished: true\n      });\n    });\n  });\n  describe('Animated Tracking', function () {\n    it('should track values', function () {\n      var value1 = new Animated.Value(0);\n      var value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42);\n      value1.setValue(7);\n      expect(value2.__getValue()).toBe(7);\n    });\n    it('should track interpolated values', function () {\n      var value1 = new Animated.Value(0);\n      var value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1.interpolate({\n          inputRange: [0, 2],\n          outputRange: [0, 1]\n        }),\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42 / 2);\n    });\n    it('should stop tracking when animated', function () {\n      var value1 = new Animated.Value(0);\n      var value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42);\n      Animated.timing(value2, {\n        toValue: 7,\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      value1.setValue(1492);\n      expect(value2.__getValue()).toBe(7);\n    });\n  });\n  describe('Animated Vectors', function () {\n    it('should animate vectors', function () {\n      var vec = new Animated.ValueXY();\n      var callback = jest.fn();\n      var node = new Animated.__PropsOnlyForTests({\n        style: _objectSpread({\n          opacity: vec.x.interpolate({\n            inputRange: [0, 42],\n            outputRange: [0.2, 0.8]\n          }),\n          transform: vec.getTranslateTransform()\n        }, vec.getLayout())\n      }, callback);\n      expect(node.__getValue()).toEqual({\n        style: {\n          opacity: 0.2,\n          transform: [{\n            translateX: 0\n          }, {\n            translateY: 0\n          }],\n          left: 0,\n          top: 0\n        }\n      });\n      vec.setValue({\n        x: 42,\n        y: 1492\n      });\n      expect(callback.mock.calls.length).toBe(2);\n      expect(node.__getValue()).toEqual({\n        style: {\n          opacity: 0.8,\n          transform: [{\n            translateX: 42\n          }, {\n            translateY: 1492\n          }],\n          left: 42,\n          top: 1492\n        }\n      });\n\n      node.__detach();\n\n      vec.setValue({\n        x: 1,\n        y: 1\n      });\n      expect(callback.mock.calls.length).toBe(2);\n    });\n    it('should track vectors', function () {\n      var value1 = new Animated.ValueXY();\n      var value2 = new Animated.ValueXY();\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false\n      }).start();\n      value1.setValue({\n        x: 42,\n        y: 1492\n      });\n      expect(value2.__getValue()).toEqual({\n        x: 42,\n        y: 1492\n      });\n      value1.setValue({\n        x: 3,\n        y: 4\n      });\n      expect(value2.__getValue()).toEqual({\n        x: 3,\n        y: 4\n      });\n    });\n    it('should track with springs', function () {\n      var value1 = new Animated.ValueXY();\n      var value2 = new Animated.ValueXY();\n      Animated.spring(value2, {\n        toValue: value1,\n        tension: 3000,\n        friction: 60,\n        useNativeDriver: false\n      }).start();\n      value1.setValue({\n        x: 1,\n        y: 1\n      });\n      jest.runAllTimers();\n      expect(Math.round(value2.__getValue().x)).toEqual(1);\n      expect(Math.round(value2.__getValue().y)).toEqual(1);\n      value1.setValue({\n        x: 2,\n        y: 2\n      });\n      jest.runAllTimers();\n      expect(Math.round(value2.__getValue().x)).toEqual(2);\n      expect(Math.round(value2.__getValue().y)).toEqual(2);\n    });\n  });\n  describe('Animated Listeners', function () {\n    it('should get updates', function () {\n      var value1 = new Animated.Value(0);\n      var listener = jest.fn();\n      var id = value1.addListener(listener);\n      value1.setValue(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({\n        value: 42\n      });\n      expect(value1.__getValue()).toBe(42);\n      value1.setValue(7);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(listener).toBeCalledWith({\n        value: 7\n      });\n      expect(value1.__getValue()).toBe(7);\n      value1.removeListener(id);\n      value1.setValue(1492);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(value1.__getValue()).toBe(1492);\n    });\n    it('should get updates for derived animated nodes', function () {\n      var value1 = new Animated.Value(40);\n      var value2 = new Animated.Value(50);\n      var value3 = new Animated.Value(0);\n      var value4 = Animated.add(value3, Animated.multiply(value1, value2));\n      var callback = jest.fn();\n      var view = new Animated.__PropsOnlyForTests({\n        style: {\n          transform: [{\n            translateX: value4\n          }]\n        }\n      }, callback);\n      var listener = jest.fn();\n      var id = value4.addListener(listener);\n      value3.setValue(137);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({\n        value: 2137\n      });\n      value1.setValue(0);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(listener).toBeCalledWith({\n        value: 137\n      });\n      expect(view.__getValue()).toEqual({\n        style: {\n          transform: [{\n            translateX: 137\n          }]\n        }\n      });\n      value4.removeListener(id);\n      value1.setValue(40);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(value4.__getValue()).toBe(2137);\n    });\n    it('should removeAll', function () {\n      var value1 = new Animated.Value(0);\n      var listener = jest.fn();\n      [1, 2, 3, 4].forEach(function () {\n        return value1.addListener(listener);\n      });\n      value1.setValue(42);\n      expect(listener.mock.calls.length).toBe(4);\n      expect(listener).toBeCalledWith({\n        value: 42\n      });\n      value1.removeAllListeners();\n      value1.setValue(7);\n      expect(listener.mock.calls.length).toBe(4);\n    });\n  });\n  describe('Animated Diff Clamp', function () {\n    it('should get the proper value', function () {\n      var inputValues = [0, 20, 40, 30, 0, -40, -10, -20, 0];\n      var expectedValues = [0, 20, 20, 10, 0, 0, 20, 10, 20];\n      var value = new Animated.Value(0);\n      var diffClampValue = Animated.diffClamp(value, 0, 20);\n\n      for (var i = 0; i < inputValues.length; i++) {\n        value.setValue(inputValues[i]);\n        expect(diffClampValue.__getValue()).toBe(expectedValues[i]);\n      }\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Animated/src/__tests__/Animated-test.js"],"names":["TestRenderer","React","jest","mock","NativeAnimatedModule","PlatformConstants","getConstants","Animated","require","describe","beforeEach","resetModules","it","anim","Value","callback","fn","node","__PropsOnlyForTests","style","backgroundColor","opacity","transform","translateX","interpolate","inputRange","outputRange","scale","shadowOffset","width","height","expect","__getChildren","length","toBe","__getValue","toEqual","setValue","toBeCalled","__detach","calls","root","create","not","update","unmount","timing","toValue","duration","useNativeDriver","start","toBeCalledWith","finished","spring","velocity","skip","listener","addListener","runAllTimers","lastValue","value","toBeCloseTo","stiffness","damping","JSON","stringify","testRenderer","toJSON","props","spyOn","console","mockImplementationOnce","warn","mockRestore","cb","sequence","anim1","anim2","seq","stop","animation","reset","_isUsingNativeDriver","loop","toHaveBeenCalledTimes","iterations","anotherKey","resetBeforeIteration","parallel","par","anim3","delay","stagger","handler","event","state","foo","bar","baz","listener2","forkedHandler","forkEvent","undefined","InteractionManager","afterEach","unmock","createInteractionHandle","mockReturnValue","clearInteractionHandle","isInteraction","value1","value2","vec","ValueXY","x","getTranslateTransform","getLayout","translateY","left","top","y","tension","friction","Math","round","id","removeListener","value3","value4","add","multiply","view","forEach","removeAllListeners","inputValues","expectedValues","diffClampValue","diffClamp","i"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nimport TestRenderer from 'react-test-renderer';\nimport * as React from 'react';\n\njest.mock('../../../BatchedBridge/NativeModules', () => ({\n  NativeAnimatedModule: {},\n  PlatformConstants: {\n    getConstants() {\n      return {};\n    },\n  },\n}));\n\nlet Animated = require('../Animated');\ndescribe('Animated tests', () => {\n  beforeEach(() => {\n    jest.resetModules();\n  });\n\n  describe('Animated', () => {\n    it('works end to end', () => {\n      const anim = new Animated.Value(0);\n\n      const callback = jest.fn();\n\n      const node = new Animated.__PropsOnlyForTests(\n        {\n          style: {\n            backgroundColor: 'red',\n            opacity: anim,\n            transform: [\n              {\n                translateX: anim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [100, 200],\n                }),\n              },\n              {scale: anim},\n            ],\n            shadowOffset: {\n              width: anim,\n              height: anim,\n            },\n          },\n        },\n        callback,\n      );\n\n      expect(anim.__getChildren().length).toBe(3);\n\n      expect(node.__getValue()).toEqual({\n        style: {\n          backgroundColor: 'red',\n          opacity: 0,\n          transform: [{translateX: 100}, {scale: 0}],\n          shadowOffset: {\n            width: 0,\n            height: 0,\n          },\n        },\n      });\n\n      anim.setValue(0.5);\n\n      expect(callback).toBeCalled();\n\n      expect(node.__getValue()).toEqual({\n        style: {\n          backgroundColor: 'red',\n          opacity: 0.5,\n          transform: [{translateX: 150}, {scale: 0.5}],\n          shadowOffset: {\n            width: 0.5,\n            height: 0.5,\n          },\n        },\n      });\n\n      node.__detach();\n      expect(anim.__getChildren().length).toBe(0);\n\n      anim.setValue(1);\n      expect(callback.mock.calls.length).toBe(1);\n    });\n\n    it('does not detach on updates', () => {\n      const opacity = new Animated.Value(0);\n      opacity.__detach = jest.fn();\n\n      const root = TestRenderer.create(<Animated.View style={{opacity}} />);\n      expect(opacity.__detach).not.toBeCalled();\n\n      root.update(<Animated.View style={{opacity}} />);\n      expect(opacity.__detach).not.toBeCalled();\n\n      root.unmount();\n      expect(opacity.__detach).toBeCalled();\n    });\n\n    it('stops animation when detached', () => {\n      const opacity = new Animated.Value(0);\n      const callback = jest.fn();\n\n      const root = TestRenderer.create(<Animated.View style={{opacity}} />);\n\n      Animated.timing(opacity, {\n        toValue: 10,\n        duration: 1000,\n        useNativeDriver: false,\n      }).start(callback);\n\n      root.unmount();\n\n      expect(callback).toBeCalledWith({finished: false});\n    });\n\n    it('triggers callback when spring is at rest', () => {\n      const anim = new Animated.Value(0);\n      const callback = jest.fn();\n      Animated.spring(anim, {\n        toValue: 0,\n        velocity: 0,\n        useNativeDriver: false,\n      }).start(callback);\n      expect(callback).toBeCalled();\n    });\n\n    // This test is flaky and we are asking open source to fix it\n    // https://github.com/facebook/react-native/issues/21517\n    it.skip('send toValue when an underdamped spring stops', () => {\n      const anim = new Animated.Value(0);\n      const listener = jest.fn();\n      anim.addListener(listener);\n      Animated.spring(anim, {toValue: 15, useNativeDriver: false}).start();\n      jest.runAllTimers();\n      const lastValue =\n        listener.mock.calls[listener.mock.calls.length - 2][0].value;\n      expect(lastValue).not.toBe(15);\n      expect(lastValue).toBeCloseTo(15);\n      expect(anim.__getValue()).toBe(15);\n    });\n\n    it('send toValue when a critically damped spring stops', () => {\n      const anim = new Animated.Value(0);\n      const listener = jest.fn();\n      anim.addListener(listener);\n      Animated.spring(anim, {\n        stiffness: 8000,\n        damping: 2000,\n        toValue: 15,\n        useNativeDriver: false,\n      }).start();\n      jest.runAllTimers();\n      const lastValue =\n        listener.mock.calls[listener.mock.calls.length - 2][0].value;\n      expect(lastValue).not.toBe(15);\n      expect(lastValue).toBeCloseTo(15);\n      expect(anim.__getValue()).toBe(15);\n    });\n\n    it('convert to JSON', () => {\n      expect(JSON.stringify(new Animated.Value(10))).toBe('10');\n    });\n\n    it('bypasses `setNativeProps` in test environments', () => {\n      const opacity = new Animated.Value(0);\n\n      const testRenderer = TestRenderer.create(\n        <Animated.View style={{opacity}} />,\n      );\n\n      expect(testRenderer.toJSON().props.style.opacity).toEqual(0);\n\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n\n      expect(testRenderer.toJSON().props.style.opacity).toEqual(1);\n    });\n\n    it('warns if `useNativeDriver` is missing', () => {\n      jest.spyOn(console, 'warn').mockImplementationOnce(() => {});\n\n      Animated.spring(new Animated.Value(0), {\n        toValue: 0,\n        velocity: 0,\n        // useNativeDriver\n      }).start();\n\n      expect(console.warn).toBeCalledWith(\n        'Animated: `useNativeDriver` was not specified. This is a required option and must be explicitly set to `true` or `false`',\n      );\n      console.warn.mockRestore();\n    });\n  });\n\n  describe('Animated Sequence', () => {\n    it('works with an empty sequence', () => {\n      const cb = jest.fn();\n      Animated.sequence([]).start(cb);\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('sequences well', () => {\n      const anim1 = {start: jest.fn()};\n      const anim2 = {start: jest.fn()};\n      const cb = jest.fn();\n\n      const seq = Animated.sequence([anim1, anim2]);\n\n      expect(anim1.start).not.toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n\n      seq.start(cb);\n\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      anim1.start.mock.calls[0][0]({finished: true});\n\n      expect(anim2.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      anim2.start.mock.calls[0][0]({finished: true});\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('supports interrupting sequence', () => {\n      const anim1 = {start: jest.fn()};\n      const anim2 = {start: jest.fn()};\n      const cb = jest.fn();\n\n      Animated.sequence([anim1, anim2]).start(cb);\n\n      anim1.start.mock.calls[0][0]({finished: false});\n\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n      expect(cb).toBeCalledWith({finished: false});\n    });\n\n    it('supports stopping sequence', () => {\n      const anim1 = {start: jest.fn(), stop: jest.fn()};\n      const anim2 = {start: jest.fn(), stop: jest.fn()};\n      const cb = jest.fn();\n\n      const seq = Animated.sequence([anim1, anim2]);\n      seq.start(cb);\n      seq.stop();\n\n      expect(anim1.stop).toBeCalled();\n      expect(anim2.stop).not.toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      anim1.start.mock.calls[0][0]({finished: false});\n\n      expect(cb).toBeCalledWith({finished: false});\n    });\n  });\n\n  describe('Animated Loop', () => {\n    it('loops indefinitely if config not specified', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation);\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 2\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 3\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n\n    it('loops indefinitely if iterations is -1', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation, {iterations: -1});\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 2\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 3\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n\n    it('loops indefinitely if iterations not specified', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation, {anotherKey: 'value'});\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 2\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 3\n      expect(animation.reset).toHaveBeenCalledTimes(4);\n      expect(cb).not.toBeCalled();\n    });\n\n    it('loops three times if iterations is 3', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation, {iterations: 3});\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 2\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 3\n      expect(animation.reset).toHaveBeenCalledTimes(3);\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('does not loop if iterations is 1', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation, {iterations: 1});\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('does not animate if iterations is 0', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation, {iterations: 0});\n\n      expect(animation.start).not.toBeCalled();\n\n      loop.start(cb);\n\n      expect(animation.start).not.toBeCalled();\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('supports interrupting an indefinite loop', () => {\n      const animation = {\n        start: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      Animated.loop(animation).start(cb);\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).not.toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: false}); // Interrupt loop\n      expect(animation.reset).toHaveBeenCalledTimes(2);\n      expect(cb).toBeCalledWith({finished: false});\n    });\n\n    it('supports stopping loop', () => {\n      const animation = {\n        start: jest.fn(),\n        stop: jest.fn(),\n        reset: jest.fn(),\n        _isUsingNativeDriver: () => false,\n      };\n      const cb = jest.fn();\n\n      const loop = Animated.loop(animation);\n      loop.start(cb);\n      loop.stop();\n\n      expect(animation.start).toBeCalled();\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(animation.stop).toBeCalled();\n\n      animation.start.mock.calls[0][0]({finished: false}); // Interrupt loop\n      expect(animation.reset).toHaveBeenCalledTimes(1);\n      expect(cb).toBeCalledWith({finished: false});\n    });\n  });\n\n  it('does not reset animation in a loop if resetBeforeIteration is false', () => {\n    const animation = {\n      start: jest.fn(),\n      reset: jest.fn(),\n      _isUsingNativeDriver: () => false,\n    };\n    const cb = jest.fn();\n\n    const loop = Animated.loop(animation, {resetBeforeIteration: false});\n\n    expect(animation.start).not.toBeCalled();\n\n    loop.start(cb);\n\n    expect(animation.start).toBeCalled();\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n\n    animation.start.mock.calls[0][0]({finished: true}); // End of loop 1\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n\n    animation.start.mock.calls[0][0]({finished: true}); // End of loop 2\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n\n    animation.start.mock.calls[0][0]({finished: true}); // End of loop 3\n    expect(animation.reset).not.toBeCalled();\n    expect(cb).not.toBeCalled();\n  });\n\n  describe('Animated Parallel', () => {\n    it('works with an empty parallel', () => {\n      const cb = jest.fn();\n      Animated.parallel([]).start(cb);\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('works with an empty element in array', () => {\n      const anim1 = {start: jest.fn()};\n      const cb = jest.fn();\n      Animated.parallel([null, anim1]).start(cb);\n\n      expect(anim1.start).toBeCalled();\n      anim1.start.mock.calls[0][0]({finished: true});\n\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('parellelizes well', () => {\n      const anim1 = {start: jest.fn()};\n      const anim2 = {start: jest.fn()};\n      const cb = jest.fn();\n\n      const par = Animated.parallel([anim1, anim2]);\n\n      expect(anim1.start).not.toBeCalled();\n      expect(anim2.start).not.toBeCalled();\n\n      par.start(cb);\n\n      expect(anim1.start).toBeCalled();\n      expect(anim2.start).toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      anim1.start.mock.calls[0][0]({finished: true});\n      expect(cb).not.toBeCalled();\n\n      anim2.start.mock.calls[0][0]({finished: true});\n      expect(cb).toBeCalledWith({finished: true});\n    });\n\n    it('supports stopping parallel', () => {\n      const anim1 = {start: jest.fn(), stop: jest.fn()};\n      const anim2 = {start: jest.fn(), stop: jest.fn()};\n      const cb = jest.fn();\n\n      const seq = Animated.parallel([anim1, anim2]);\n      seq.start(cb);\n      seq.stop();\n\n      expect(anim1.stop).toBeCalled();\n      expect(anim2.stop).toBeCalled();\n      expect(cb).not.toBeCalled();\n\n      anim1.start.mock.calls[0][0]({finished: false});\n      expect(cb).not.toBeCalled();\n\n      anim2.start.mock.calls[0][0]({finished: false});\n      expect(cb).toBeCalledWith({finished: false});\n    });\n\n    it('does not call stop more than once when stopping', () => {\n      const anim1 = {start: jest.fn(), stop: jest.fn()};\n      const anim2 = {start: jest.fn(), stop: jest.fn()};\n      const anim3 = {start: jest.fn(), stop: jest.fn()};\n      const cb = jest.fn();\n\n      const seq = Animated.parallel([anim1, anim2, anim3]);\n      seq.start(cb);\n\n      anim1.start.mock.calls[0][0]({finished: false});\n\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n\n      anim2.start.mock.calls[0][0]({finished: false});\n\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n\n      anim3.start.mock.calls[0][0]({finished: false});\n\n      expect(anim1.stop.mock.calls.length).toBe(0);\n      expect(anim2.stop.mock.calls.length).toBe(1);\n      expect(anim3.stop.mock.calls.length).toBe(1);\n    });\n  });\n\n  describe('Animated delays', () => {\n    it('should call anim after delay in sequence', () => {\n      const anim = {start: jest.fn(), stop: jest.fn()};\n      const cb = jest.fn();\n      Animated.sequence([Animated.delay(1000), anim]).start(cb);\n      jest.runAllTimers();\n      expect(anim.start.mock.calls.length).toBe(1);\n      expect(cb).not.toBeCalled();\n      anim.start.mock.calls[0][0]({finished: true});\n      expect(cb).toBeCalledWith({finished: true});\n    });\n    it('should run stagger to end', () => {\n      const cb = jest.fn();\n      Animated.stagger(1000, [\n        Animated.delay(1000),\n        Animated.delay(1000),\n        Animated.delay(1000),\n      ]).start(cb);\n      jest.runAllTimers();\n      expect(cb).toBeCalledWith({finished: true});\n    });\n  });\n\n  describe('Animated Events', () => {\n    it('should map events', () => {\n      const value = new Animated.Value(0);\n      const handler = Animated.event([null, {state: {foo: value}}], {\n        useNativeDriver: false,\n      });\n      handler({bar: 'ignoreBar'}, {state: {baz: 'ignoreBaz', foo: 42}});\n      expect(value.__getValue()).toBe(42);\n    });\n    it('should call listeners', () => {\n      const value = new Animated.Value(0);\n      const listener = jest.fn();\n      const handler = Animated.event([{foo: value}], {\n        listener,\n        useNativeDriver: false,\n      });\n      handler({foo: 42});\n      expect(value.__getValue()).toBe(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({foo: 42});\n    });\n    it('should call forked event listeners, with Animated.event() listener', () => {\n      const value = new Animated.Value(0);\n      const listener = jest.fn();\n      const handler = Animated.event([{foo: value}], {\n        listener,\n        useNativeDriver: false,\n      });\n      const listener2 = jest.fn();\n      const forkedHandler = Animated.forkEvent(handler, listener2);\n      forkedHandler({foo: 42});\n      expect(value.__getValue()).toBe(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({foo: 42});\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({foo: 42});\n    });\n    it('should call forked event listeners, with js listener', () => {\n      const listener = jest.fn();\n      const listener2 = jest.fn();\n      const forkedHandler = Animated.forkEvent(listener, listener2);\n      forkedHandler({foo: 42});\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({foo: 42});\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({foo: 42});\n    });\n    it('should call forked event listeners, with undefined listener', () => {\n      const listener = undefined;\n      const listener2 = jest.fn();\n      const forkedHandler = Animated.forkEvent(listener, listener2);\n      forkedHandler({foo: 42});\n      expect(listener2.mock.calls.length).toBe(1);\n      expect(listener2).toBeCalledWith({foo: 42});\n    });\n  });\n\n  describe('Animated Interactions', () => {\n    /*eslint-disable no-shadow*/\n    let Animated;\n    /*eslint-enable*/\n    let InteractionManager;\n\n    beforeEach(() => {\n      jest.mock('../../../Interaction/InteractionManager');\n      Animated = require('../Animated');\n      InteractionManager = require('../../../Interaction/InteractionManager');\n    });\n\n    afterEach(() => {\n      jest.unmock('../../../Interaction/InteractionManager');\n    });\n\n    it('registers an interaction by default', () => {\n      InteractionManager.createInteractionHandle.mockReturnValue(777);\n\n      const value = new Animated.Value(0);\n      const callback = jest.fn();\n      Animated.timing(value, {\n        toValue: 100,\n        duration: 100,\n        useNativeDriver: false,\n      }).start(callback);\n      jest.runAllTimers();\n\n      expect(InteractionManager.createInteractionHandle).toBeCalled();\n      expect(InteractionManager.clearInteractionHandle).toBeCalledWith(777);\n      expect(callback).toBeCalledWith({finished: true});\n    });\n\n    it('does not register an interaction when specified', () => {\n      const value = new Animated.Value(0);\n      const callback = jest.fn();\n      Animated.timing(value, {\n        toValue: 100,\n        duration: 100,\n        isInteraction: false,\n        useNativeDriver: false,\n      }).start(callback);\n      jest.runAllTimers();\n\n      expect(InteractionManager.createInteractionHandle).not.toBeCalled();\n      expect(InteractionManager.clearInteractionHandle).not.toBeCalled();\n      expect(callback).toBeCalledWith({finished: true});\n    });\n  });\n\n  describe('Animated Tracking', () => {\n    it('should track values', () => {\n      const value1 = new Animated.Value(0);\n      const value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42);\n      value1.setValue(7);\n      expect(value2.__getValue()).toBe(7);\n    });\n\n    it('should track interpolated values', () => {\n      const value1 = new Animated.Value(0);\n      const value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1.interpolate({\n          inputRange: [0, 2],\n          outputRange: [0, 1],\n        }),\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42 / 2);\n    });\n\n    it('should stop tracking when animated', () => {\n      const value1 = new Animated.Value(0);\n      const value2 = new Animated.Value(0);\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue(42);\n      expect(value2.__getValue()).toBe(42);\n      Animated.timing(value2, {\n        toValue: 7,\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue(1492);\n      expect(value2.__getValue()).toBe(7);\n    });\n  });\n\n  describe('Animated Vectors', () => {\n    it('should animate vectors', () => {\n      const vec = new Animated.ValueXY();\n\n      const callback = jest.fn();\n\n      const node = new Animated.__PropsOnlyForTests(\n        {\n          style: {\n            opacity: vec.x.interpolate({\n              inputRange: [0, 42],\n              outputRange: [0.2, 0.8],\n            }),\n            transform: vec.getTranslateTransform(),\n            ...vec.getLayout(),\n          },\n        },\n        callback,\n      );\n\n      expect(node.__getValue()).toEqual({\n        style: {\n          opacity: 0.2,\n          transform: [{translateX: 0}, {translateY: 0}],\n          left: 0,\n          top: 0,\n        },\n      });\n\n      vec.setValue({x: 42, y: 1492});\n\n      expect(callback.mock.calls.length).toBe(2); // once each for x, y\n\n      expect(node.__getValue()).toEqual({\n        style: {\n          opacity: 0.8,\n          transform: [{translateX: 42}, {translateY: 1492}],\n          left: 42,\n          top: 1492,\n        },\n      });\n\n      node.__detach();\n\n      vec.setValue({x: 1, y: 1});\n      expect(callback.mock.calls.length).toBe(2);\n    });\n\n    it('should track vectors', () => {\n      const value1 = new Animated.ValueXY();\n      const value2 = new Animated.ValueXY();\n      Animated.timing(value2, {\n        toValue: value1,\n        duration: 0,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue({x: 42, y: 1492});\n      expect(value2.__getValue()).toEqual({x: 42, y: 1492});\n\n      // Make sure tracking keeps working (see stopTogether in ParallelConfig used\n      // by maybeVectorAnim).\n      value1.setValue({x: 3, y: 4});\n      expect(value2.__getValue()).toEqual({x: 3, y: 4});\n    });\n\n    it('should track with springs', () => {\n      const value1 = new Animated.ValueXY();\n      const value2 = new Animated.ValueXY();\n      Animated.spring(value2, {\n        toValue: value1,\n        tension: 3000, // faster spring for faster test\n        friction: 60,\n        useNativeDriver: false,\n      }).start();\n      value1.setValue({x: 1, y: 1});\n      jest.runAllTimers();\n      expect(Math.round(value2.__getValue().x)).toEqual(1);\n      expect(Math.round(value2.__getValue().y)).toEqual(1);\n      value1.setValue({x: 2, y: 2});\n      jest.runAllTimers();\n      expect(Math.round(value2.__getValue().x)).toEqual(2);\n      expect(Math.round(value2.__getValue().y)).toEqual(2);\n    });\n  });\n\n  describe('Animated Listeners', () => {\n    it('should get updates', () => {\n      const value1 = new Animated.Value(0);\n      const listener = jest.fn();\n      const id = value1.addListener(listener);\n      value1.setValue(42);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({value: 42});\n      expect(value1.__getValue()).toBe(42);\n      value1.setValue(7);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(listener).toBeCalledWith({value: 7});\n      expect(value1.__getValue()).toBe(7);\n      value1.removeListener(id);\n      value1.setValue(1492);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(value1.__getValue()).toBe(1492);\n    });\n\n    it('should get updates for derived animated nodes', () => {\n      const value1 = new Animated.Value(40);\n      const value2 = new Animated.Value(50);\n      const value3 = new Animated.Value(0);\n      const value4 = Animated.add(value3, Animated.multiply(value1, value2));\n      const callback = jest.fn();\n      const view = new Animated.__PropsOnlyForTests(\n        {\n          style: {\n            transform: [\n              {\n                translateX: value4,\n              },\n            ],\n          },\n        },\n        callback,\n      );\n      const listener = jest.fn();\n      const id = value4.addListener(listener);\n      value3.setValue(137);\n      expect(listener.mock.calls.length).toBe(1);\n      expect(listener).toBeCalledWith({value: 2137});\n      value1.setValue(0);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(listener).toBeCalledWith({value: 137});\n      expect(view.__getValue()).toEqual({\n        style: {\n          transform: [\n            {\n              translateX: 137,\n            },\n          ],\n        },\n      });\n      value4.removeListener(id);\n      value1.setValue(40);\n      expect(listener.mock.calls.length).toBe(2);\n      expect(value4.__getValue()).toBe(2137);\n    });\n\n    it('should removeAll', () => {\n      const value1 = new Animated.Value(0);\n      const listener = jest.fn();\n      [1, 2, 3, 4].forEach(() => value1.addListener(listener));\n      value1.setValue(42);\n      expect(listener.mock.calls.length).toBe(4);\n      expect(listener).toBeCalledWith({value: 42});\n      value1.removeAllListeners();\n      value1.setValue(7);\n      expect(listener.mock.calls.length).toBe(4);\n    });\n  });\n\n  describe('Animated Diff Clamp', () => {\n    it('should get the proper value', () => {\n      const inputValues = [0, 20, 40, 30, 0, -40, -10, -20, 0];\n      const expectedValues = [0, 20, 20, 10, 0, 0, 20, 10, 20];\n      const value = new Animated.Value(0);\n      const diffClampValue = Animated.diffClamp(value, 0, 20);\n      for (let i = 0; i < inputValues.length; i++) {\n        value.setValue(inputValues[i]);\n        expect(diffClampValue.__getValue()).toBe(expectedValues[i]);\n      }\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"module"}