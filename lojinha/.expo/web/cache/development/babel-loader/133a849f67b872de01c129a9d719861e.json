{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/PickerAndroidTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar Picker = require(\"react-native-web/dist/exports/Picker\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar RecordingModule = NativeModules.Recording;\nvar Item = Picker.Item;\nvar appInstance;\n\nvar PickerAndroidTestApp = function (_React$Component) {\n  _inherits(PickerAndroidTestApp, _React$Component);\n\n  var _super = _createSuper(PickerAndroidTestApp);\n\n  function PickerAndroidTestApp() {\n    var _this;\n\n    _classCallCheck(this, PickerAndroidTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: 1,\n      mode: 'dropdown',\n      style: {}\n    };\n\n    _this.onValueChange = function (value) {\n      _this.setState({\n        selected: value\n      });\n\n      RecordingModule.recordSelection(value);\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerAndroidTestApp, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      appInstance = this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        collapsable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(Picker, {\n        mode: \"dialog\",\n        prompt: \"prompt\",\n        style: this.state.style,\n        selectedValue: this.state.selected,\n        onValueChange: this.onValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(Item, {\n        label: \"item1\",\n        color: \"#ff0000\",\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item2\",\n        color: \"#00ff00\",\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item3\",\n        color: \"#0000ff\",\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })), React.createElement(Picker, {\n        mode: this.state.mode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(Item, {\n        label: \"item1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      })), React.createElement(Picker, {\n        enabled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(Item, {\n        label: \"item1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      })), React.createElement(Picker, {\n        mode: \"dropdown\",\n        selectedValue: this.state.selected,\n        onValueChange: this.onValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(Item, {\n        label: \"item in sync 1\",\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item in sync 2\",\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), React.createElement(Item, {\n        label: \"item in sync 3\",\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return PickerAndroidTestApp;\n}(React.Component);\n\nvar PickerAndroidTestModule = {\n  PickerAndroidTestApp: PickerAndroidTestApp,\n  selectItem: function selectItem(value) {\n    appInstance.setState({\n      selected: value\n    });\n  },\n  setMode: function setMode(mode) {\n    appInstance.setState({\n      mode: mode\n    });\n  },\n  setPrimaryColor: function setPrimaryColor(color) {\n    appInstance.setState({\n      style: {\n        color: color\n      }\n    });\n  }\n};\nBatchedBridge.registerCallableModule('PickerAndroidTestModule', PickerAndroidTestModule);\nmodule.exports = PickerAndroidTestModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/PickerAndroidTestModule.js"],"names":["React","require","BatchedBridge","RecordingModule","NativeModules","Recording","Item","Picker","appInstance","PickerAndroidTestApp","state","selected","mode","style","onValueChange","value","setState","recordSelection","Component","PickerAndroidTestModule","selectItem","setMode","setPrimaryColor","color","registerCallableModule","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {NativeModules, Picker, View} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nconst {Recording: RecordingModule} = NativeModules;\nconst Item = Picker.Item;\n\nlet appInstance;\n\nclass PickerAndroidTestApp extends React.Component {\n  state = {\n    selected: 1,\n    mode: 'dropdown',\n    style: {},\n  };\n\n  UNSAFE_componentWillMount() {\n    appInstance = this;\n  }\n\n  render() {\n    return (\n      <View collapsable={false}>\n        <Picker\n          mode=\"dialog\"\n          prompt=\"prompt\"\n          style={this.state.style}\n          selectedValue={this.state.selected}\n          onValueChange={this.onValueChange}>\n          <Item label=\"item1\" color=\"#ff0000\" value={0} />\n          <Item label=\"item2\" color=\"#00ff00\" value={1} />\n          <Item label=\"item3\" color=\"#0000ff\" value={2} />\n        </Picker>\n        <Picker mode={this.state.mode}>\n          <Item label=\"item1\" />\n          <Item label=\"item2\" />\n        </Picker>\n        <Picker enabled={false}>\n          <Item label=\"item1\" />\n          <Item label=\"item2\" />\n        </Picker>\n        <Picker\n          mode=\"dropdown\"\n          selectedValue={this.state.selected}\n          onValueChange={this.onValueChange}>\n          <Item label=\"item in sync 1\" value={0} />\n          <Item label=\"item in sync 2\" value={1} />\n          <Item label=\"item in sync 3\" value={2} />\n        </Picker>\n      </View>\n    );\n  }\n\n  onValueChange = value => {\n    this.setState({selected: value});\n    RecordingModule.recordSelection(value);\n  };\n}\n\nconst PickerAndroidTestModule = {\n  PickerAndroidTestApp: PickerAndroidTestApp,\n  selectItem: function(value) {\n    appInstance.setState({selected: value});\n  },\n  setMode: function(mode) {\n    appInstance.setState({mode: mode});\n  },\n  setPrimaryColor: function(color) {\n    appInstance.setState({style: {color}});\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'PickerAndroidTestModule',\n  PickerAndroidTestModule,\n);\n\nmodule.exports = PickerAndroidTestModule;\n"]},"metadata":{},"sourceType":"script"}