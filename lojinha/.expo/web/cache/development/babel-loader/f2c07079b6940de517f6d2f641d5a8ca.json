{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/PushNotificationIOS/PushNotificationIOSExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar DeviceEventEmitter = require(\"react-native-web/dist/exports/DeviceEventEmitter\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Button = function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableHighlight, {\n        underlayColor: 'white',\n        style: styles.button,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, this.props.label));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nvar NotificationExample = function (_React$Component2) {\n  _inherits(NotificationExample, _React$Component2);\n\n  var _super2 = _createSuper(NotificationExample);\n\n  function NotificationExample() {\n    _classCallCheck(this, NotificationExample);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(NotificationExample, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      PushNotificationIOS.addEventListener('register', this._onRegistered);\n      PushNotificationIOS.addEventListener('registrationError', this._onRegistrationError);\n      PushNotificationIOS.addEventListener('notification', this._onRemoteNotification);\n      PushNotificationIOS.addEventListener('localNotification', this._onLocalNotification);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PushNotificationIOS.removeEventListener('register', this._onRegistered);\n      PushNotificationIOS.removeEventListener('registrationError', this._onRegistrationError);\n      PushNotificationIOS.removeEventListener('notification', this._onRemoteNotification);\n      PushNotificationIOS.removeEventListener('localNotification', this._onLocalNotification);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        onPress: this._sendNotification,\n        label: \"Send fake notification\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: this._sendLocalNotification,\n        label: \"Send fake local notification\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_sendNotification\",\n    value: function _sendNotification() {\n      DeviceEventEmitter.emit('remoteNotificationReceived', {\n        remote: true,\n        aps: {\n          alert: 'Sample notification',\n          badge: '+1',\n          sound: 'default',\n          category: 'REACT_NATIVE',\n          'content-available': 1\n        }\n      });\n    }\n  }, {\n    key: \"_sendLocalNotification\",\n    value: function _sendLocalNotification() {\n      DeviceEventEmitter.emit('localNotificationReceived', {\n        aps: {\n          alert: 'Sample local notification',\n          badge: '+1',\n          sound: 'default',\n          category: 'REACT_NATIVE'\n        }\n      });\n    }\n  }, {\n    key: \"_onRegistered\",\n    value: function _onRegistered(deviceToken) {\n      Alert.alert('Registered For Remote Push', \"Device Token: \" + deviceToken, [{\n        text: 'Dismiss',\n        onPress: null\n      }]);\n    }\n  }, {\n    key: \"_onRegistrationError\",\n    value: function _onRegistrationError(error) {\n      Alert.alert('Failed To Register For Remote Push', \"Error (\" + error.code + \"): \" + error.message, [{\n        text: 'Dismiss',\n        onPress: null\n      }]);\n    }\n  }, {\n    key: \"_onRemoteNotification\",\n    value: function _onRemoteNotification(notification) {\n      var result = \"Message: \" + notification.getMessage() + \";\\n\\n      badge: \" + notification.getBadgeCount() + \";\\n\\n      sound: \" + notification.getSound() + \";\\n\\n      category: \" + notification.getCategory() + \";\\n\\n      content-available: \" + notification.getContentAvailable() + \".\";\n      Alert.alert('Push Notification Received', result, [{\n        text: 'Dismiss',\n        onPress: null\n      }]);\n    }\n  }, {\n    key: \"_onLocalNotification\",\n    value: function _onLocalNotification(notification) {\n      Alert.alert('Local Notification Received', 'Alert message: ' + notification.getMessage(), [{\n        text: 'Dismiss',\n        onPress: null\n      }]);\n    }\n  }]);\n\n  return NotificationExample;\n}(React.Component);\n\nvar NotificationPermissionExample = function (_React$Component3) {\n  _inherits(NotificationPermissionExample, _React$Component3);\n\n  var _super3 = _createSuper(NotificationPermissionExample);\n\n  function NotificationPermissionExample(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationPermissionExample);\n\n    _this = _super3.call(this, props);\n\n    _this._requestPermissions = function () {\n      PushNotificationIOS.requestPermissions().then(function (onFulfill) {\n        _this._showAlert('Successfully requested permissions -- ' + 'Alert: ' + onFulfill.alert.toString() + ', Badge: ' + onFulfill.badge.toString() + ', Sound: ' + onFulfill.sound.toString());\n\n        _this._checkPermissions();\n      }, function (onReject) {\n        _this._showAlert('Error requesting permissions');\n\n        _this._checkPermissions();\n      });\n    };\n\n    _this._checkPermissions = function () {\n      PushNotificationIOS.checkPermissions(function (permissions) {\n        _this.setState({\n          permissions: permissions\n        });\n      });\n    };\n\n    _this.state = {\n      permissions: null\n    };\n    return _this;\n  }\n\n  _createClass(NotificationPermissionExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        onPress: this._requestPermissions,\n        label: \"Request Notifications (Should Display Alert)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: this._checkPermissions,\n        label: \"Check permissions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, JSON.stringify(this.state.permissions)));\n    }\n  }, {\n    key: \"_showAlert\",\n    value: function _showAlert(text) {\n      Alert.alert('Notification Permission', text, [{\n        text: 'Dismiss',\n        onPress: null\n      }]);\n    }\n  }]);\n\n  return NotificationPermissionExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  button: {\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonLabel: {\n    color: 'blue'\n  }\n});\nexports.title = 'PushNotificationIOS';\nexports.description = 'Apple PushNotification and badge value';\nexports.examples = [{\n  title: 'Notifications Permissions',\n  render: function render() {\n    return React.createElement(NotificationPermissionExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Push Notifications',\n  render: function render() {\n    return React.createElement(NotificationExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Badge Number',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return PushNotificationIOS.setApplicationIconBadgeNumber(42);\n      },\n      label: \"Set app's icon badge to 42\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      onPress: function onPress() {\n        return PushNotificationIOS.setApplicationIconBadgeNumber(0);\n      },\n      label: \"Clear app's icon badge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }));\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/PushNotificationIOS/PushNotificationIOSExample.js"],"names":["React","require","Button","styles","button","props","onPress","buttonLabel","label","Component","NotificationExample","PushNotificationIOS","addEventListener","_onRegistered","_onRegistrationError","_onRemoteNotification","_onLocalNotification","removeEventListener","_sendNotification","_sendLocalNotification","DeviceEventEmitter","emit","remote","aps","alert","badge","sound","category","deviceToken","Alert","text","error","code","message","notification","result","getMessage","getBadgeCount","getSound","getCategory","getContentAvailable","NotificationPermissionExample","_requestPermissions","requestPermissions","then","onFulfill","_showAlert","toString","_checkPermissions","onReject","checkPermissions","permissions","setState","state","textAlign","JSON","stringify","StyleSheet","create","padding","alignItems","justifyContent","color","exports","title","description","examples","render","setApplicationIconBadgeNumber"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  Alert,\n  DeviceEventEmitter,\n  PushNotificationIOS,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View,\n} = require('react-native');\n\nclass Button extends React.Component<$FlowFixMeProps> {\n  render() {\n    return (\n      <TouchableHighlight\n        underlayColor={'white'}\n        style={styles.button}\n        onPress={this.props.onPress}>\n        <Text style={styles.buttonLabel}>{this.props.label}</Text>\n      </TouchableHighlight>\n    );\n  }\n}\n\nclass NotificationExample extends React.Component<{...}> {\n  UNSAFE_componentWillMount() {\n    PushNotificationIOS.addEventListener('register', this._onRegistered);\n    PushNotificationIOS.addEventListener(\n      'registrationError',\n      this._onRegistrationError,\n    );\n    PushNotificationIOS.addEventListener(\n      'notification',\n      this._onRemoteNotification,\n    );\n    PushNotificationIOS.addEventListener(\n      'localNotification',\n      this._onLocalNotification,\n    );\n  }\n\n  componentWillUnmount() {\n    PushNotificationIOS.removeEventListener('register', this._onRegistered);\n    PushNotificationIOS.removeEventListener(\n      'registrationError',\n      this._onRegistrationError,\n    );\n    PushNotificationIOS.removeEventListener(\n      'notification',\n      this._onRemoteNotification,\n    );\n    PushNotificationIOS.removeEventListener(\n      'localNotification',\n      this._onLocalNotification,\n    );\n  }\n\n  render() {\n    return (\n      <View>\n        <Button\n          onPress={this._sendNotification}\n          label=\"Send fake notification\"\n        />\n\n        <Button\n          onPress={this._sendLocalNotification}\n          label=\"Send fake local notification\"\n        />\n      </View>\n    );\n  }\n\n  _sendNotification() {\n    DeviceEventEmitter.emit('remoteNotificationReceived', {\n      remote: true,\n      aps: {\n        alert: 'Sample notification',\n        badge: '+1',\n        sound: 'default',\n        category: 'REACT_NATIVE',\n        'content-available': 1,\n      },\n    });\n  }\n\n  _sendLocalNotification() {\n    DeviceEventEmitter.emit('localNotificationReceived', {\n      aps: {\n        alert: 'Sample local notification',\n        badge: '+1',\n        sound: 'default',\n        category: 'REACT_NATIVE',\n      },\n    });\n  }\n\n  _onRegistered(deviceToken) {\n    Alert.alert('Registered For Remote Push', `Device Token: ${deviceToken}`, [\n      {\n        text: 'Dismiss',\n        onPress: null,\n      },\n    ]);\n  }\n\n  _onRegistrationError(error) {\n    Alert.alert(\n      'Failed To Register For Remote Push',\n      `Error (${error.code}): ${error.message}`,\n      [\n        {\n          text: 'Dismiss',\n          onPress: null,\n        },\n      ],\n    );\n  }\n\n  _onRemoteNotification(notification) {\n    const result = `Message: ${notification.getMessage()};\\n\n      badge: ${notification.getBadgeCount()};\\n\n      sound: ${notification.getSound()};\\n\n      category: ${notification.getCategory()};\\n\n      content-available: ${notification.getContentAvailable()}.`;\n\n    Alert.alert('Push Notification Received', result, [\n      {\n        text: 'Dismiss',\n        onPress: null,\n      },\n    ]);\n  }\n\n  _onLocalNotification(notification) {\n    Alert.alert(\n      'Local Notification Received',\n      'Alert message: ' + notification.getMessage(),\n      [\n        {\n          text: 'Dismiss',\n          onPress: null,\n        },\n      ],\n    );\n  }\n}\n\nclass NotificationPermissionExample extends React.Component<\n  $FlowFixMeProps,\n  any,\n> {\n  constructor(props) {\n    super(props);\n    this.state = {permissions: null};\n  }\n\n  render() {\n    return (\n      <View>\n        <Button\n          onPress={this._requestPermissions}\n          label=\"Request Notifications (Should Display Alert)\"\n        />\n        <Button onPress={this._checkPermissions} label=\"Check permissions\" />\n        <Text style={{textAlign: 'center'}}>\n          {JSON.stringify(this.state.permissions)}\n        </Text>\n      </View>\n    );\n  }\n\n  _requestPermissions = () => {\n    PushNotificationIOS.requestPermissions().then(\n      onFulfill => {\n        this._showAlert(\n          'Successfully requested permissions -- ' +\n            'Alert: ' +\n            onFulfill.alert.toString() +\n            ', Badge: ' +\n            onFulfill.badge.toString() +\n            ', Sound: ' +\n            onFulfill.sound.toString(),\n        );\n        this._checkPermissions();\n      },\n      (onReject?) => {\n        this._showAlert('Error requesting permissions');\n        this._checkPermissions();\n      },\n    );\n  };\n\n  _checkPermissions = () => {\n    PushNotificationIOS.checkPermissions(permissions => {\n      this.setState({permissions});\n    });\n  };\n\n  _showAlert(text) {\n    Alert.alert('Notification Permission', text, [\n      {\n        text: 'Dismiss',\n        onPress: null,\n      },\n    ]);\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonLabel: {\n    color: 'blue',\n  },\n});\n\nexports.title = 'PushNotificationIOS';\nexports.description = 'Apple PushNotification and badge value';\nexports.examples = [\n  {\n    title: 'Notifications Permissions',\n    render(): React.Element<any> {\n      return <NotificationPermissionExample />;\n    },\n  },\n  {\n    title: 'Push Notifications',\n    render(): React.Element<any> {\n      return <NotificationExample />;\n    },\n  },\n  {\n    title: 'Badge Number',\n    render(): React.Element<any> {\n      return (\n        <View>\n          <Button\n            onPress={() =>\n              PushNotificationIOS.setApplicationIconBadgeNumber(42)\n            }\n            label=\"Set app's icon badge to 42\"\n          />\n          <Button\n            onPress={() => PushNotificationIOS.setApplicationIconBadgeNumber(0)}\n            label=\"Clear app's icon badge\"\n          />\n        </View>\n      );\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}