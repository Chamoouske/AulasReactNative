{"ast":null,"code":"'use strict';","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Types/CodegenTypes.js"],"names":[],"mappings":"AAUA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {SyntheticEvent} from './CoreEventTypes';\n\n// Event types\n// We're not using the PaperName, it is only used to codegen view config settings\n\nexport type BubblingEventHandler<\n  T,\n  PaperName: string | empty = empty, // eslint-disable-line no-unused-vars\n> = (event: SyntheticEvent<T>) => void | Promise<void>;\nexport type DirectEventHandler<\n  T,\n  PaperName: string | empty = empty, // eslint-disable-line no-unused-vars\n> = (event: SyntheticEvent<T>) => void | Promise<void>;\n\n// Prop types\nexport type Double = number;\nexport type Float = number;\nexport type Int32 = number;\n\ntype DefaultTypes = number | boolean | string | $ReadOnlyArray<string>;\n// Default handling, ignore the unused value\n// we're only using it for type checking\n//\n// TODO: (rickhanlonii) T44881457 If a default is provided, it should always be optional\n//  but that is currently not supported in the codegen since we require a default\n//\n// eslint-disable-next-line no-unused-vars\nexport type WithDefault<Type: DefaultTypes, Value: ?Type | string> = ?Type;\n"]},"metadata":{},"sourceType":"script"}