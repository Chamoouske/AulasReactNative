{"ast":null,"code":"'use strict';\n\ndescribe('logError', function () {\n  var logError = require(\"../logError\");\n\n  it('logs error messages to the console', function () {\n    console.error.apply = jest.fn();\n    logError('This is a log message');\n    expect(console.error.apply).toHaveBeenCalledWith(console, ['This is a log message']);\n  });\n  it('logs error messages with multiple arguments to the console', function () {\n    console.error.apply = jest.fn();\n    var data = 'log';\n    logError('This is a', data, 'message');\n    expect(console.error.apply).toHaveBeenCalledWith(console, ['This is a', 'log', 'message']);\n  });\n  it('logs errors to the console', function () {\n    console.error = jest.fn();\n    logError(new Error('The error message'));\n    expect(console.error.mock.calls[0][0]).toContain('Error: \"The error message\".  Stack:');\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/logError-test.js"],"names":["describe","logError","require","it","console","error","apply","jest","fn","expect","toHaveBeenCalledWith","data","Error","mock","calls","toContain"],"mappings":"AAUA;;AAEAA,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzB,MAAMC,QAAQ,GAAGC,OAAO,eAAxB;;AAEAC,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7CC,IAAAA,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBC,IAAI,CAACC,EAAL,EAAtB;AAEAP,IAAAA,QAAQ,CAAC,uBAAD,CAAR;AAEAQ,IAAAA,MAAM,CAACL,OAAO,CAACC,KAAR,CAAcC,KAAf,CAAN,CAA4BI,oBAA5B,CAAiDN,OAAjD,EAA0D,CACxD,uBADwD,CAA1D;AAGD,GARC,CAAF;AAUAD,EAAAA,EAAE,CAAC,4DAAD,EAA+D,YAAM;AACrEC,IAAAA,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBC,IAAI,CAACC,EAAL,EAAtB;AAEA,QAAMG,IAAI,GAAG,KAAb;AACAV,IAAAA,QAAQ,CAAC,WAAD,EAAcU,IAAd,EAAoB,SAApB,CAAR;AAEAF,IAAAA,MAAM,CAACL,OAAO,CAACC,KAAR,CAAcC,KAAf,CAAN,CAA4BI,oBAA5B,CAAiDN,OAAjD,EAA0D,CACxD,WADwD,EAExD,KAFwD,EAGxD,SAHwD,CAA1D;AAKD,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrCC,IAAAA,OAAO,CAACC,KAAR,GAAgBE,IAAI,CAACC,EAAL,EAAhB;AAEAP,IAAAA,QAAQ,CAAC,IAAIW,KAAJ,CAAU,mBAAV,CAAD,CAAR;AAEAH,IAAAA,MAAM,CAACL,OAAO,CAACC,KAAR,CAAcQ,IAAd,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAN,CAAuCC,SAAvC,CACE,qCADF;AAGD,GARC,CAAF;AASD,CAnCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\ndescribe('logError', () => {\n  const logError = require('../logError');\n\n  it('logs error messages to the console', () => {\n    console.error.apply = jest.fn();\n\n    logError('This is a log message');\n\n    expect(console.error.apply).toHaveBeenCalledWith(console, [\n      'This is a log message',\n    ]);\n  });\n\n  it('logs error messages with multiple arguments to the console', () => {\n    console.error.apply = jest.fn();\n\n    const data = 'log';\n    logError('This is a', data, 'message');\n\n    expect(console.error.apply).toHaveBeenCalledWith(console, [\n      'This is a',\n      'log',\n      'message',\n    ]);\n  });\n\n  it('logs errors to the console', () => {\n    console.error = jest.fn();\n\n    logError(new Error('The error message'));\n\n    expect(console.error.mock.calls[0][0]).toContain(\n      'Error: \"The error message\".  Stack:',\n    );\n  });\n});\n"]},"metadata":{},"sourceType":"script"}