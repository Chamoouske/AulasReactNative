{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _backPressSubscriptions = new Set();\n\nvar BackHandler = {\n  exitApp: jest.fn(),\n  addEventListener: function addEventListener(eventName, handler) {\n    _backPressSubscriptions.add(handler);\n\n    return {\n      remove: function remove() {\n        return BackHandler.removeEventListener(eventName, handler);\n      }\n    };\n  },\n  removeEventListener: function removeEventListener(eventName, handler) {\n    _backPressSubscriptions.delete(handler);\n  },\n  mockPressBack: function mockPressBack() {\n    var invokeDefault = true;\n\n    var subscriptions = _toConsumableArray(_backPressSubscriptions).reverse();\n\n    for (var i = 0; i < subscriptions.length; ++i) {\n      if (subscriptions[i]()) {\n        invokeDefault = false;\n        break;\n      }\n    }\n\n    if (invokeDefault) {\n      BackHandler.exitApp();\n    }\n  }\n};\nmodule.exports = BackHandler;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__mocks__/BackHandler.js"],"names":["_backPressSubscriptions","Set","BackHandler","exitApp","jest","fn","addEventListener","eventName","handler","add","remove","removeEventListener","delete","mockPressBack","invokeDefault","subscriptions","reverse","i","length","module","exports"],"mappings":"AASA;;;;AAEA,IAAMA,uBAAuB,GAAG,IAAIC,GAAJ,EAAhC;;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAEC,IAAI,CAACC,EAAL,EADS;AAGlBC,EAAAA,gBAAgB,EAAE,0BAChBC,SADgB,EAEhBC,OAFgB,EAGM;AACtBR,IAAAA,uBAAuB,CAACS,GAAxB,CAA4BD,OAA5B;;AACA,WAAO;AACLE,MAAAA,MAAM,EAAE;AAAA,eAAMR,WAAW,CAACS,mBAAZ,CAAgCJ,SAAhC,EAA2CC,OAA3C,CAAN;AAAA;AADH,KAAP;AAGD,GAXiB;AAalBG,EAAAA,mBAAmB,EAAE,6BACnBJ,SADmB,EAEnBC,OAFmB,EAGb;AACNR,IAAAA,uBAAuB,CAACY,MAAxB,CAA+BJ,OAA/B;AACD,GAlBiB;AAoBlBK,EAAAA,aAAa,EAAE,yBAAW;AACxB,QAAIC,aAAa,GAAG,IAApB;;AACA,QAAMC,aAAa,GAAG,mBAAIf,uBAAJ,EAA6BgB,OAA7B,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC7C,UAAIF,aAAa,CAACE,CAAD,CAAb,EAAJ,EAAwB;AACtBH,QAAAA,aAAa,GAAG,KAAhB;AACA;AACD;AACF;;AAED,QAAIA,aAAJ,EAAmB;AACjBZ,MAAAA,WAAW,CAACC,OAAZ;AACD;AACF;AAjCiB,CAApB;AAoCAgB,MAAM,CAACC,OAAP,GAAiBlB,WAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst _backPressSubscriptions = new Set();\n\nconst BackHandler = {\n  exitApp: jest.fn(),\n\n  addEventListener: function(\n    eventName: BackPressEventName,\n    handler: Function,\n  ): {remove: () => void} {\n    _backPressSubscriptions.add(handler);\n    return {\n      remove: () => BackHandler.removeEventListener(eventName, handler),\n    };\n  },\n\n  removeEventListener: function(\n    eventName: BackPressEventName,\n    handler: Function,\n  ): void {\n    _backPressSubscriptions.delete(handler);\n  },\n\n  mockPressBack: function() {\n    let invokeDefault = true;\n    const subscriptions = [..._backPressSubscriptions].reverse();\n    for (let i = 0; i < subscriptions.length; ++i) {\n      if (subscriptions[i]()) {\n        invokeDefault = false;\n        break;\n      }\n    }\n\n    if (invokeDefault) {\n      BackHandler.exitApp();\n    }\n  },\n};\n\nmodule.exports = BackHandler;\n"]},"metadata":{},"sourceType":"script"}