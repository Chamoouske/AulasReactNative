{"ast":null,"code":"'use strict';\n\nvar requireNativeComponent = require(\"../../ReactNative/requireNativeComponent\");\n\nimport codegenNativeCommands from \"../../Utilities/codegenNativeCommands\";\nimport * as React from 'react';\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeSelectedIndex']\n});\nvar RCTPickerNativeComponent = requireNativeComponent('RCTPicker');\nexport default RCTPickerNativeComponent;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/Picker/RCTPickerNativeComponent.js"],"names":["requireNativeComponent","require","codegenNativeCommands","React","Commands","supportedCommands","RCTPickerNativeComponent"],"mappings":"AAUA;;AAEA,IAAMA,sBAAsB,GAAGC,OAAO,4CAAtC;;AAMA,OAAOC,qBAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAmCA,OAAO,IAAMC,QAAwB,GAAGF,qBAAqB,CAAiB;AAC5EG,EAAAA,iBAAiB,EAAE,CAAC,wBAAD;AADyD,CAAjB,CAAtD;AAIP,IAAMC,wBAAuC,GAAGN,sBAAsB,CACpE,WADoE,CAAtE;AAIA,eAAeM,wBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst requireNativeComponent = require('../../ReactNative/requireNativeComponent');\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport * as React from 'react';\n\ntype PickerIOSChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    newValue: number | string,\n    newIndex: number,\n  |}>,\n>;\n\ntype RCTPickerIOSItemType = $ReadOnly<{|\n  label: ?Label,\n  value: ?(number | string),\n  textColor: ?ProcessedColorValue,\n|}>;\n\ntype Label = Stringish | number;\n\ntype NativeProps = $ReadOnly<{|\n  items: $ReadOnlyArray<RCTPickerIOSItemType>,\n  onChange: (event: PickerIOSChangeEvent) => void,\n  selectedIndex: number,\n  style?: ?TextStyleProp,\n  testID?: ?string,\n  accessibilityLabel?: ?string,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeSelectedIndex: (\n    viewRef: React.ElementRef<ComponentType>,\n    index: number,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeSelectedIndex'],\n});\n\nconst RCTPickerNativeComponent: ComponentType = requireNativeComponent<NativeProps>(\n  'RCTPicker',\n);\n\nexport default RCTPickerNativeComponent;\n"]},"metadata":{},"sourceType":"module"}