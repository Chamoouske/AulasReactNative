{"ast":null,"code":"'use strict';\n\nvar setNormalizedColorAlpha = require(\"../setNormalizedColorAlpha\");\n\nvar normalizeColor = require(\"../normalizeColor\");\n\ndescribe('setNormalizedColorAlpha', function () {\n  it('should adjust the alpha of the color passed in', function () {\n    expect(setNormalizedColorAlpha(0xffffffff, 0.4)).toBe(0xffffff66);\n    expect(setNormalizedColorAlpha(0x204080ff, 0.6)).toBe(0x20408099);\n  });\n  it('should clamp invalid input', function () {\n    expect(setNormalizedColorAlpha(0xffffffff, 1.5)).toBe(0xffffffff);\n    expect(setNormalizedColorAlpha(0xffffffff, -1)).toBe(0xffffff00);\n  });\n  it(\"should ignore the color's original alpha\", function () {\n    expect(setNormalizedColorAlpha(0x204080aa, 0.8)).toBe(0x204080cc);\n  });\n  it('should return the original color when alpha is unchanged', function () {\n    var originalColor = normalizeColor('blue');\n    expect(setNormalizedColorAlpha(originalColor, 1)).toBe(originalColor);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/StyleSheet/__tests__/setNormalizedColorAlpha-test.js"],"names":["setNormalizedColorAlpha","require","normalizeColor","describe","it","expect","toBe","originalColor"],"mappings":"AAUA;;AAEA,IAAMA,uBAAuB,GAAGC,OAAO,8BAAvC;;AACA,IAAMC,cAAc,GAAGD,OAAO,qBAA9B;;AAEAE,QAAQ,CAAC,yBAAD,EAA4B,YAAW;AAC7CC,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAW;AAC9DC,IAAAA,MAAM,CAACL,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAxB,CAAN,CAAiDM,IAAjD,CAAsD,UAAtD;AACAD,IAAAA,MAAM,CAACL,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAxB,CAAN,CAAiDM,IAAjD,CAAsD,UAAtD;AACD,GAHC,CAAF;AAKAF,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAW;AAC1CC,IAAAA,MAAM,CAACL,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAxB,CAAN,CAAiDM,IAAjD,CAAsD,UAAtD;AACAD,IAAAA,MAAM,CAACL,uBAAuB,CAAC,UAAD,EAAa,CAAC,CAAd,CAAxB,CAAN,CAAgDM,IAAhD,CAAqD,UAArD;AACD,GAHC,CAAF;AAKAF,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAW;AACxDC,IAAAA,MAAM,CAACL,uBAAuB,CAAC,UAAD,EAAa,GAAb,CAAxB,CAAN,CAAiDM,IAAjD,CAAsD,UAAtD;AACD,GAFC,CAAF;AAIAF,EAAAA,EAAE,CAAC,0DAAD,EAA6D,YAAW;AACxE,QAAMG,aAAa,GAAGL,cAAc,CAAC,MAAD,CAApC;AACAG,IAAAA,MAAM,CAACL,uBAAuB,CAACO,aAAD,EAAgB,CAAhB,CAAxB,CAAN,CAAkDD,IAAlD,CAAuDC,aAAvD;AACD,GAHC,CAAF;AAID,CAnBO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst setNormalizedColorAlpha = require('../setNormalizedColorAlpha');\nconst normalizeColor = require('../normalizeColor');\n\ndescribe('setNormalizedColorAlpha', function() {\n  it('should adjust the alpha of the color passed in', function() {\n    expect(setNormalizedColorAlpha(0xffffffff, 0.4)).toBe(0xffffff66);\n    expect(setNormalizedColorAlpha(0x204080ff, 0.6)).toBe(0x20408099);\n  });\n\n  it('should clamp invalid input', function() {\n    expect(setNormalizedColorAlpha(0xffffffff, 1.5)).toBe(0xffffffff);\n    expect(setNormalizedColorAlpha(0xffffffff, -1)).toBe(0xffffff00);\n  });\n\n  it(\"should ignore the color's original alpha\", function() {\n    expect(setNormalizedColorAlpha(0x204080aa, 0.8)).toBe(0x204080cc);\n  });\n\n  it('should return the original color when alpha is unchanged', function() {\n    const originalColor = normalizeColor('blue');\n    expect(setNormalizedColorAlpha(originalColor, 1)).toBe(originalColor);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}