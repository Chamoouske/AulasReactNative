{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertRequiredOptions;\n\nfunction _commander() {\n  var data = require(\"commander\");\n\n  _commander = function _commander() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction assertRequiredOptions(options, passedOptions) {\n  options.forEach(function (opt) {\n    var option = new (_commander().Option)(opt.name);\n\n    if (!option.required) {\n      return;\n    }\n\n    var name = (0, _lodash().camelCase)(option.long);\n\n    if (!passedOptions[name]) {\n      throw new Error(\"Option \\\"\" + option.long + \"\\\" is missing\");\n    }\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/assertRequiredOptions.js"],"names":["Object","defineProperty","exports","value","default","assertRequiredOptions","_commander","data","require","_lodash","options","passedOptions","forEach","opt","option","Option","name","required","camelCase","long","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qBAAlB;;AAEA,SAASC,UAAT,GAAsB;AACpB,MAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEAF,EAAAA,UAAU,GAAG,sBAAY;AACvB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,OAAT,GAAmB;AACjB,MAAMF,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,EAAAA,OAAO,GAAG,mBAAY;AACpB,WAAOF,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAaD,SAASF,qBAAT,CAA+BK,OAA/B,EAAwCC,aAAxC,EAAuD;AACrDD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,GAAG,EAAI;AACrB,QAAMC,MAAM,GAAG,KAAKR,UAAU,GAAGS,MAAlB,EAA0BF,GAAG,CAACG,IAA9B,CAAf;;AAEA,QAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpB;AACD;;AAED,QAAMD,IAAI,GAAG,CAAC,GAAGP,OAAO,GAAGS,SAAd,EAAyBJ,MAAM,CAACK,IAAhC,CAAb;;AAEA,QAAI,CAACR,aAAa,CAACK,IAAD,CAAlB,EAA0B;AAExB,YAAM,IAAII,KAAJ,eAAqBN,MAAM,CAACK,IAA5B,mBAAN;AACD;AACF,GAbD;AAcD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertRequiredOptions;\n\nfunction _commander() {\n  const data = require(\"commander\");\n\n  _commander = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n// Commander.js has a 2 years old open issue to support <...> syntax\n// for options. Until that gets merged, we run the checks manually\n// https://github.com/tj/commander.js/issues/230\nfunction assertRequiredOptions(options, passedOptions) {\n  options.forEach(opt => {\n    const option = new (_commander().Option)(opt.name);\n\n    if (!option.required) {\n      return;\n    }\n\n    const name = (0, _lodash().camelCase)(option.long);\n\n    if (!passedOptions[name]) {\n      // Provide commander.js like error message\n      throw new Error(`Option \"${option.long}\" is missing`);\n    }\n  });\n}\n\n//# sourceMappingURL=assertRequiredOptions.js.map"]},"metadata":{},"sourceType":"script"}