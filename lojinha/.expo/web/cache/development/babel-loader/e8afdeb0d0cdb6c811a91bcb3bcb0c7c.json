{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/Button/index.js\";\n\nimport * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/Button/index.js"],"names":["React","StyleSheet","TouchableOpacity","Text","Button","forwardRef","props","forwardedRef","accessibilityLabel","color","disabled","onPress","testID","title","styles","button","backgroundColor","buttonDisabled","text","textDisabled","displayName","create","borderRadius","fontWeight","padding","textAlign","textTransform"],"mappings":";;;AAUA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,IAAP;AAWA,IAAMC,MAAM,GAAGJ,KAAK,CAACK,UAAN,CAAiC,UAACC,KAAD,EAAQC,YAAR,EAAyB;AAAA,MAC/DC,kBAD+D,GACCF,KADD,CAC/DE,kBAD+D;AAAA,MAC3CC,KAD2C,GACCH,KADD,CAC3CG,KAD2C;AAAA,MACpCC,QADoC,GACCJ,KADD,CACpCI,QADoC;AAAA,MAC1BC,OAD0B,GACCL,KADD,CAC1BK,OAD0B;AAAA,MACjBC,MADiB,GACCN,KADD,CACjBM,MADiB;AAAA,MACTC,KADS,GACCP,KADD,CACTO,KADS;AAGvE,SACE,oBAAC,gBAAD;AACE,IAAA,kBAAkB,EAAEL,kBADtB;AAEE,IAAA,iBAAiB,EAAC,QAFpB;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,GAAG,EAAEJ,YALP;AAME,IAAA,KAAK,EAAE,CACLO,MAAM,CAACC,MADF,EAELN,KAAK,IAAI;AAAEO,MAAAA,eAAe,EAAEP;AAAnB,KAFJ,EAGLC,QAAQ,IAAII,MAAM,CAACG,cAHd,CANT;AAWE,IAAA,MAAM,EAAEL,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACE,MAAM,CAACI,IAAR,EAAcR,QAAQ,IAAII,MAAM,CAACK,YAAjC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DN,KAA9D,CAbF,CADF;AAiBD,CApBc,CAAf;AAsBAT,MAAM,CAACgB,WAAP,GAAqB,QAArB;AAEA,IAAMN,MAAM,GAAGb,UAAU,CAACoB,MAAX,CAAkB;AAC/BN,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENM,IAAAA,YAAY,EAAE;AAFR,GADuB;AAK/BJ,EAAAA,IAAI,EAAE;AACJT,IAAAA,KAAK,EAAE,MADH;AAEJc,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,SAAS,EAAE,QAJP;AAKJC,IAAAA,aAAa,EAAE;AALX,GALyB;AAY/BT,EAAAA,cAAc,EAAE;AACdD,IAAAA,eAAe,EAAE;AADH,GAZe;AAe/BG,EAAAA,YAAY,EAAE;AACZV,IAAAA,KAAK,EAAE;AADK;AAfiB,CAAlB,CAAf;AAsBA,eAAeL,MAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\n\ntype ButtonProps = {|\n  accessibilityLabel?: ?string,\n  color?: ?string,\n  disabled?: boolean,\n  onPress?: ?(e: any) => void,\n  testID?: ?string,\n  title: string\n|};\n\nconst Button = React.forwardRef<ButtonProps, *>((props, forwardedRef) => {\n  const { accessibilityLabel, color, disabled, onPress, testID, title } = props;\n\n  return (\n    <TouchableOpacity\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"button\"\n      disabled={disabled}\n      onPress={onPress}\n      ref={forwardedRef}\n      style={[\n        styles.button,\n        color && { backgroundColor: color },\n        disabled && styles.buttonDisabled\n      ]}\n      testID={testID}\n    >\n      <Text style={[styles.text, disabled && styles.textDisabled]}>{title}</Text>\n    </TouchableOpacity>\n  );\n});\n\nButton.displayName = 'Button';\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\n\nexport type { ButtonProps };\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}