{"ast":null,"code":"'use strict';\n\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeDate']\n});\nexport default codegenNativeComponent('DatePicker', {\n  paperComponentName: 'RCTDatePicker',\n  excludedPlatform: 'android'\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/DatePicker/RCTDatePickerNativeComponent.js"],"names":["codegenNativeCommands","codegenNativeComponent","React","Commands","supportedCommands","paperComponentName","excludedPlatform"],"mappings":"AAUA;;AAIA,OAAOA,qBAAP,MAAkC,wDAAlC;AACA,OAAOC,sBAAP,MAAmC,yDAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAoCA,OAAO,IAAMC,QAAwB,GAAGH,qBAAqB,CAAiB;AAC5EI,EAAAA,iBAAiB,EAAE,CAAC,eAAD;AADyD,CAAjB,CAAtD;AAIP,eAAgBH,sBAAsB,CAAc,YAAd,EAA4B;AAChEI,EAAAA,kBAAkB,EAAE,eAD4C;AAEhEC,EAAAA,gBAAgB,EAAE;AAF8C,CAA5B,CAAtC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\nimport type {\n  Float,\n  WithDefault,\n  BubblingEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\ntype Event = $ReadOnly<{|\n  timestamp: Float,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  date?: ?Float,\n  initialDate?: ?Float,\n  locale?: ?string,\n  maximumDate?: ?Float,\n  minimumDate?: ?Float,\n  minuteInterval?: WithDefault<\n    1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30,\n    1,\n  >,\n  mode?: WithDefault<'date' | 'time' | 'datetime', 'date'>,\n  onChange?: ?BubblingEventHandler<Event>,\n  timeZoneOffsetInMinutes?: ?Float,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeDate: (\n    viewRef: React.ElementRef<ComponentType>,\n    date: Float,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeDate'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('DatePicker', {\n  paperComponentName: 'RCTDatePicker',\n  excludedPlatform: 'android',\n}): HostComponent<NativeProps>);\n"]},"metadata":{},"sourceType":"module"}