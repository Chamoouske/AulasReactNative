{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StateManager = function StateManager(state) {\n  var _this = this;\n\n  _classCallCheck(this, StateManager);\n\n  this.state = state;\n  this.appliedActions = {};\n\n  this.applyAction = function (action) {\n    var _action = action(_this.state, _this.appliedActions),\n        _action2 = _slicedToArray(_action, 3),\n        state = _action2[0],\n        actionName = _action2[1],\n        appliedAction = _action2[2];\n\n    _this.state = state;\n    _this.appliedActions[actionName] = appliedAction;\n    return _this;\n  };\n};\n\nexports.default = StateManager;","map":{"version":3,"sources":["../../src/utils/StateManager.ts"],"names":[],"mappings":";;;;;;;;;;IAAqB,Y,GAKnB,sBAAmB,KAAnB,EAAmC;AAAA;;AAAA;;AAAhB,OAAA,KAAA,GAAA,KAAA;AAEnB,OAAA,cAAA,GAAiE,EAAjE;;AAEA,OAAA,WAAA,GAKoF,UAAA,MAAM,EAAG;AAAA,kBAChD,MAAM,CAAC,KAAI,CAAC,KAAN,EAAa,KAAI,CAAC,cAAlB,CAD0C;AAAA;AAAA,QACpF,KADoF;AAAA,QAC7E,UAD6E;AAAA,QACjE,aADiE;;AAE3F,IAAA,KAAI,CAAC,KAAL,GAAa,KAAb;AAEA,IAAA,KAAI,CAAC,cAAL,CAAoB,UAApB,IAAkC,aAAlC;AACA,WAAO,KAAP;AACD,GAXD;AAJuC,C;;AALzC,OAAA,CAAA,OAAA,GAAA,YAAA","sourcesContent":["export default class StateManager<\n  StateType,\n  AppliedActionResultType,\n  ActionName extends string = never\n> {\n  constructor(public state: StateType) {}\n  // @ts-ignore\n  appliedActions: { [K in ActionName]: AppliedActionResultType } = {};\n  // @ts-ignore\n  applyAction: <NewActionName extends string>(\n    action: (\n      content: StateType,\n      actions: { [K in ActionName]: AppliedActionResultType }\n    ) => [StateType, NewActionName, AppliedActionResultType]\n  ) => StateManager<StateType, AppliedActionResultType, ActionName | NewActionName> = action => {\n    const [state, actionName, appliedAction] = action(this.state, this.appliedActions);\n    this.state = state;\n    // @ts-ignore\n    this.appliedActions[actionName] = appliedAction;\n    return this;\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}