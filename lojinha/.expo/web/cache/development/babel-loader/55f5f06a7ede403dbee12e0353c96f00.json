{"ast":null,"code":"'use strict';\n\nvar _require = require('shelljs'),\n    echo = _require.echo,\n    exec = _require.exec,\n    exit = _require.exit,\n    ls = _require.ls;\n\nvar argv = require('yargs').argv;\n\nvar numberOfRetries = argv.retries || 1;\n\nvar tryExecNTimes = require(\"./try-n-times\");\n\nvar path = require('path');\n\nvar ignoredTests = ['ReactScrollViewTestCase', 'ReactHorizontalScrollViewTestCase'];\nvar testClasses = ls(argv.path + \"/*.java\").map(function (javaFile) {\n  return path.basename(javaFile, '.java');\n}).filter(function (className) {\n  return ignoredTests.indexOf(className) === -1;\n}).map(function (className) {\n  return argv.package + '.' + className;\n});\nvar exitCode = 0;\ntestClasses.forEach(function (testClass) {\n  if (tryExecNTimes(function () {\n    echo(\"Starting \" + testClass);\n    exec('sleep 10s');\n    return exec(\"./scripts/run-instrumentation-tests-via-adb-shell.sh \" + argv.package + \" \" + testClass).code;\n  }, numberOfRetries)) {\n    echo(testClass + \" failed \" + numberOfRetries + \" times\");\n    exitCode = 1;\n  }\n});\nexit(exitCode);","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/scripts/run-android-ci-instrumentation-tests.js"],"names":["require","echo","exec","exit","ls","argv","numberOfRetries","retries","tryExecNTimes","path","ignoredTests","testClasses","map","javaFile","basename","filter","className","indexOf","package","exitCode","forEach","testClass","code"],"mappings":"AASA;;eAc+BA,OAAO,CAAC,SAAD,C;IAA/BC,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,I,YAAAA,I;IAAMC,E,YAAAA,E;;AAEzB,IAAMC,IAAI,GAAGL,OAAO,CAAC,OAAD,CAAP,CAAiBK,IAA9B;;AACA,IAAMC,eAAe,GAAGD,IAAI,CAACE,OAAL,IAAgB,CAAxC;;AACA,IAAMC,aAAa,GAAGR,OAAO,iBAA7B;;AACA,IAAMS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAApB;;AAGA,IAAMU,YAAY,GAAG,CACnB,yBADmB,EAEnB,mCAFmB,CAArB;AAMA,IAAMC,WAAW,GAAGP,EAAE,CAAIC,IAAI,CAACI,IAAT,aAAF,CACjBG,GADiB,CACb,UAAAC,QAAQ,EAAI;AAEf,SAAOJ,IAAI,CAACK,QAAL,CAAcD,QAAd,EAAwB,OAAxB,CAAP;AACD,CAJiB,EAKjBE,MALiB,CAKV,UAAAC,SAAS,EAAI;AACnB,SAAON,YAAY,CAACO,OAAb,CAAqBD,SAArB,MAAoC,CAAC,CAA5C;AACD,CAPiB,EAQjBJ,GARiB,CAQb,UAAAI,SAAS,EAAI;AAEhB,SAAOX,IAAI,CAACa,OAAL,GAAe,GAAf,GAAqBF,SAA5B;AACD,CAXiB,CAApB;AAaA,IAAIG,QAAQ,GAAG,CAAf;AACAR,WAAW,CAACS,OAAZ,CAAoB,UAAAC,SAAS,EAAI;AAC/B,MACEb,aAAa,CAAC,YAAM;AAClBP,IAAAA,IAAI,eAAaoB,SAAb,CAAJ;AAEAnB,IAAAA,IAAI,CAAC,WAAD,CAAJ;AACA,WAAOA,IAAI,2DAEPG,IAAI,CAACa,OAFE,SAGLG,SAHK,CAAJ,CAILC,IAJF;AAKD,GATY,EASVhB,eATU,CADf,EAWE;AACAL,IAAAA,IAAI,CAAIoB,SAAJ,gBAAwBf,eAAxB,YAAJ;AACAa,IAAAA,QAAQ,GAAG,CAAX;AACD;AACF,CAhBD;AAkBAhB,IAAI,CAACgB,QAAD,CAAJ","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * This script runs instrumentation tests one by one with retries\n * Instrumentation tests tend to be flaky, so rerunning them individually increases\n * chances for success and reduces total average execution time.\n *\n * We assume that all instrumentation tests are flat in one folder\n * Available arguments:\n * --path - path to all .java files with tests\n * --package - com.facebook.react.tests\n * --retries [num] - how many times to retry possible flaky commands: npm install and running tests, default 1\n */\n\nconst {echo, exec, exit, ls} = require('shelljs');\n\nconst argv = require('yargs').argv;\nconst numberOfRetries = argv.retries || 1;\nconst tryExecNTimes = require('./try-n-times');\nconst path = require('path');\n\n// Flaky tests ignored on Circle CI. They still run internally at fb.\nconst ignoredTests = [\n  'ReactScrollViewTestCase',\n  'ReactHorizontalScrollViewTestCase',\n];\n\n// ReactAndroid/src/androidTest/java/com/facebook/react/tests/ReactHorizontalScrollViewTestCase.java\nconst testClasses = ls(`${argv.path}/*.java`)\n  .map(javaFile => {\n    // ReactHorizontalScrollViewTestCase\n    return path.basename(javaFile, '.java');\n  })\n  .filter(className => {\n    return ignoredTests.indexOf(className) === -1;\n  })\n  .map(className => {\n    // com.facebook.react.tests.ReactHorizontalScrollViewTestCase\n    return argv.package + '.' + className;\n  });\n\nlet exitCode = 0;\ntestClasses.forEach(testClass => {\n  if (\n    tryExecNTimes(() => {\n      echo(`Starting ${testClass}`);\n      // any faster means Circle CI crashes\n      exec('sleep 10s');\n      return exec(\n        `./scripts/run-instrumentation-tests-via-adb-shell.sh ${\n          argv.package\n        } ${testClass}`,\n      ).code;\n    }, numberOfRetries)\n  ) {\n    echo(`${testClass} failed ${numberOfRetries} times`);\n    exitCode = 1;\n  }\n});\n\nexit(exitCode);\n"]},"metadata":{},"sourceType":"script"}