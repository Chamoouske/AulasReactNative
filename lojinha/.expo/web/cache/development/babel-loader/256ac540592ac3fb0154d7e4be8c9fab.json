{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/__flowtests__/ReactNativeTypes-flowtest.js\";\nimport * as React from 'react';\n\nfunction takesHostComponentInstance(instance) {}\n\nvar MyHostComponent = 'Host';\nReact.createElement(MyHostComponent, {\n  ref: function ref(hostComponentRef) {\n    takesHostComponentInstance(hostComponentRef);\n\n    if (hostComponentRef == null) {\n      return;\n    }\n\n    hostComponentRef.measureLayout(hostComponentRef, function () {});\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/__flowtests__/ReactNativeTypes-flowtest.js"],"names":["React","takesHostComponentInstance","instance","MyHostComponent","hostComponentRef","measureLayout"],"mappings":"AAUA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,SAASC,0BAAT,CACEC,QADF,EAEQ,CAAE;;AAEV,IAAMC,eAAe,GAAK,MAA1B;AAEA,oBAAC,eAAD;AACE,EAAA,GAAG,EAAE,aAAAC,gBAAgB,EAAI;AACvBH,IAAAA,0BAA0B,CAACG,gBAAD,CAA1B;;AAEA,QAAIA,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B;AACD;;AAEDA,IAAAA,gBAAgB,CAACC,aAAjB,CAA+BD,gBAA/B,EAAiD,YAAM,CAAE,CAAzD;AACD,GATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\n\nfunction takesHostComponentInstance(\n  instance: React.ElementRef<HostComponent<mixed>> | null,\n): void {}\n\nconst MyHostComponent = (('Host': any): HostComponent<mixed>);\n\n<MyHostComponent\n  ref={hostComponentRef => {\n    takesHostComponentInstance(hostComponentRef);\n\n    if (hostComponentRef == null) {\n      return;\n    }\n\n    hostComponentRef.measureLayout(hostComponentRef, () => {});\n  }}\n/>;\n"]},"metadata":{},"sourceType":"module"}