{"ast":null,"code":"'use strict';\n\njest.unmock(\"../../Utilities/Platform\");\n\nvar Platform = require(\"../../Utilities/Platform\");\n\nvar requestId = 1;\n\nfunction setRequestId(id) {\n  if (Platform.OS === 'ios') {\n    return;\n  }\n\n  requestId = id;\n}\n\njest.dontMock('event-target-shim').setMock('../../BatchedBridge/NativeModules', {\n  Networking: {\n    addListener: function addListener() {},\n    removeListeners: function removeListeners() {},\n    sendRequest: function sendRequest(options, callback) {\n      if (typeof callback === 'function') {\n        callback(requestId);\n      }\n    },\n    abortRequest: function abortRequest() {}\n  },\n  PlatformConstants: {\n    getConstants: function getConstants() {\n      return {};\n    }\n  }\n});\n\nvar XMLHttpRequest = require(\"../XMLHttpRequest\");\n\ndescribe('XMLHttpRequest', function () {\n  var xhr;\n  var handleTimeout;\n  var handleError;\n  var handleLoad;\n  var handleReadyStateChange;\n  var handleLoadEnd;\n  beforeEach(function () {\n    xhr = new XMLHttpRequest();\n    xhr.ontimeout = jest.fn();\n    xhr.onerror = jest.fn();\n    xhr.onload = jest.fn();\n    xhr.onloadend = jest.fn();\n    xhr.onreadystatechange = jest.fn();\n    handleTimeout = jest.fn();\n    handleError = jest.fn();\n    handleLoad = jest.fn();\n    handleLoadEnd = jest.fn();\n    handleReadyStateChange = jest.fn();\n    xhr.addEventListener('timeout', handleTimeout);\n    xhr.addEventListener('error', handleError);\n    xhr.addEventListener('load', handleLoad);\n    xhr.addEventListener('loadend', handleLoadEnd);\n    xhr.addEventListener('readystatechange', handleReadyStateChange);\n  });\n  afterEach(function () {\n    xhr = null;\n    handleTimeout = null;\n    handleError = null;\n    handleLoad = null;\n    handleLoadEnd = null;\n    handleReadyStateChange = null;\n  });\n  it('should transition readyState correctly', function () {\n    expect(xhr.readyState).toBe(xhr.UNSENT);\n    xhr.open('GET', 'blabla');\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(1);\n    expect(handleReadyStateChange.mock.calls.length).toBe(1);\n    expect(xhr.readyState).toBe(xhr.OPENED);\n  });\n  it('should expose responseType correctly', function () {\n    expect(xhr.responseType).toBe('');\n    jest.spyOn(console, 'error').mockImplementationOnce(function () {});\n    xhr.responseType = 'arrayblobbuffertextfile';\n    expect(xhr.responseType).toBe('');\n    expect(console.error).toBeCalledWith(\"Warning: The provided value 'arrayblobbuffertextfile' is not a valid 'responseType'.\");\n    console.error.mockRestore();\n    xhr.responseType = 'arraybuffer';\n    expect(xhr.responseType).toBe('arraybuffer');\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    expect(function () {\n      xhr.responseType = 'text';\n    }).toThrow();\n  });\n  it('should expose responseText correctly', function () {\n    xhr.responseType = '';\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n    xhr.responseType = 'arraybuffer';\n    expect(function () {\n      return xhr.responseText;\n    }).toThrow();\n    expect(xhr.response).toBe(null);\n    xhr.responseType = 'text';\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n    expect(function () {\n      xhr.responseText = 'hi';\n    }).toThrow();\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(2);\n\n    xhr.__didReceiveData(requestId, 'Some data');\n\n    expect(xhr.responseText).toBe('Some data');\n  });\n  it('should call ontimeout function when the request times out', function () {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(3);\n\n    xhr.__didCompleteResponse(requestId, 'Timeout', true);\n\n    xhr.__didCompleteResponse(requestId, 'Timeout', true);\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n    expect(xhr.ontimeout.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.onerror).not.toBeCalled();\n    expect(xhr.onload).not.toBeCalled();\n    expect(handleTimeout.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleError).not.toBeCalled();\n    expect(handleLoad).not.toBeCalled();\n  });\n  it('should call onerror function when the request times out', function () {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(4);\n\n    xhr.__didCompleteResponse(requestId, 'Generic error');\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(2);\n    expect(xhr.onerror.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.ontimeout).not.toBeCalled();\n    expect(xhr.onload).not.toBeCalled();\n    expect(handleReadyStateChange.mock.calls.length).toBe(2);\n    expect(handleError.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleTimeout).not.toBeCalled();\n    expect(handleLoad).not.toBeCalled();\n  });\n  it('should call onload function when there is no error', function () {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(5);\n\n    xhr.__didCompleteResponse(requestId, null);\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(2);\n    expect(xhr.onload.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.onerror).not.toBeCalled();\n    expect(xhr.ontimeout).not.toBeCalled();\n    expect(handleReadyStateChange.mock.calls.length).toBe(2);\n    expect(handleLoad.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleError).not.toBeCalled();\n    expect(handleTimeout).not.toBeCalled();\n  });\n  it('should call upload onprogress', function () {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    xhr.upload.onprogress = jest.fn();\n    var handleProgress = jest.fn();\n    xhr.upload.addEventListener('progress', handleProgress);\n    setRequestId(6);\n\n    xhr.__didUploadProgress(requestId, 42, 100);\n\n    expect(xhr.upload.onprogress.mock.calls.length).toBe(1);\n    expect(handleProgress.mock.calls.length).toBe(1);\n    expect(xhr.upload.onprogress.mock.calls[0][0].loaded).toBe(42);\n    expect(xhr.upload.onprogress.mock.calls[0][0].total).toBe(100);\n    expect(handleProgress.mock.calls[0][0].loaded).toBe(42);\n    expect(handleProgress.mock.calls[0][0].total).toBe(100);\n  });\n  it('should combine response headers with CRLF', function () {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(7);\n\n    xhr.__didReceiveResponse(requestId, 200, {\n      'Content-Type': 'text/plain; charset=utf-8',\n      'Content-Length': '32'\n    });\n\n    expect(xhr.getAllResponseHeaders()).toBe('Content-Type: text/plain; charset=utf-8\\r\\n' + 'Content-Length: 32');\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Network/__tests__/XMLHttpRequest-test.js"],"names":["jest","unmock","Platform","require","requestId","setRequestId","id","OS","dontMock","setMock","Networking","addListener","removeListeners","sendRequest","options","callback","abortRequest","PlatformConstants","getConstants","XMLHttpRequest","describe","xhr","handleTimeout","handleError","handleLoad","handleReadyStateChange","handleLoadEnd","beforeEach","ontimeout","fn","onerror","onload","onloadend","onreadystatechange","addEventListener","afterEach","it","expect","readyState","toBe","UNSENT","open","mock","calls","length","OPENED","responseType","spyOn","console","mockImplementationOnce","error","toBeCalledWith","mockRestore","send","toThrow","responseText","response","__didReceiveData","__didCompleteResponse","DONE","not","toBeCalled","upload","onprogress","handleProgress","__didUploadProgress","loaded","total","__didReceiveResponse","getAllResponseHeaders"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\njest.unmock('../../Utilities/Platform');\nconst Platform = require('../../Utilities/Platform');\nlet requestId = 1;\n\nfunction setRequestId(id) {\n  if (Platform.OS === 'ios') {\n    return;\n  }\n  requestId = id;\n}\n\njest\n  .dontMock('event-target-shim')\n  .setMock('../../BatchedBridge/NativeModules', {\n    Networking: {\n      addListener: function() {},\n      removeListeners: function() {},\n      sendRequest(options, callback) {\n        if (typeof callback === 'function') {\n          // android does not pass a callback\n          callback(requestId);\n        }\n      },\n      abortRequest: function() {},\n    },\n    PlatformConstants: {\n      getConstants() {\n        return {};\n      },\n    },\n  });\n\nconst XMLHttpRequest = require('../XMLHttpRequest');\n\ndescribe('XMLHttpRequest', function() {\n  let xhr;\n  let handleTimeout;\n  let handleError;\n  let handleLoad;\n  let handleReadyStateChange;\n  let handleLoadEnd;\n\n  beforeEach(() => {\n    xhr = new XMLHttpRequest();\n\n    xhr.ontimeout = jest.fn();\n    xhr.onerror = jest.fn();\n    xhr.onload = jest.fn();\n    xhr.onloadend = jest.fn();\n    xhr.onreadystatechange = jest.fn();\n\n    handleTimeout = jest.fn();\n    handleError = jest.fn();\n    handleLoad = jest.fn();\n    handleLoadEnd = jest.fn();\n    handleReadyStateChange = jest.fn();\n\n    xhr.addEventListener('timeout', handleTimeout);\n    xhr.addEventListener('error', handleError);\n    xhr.addEventListener('load', handleLoad);\n    xhr.addEventListener('loadend', handleLoadEnd);\n    xhr.addEventListener('readystatechange', handleReadyStateChange);\n  });\n\n  afterEach(() => {\n    xhr = null;\n    handleTimeout = null;\n    handleError = null;\n    handleLoad = null;\n    handleLoadEnd = null;\n    handleReadyStateChange = null;\n  });\n\n  it('should transition readyState correctly', function() {\n    expect(xhr.readyState).toBe(xhr.UNSENT);\n\n    xhr.open('GET', 'blabla');\n\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(1);\n    expect(handleReadyStateChange.mock.calls.length).toBe(1);\n    expect(xhr.readyState).toBe(xhr.OPENED);\n  });\n\n  it('should expose responseType correctly', function() {\n    expect(xhr.responseType).toBe('');\n\n    jest.spyOn(console, 'error').mockImplementationOnce(() => {});\n\n    // Setting responseType to an unsupported value has no effect.\n    xhr.responseType = 'arrayblobbuffertextfile';\n    expect(xhr.responseType).toBe('');\n\n    expect(console.error).toBeCalledWith(\n      \"Warning: The provided value 'arrayblobbuffertextfile' is not a valid 'responseType'.\",\n    );\n    console.error.mockRestore();\n\n    xhr.responseType = 'arraybuffer';\n    expect(xhr.responseType).toBe('arraybuffer');\n\n    // Can't change responseType after first data has been received.\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    expect(() => {\n      xhr.responseType = 'text';\n    }).toThrow();\n  });\n\n  it('should expose responseText correctly', function() {\n    xhr.responseType = '';\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n\n    xhr.responseType = 'arraybuffer';\n    expect(() => xhr.responseText).toThrow();\n    expect(xhr.response).toBe(null);\n\n    xhr.responseType = 'text';\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n\n    // responseText is read-only.\n    expect(() => {\n      xhr.responseText = 'hi';\n    }).toThrow();\n    expect(xhr.responseText).toBe('');\n    expect(xhr.response).toBe('');\n\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(2);\n    xhr.__didReceiveData(requestId, 'Some data');\n    expect(xhr.responseText).toBe('Some data');\n  });\n\n  it('should call ontimeout function when the request times out', function() {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(3);\n    xhr.__didCompleteResponse(requestId, 'Timeout', true);\n    xhr.__didCompleteResponse(requestId, 'Timeout', true);\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n\n    expect(xhr.ontimeout.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.onerror).not.toBeCalled();\n    expect(xhr.onload).not.toBeCalled();\n\n    expect(handleTimeout.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleError).not.toBeCalled();\n    expect(handleLoad).not.toBeCalled();\n  });\n\n  it('should call onerror function when the request times out', function() {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(4);\n    xhr.__didCompleteResponse(requestId, 'Generic error');\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(2);\n    expect(xhr.onerror.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.ontimeout).not.toBeCalled();\n    expect(xhr.onload).not.toBeCalled();\n\n    expect(handleReadyStateChange.mock.calls.length).toBe(2);\n    expect(handleError.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleTimeout).not.toBeCalled();\n    expect(handleLoad).not.toBeCalled();\n  });\n\n  it('should call onload function when there is no error', function() {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(5);\n    xhr.__didCompleteResponse(requestId, null);\n\n    expect(xhr.readyState).toBe(xhr.DONE);\n\n    expect(xhr.onreadystatechange.mock.calls.length).toBe(2);\n    expect(xhr.onload.mock.calls.length).toBe(1);\n    expect(xhr.onloadend.mock.calls.length).toBe(1);\n    expect(xhr.onerror).not.toBeCalled();\n    expect(xhr.ontimeout).not.toBeCalled();\n\n    expect(handleReadyStateChange.mock.calls.length).toBe(2);\n    expect(handleLoad.mock.calls.length).toBe(1);\n    expect(handleLoadEnd.mock.calls.length).toBe(1);\n    expect(handleError).not.toBeCalled();\n    expect(handleTimeout).not.toBeCalled();\n  });\n\n  it('should call upload onprogress', function() {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n\n    xhr.upload.onprogress = jest.fn();\n    const handleProgress = jest.fn();\n    xhr.upload.addEventListener('progress', handleProgress);\n    setRequestId(6);\n    xhr.__didUploadProgress(requestId, 42, 100);\n\n    expect(xhr.upload.onprogress.mock.calls.length).toBe(1);\n    expect(handleProgress.mock.calls.length).toBe(1);\n\n    expect(xhr.upload.onprogress.mock.calls[0][0].loaded).toBe(42);\n    expect(xhr.upload.onprogress.mock.calls[0][0].total).toBe(100);\n    expect(handleProgress.mock.calls[0][0].loaded).toBe(42);\n    expect(handleProgress.mock.calls[0][0].total).toBe(100);\n  });\n\n  it('should combine response headers with CRLF', function() {\n    xhr.open('GET', 'blabla');\n    xhr.send();\n    setRequestId(7);\n    xhr.__didReceiveResponse(requestId, 200, {\n      'Content-Type': 'text/plain; charset=utf-8',\n      'Content-Length': '32',\n    });\n\n    expect(xhr.getAllResponseHeaders()).toBe(\n      'Content-Type: text/plain; charset=utf-8\\r\\n' + 'Content-Length: 32',\n    );\n  });\n});\n"]},"metadata":{},"sourceType":"script"}