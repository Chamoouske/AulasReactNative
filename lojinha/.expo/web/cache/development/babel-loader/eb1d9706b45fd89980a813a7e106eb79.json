{"ast":null,"code":"export {};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/expo-location/build/LocationSubscribers.d.ts"],"names":[],"mappings":"AA4BA","sourcesContent":["import { LocationCallback, LocationHeadingCallback } from './Location.types';\ndeclare type EventObject = {\n    watchId: number;\n    [key: string]: any;\n};\ndeclare class Subscriber<CallbackType extends LocationCallback | LocationHeadingCallback> {\n    private eventName;\n    private eventDataField;\n    private callbacks;\n    private eventSubscription;\n    constructor(eventName: string, eventDataField: string);\n    maybeInitializeSubscription(): void;\n    /**\n     * Registers given callback under new id which is then returned.\n     */\n    registerCallback(callback: CallbackType): number;\n    /**\n     * Unregisters a callback with given id and revokes the subscription if possible.\n     */\n    unregisterCallback(id: number): void;\n    trigger(event: EventObject): void;\n}\nexport declare const LocationSubscriber: Subscriber<LocationCallback>;\nexport declare const HeadingSubscriber: Subscriber<LocationHeadingCallback>;\n/**\n * Necessary for some unit tests.\n */\nexport declare function _getCurrentWatchId(): number;\nexport {};\n"]},"metadata":{},"sourceType":"module"}