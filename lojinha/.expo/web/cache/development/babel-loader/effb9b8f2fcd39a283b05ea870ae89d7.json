{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/CheckBox/CheckBoxExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar CheckBox = require(\"react-native-web/dist/exports/CheckBox\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar BasicCheckBoxExample = function (_React$Component) {\n  _inherits(BasicCheckBoxExample, _React$Component);\n\n  var _super = _createSuper(BasicCheckBoxExample);\n\n  function BasicCheckBoxExample() {\n    var _this;\n\n    _classCallCheck(this, BasicCheckBoxExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      trueCheckBoxIsOn: true,\n      falseCheckBoxIsOn: false\n    };\n    return _this;\n  }\n\n  _createClass(BasicCheckBoxExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            falseCheckBoxIsOn: value\n          });\n        },\n        style: styles.checkbox,\n        value: this.state.falseCheckBoxIsOn,\n        tintColors: {\n          false: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            trueCheckBoxIsOn: value\n          });\n        },\n        value: this.state.trueCheckBoxIsOn,\n        tintColors: {\n          true: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return BasicCheckBoxExample;\n}(React.Component);\n\nvar DisabledCheckBoxExample = function (_React$Component2) {\n  _inherits(DisabledCheckBoxExample, _React$Component2);\n\n  var _super2 = _createSuper(DisabledCheckBoxExample);\n\n  function DisabledCheckBoxExample() {\n    _classCallCheck(this, DisabledCheckBoxExample);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(DisabledCheckBoxExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(CheckBox, {\n        disabled: true,\n        style: styles.checkbox,\n        value: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), React.createElement(CheckBox, {\n        disabled: true,\n        value: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DisabledCheckBoxExample;\n}(React.Component);\n\nvar EventCheckBoxExample = function (_React$Component3) {\n  _inherits(EventCheckBoxExample, _React$Component3);\n\n  var _super3 = _createSuper(EventCheckBoxExample);\n\n  function EventCheckBoxExample() {\n    var _this3;\n\n    _classCallCheck(this, EventCheckBoxExample);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    _this3.state = {\n      eventCheckBoxIsOn: false,\n      eventCheckBoxRegressionIsOn: true\n    };\n    return _this3;\n  }\n\n  _createClass(EventCheckBoxExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this4.setState({\n            eventCheckBoxIsOn: value\n          });\n        },\n        style: styles.checkbox,\n        value: this.state.eventCheckBoxIsOn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this4.setState({\n            eventCheckBoxIsOn: value\n          });\n        },\n        style: styles.checkbox,\n        value: this.state.eventCheckBoxIsOn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, this.state.eventCheckBoxIsOn ? 'On' : 'Off')), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this4.setState({\n            eventCheckBoxRegressionIsOn: value\n          });\n        },\n        style: styles.checkbox,\n        value: this.state.eventCheckBoxRegressionIsOn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(CheckBox, {\n        onValueChange: function onValueChange(value) {\n          return _this4.setState({\n            eventCheckBoxRegressionIsOn: value\n          });\n        },\n        style: styles.checkbox,\n        value: this.state.eventCheckBoxRegressionIsOn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, this.state.eventCheckBoxRegressionIsOn ? 'On' : 'Off')));\n    }\n  }]);\n\n  return EventCheckBoxExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  checkbox: {\n    marginBottom: 10\n  }\n});\nexports.title = '<CheckBox>';\nexports.displayName = 'CheckBoxExample';\nexports.description = 'Native boolean input';\nexports.examples = [{\n  title: 'CheckBoxes can be set to true or false, and the color of both states can be specified.',\n  render: function render() {\n    return React.createElement(BasicCheckBoxExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'CheckBoxes can be disabled',\n  render: function render() {\n    return React.createElement(DisabledCheckBoxExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Change events can be detected',\n  render: function render() {\n    return React.createElement(EventCheckBoxExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'CheckBoxes are controlled components',\n  render: function render() {\n    return React.createElement(CheckBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/CheckBox/CheckBoxExample.js"],"names":["React","require","BasicCheckBoxExample","state","trueCheckBoxIsOn","falseCheckBoxIsOn","value","setState","styles","checkbox","false","true","Component","DisabledCheckBoxExample","EventCheckBoxExample","eventCheckBoxIsOn","eventCheckBoxRegressionIsOn","container","StyleSheet","create","flexDirection","justifyContent","marginBottom","exports","title","displayName","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {CheckBox, Text, View, StyleSheet} = require('react-native');\n\ntype BasicState = {|\n  trueCheckBoxIsOn: boolean,\n  falseCheckBoxIsOn: boolean,\n|};\n\ntype BasicProps = $ReadOnly<{||}>;\nclass BasicCheckBoxExample extends React.Component<BasicProps, BasicState> {\n  state = {\n    trueCheckBoxIsOn: true,\n    falseCheckBoxIsOn: false,\n  };\n\n  render() {\n    return (\n      <View>\n        <CheckBox\n          onValueChange={value => this.setState({falseCheckBoxIsOn: value})}\n          style={styles.checkbox}\n          value={this.state.falseCheckBoxIsOn}\n          tintColors={{false: 'red'}}\n        />\n        <CheckBox\n          onValueChange={value => this.setState({trueCheckBoxIsOn: value})}\n          value={this.state.trueCheckBoxIsOn}\n          tintColors={{true: 'green'}}\n        />\n      </View>\n    );\n  }\n}\n\ntype DisabledProps = $ReadOnly<{||}>;\nclass DisabledCheckBoxExample extends React.Component<DisabledProps> {\n  render() {\n    return (\n      <View>\n        <CheckBox disabled={true} style={styles.checkbox} value={true} />\n        <CheckBox disabled={true} value={false} />\n      </View>\n    );\n  }\n}\n\ntype EventProps = $ReadOnly<{||}>;\ntype EventState = {|\n  eventCheckBoxIsOn: boolean,\n  eventCheckBoxRegressionIsOn: boolean,\n|};\n\nclass EventCheckBoxExample extends React.Component<EventProps, EventState> {\n  state = {\n    eventCheckBoxIsOn: false,\n    eventCheckBoxRegressionIsOn: true,\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View>\n          <CheckBox\n            onValueChange={value => this.setState({eventCheckBoxIsOn: value})}\n            style={styles.checkbox}\n            value={this.state.eventCheckBoxIsOn}\n          />\n          <CheckBox\n            onValueChange={value => this.setState({eventCheckBoxIsOn: value})}\n            style={styles.checkbox}\n            value={this.state.eventCheckBoxIsOn}\n          />\n          <Text>{this.state.eventCheckBoxIsOn ? 'On' : 'Off'}</Text>\n        </View>\n        <View>\n          <CheckBox\n            onValueChange={value =>\n              this.setState({eventCheckBoxRegressionIsOn: value})\n            }\n            style={styles.checkbox}\n            value={this.state.eventCheckBoxRegressionIsOn}\n          />\n          <CheckBox\n            onValueChange={value =>\n              this.setState({eventCheckBoxRegressionIsOn: value})\n            }\n            style={styles.checkbox}\n            value={this.state.eventCheckBoxRegressionIsOn}\n          />\n          <Text>{this.state.eventCheckBoxRegressionIsOn ? 'On' : 'Off'}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  checkbox: {\n    marginBottom: 10,\n  },\n});\n\nexports.title = '<CheckBox>';\nexports.displayName = 'CheckBoxExample';\nexports.description = 'Native boolean input';\nexports.examples = [\n  {\n    title:\n      'CheckBoxes can be set to true or false, and the color of both states can be specified.',\n    render(): React.Element<any> {\n      return <BasicCheckBoxExample />;\n    },\n  },\n  {\n    title: 'CheckBoxes can be disabled',\n    render(): React.Element<any> {\n      return <DisabledCheckBoxExample />;\n    },\n  },\n  {\n    title: 'Change events can be detected',\n    render(): React.Element<any> {\n      return <EventCheckBoxExample />;\n    },\n  },\n  {\n    title: 'CheckBoxes are controlled components',\n    render(): React.Element<any> {\n      return <CheckBox />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}