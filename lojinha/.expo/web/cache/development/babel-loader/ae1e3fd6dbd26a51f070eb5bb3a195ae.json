{"ast":null,"code":"'use strict';\n\ndescribe('Object (ES7)', function () {\n  beforeEach(function () {\n    delete Object.entries;\n    delete Object.values;\n    jest.resetModules();\n\n    require(\"../Object.es7\");\n  });\n  describe('Object.entries', function () {\n    it('should have a length of 1', function () {\n      expect(Object.entries.length).toBe(1);\n    });\n    it('should check for type', function () {\n      expect(Object.entries.bind(null, null)).toThrow(TypeError('Object.entries called on non-object'));\n      expect(Object.entries.bind(null, undefined)).toThrow(TypeError('Object.entries called on non-object'));\n      expect(Object.entries.bind(null, [])).not.toThrow();\n      expect(Object.entries.bind(null, function () {})).not.toThrow();\n      expect(Object.entries.bind(null, {})).not.toThrow();\n      expect(Object.entries.bind(null, 'abc')).not.toThrow();\n    });\n    it('should return enumerable entries', function () {\n      var foo = Object.defineProperties({}, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n      var bar = {\n        x: 10,\n        y: 20\n      };\n      expect(Object.entries(bar)).toEqual([['x', 10], ['y', 20]]);\n    });\n    it('should work with proto-less objects', function () {\n      var foo = Object.create(null, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n    });\n    it('should return only own entries', function () {\n      var foo = Object.create({\n        z: 30\n      }, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n    });\n    it('should convert to object primitive string', function () {\n      expect(Object.entries('ab')).toEqual([['0', 'a'], ['1', 'b']]);\n    });\n  });\n  describe('Object.values', function () {\n    it('should have a length of 1', function () {\n      expect(Object.values.length).toBe(1);\n    });\n    it('should check for type', function () {\n      expect(Object.values.bind(null, null)).toThrow(TypeError('Object.values called on non-object'));\n      expect(Object.values.bind(null, [])).not.toThrow();\n      expect(Object.values.bind(null, function () {})).not.toThrow();\n      expect(Object.values.bind(null, {})).not.toThrow();\n    });\n    it('should return enumerable values', function () {\n      var foo = Object.defineProperties({}, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.values(foo)).toEqual([10]);\n      var bar = {\n        x: 10,\n        y: 20\n      };\n      expect(Object.values(bar)).toEqual([10, 20]);\n    });\n    it('should work with proto-less objects', function () {\n      var foo = Object.create(null, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.values(foo)).toEqual([10]);\n    });\n    it('should return only own values', function () {\n      var foo = Object.create({\n        z: 30\n      }, {\n        x: {\n          value: 10,\n          enumerable: true\n        },\n        y: {\n          value: 20\n        }\n      });\n      expect(Object.values(foo)).toEqual([10]);\n    });\n    it('should convert to object primitive string', function () {\n      expect(Object.values('ab')).toEqual(['a', 'b']);\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/polyfills/__tests__/Object.es7-test.js"],"names":["describe","beforeEach","Object","entries","values","jest","resetModules","require","it","expect","length","toBe","bind","toThrow","TypeError","undefined","not","foo","defineProperties","x","value","enumerable","y","toEqual","bar","create","z"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+jsinfra\n */\n\n'use strict';\n\ndescribe('Object (ES7)', () => {\n  beforeEach(() => {\n    delete Object.entries;\n    delete Object.values;\n    jest.resetModules();\n    require('../Object.es7');\n  });\n\n  describe('Object.entries', () => {\n    it('should have a length of 1', () => {\n      expect(Object.entries.length).toBe(1);\n    });\n\n    it('should check for type', () => {\n      expect(Object.entries.bind(null, null)).toThrow(\n        TypeError('Object.entries called on non-object'),\n      );\n      expect(Object.entries.bind(null, undefined)).toThrow(\n        TypeError('Object.entries called on non-object'),\n      );\n      expect(Object.entries.bind(null, [])).not.toThrow();\n      expect(Object.entries.bind(null, () => {})).not.toThrow();\n      expect(Object.entries.bind(null, {})).not.toThrow();\n      expect(Object.entries.bind(null, 'abc')).not.toThrow();\n    });\n\n    it('should return enumerable entries', () => {\n      const foo = Object.defineProperties(\n        {},\n        {\n          x: {value: 10, enumerable: true},\n          y: {value: 20},\n        },\n      );\n\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n\n      const bar = {x: 10, y: 20};\n      expect(Object.entries(bar)).toEqual([['x', 10], ['y', 20]]);\n    });\n\n    it('should work with proto-less objects', () => {\n      const foo = Object.create(null, {\n        x: {value: 10, enumerable: true},\n        y: {value: 20},\n      });\n\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n    });\n\n    it('should return only own entries', () => {\n      const foo = Object.create(\n        {z: 30},\n        {\n          x: {value: 10, enumerable: true},\n          y: {value: 20},\n        },\n      );\n\n      expect(Object.entries(foo)).toEqual([['x', 10]]);\n    });\n\n    it('should convert to object primitive string', () => {\n      expect(Object.entries('ab')).toEqual([['0', 'a'], ['1', 'b']]);\n    });\n  });\n\n  describe('Object.values', () => {\n    it('should have a length of 1', () => {\n      expect(Object.values.length).toBe(1);\n    });\n\n    it('should check for type', () => {\n      expect(Object.values.bind(null, null)).toThrow(\n        TypeError('Object.values called on non-object'),\n      );\n      expect(Object.values.bind(null, [])).not.toThrow();\n      expect(Object.values.bind(null, () => {})).not.toThrow();\n      expect(Object.values.bind(null, {})).not.toThrow();\n    });\n\n    it('should return enumerable values', () => {\n      const foo = Object.defineProperties(\n        {},\n        {\n          x: {value: 10, enumerable: true},\n          y: {value: 20},\n        },\n      );\n\n      expect(Object.values(foo)).toEqual([10]);\n\n      const bar = {x: 10, y: 20};\n      expect(Object.values(bar)).toEqual([10, 20]);\n    });\n\n    it('should work with proto-less objects', () => {\n      const foo = Object.create(null, {\n        x: {value: 10, enumerable: true},\n        y: {value: 20},\n      });\n\n      expect(Object.values(foo)).toEqual([10]);\n    });\n\n    it('should return only own values', () => {\n      const foo = Object.create(\n        {z: 30},\n        {\n          x: {value: 10, enumerable: true},\n          y: {value: 20},\n        },\n      );\n\n      expect(Object.values(foo)).toEqual([10]);\n    });\n\n    it('should convert to object primitive string', () => {\n      expect(Object.values('ab')).toEqual(['a', 'b']);\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"script"}