{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/SizeFlexibilityUpdateTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RCTNativeAppEventEmitter = require('react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter');\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\nvar reactViewWidth = 111;\nvar reactViewHeight = 222;\nvar finalState = false;\n\nvar SizeFlexibilityUpdateTest = function (_React$Component) {\n  _inherits(SizeFlexibilityUpdateTest, _React$Component);\n\n  var _super = _createSuper(SizeFlexibilityUpdateTest);\n\n  function SizeFlexibilityUpdateTest() {\n    var _this;\n\n    _classCallCheck(this, SizeFlexibilityUpdateTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._subscription = null;\n\n    _this.markPassed = function () {\n      TestModule.markTestPassed(true);\n      finalState = true;\n    };\n\n    _this.rootViewDidChangeIntrinsicSize = function (intrinsicSize) {\n      if (finalState) {\n        TestModule.markTestPassed(false);\n        return;\n      }\n\n      if (_this.props.both) {\n        if (intrinsicSize.width === reactViewWidth && intrinsicSize.height === reactViewHeight) {\n          _this.markPassed();\n\n          return;\n        }\n      }\n\n      if (_this.props.height) {\n        if (intrinsicSize.width !== reactViewWidth && intrinsicSize.height === reactViewHeight) {\n          _this.markPassed();\n\n          return;\n        }\n      }\n\n      if (_this.props.width) {\n        if (intrinsicSize.width === reactViewWidth && intrinsicSize.height !== reactViewHeight) {\n          _this.markPassed();\n\n          return;\n        }\n      }\n\n      if (_this.props.none) {\n        if (intrinsicSize.width !== reactViewWidth && intrinsicSize.height !== reactViewHeight) {\n          _this.markPassed();\n\n          return;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SizeFlexibilityUpdateTest, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._subscription = RCTNativeAppEventEmitter.addListener('rootViewDidChangeIntrinsicSize', this.rootViewDidChangeIntrinsicSize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          height: reactViewHeight,\n          width: reactViewWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return SizeFlexibilityUpdateTest;\n}(React.Component);\n\nmodule.exports = SizeFlexibilityUpdateTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/SizeFlexibilityUpdateTest.js"],"names":["RCTNativeAppEventEmitter","require","React","View","ReactNative","TestModule","NativeModules","reactViewWidth","reactViewHeight","finalState","SizeFlexibilityUpdateTest","_subscription","markPassed","markTestPassed","rootViewDidChangeIntrinsicSize","intrinsicSize","props","both","width","height","none","addListener","remove","Component","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,8DAAD,CAAxC;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;;;IAEOE,I,GAAQC,W,CAARD,I;IAEAE,U,GAAcD,WAAW,CAACE,a,CAA1BD,U;AAGP,IAAME,cAAc,GAAG,GAAvB;AACA,IAAMC,eAAe,GAAG,GAAxB;AAEA,IAAIC,UAAU,GAAG,KAAjB;;IASMC,yB;;;;;;;;;;;;;;;UACJC,a,GAAsC,I;;UAetCC,U,GAAyB,YAAM;AAC7BP,MAAAA,UAAU,CAACQ,cAAX,CAA0B,IAA1B;AACAJ,MAAAA,UAAU,GAAG,IAAb;AACD,K;;UAEDK,8B,GAIa,UAACC,aAAD,EAAyD;AACpE,UAAIN,UAAJ,EAAgB;AAEdJ,QAAAA,UAAU,CAACQ,cAAX,CAA0B,KAA1B;AACA;AACD;;AAED,UAAI,MAAKG,KAAL,CAAWC,IAAf,EAAqB;AACnB,YACEF,aAAa,CAACG,KAAd,KAAwBX,cAAxB,IACAQ,aAAa,CAACI,MAAd,KAAyBX,eAF3B,EAGE;AACA,gBAAKI,UAAL;;AACA;AACD;AACF;;AACD,UAAI,MAAKI,KAAL,CAAWG,MAAf,EAAuB;AACrB,YACEJ,aAAa,CAACG,KAAd,KAAwBX,cAAxB,IACAQ,aAAa,CAACI,MAAd,KAAyBX,eAF3B,EAGE;AACA,gBAAKI,UAAL;;AACA;AACD;AACF;;AACD,UAAI,MAAKI,KAAL,CAAWE,KAAf,EAAsB;AACpB,YACEH,aAAa,CAACG,KAAd,KAAwBX,cAAxB,IACAQ,aAAa,CAACI,MAAd,KAAyBX,eAF3B,EAGE;AACA,gBAAKI,UAAL;;AACA;AACD;AACF;;AACD,UAAI,MAAKI,KAAL,CAAWI,IAAf,EAAqB;AACnB,YACEL,aAAa,CAACG,KAAd,KAAwBX,cAAxB,IACAQ,aAAa,CAACI,MAAd,KAAyBX,eAF3B,EAGE;AACA,gBAAKI,UAAL;;AACA;AACD;AACF;AACF,K;;;;;;;WAjED,qCAA4B;AAC1B,WAAKD,aAAL,GAAqBX,wBAAwB,CAACqB,WAAzB,CACnB,gCADmB,EAEnB,KAAKP,8BAFc,CAArB;AAID;;;WAED,gCAAuB;AACrB,UAAI,KAAKH,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,aAAKA,aAAL,CAAmBW,MAAnB;AACD;AACF;;;WAwDD,kBAAqB;AACnB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,MAAM,EAAEX,eAAT;AAA0BU,UAAAA,KAAK,EAAEX;AAAjC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAxEqCL,KAAK,CAACqB,S;;AA2E9CC,MAAM,CAACC,OAAP,GAAiBf,yBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst RCTNativeAppEventEmitter = require('react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter');\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {View} = ReactNative;\n\nconst {TestModule} = ReactNative.NativeModules;\nimport type EmitterSubscription from 'react-native/Libraries/vendor/emitter/EmitterSubscription';\n\nconst reactViewWidth = 111;\nconst reactViewHeight = 222;\n\nlet finalState = false;\n\ntype Props = $ReadOnly<{|\n  width: boolean,\n  height: boolean,\n  both: boolean,\n  none: boolean,\n|}>;\n\nclass SizeFlexibilityUpdateTest extends React.Component<Props> {\n  _subscription: ?EmitterSubscription = null;\n\n  UNSAFE_componentWillMount() {\n    this._subscription = RCTNativeAppEventEmitter.addListener(\n      'rootViewDidChangeIntrinsicSize',\n      this.rootViewDidChangeIntrinsicSize,\n    );\n  }\n\n  componentWillUnmount() {\n    if (this._subscription != null) {\n      this._subscription.remove();\n    }\n  }\n\n  markPassed: () => void = () => {\n    TestModule.markTestPassed(true);\n    finalState = true;\n  };\n\n  rootViewDidChangeIntrinsicSize: (intrinsicSize: {\n    height: number,\n    width: number,\n    ...\n  }) => void = (intrinsicSize: {width: number, height: number, ...}) => {\n    if (finalState) {\n      // If a test reaches its final state, it is not expected to do anything more\n      TestModule.markTestPassed(false);\n      return;\n    }\n\n    if (this.props.both) {\n      if (\n        intrinsicSize.width === reactViewWidth &&\n        intrinsicSize.height === reactViewHeight\n      ) {\n        this.markPassed();\n        return;\n      }\n    }\n    if (this.props.height) {\n      if (\n        intrinsicSize.width !== reactViewWidth &&\n        intrinsicSize.height === reactViewHeight\n      ) {\n        this.markPassed();\n        return;\n      }\n    }\n    if (this.props.width) {\n      if (\n        intrinsicSize.width === reactViewWidth &&\n        intrinsicSize.height !== reactViewHeight\n      ) {\n        this.markPassed();\n        return;\n      }\n    }\n    if (this.props.none) {\n      if (\n        intrinsicSize.width !== reactViewWidth &&\n        intrinsicSize.height !== reactViewHeight\n      ) {\n        this.markPassed();\n        return;\n      }\n    }\n  };\n\n  render(): React.Node {\n    return <View style={{height: reactViewHeight, width: reactViewWidth}} />;\n  }\n}\n\nmodule.exports = SizeFlexibilityUpdateTest;\n"]},"metadata":{},"sourceType":"script"}