{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ios_plugins_1 = require(\"../plugins/ios-plugins\");\n\nexports.withBranch = ios_plugins_1.createInfoPlistPlugin(setBranchApiKey, 'withBranch');\n\nfunction getBranchApiKey(config) {\n  var _a, _b, _c, _d;\n\n  return (_d = (_c = (_b = (_a = config.ios) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.branch) === null || _c === void 0 ? void 0 : _c.apiKey) !== null && _d !== void 0 ? _d : null;\n}\n\nexports.getBranchApiKey = getBranchApiKey;\n\nfunction setBranchApiKey(config, infoPlist) {\n  var apiKey = getBranchApiKey(config);\n\n  if (apiKey === null) {\n    return infoPlist;\n  }\n\n  return _extends(_extends({}, infoPlist), {\n    branch_key: {\n      live: apiKey\n    }\n  });\n}\n\nexports.setBranchApiKey = setBranchApiKey;","map":{"version":3,"sources":["../../src/ios/Branch.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAA,aAAA,GAAA,OAAA,0BAAA;;AAGa,OAAA,CAAA,UAAA,GAAa,aAAA,CAAA,qBAAA,CAAsB,eAAtB,EAAuC,YAAvC,CAAb;;AAEb,SAAgB,eAAhB,CAAgC,MAAhC,EAA+D;;;AAC7D,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAO,MAAM,CAAC,GAAd,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,MAAnB,MAAyB,IAAzB,IAAyB,EAAA,KAAA,KAAA,CAAzB,GAAyB,KAAA,CAAzB,GAAyB,EAAA,CAAE,MAA3B,MAAiC,IAAjC,IAAiC,EAAA,KAAA,KAAA,CAAjC,GAAiC,KAAA,CAAjC,GAAiC,EAAA,CAAE,MAAnC,MAAyC,IAAzC,IAAyC,EAAA,KAAA,KAAA,CAAzC,GAAyC,EAAzC,GAA6C,IAA7C;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA;;AAIA,SAAgB,eAAhB,CAAgC,MAAhC,EAAiE,SAAjE,EAAqF;AACnF,MAAM,MAAM,GAAG,eAAe,CAAC,MAAD,CAA9B;;AAEA,MAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,SAAP;AACD;;AAED,SAAA,SAAA,SAAA,EAAA,EACK,SADL,CAAA,EACc;AACZ,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE;AADI;AADA,GADd,CAAA;AAMD;;AAbD,OAAA,CAAA,eAAA,GAAA,eAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withBranch = createInfoPlistPlugin(setBranchApiKey, 'withBranch');\n\nexport function getBranchApiKey(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.config?.branch?.apiKey ?? null;\n}\n\nexport function setBranchApiKey(config: Pick<ExpoConfig, 'ios'>, infoPlist: InfoPlist): InfoPlist {\n  const apiKey = getBranchApiKey(config);\n\n  if (apiKey === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    branch_key: {\n      live: apiKey,\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}