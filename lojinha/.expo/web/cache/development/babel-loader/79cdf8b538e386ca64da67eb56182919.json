{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction strip(str) {\n  str = str.replace(/^\\s+/, '');\n  str = str.replace(/\\s+$/, '');\n  str = str.replace(/\\n(\\s*)/g, '\\n');\n  return str.replace(/[^\\S\\n]+/g, ' ');\n}\n\nexport function expectCodeIsEqual(actual, expected) {\n  expect(strip(actual)).toBe(strip(expected));\n}\nexport var FakeWritable = function () {\n  function FakeWritable() {\n    _classCallCheck(this, FakeWritable);\n\n    this.result = '';\n  }\n\n  _createClass(FakeWritable, [{\n    key: \"write\",\n    value: function write(str) {\n      this.result += str;\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.result;\n    }\n  }]);\n\n  return FakeWritable;\n}();","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactCommon/hermes/inspector/tools/msggen/src/TestHelpers.js"],"names":["strip","str","replace","expectCodeIsEqual","actual","expected","expect","toBe","FakeWritable","result"],"mappings":"AASA;;;;;AAGA,SAASA,KAAT,CAAeC,GAAf,EAAoB;AAElBA,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;AACAD,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;AAIAD,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,IAAxB,CAAN;AAGA,SAAOD,GAAG,CAACC,OAAJ,CAAY,WAAZ,EAAyB,GAAzB,CAAP;AACD;;AAED,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAClDC,EAAAA,MAAM,CAACN,KAAK,CAACI,MAAD,CAAN,CAAN,CAAsBG,IAAtB,CAA2BP,KAAK,CAACK,QAAD,CAAhC;AACD;AAED,WAAaG,YAAb;AACE,0BAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;;AAHH;AAAA;AAAA,WAKE,eAAMR,GAAN,EAAW;AACT,WAAKQ,MAAL,IAAeR,GAAf;AACD;AAPH;AAAA;AAAA,WASE,eAAM;AACJ,aAAO,KAAKQ,MAAZ;AACD;AAXH;;AAAA;AAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n /*global expect*/\n\n'use strict';\n\n// munges string so that it's nice to look at in a test diff\nfunction strip(str) {\n  // Trim leading and trailing WS\n  str = str.replace(/^\\s+/, '');\n  str = str.replace(/\\s+$/, '');\n\n  // Collapse all repeating newlines (possibly with spaces in between) into a\n  // single newline\n  str = str.replace(/\\n(\\s*)/g, '\\n');\n\n  // Collapse all non-newline whitespace into a single space\n  return str.replace(/[^\\S\\n]+/g, ' ');\n}\n\nexport function expectCodeIsEqual(actual, expected) {\n  expect(strip(actual)).toBe(strip(expected));\n}\n\nexport class FakeWritable {\n  constructor() {\n    this.result = '';\n  }\n\n  write(str) {\n    this.result += str;\n  }\n\n  get() {\n    return this.result;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}