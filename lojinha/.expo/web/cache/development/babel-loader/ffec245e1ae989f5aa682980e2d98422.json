{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar DatePickerAndroid = function () {\n  function DatePickerAndroid() {\n    _classCallCheck(this, DatePickerAndroid);\n  }\n\n  _createClass(DatePickerAndroid, null, [{\n    key: \"open\",\n    value: function open(options) {\n      return _regeneratorRuntime.async(function open$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              throw new Error('DatePickerAndroid is not supported on this platform.');\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DatePickerAndroid;\n}();\n\nDatePickerAndroid.dateSetAction = 'dateSetAction';\nDatePickerAndroid.dismissedAction = 'dismissedAction';\nmodule.exports = DatePickerAndroid;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/DatePickerAndroid/DatePickerAndroid.ios.js"],"names":["DatePickerAndroid","options","Error","dateSetAction","dismissedAction","module","exports"],"mappings":"AAUA;;;;;;;;IAIMA,iB;;;;;;;WACJ,cAAkBC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,IAAIC,KAAJ,CAAU,sDAAV,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AADIF,iB,CAQIG,a,GAAiC,e;AARrCH,iB,CAYII,e,GAAqC,iB;AAG/CC,MAAM,CAACC,OAAP,GAAiBN,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {Options, DatePickerOpenAction} from './DatePickerAndroidTypes';\n\nclass DatePickerAndroid {\n  static async open(options: ?Options): Promise<DatePickerOpenAction> {\n    throw new Error('DatePickerAndroid is not supported on this platform.');\n  }\n\n  /**\n   * A date has been selected.\n   */\n  static +dateSetAction: 'dateSetAction' = 'dateSetAction';\n  /**\n   * The dialog has been dismissed.\n   */\n  static +dismissedAction: 'dismissedAction' = 'dismissedAction';\n}\n\nmodule.exports = DatePickerAndroid;\n"]},"metadata":{},"sourceType":"script"}