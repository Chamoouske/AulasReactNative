{"ast":null,"code":"'use strict';\n\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Property } from \"./Property\";\nimport { jsTypeToCppType, toCppNamespace, toCppType } from \"./Converters\";\nexport var Type = function () {\n  function Type(domain, obj) {\n    _classCallCheck(this, Type);\n\n    this.domain = domain;\n    this.id = obj.id;\n    this.description = obj.description;\n    this.exported = obj.exported;\n    this.experimental = obj.experimental;\n  }\n\n  _createClass(Type, [{\n    key: \"getDebuggerName\",\n    value: function getDebuggerName() {\n      return this.domain + \".\" + this.id;\n    }\n  }, {\n    key: \"getCppNamespace\",\n    value: function getCppNamespace() {\n      return toCppNamespace(this.domain);\n    }\n  }, {\n    key: \"getCppType\",\n    value: function getCppType() {\n      return toCppType(this.id);\n    }\n  }, {\n    key: \"getForwardDecls\",\n    value: function getForwardDecls() {\n      throw new Error('subclass must implement');\n    }\n  }, {\n    key: \"getForwardDeclSortKey\",\n    value: function getForwardDeclSortKey() {\n      return this.getCppType();\n    }\n  }], [{\n    key: \"create\",\n    value: function create(domain, obj, ignoreExperimental) {\n      var type = null;\n\n      if (obj.type === 'object' && obj.properties) {\n        type = new PropsType(domain, obj, ignoreExperimental);\n      } else if (obj.type) {\n        type = new PrimitiveType(domain, obj, ignoreExperimental);\n      } else {\n        throw new TypeError('Type requires `type` property.');\n      }\n\n      if (ignoreExperimental && type.experimental) {\n        type = null;\n      }\n\n      return type;\n    }\n  }]);\n\n  return Type;\n}();\nexport var PrimitiveType = function (_Type) {\n  _inherits(PrimitiveType, _Type);\n\n  var _super = _createSuper(PrimitiveType);\n\n  function PrimitiveType(domain, obj, ignoreExperimental) {\n    var _this;\n\n    _classCallCheck(this, PrimitiveType);\n\n    _this = _super.call(this, domain, obj);\n    _this.type = obj.type;\n    return _this;\n  }\n\n  _createClass(PrimitiveType, [{\n    key: \"getForwardDecls\",\n    value: function getForwardDecls() {\n      return [\"using \" + this.getCppType() + \" = \" + jsTypeToCppType(this.type) + \";\"];\n    }\n  }]);\n\n  return PrimitiveType;\n}(Type);\nexport var PropsType = function (_Type2) {\n  _inherits(PropsType, _Type2);\n\n  var _super2 = _createSuper(PropsType);\n\n  function PropsType(domain, obj, ignoreExperimental) {\n    var _this2;\n\n    _classCallCheck(this, PropsType);\n\n    _this2 = _super2.call(this, domain, obj);\n    _this2.type = obj.type;\n    _this2.properties = Property.createArray(domain, obj.properties || [], ignoreExperimental);\n    return _this2;\n  }\n\n  _createClass(PropsType, [{\n    key: \"getForwardDecls\",\n    value: function getForwardDecls() {\n      return [\"struct \" + this.getCppType() + \";\"];\n    }\n  }]);\n\n  return PropsType;\n}(Type);","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactCommon/hermes/inspector/tools/msggen/src/Type.js"],"names":["Property","jsTypeToCppType","toCppNamespace","toCppType","Type","domain","obj","id","description","exported","experimental","Error","getCppType","ignoreExperimental","type","properties","PropsType","PrimitiveType","TypeError","createArray"],"mappings":"AAUA;;;;;;;;;;;;AAEA,SAAQA,QAAR;AACA,SAAQC,eAAR,EAAyBC,cAAzB,EAAyCC,SAAzC;AAEA,WAAaC,IAAb;AAyBE,gBAAYC,MAAZ,EAA4BC,GAA5B,EAAsC;AAAA;;AACpC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,EAAL,GAAUD,GAAG,CAACC,EAAd;AACA,SAAKC,WAAL,GAAmBF,GAAG,CAACE,WAAvB;AACA,SAAKC,QAAL,GAAgBH,GAAG,CAACG,QAApB;AACA,SAAKC,YAAL,GAAoBJ,GAAG,CAACI,YAAxB;AACD;;AA/BH;AAAA;AAAA,WAiCE,2BAA0B;AACxB,aAAU,KAAKL,MAAf,SAAyB,KAAKE,EAA9B;AACD;AAnCH;AAAA;AAAA,WAqCE,2BAA0B;AACxB,aAAOL,cAAc,CAAC,KAAKG,MAAN,CAArB;AACD;AAvCH;AAAA;AAAA,WAyCE,sBAAqB;AACnB,aAAOF,SAAS,CAAC,KAAKI,EAAN,CAAhB;AACD;AA3CH;AAAA;AAAA,WA6CE,2BAAiC;AAC/B,YAAM,IAAII,KAAJ,CAAU,yBAAV,CAAN;AACD;AA/CH;AAAA;AAAA,WAiDE,iCAAgC;AAC9B,aAAO,KAAKC,UAAL,EAAP;AACD;AAnDH;AAAA;AAAA,WAOE,gBAAcP,MAAd,EAA8BC,GAA9B,EAAwCO,kBAAxC,EAA4E;AAC1E,UAAIC,IAAI,GAAG,IAAX;;AAEA,UAAIR,GAAG,CAACQ,IAAJ,KAAa,QAAb,IAAyBR,GAAG,CAACS,UAAjC,EAA6C;AAC3CD,QAAAA,IAAI,GAAG,IAAIE,SAAJ,CAAcX,MAAd,EAAsBC,GAAtB,EAA2BO,kBAA3B,CAAP;AACD,OAFD,MAEO,IAAIP,GAAG,CAACQ,IAAR,EAAc;AACnBA,QAAAA,IAAI,GAAG,IAAIG,aAAJ,CAAkBZ,MAAlB,EAA0BC,GAA1B,EAA+BO,kBAA/B,CAAP;AACD,OAFM,MAEA;AACL,cAAM,IAAIK,SAAJ,CAAc,gCAAd,CAAN;AACD;;AAED,UAAIL,kBAAkB,IAAIC,IAAI,CAACJ,YAA/B,EAA6C;AAC3CI,QAAAA,IAAI,GAAG,IAAP;AACD;;AAED,aAAOA,IAAP;AACD;AAvBH;;AAAA;AAAA;AAsDA,WAAaG,aAAb;AAAA;;AAAA;;AAGE,yBAAYZ,MAAZ,EAA4BC,GAA5B,EAAsCO,kBAAtC,EAAmE;AAAA;;AAAA;;AACjE,8BAAMR,MAAN,EAAcC,GAAd;AACA,UAAKQ,IAAL,GAAYR,GAAG,CAACQ,IAAhB;AAFiE;AAGlE;;AANH;AAAA;AAAA,WAQE,2BAAiC;AAC/B,aAAO,YAAU,KAAKF,UAAL,EAAV,WAAiCX,eAAe,CAAC,KAAKa,IAAN,CAAhD,OAAP;AACD;AAVH;;AAAA;AAAA,EAAmCV,IAAnC;AAaA,WAAaY,SAAb;AAAA;;AAAA;;AAIE,qBAAYX,MAAZ,EAA4BC,GAA5B,EAAsCO,kBAAtC,EAAmE;AAAA;;AAAA;;AACjE,gCAAMR,MAAN,EAAcC,GAAd;AACA,WAAKQ,IAAL,GAAYR,GAAG,CAACQ,IAAhB;AACA,WAAKC,UAAL,GAAkBf,QAAQ,CAACmB,WAAT,CAChBd,MADgB,EAEhBC,GAAG,CAACS,UAAJ,IAAkB,EAFF,EAGhBF,kBAHgB,CAAlB;AAHiE;AAQlE;;AAZH;AAAA;AAAA,WAcE,2BAAiC;AAC/B,aAAO,aAAW,KAAKD,UAAL,EAAX,OAAP;AACD;AAhBH;;AAAA;AAAA,EAA+BR,IAA/B","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport {Property} from './Property';\nimport {jsTypeToCppType, toCppNamespace, toCppType} from './Converters';\n\nexport class Type {\n  domain: string;\n  id: string;\n  description: ?string;\n  exported: ?boolean;\n  experimental: ?boolean;\n\n  static create(domain: string, obj: any, ignoreExperimental: boolean): ?Type {\n    let type = null;\n\n    if (obj.type === 'object' && obj.properties) {\n      type = new PropsType(domain, obj, ignoreExperimental);\n    } else if (obj.type) {\n      type = new PrimitiveType(domain, obj, ignoreExperimental);\n    } else {\n      throw new TypeError('Type requires `type` property.');\n    }\n\n    if (ignoreExperimental && type.experimental) {\n      type = null;\n    }\n\n    return type;\n  }\n\n  constructor(domain: string, obj: any) {\n    this.domain = domain;\n    this.id = obj.id;\n    this.description = obj.description;\n    this.exported = obj.exported;\n    this.experimental = obj.experimental;\n  }\n\n  getDebuggerName(): string {\n    return `${this.domain}.${this.id}`;\n  }\n\n  getCppNamespace(): string {\n    return toCppNamespace(this.domain);\n  }\n\n  getCppType(): string {\n    return toCppType(this.id);\n  }\n\n  getForwardDecls(): Array<string> {\n    throw new Error('subclass must implement');\n  }\n\n  getForwardDeclSortKey(): string {\n    return this.getCppType();\n  }\n}\n\nexport class PrimitiveType extends Type {\n  type: 'integer' | 'number' | 'object' | 'string';\n\n  constructor(domain: string, obj: any, ignoreExperimental: boolean) {\n    super(domain, obj);\n    this.type = obj.type;\n  }\n\n  getForwardDecls(): Array<string> {\n    return [`using ${this.getCppType()} = ${jsTypeToCppType(this.type)};`];\n  }\n}\n\nexport class PropsType extends Type {\n  type: 'object';\n  properties: Array<Property>;\n\n  constructor(domain: string, obj: any, ignoreExperimental: boolean) {\n    super(domain, obj);\n    this.type = obj.type;\n    this.properties = Property.createArray(\n      domain,\n      obj.properties || [],\n      ignoreExperimental,\n    );\n  }\n\n  getForwardDecls(): Array<string> {\n    return [`struct ${this.getCppType()};`];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}