{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ActivityIndicator/ActivityIndicatorExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { Component } from 'react';\n\nvar ToggleAnimatingActivityIndicator = function (_Component) {\n  _inherits(ToggleAnimatingActivityIndicator, _Component);\n\n  var _super = _createSuper(ToggleAnimatingActivityIndicator);\n\n  function ToggleAnimatingActivityIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleAnimatingActivityIndicator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      animating: true\n    };\n    return _this;\n  }\n\n  _createClass(ToggleAnimatingActivityIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setToggleTimeout();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this._timer);\n    }\n  }, {\n    key: \"setToggleTimeout\",\n    value: function setToggleTimeout() {\n      var _this2 = this;\n\n      this._timer = setTimeout(function () {\n        _this2.setState({\n          animating: !_this2.state.animating\n        });\n\n        _this2.setToggleTimeout();\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ActivityIndicator, {\n        animating: this.state.animating,\n        style: [styles.centering, {\n          height: 80\n        }],\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ToggleAnimatingActivityIndicator;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centering: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8\n  },\n  gray: {\n    backgroundColor: '#cccccc'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 8\n  }\n});\nexports.displayName = undefined;\nexports.framework = 'React';\nexports.title = '<ActivityIndicator>';\nexports.description = 'Animated loading indicators.';\nexports.examples = [{\n  title: 'Default (small, white)',\n  render: function render() {\n    return React.createElement(ActivityIndicator, {\n      style: [styles.centering, styles.gray],\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: 'Gray',\n  render: function render() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      style: [styles.centering],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      style: [styles.centering, styles.gray],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'Custom colors',\n  render: function render() {\n    return React.createElement(View, {\n      style: styles.horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: \"#0000ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      color: \"#aa00aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      color: \"#aa3300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      color: \"#00aa00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'Large',\n  render: function render() {\n    return React.createElement(ActivityIndicator, {\n      style: [styles.centering, styles.gray],\n      size: \"large\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: 'Large, custom colors',\n  render: function render() {\n    return React.createElement(View, {\n      style: styles.horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#aa00aa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#aa3300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#00aa00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: 'Start/stop',\n  render: function render() {\n    return React.createElement(ToggleAnimatingActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Custom size',\n  render: function render() {\n    return React.createElement(ActivityIndicator, {\n      style: [styles.centering, {\n        transform: [{\n          scale: 1.5\n        }]\n      }],\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  platform: 'android',\n  title: 'Custom size (size: 75)',\n  render: function render() {\n    return React.createElement(ActivityIndicator, {\n      style: styles.centering,\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ActivityIndicator/ActivityIndicatorExample.js"],"names":["React","Component","ToggleAnimatingActivityIndicator","props","state","animating","setToggleTimeout","clearTimeout","_timer","setTimeout","setState","styles","centering","height","StyleSheet","create","alignItems","justifyContent","padding","gray","backgroundColor","horizontal","flexDirection","exports","displayName","undefined","framework","title","description","examples","render","transform","scale","platform"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\nimport type {Node} from 'React';\nimport {ActivityIndicator, StyleSheet, View} from 'react-native';\nimport React, {Component} from 'react';\n\ntype State = {|animating: boolean|};\ntype Props = $ReadOnly<{||}>;\ntype Timer = TimeoutID;\n\nclass ToggleAnimatingActivityIndicator extends Component<Props, State> {\n  _timer: Timer;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      animating: true,\n    };\n  }\n\n  componentDidMount() {\n    this.setToggleTimeout();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._timer);\n  }\n\n  setToggleTimeout() {\n    this._timer = setTimeout(() => {\n      this.setState({animating: !this.state.animating});\n      this.setToggleTimeout();\n    }, 2000);\n  }\n\n  render(): Node {\n    return (\n      <ActivityIndicator\n        animating={this.state.animating}\n        style={[styles.centering, {height: 80}]}\n        size=\"large\"\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  centering: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8,\n  },\n  gray: {\n    backgroundColor: '#cccccc',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 8,\n  },\n});\n\nexports.displayName = (undefined: ?string);\nexports.framework = 'React';\nexports.title = '<ActivityIndicator>';\nexports.description = 'Animated loading indicators.';\n\nexports.examples = [\n  {\n    title: 'Default (small, white)',\n    render(): Node {\n      return (\n        <ActivityIndicator\n          style={[styles.centering, styles.gray]}\n          color=\"white\"\n        />\n      );\n    },\n  },\n  {\n    title: 'Gray',\n    render(): Node {\n      return (\n        <View>\n          <ActivityIndicator style={[styles.centering]} />\n          <ActivityIndicator style={[styles.centering, styles.gray]} />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Custom colors',\n    render(): Node {\n      return (\n        <View style={styles.horizontal}>\n          <ActivityIndicator color=\"#0000ff\" />\n          <ActivityIndicator color=\"#aa00aa\" />\n          <ActivityIndicator color=\"#aa3300\" />\n          <ActivityIndicator color=\"#00aa00\" />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Large',\n    render(): Node {\n      return (\n        <ActivityIndicator\n          style={[styles.centering, styles.gray]}\n          size=\"large\"\n          color=\"white\"\n        />\n      );\n    },\n  },\n  {\n    title: 'Large, custom colors',\n    render(): Node {\n      return (\n        <View style={styles.horizontal}>\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n          <ActivityIndicator size=\"large\" color=\"#aa00aa\" />\n          <ActivityIndicator size=\"large\" color=\"#aa3300\" />\n          <ActivityIndicator size=\"large\" color=\"#00aa00\" />\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Start/stop',\n    render(): Node {\n      return <ToggleAnimatingActivityIndicator />;\n    },\n  },\n  {\n    title: 'Custom size',\n    render(): Node {\n      return (\n        <ActivityIndicator\n          style={[styles.centering, {transform: [{scale: 1.5}]}]}\n          size=\"large\"\n        />\n      );\n    },\n  },\n  {\n    platform: 'android',\n    title: 'Custom size (size: 75)',\n    render(): Node {\n      return <ActivityIndicator style={styles.centering} size={75} />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}