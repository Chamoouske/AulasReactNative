{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction _deepmerge() {\n  var data = _interopRequireDefault(require(\"deepmerge\"));\n\n  _deepmerge = function _deepmerge() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction merge(x, y) {\n  return (0, _deepmerge().default)(x, y, {\n    arrayMerge: function arrayMerge(_destinationArray, sourceArray) {\n      return sourceArray;\n    }\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/merge.js"],"names":["Object","defineProperty","exports","value","default","merge","_deepmerge","data","_interopRequireDefault","require","obj","__esModule","x","y","arrayMerge","_destinationArray","sourceArray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,SAASC,UAAT,GAAsB;AACpB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAAnC;;AAEAH,EAAAA,UAAU,GAAG,sBAAY;AACvB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAM/F,SAASL,KAAT,CAAeO,CAAf,EAAkBC,CAAlB,EAAqB;AACnB,SAAO,CAAC,GAAGP,UAAU,GAAGF,OAAjB,EAA0BQ,CAA1B,EAA6BC,CAA7B,EAAgC;AACrCC,IAAAA,UAAU,EAAE,oBAACC,iBAAD,EAAoBC,WAApB;AAAA,aAAoCA,WAApC;AAAA;AADyB,GAAhC,CAAP;AAGD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction _deepmerge() {\n  const data = _interopRequireDefault(require(\"deepmerge\"));\n\n  _deepmerge = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `deepmerge` concatenates arrays by default instead of overwriting them.\n * We define custom merging function for arrays to change that behaviour\n */\nfunction merge(x, y) {\n  return (0, _deepmerge().default)(x, y, {\n    arrayMerge: (_destinationArray, sourceArray) => sourceArray\n  });\n}\n\n//# sourceMappingURL=merge.js.map"]},"metadata":{},"sourceType":"script"}