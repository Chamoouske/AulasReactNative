{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ProgressViewIOS/ProgressViewIOSExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar ProgressViewExample = function (_React$Component) {\n  _inherits(ProgressViewExample, _React$Component);\n\n  var _super = _createSuper(ProgressViewExample);\n\n  function ProgressViewExample() {\n    var _this;\n\n    _classCallCheck(this, ProgressViewExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._rafId = null;\n    _this.state = {\n      progress: 0\n    };\n\n    _this.updateProgress = function () {\n      var progress = _this.state.progress + 0.01;\n\n      _this.setState({\n        progress: progress\n      });\n\n      _this._rafId = requestAnimationFrame(function () {\n        return _this.updateProgress();\n      });\n    };\n\n    _this.getProgress = function (offset) {\n      var progress = _this.state.progress + offset;\n      return Math.sin(progress % Math.PI) % 1;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProgressViewExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateProgress();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._rafId != null) {\n        cancelAnimationFrame(this._rafId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(ProgressViewIOS, {\n        style: styles.progressView,\n        progress: this.getProgress(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressViewIOS, {\n        style: styles.progressView,\n        progressTintColor: \"purple\",\n        progress: this.getProgress(0.2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressViewIOS, {\n        style: styles.progressView,\n        progressTintColor: \"red\",\n        progress: this.getProgress(0.4),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressViewIOS, {\n        style: styles.progressView,\n        progressTintColor: \"orange\",\n        progress: this.getProgress(0.6),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressViewIOS, {\n        style: styles.progressView,\n        progressTintColor: \"yellow\",\n        progress: this.getProgress(0.8),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ProgressViewExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: -20,\n    backgroundColor: 'transparent'\n  },\n  progressView: {\n    marginTop: 20\n  }\n});\nexports.displayName = undefined;\nexports.framework = 'React';\nexports.title = 'ProgressViewIOS';\nexports.description = 'ProgressViewIOS';\nexports.examples = [{\n  title: 'ProgressViewIOS',\n  render: function render() {\n    return React.createElement(ProgressViewExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ProgressViewIOS/ProgressViewIOSExample.js"],"names":["React","require","ProgressViewExample","_rafId","state","progress","updateProgress","setState","requestAnimationFrame","getProgress","offset","Math","sin","PI","cancelAnimationFrame","styles","container","progressView","Component","StyleSheet","create","marginTop","backgroundColor","exports","displayName","undefined","framework","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {ProgressViewIOS, StyleSheet, View} = require('react-native');\n\ntype Props = {||};\ntype State = {|\n  progress: number,\n|};\n\nclass ProgressViewExample extends React.Component<Props, State> {\n  _rafId: ?AnimationFrameID = null;\n\n  state = {\n    progress: 0,\n  };\n\n  componentDidMount() {\n    this.updateProgress();\n  }\n\n  componentWillUnmount() {\n    if (this._rafId != null) {\n      cancelAnimationFrame(this._rafId);\n    }\n  }\n\n  updateProgress = () => {\n    const progress = this.state.progress + 0.01;\n    this.setState({progress});\n    this._rafId = requestAnimationFrame(() => this.updateProgress());\n  };\n\n  getProgress = offset => {\n    const progress = this.state.progress + offset;\n    return Math.sin(progress % Math.PI) % 1;\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ProgressViewIOS\n          style={styles.progressView}\n          progress={this.getProgress(0)}\n        />\n        <ProgressViewIOS\n          style={styles.progressView}\n          progressTintColor=\"purple\"\n          progress={this.getProgress(0.2)}\n        />\n        <ProgressViewIOS\n          style={styles.progressView}\n          progressTintColor=\"red\"\n          progress={this.getProgress(0.4)}\n        />\n        <ProgressViewIOS\n          style={styles.progressView}\n          progressTintColor=\"orange\"\n          progress={this.getProgress(0.6)}\n        />\n        <ProgressViewIOS\n          style={styles.progressView}\n          progressTintColor=\"yellow\"\n          progress={this.getProgress(0.8)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: -20,\n    backgroundColor: 'transparent',\n  },\n  progressView: {\n    marginTop: 20,\n  },\n});\n\nexports.displayName = (undefined: ?string);\nexports.framework = 'React';\nexports.title = 'ProgressViewIOS';\nexports.description = 'ProgressViewIOS';\nexports.examples = [\n  {\n    title: 'ProgressViewIOS',\n    render(): React.Node {\n      return <ProgressViewExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}