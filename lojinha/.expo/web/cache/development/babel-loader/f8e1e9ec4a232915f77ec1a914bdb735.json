{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/MultiColumn/MultiColumnExample.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar React = require('react');\n\nvar infoLog = require(\"../../../../Libraries/Utilities/infoLog\");\n\nvar _require = require(\"../../components/ListExampleShared\"),\n    FooterComponent = _require.FooterComponent,\n    HeaderComponent = _require.HeaderComponent,\n    ItemComponent = _require.ItemComponent,\n    PlainInput = _require.PlainInput,\n    SeparatorComponent = _require.SeparatorComponent,\n    genItemData = _require.genItemData,\n    getItemLayout = _require.getItemLayout,\n    pressItem = _require.pressItem,\n    renderSmallSwitchOption = _require.renderSmallSwitchOption;\n\nvar FlatList = require(\"react-native-web/dist/exports/FlatList\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar MultiColumnExample = function (_React$PureComponent) {\n  _inherits(MultiColumnExample, _React$PureComponent);\n\n  var _super = _createSuper(MultiColumnExample);\n\n  function MultiColumnExample() {\n    var _this;\n\n    _classCallCheck(this, MultiColumnExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: genItemData(1000),\n      filterText: '',\n      fixedHeight: true,\n      logViewable: false,\n      numColumns: 2,\n      virtualized: true\n    };\n\n    _this._onChangeFilterText = function (filterText) {\n      _this.setState(function () {\n        return {\n          filterText: filterText\n        };\n      });\n    };\n\n    _this._onChangeNumColumns = function (numColumns) {\n      _this.setState(function () {\n        return {\n          numColumns: Number(numColumns)\n        };\n      });\n    };\n\n    _this._renderItemComponent = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.card,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(ItemComponent, {\n        item: item,\n        fixedHeight: _this.state.fixedHeight,\n        onPress: _this._pressItem,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this._onViewableItemsChanged = function (info) {\n      if (_this.state.logViewable) {\n        infoLog('onViewableItemsChanged: ', info.changed.map(function (v) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            item: '...'\n          });\n        }));\n      }\n    };\n\n    _this._pressItem = function (key) {\n      pressItem(_assertThisInitialized(_this), key);\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiColumnExample, [{\n    key: \"render\",\n    value: function render() {\n      var filterRegex = new RegExp(String(this.state.filterText), 'i');\n\n      var filter = function filter(item) {\n        return filterRegex.test(item.text) || filterRegex.test(item.title);\n      };\n\n      var filteredData = this.state.data.filter(filter);\n      return React.createElement(RNTesterPage, {\n        title: this.props.navigator ? null : '<FlatList> - MultiColumn',\n        noSpacer: true,\n        noScroll: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.searchRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, React.createElement(PlainInput, {\n        onChangeText: this._onChangeFilterText,\n        placeholder: \"Search...\",\n        value: this.state.filterText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \" numColumns: \"), React.createElement(PlainInput, {\n        clearButtonMode: \"never\",\n        onChangeText: this._onChangeNumColumns,\n        value: this.state.numColumns ? String(this.state.numColumns) : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, renderSmallSwitchOption(this, 'virtualized'), renderSmallSwitchOption(this, 'fixedHeight'), renderSmallSwitchOption(this, 'logViewable'))), React.createElement(SeparatorComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        ListFooterComponent: FooterComponent,\n        ListHeaderComponent: HeaderComponent,\n        getItemLayout: this.state.fixedHeight ? this._getItemLayout : undefined,\n        data: filteredData,\n        key: this.state.numColumns + (this.state.fixedHeight ? 'f' : 'v'),\n        numColumns: this.state.numColumns || 1,\n        onRefresh: function onRefresh() {\n          return Alert.alert('Alert', 'onRefresh: nothing to refresh :P');\n        },\n        refreshing: false,\n        renderItem: this._renderItemComponent,\n        disableVirtualization: !this.state.virtualized,\n        onViewableItemsChanged: this._onViewableItemsChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_getItemLayout\",\n    value: function _getItemLayout(data, index) {\n      var length = getItemLayout(data, index).length + 2 * (CARD_MARGIN + BORDER_WIDTH);\n      return {\n        length: length,\n        offset: length * index,\n        index: index\n      };\n    }\n  }]);\n\n  return MultiColumnExample;\n}(React.PureComponent);\n\nvar CARD_MARGIN = 4;\nvar BORDER_WIDTH = 1;\nvar styles = StyleSheet.create({\n  card: {\n    margin: CARD_MARGIN,\n    borderRadius: 10,\n    flex: 1,\n    overflow: 'hidden',\n    borderColor: 'lightgray',\n    borderWidth: BORDER_WIDTH\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  searchRow: {\n    padding: 10\n  }\n});\nexports.title = '<FlatList> - MultiColumn';\nexports.description = 'Performant, scrollable grid of data.';\nexports.examples = [{\n  title: 'Simple flat list multi column',\n  render: function render() {\n    return React.createElement(MultiColumnExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/MultiColumn/MultiColumnExample.js"],"names":["RNTesterPage","require","React","infoLog","FooterComponent","HeaderComponent","ItemComponent","PlainInput","SeparatorComponent","genItemData","getItemLayout","pressItem","renderSmallSwitchOption","MultiColumnExample","state","data","filterText","fixedHeight","logViewable","numColumns","virtualized","_onChangeFilterText","setState","_onChangeNumColumns","Number","_renderItemComponent","item","styles","card","_pressItem","_onViewableItemsChanged","info","changed","map","v","key","filterRegex","RegExp","String","filter","test","text","title","filteredData","props","navigator","searchRow","row","_getItemLayout","undefined","Alert","alert","index","length","CARD_MARGIN","BORDER_WIDTH","offset","PureComponent","StyleSheet","create","margin","borderRadius","flex","overflow","borderColor","borderWidth","flexDirection","alignItems","padding","exports","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\nconst RNTesterPage = require('../../components/RNTesterPage');\nconst React = require('react');\n\nconst infoLog = require('../../../../Libraries/Utilities/infoLog');\n\nconst {\n  FooterComponent,\n  HeaderComponent,\n  ItemComponent,\n  PlainInput,\n  SeparatorComponent,\n  genItemData,\n  getItemLayout,\n  pressItem,\n  renderSmallSwitchOption,\n} = require('../../components/ListExampleShared');\nconst {FlatList, StyleSheet, Text, View, Alert} = require('react-native');\n\nimport type {Item} from '../../components/ListExampleShared';\n\nclass MultiColumnExample extends React.PureComponent<\n  $FlowFixMeProps,\n  $FlowFixMeState,\n> {\n  state:\n    | any\n    | {|\n        data: Array<Item>,\n        filterText: string,\n        fixedHeight: boolean,\n        logViewable: boolean,\n        numColumns: number,\n        virtualized: boolean,\n      |} = {\n    data: genItemData(1000),\n    filterText: '',\n    fixedHeight: true,\n    logViewable: false,\n    numColumns: 2,\n    virtualized: true,\n  };\n  _onChangeFilterText = filterText => {\n    this.setState(() => ({filterText}));\n  };\n  _onChangeNumColumns = numColumns => {\n    this.setState(() => ({numColumns: Number(numColumns)}));\n  };\n  render(): React.Node {\n    const filterRegex = new RegExp(String(this.state.filterText), 'i');\n    const filter = item =>\n      filterRegex.test(item.text) || filterRegex.test(item.title);\n    const filteredData = this.state.data.filter(filter);\n    return (\n      <RNTesterPage\n        title={this.props.navigator ? null : '<FlatList> - MultiColumn'}\n        noSpacer={true}\n        noScroll={true}>\n        <View style={styles.searchRow}>\n          <View style={styles.row}>\n            <PlainInput\n              onChangeText={this._onChangeFilterText}\n              placeholder=\"Search...\"\n              value={this.state.filterText}\n            />\n            <Text> numColumns: </Text>\n            <PlainInput\n              clearButtonMode=\"never\"\n              onChangeText={this._onChangeNumColumns}\n              value={this.state.numColumns ? String(this.state.numColumns) : ''}\n            />\n          </View>\n          <View style={styles.row}>\n            {renderSmallSwitchOption(this, 'virtualized')}\n            {renderSmallSwitchOption(this, 'fixedHeight')}\n            {renderSmallSwitchOption(this, 'logViewable')}\n          </View>\n        </View>\n        <SeparatorComponent />\n        <FlatList\n          ListFooterComponent={FooterComponent}\n          ListHeaderComponent={HeaderComponent}\n          getItemLayout={\n            this.state.fixedHeight ? this._getItemLayout : undefined\n          }\n          data={filteredData}\n          key={this.state.numColumns + (this.state.fixedHeight ? 'f' : 'v')}\n          numColumns={this.state.numColumns || 1}\n          onRefresh={() =>\n            Alert.alert('Alert', 'onRefresh: nothing to refresh :P')\n          }\n          refreshing={false}\n          renderItem={this._renderItemComponent}\n          disableVirtualization={!this.state.virtualized}\n          onViewableItemsChanged={this._onViewableItemsChanged}\n        />\n      </RNTesterPage>\n    );\n  }\n  _getItemLayout(\n    data: any,\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  } {\n    const length =\n      getItemLayout(data, index).length + 2 * (CARD_MARGIN + BORDER_WIDTH);\n    return {length, offset: length * index, index};\n  }\n  _renderItemComponent = ({item}) => {\n    return (\n      <View style={styles.card}>\n        <ItemComponent\n          item={item}\n          fixedHeight={this.state.fixedHeight}\n          onPress={this._pressItem}\n        />\n      </View>\n    );\n  };\n  // This is called when items change viewability by scrolling into or out of the viewable area.\n  _onViewableItemsChanged = (info: {\n    changed: Array<{\n      key: string,\n      isViewable: boolean,\n      item: {columns: Array<*>, ...},\n      index: ?number,\n      section?: any,\n      ...\n    }>,\n    ...\n  }) => {\n    // Impressions can be logged here\n    if (this.state.logViewable) {\n      infoLog(\n        'onViewableItemsChanged: ',\n        info.changed.map(v => ({...v, item: '...'})),\n      );\n    }\n  };\n  _pressItem = (key: string) => {\n    pressItem(this, key);\n  };\n}\n\nconst CARD_MARGIN = 4;\nconst BORDER_WIDTH = 1;\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: CARD_MARGIN,\n    borderRadius: 10,\n    flex: 1,\n    overflow: 'hidden',\n    borderColor: 'lightgray',\n    borderWidth: BORDER_WIDTH,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  searchRow: {\n    padding: 10,\n  },\n});\n\nexports.title = '<FlatList> - MultiColumn';\nexports.description = 'Performant, scrollable grid of data.';\nexports.examples = [\n  {\n    title: 'Simple flat list multi column',\n    render: function(): React.Element<typeof MultiColumnExample> {\n      return <MultiColumnExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}