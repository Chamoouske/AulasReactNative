{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAssets;\n\nfunction _glob() {\n  var data = _interopRequireDefault(require(\"glob\"));\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar findAssetsInFolder = function findAssetsInFolder(folder) {\n  var assets = _glob().default.sync(_path().default.join(folder, '**'), {\n    nodir: true\n  });\n\n  if (process.platform === 'win32') {\n    return assets.map(function (asset) {\n      return asset.split('/').join('\\\\');\n    });\n  }\n\n  return assets;\n};\n\nfunction findAssets(folder, assets) {\n  return (assets || []).map(function (asset) {\n    return _path().default.join(folder, asset);\n  }).reduce(function (acc, assetPath) {\n    return acc.concat(findAssetsInFolder(assetPath));\n  }, []);\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/config/findAssets.js"],"names":["Object","defineProperty","exports","value","default","findAssets","_glob","data","_interopRequireDefault","require","_path","obj","__esModule","findAssetsInFolder","folder","assets","sync","join","nodir","process","platform","map","asset","split","reduce","acc","assetPath","concat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,SAASC,KAAT,GAAiB;AACf,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,KAAT,GAAiB;AACf,MAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAC,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM,EAAI;AACnC,MAAMC,MAAM,GAAGT,KAAK,GAAGF,OAAR,CAAgBY,IAAhB,CAAqBN,KAAK,GAAGN,OAAR,CAAgBa,IAAhB,CAAqBH,MAArB,EAA6B,IAA7B,CAArB,EAAyD;AACtEI,IAAAA,KAAK,EAAE;AAD+D,GAAzD,CAAf;;AAIA,MAAIC,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAChC,WAAOL,MAAM,CAACM,GAAP,CAAW,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBN,IAAjB,CAAsB,IAAtB,CAAJ;AAAA,KAAhB,CAAP;AACD;;AAED,SAAOF,MAAP;AACD,CAVD;;AAmBA,SAASV,UAAT,CAAoBS,MAApB,EAA4BC,MAA5B,EAAoC;AAClC,SAAO,CAACA,MAAM,IAAI,EAAX,EAAeM,GAAf,CAAmB,UAAAC,KAAK;AAAA,WAAIZ,KAAK,GAAGN,OAAR,CAAgBa,IAAhB,CAAqBH,MAArB,EAA6BQ,KAA7B,CAAJ;AAAA,GAAxB,EAAiEE,MAAjE,CAAwE,UAACC,GAAD,EAAMC,SAAN;AAAA,WAAoBD,GAAG,CAACE,MAAJ,CAAWd,kBAAkB,CAACa,SAAD,CAA7B,CAApB;AAAA,GAAxE,EAAuI,EAAvI,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findAssets;\n\nfunction _glob() {\n  const data = _interopRequireDefault(require(\"glob\"));\n\n  _glob = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst findAssetsInFolder = folder => {\n  const assets = _glob().default.sync(_path().default.join(folder, '**'), {\n    nodir: true\n  });\n\n  if (process.platform === 'win32') {\n    return assets.map(asset => asset.split('/').join('\\\\'));\n  }\n\n  return assets;\n};\n/**\n * Given an array of assets folders, e.g. ['Fonts', 'Images'],\n * it globs in them to find all files that can be copied.\n *\n * It returns an array of absolute paths to files found.\n */\n\n\nfunction findAssets(folder, assets) {\n  return (assets || []).map(asset => _path().default.join(folder, asset)).reduce((acc, assetPath) => acc.concat(findAssetsInFolder(assetPath)), []);\n}\n\n//# sourceMappingURL=findAssets.js.map"]},"metadata":{},"sourceType":"script"}