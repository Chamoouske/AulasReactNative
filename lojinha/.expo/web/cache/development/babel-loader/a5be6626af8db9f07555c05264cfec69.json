{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Batchinator from \"../Batchinator\";\nimport FillRateHelper from \"../FillRateHelper\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport RefreshControl from \"../../../exports/RefreshControl\";\nimport ScrollView from \"../../../exports/ScrollView\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport UIManager from \"../../../exports/UIManager\";\nimport View from \"../../../exports/View\";\nimport ViewabilityHelper from \"../ViewabilityHelper\";\nimport findNodeHandle from \"../../../exports/findNodeHandle\";\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from \"../infoLog\";\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nimport { computeWindowedRenderLimits } from \"../VirtualizeUtils\";\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n\n  var _super = _createSuper(VirtualizedList);\n\n  function VirtualizedList(_props, context) {\n    var _this;\n\n    _classCallCheck(this, VirtualizedList);\n\n    _this = _super.call(this, _props, context);\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.virtualizedList.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.');\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDataChangedSinceEndReached = true;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 14\n          }\n        }));\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 15\n            }\n          }) : props.refreshControl,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(ScrollView, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 14\n          }\n        }));\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this.scrollToIndex({\n          animated: false,\n          index: _this.props.initialScrollIndex\n        });\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          getItemCount = _this$props.getItemCount,\n          onEndReachedThreshold = _this$props.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n\n        if (!isVirtualizationDisabled) {\n          if (_this._scrollMetrics.visibleLength) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var _this$_scrollMetrics = _this._scrollMetrics,\n              contentLength = _this$_scrollMetrics.contentLength,\n              offset = _this$_scrollMetrics.offset,\n              visibleLength = _this$_scrollMetrics.visibleLength;\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props2 = _this.props,\n          data = _this$props2.data,\n          getItem = _this$props2.getItem,\n          keyExtractor = _this$props2.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItem = _this$props3.getItem,\n          getItemCount = _this$props3.getItemCount,\n          getItemLayout = _this$props3.getItemLayout,\n          keyExtractor = _this$props3.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n\n          if (__DEV__) {\n            var frameType = PropTypes.shape({\n              length: PropTypes.number.isRequired,\n              offset: PropTypes.number.isRequired,\n              index: PropTypes.number.isRequired\n            }).isRequired;\n            PropTypes.checkPropTypes({\n              frame: frameType\n            }, {\n              frame: frame\n            }, 'frame', 'VirtualizedList.getItemLayout');\n          }\n        }\n      }\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.virtualizedList.getNestedChildState(_this.props.listKey || _this._getCellKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n      var frame = this._getFrameMetricsApprox(veryLast);\n\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          horizontal = _this$props4.horizontal,\n          getItemCount = _this$props4.getItemCount,\n          getItemLayout = _this$props4.getItemLayout,\n          onScrollToIndexFailed = _this$props4.onScrollToIndexFailed;\n      var animated = params.animated,\n          index = params.index,\n          viewOffset = params.viewOffset,\n          viewPosition = params.viewPosition;\n      invariant(index >= 0 && index < getItemCount(data), \"scrollToIndex out of range: \" + index + \" vs \" + (getItemCount(data) - 1));\n\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n\n      var frame = this._getFrameMetricsApprox(index);\n\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount;\n      var itemCount = getItemCount(data);\n\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n          offset = params.offset;\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedList: {\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: this.props.horizontal,\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        }\n      };\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this.props.listKey || this._getCellKey(),\n          ref: this\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.unregisterAsNestedChild({\n          key: this.props.listKey || this._getCellKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n\n      this._updateViewableItems(null);\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          CellRendererComponent = _this$props6.CellRendererComponent,\n          ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n          data = _this$props6.data,\n          getItem = _this$props6.getItem,\n          getItemCount = _this$props6.getItemCount,\n          horizontal = _this$props6.horizontal,\n          keyExtractor = _this$props6.keyExtractor;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = keyExtractor(item, ii);\n\n        _this2._indicesToKeys.set(ii, key);\n\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n\n        cells.push(React.createElement(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this2._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this2._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this2._onCellUnmount,\n          parentProps: _this2.props,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 9\n          }\n        }));\n        prevCellKey = key;\n      };\n\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context.virtualizedList;\n      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n\n      var _this$props7 = this.props,\n          ListEmptyComponent = _this$props7.ListEmptyComponent,\n          ListFooterComponent = _this$props7.ListFooterComponent,\n          ListHeaderComponent = _this$props7.ListHeaderComponent;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          horizontal = _this$props8.horizontal;\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 9\n          }\n        });\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutHeader,\n          style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 11\n          }\n        }, element)));\n      }\n\n      var itemCount = this.props.getItemCount(data);\n\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = !horizontal ? 'height' : 'width';\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n        var _this$state = this.state,\n            first = _this$state.first,\n            last = _this$state.last;\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_lead\",\n                  style: _defineProperty({}, spacerKey, leadSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 17\n                  }\n                }));\n\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_trail\",\n                  style: _defineProperty({}, spacerKey, trailSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 17\n                  }\n                }));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n            cells.push(React.createElement(View, {\n              key: \"$lead_spacer\",\n              style: _defineProperty({}, spacerKey, firstSpace),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 13\n              }\n            }));\n          }\n        }\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n          var endFrame = this._getFrameMetricsApprox(end);\n\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(React.createElement(View, {\n            key: \"$tail_spacer\",\n            style: _defineProperty({}, spacerKey, tailSpacerLength),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 11\n            }\n          }));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.cloneElement(_element, {\n          key: '$empty',\n          onLayout: function onLayout(event) {\n            _this3._onLayoutEmpty(event);\n\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getCellKey() + '-footer',\n          key: \"$footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutFooter,\n          style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 11\n          }\n        }, _element2)));\n      }\n\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: this.props.scrollEventThrottle,\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices\n      });\n\n      if (inversionStyle) {\n        scrollProps.style = [inversionStyle, this.props.style];\n      }\n\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n      var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells);\n\n      if (this.props.debug) {\n        return React.createElement(View, {\n          style: styles.debug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 9\n          }\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props9 = this.props,\n          data = _this$props9.data,\n          extraData = _this$props9.extraData;\n\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._hasDataChangedSinceEndReached = true;\n\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n\n      var hiPriInProgress = this._hiPriInProgress;\n\n      this._scheduleCellsToRenderUpdate();\n\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n\n          var childList = this._nestedChildLists.get(childKey);\n\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n\n      this._computeBlankness();\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n\n        this._scrollRef.measureLayout(this.context.virtualizedList.getOutermostParentListRef().getScrollRef().getNativeScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.virtualizedList.getScrollMetrics());\n\n          _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          _this4._scrollMetrics.offset = scrollMetrics.offset;\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var _this5 = this;\n\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 7\n        }\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(View, {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }],\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1235,\n            columnNumber: 11\n          }\n        });\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !this.props.horizontal ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !this.props.horizontal ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props10 = this.props,\n          data = _this$props10.data,\n          getItemCount = _this$props10.getItemCount,\n          onEndReached = _this$props10.onEndReached,\n          onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics2.contentLength,\n          visibleLength = _this$_scrollMetrics2.visibleLength,\n          offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {\n        this._hasDataChangedSinceEndReached = false;\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n          first = _this$state2.first,\n          last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n          offset = _this$_scrollMetrics3.offset,\n          visibleLength = _this$_scrollMetrics3.visibleLength,\n          velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;\n\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n\n        this._updateCellsToRender();\n\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this6 = this;\n\n      var getItemCount = this.props.getItemCount;\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, _this6.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n          getItemCount = newProps.getItemCount,\n          maxToRenderPerBatch = newProps.maxToRenderPerBatch;\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21\n};\nVirtualizedList.contextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  }),\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\nVirtualizedList.childContextTypes = {\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\n\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n\n  var _super2 = _createSuper(CellRenderer);\n\n  function CellRenderer() {\n    var _this7;\n\n    _classCallCheck(this, CellRenderer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this7 = _super2.call.apply(_super2, [this].concat(args));\n    _this7.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this7.props.item\n      }\n    };\n    _this7._separators = {\n      highlight: function highlight() {\n        var _this7$props = _this7.props,\n            cellKey = _this7$props.cellKey,\n            prevCellKey = _this7$props.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this7$props2 = _this7.props,\n            cellKey = _this7$props2.cellKey,\n            prevCellKey = _this7$props2.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this7$props3 = _this7.props,\n            cellKey = _this7$props3.cellKey,\n            prevCellKey = _this7$props3.prevCellKey;\n\n        _this7.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this7;\n  }\n\n  _createClass(CellRenderer, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          CellRendererComponent = _this$props11.CellRendererComponent,\n          ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n          fillRateHelper = _this$props11.fillRateHelper,\n          horizontal = _this$props11.horizontal,\n          item = _this$props11.item,\n          index = _this$props11.index,\n          inversionStyle = _this$props11.inversionStyle,\n          parentProps = _this$props11.parentProps;\n      var renderItem = parentProps.renderItem,\n          getItemLayout = parentProps.getItemLayout;\n      invariant(renderItem, 'no renderItem!');\n      var element = renderItem({\n        item: item,\n        index: index,\n        separators: this._separators\n      });\n      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, _extends({}, this.state.separatorProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 7\n        }\n      }));\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n\n      if (!CellRendererComponent) {\n        return React.createElement(View, {\n          style: cellStyle,\n          onLayout: onLayout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1781,\n            columnNumber: 9\n          }\n        }, element, itemSeparator);\n      }\n\n      return React.createElement(CellRendererComponent, _extends({}, this.props, {\n        style: cellStyle,\n        onLayout: onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1788,\n          columnNumber: 7\n        }\n      }), element, itemSeparator);\n    }\n  }]);\n\n  return CellRenderer;\n}(React.Component);\n\nCellRenderer.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nvar VirtualizedCellWrapper = function (_React$Component2) {\n  _inherits(VirtualizedCellWrapper, _React$Component2);\n\n  var _super3 = _createSuper(VirtualizedCellWrapper);\n\n  function VirtualizedCellWrapper() {\n    _classCallCheck(this, VirtualizedCellWrapper);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(VirtualizedCellWrapper, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return VirtualizedCellWrapper;\n}(React.Component);\n\nVirtualizedCellWrapper.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js"],"names":["Batchinator","FillRateHelper","PropTypes","React","RefreshControl","ScrollView","StyleSheet","UIManager","View","ViewabilityHelper","findNodeHandle","flattenStyle","flatten","infoLog","invariant","warning","computeWindowedRenderLimits","__DEV__","process","env","NODE_ENV","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","props","context","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","virtualizedList","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_averageCellLength","Map","_frames","_footerLength","_hasDataChangedSinceEndReached","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_getFrameMetricsApprox","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","keyExtractor","item","frame","_getFrameMetrics","getItemLayout","length","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","getNestedChildState","listKey","_getCellKey","frames","params","veryLast","scrollTo","horizontal","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","setNativeProps","getScrollMetrics","registerAsNestedChild","unregisterAsNestedChild","virtualizedCell","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","ret","renderScrollComponent","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","getNativeScrollRef","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","fillRateHelper","parentProps","renderItem","separators","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport type {ViewProps} from '../../../exports/View';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from '../ViewabilityHelper';\n\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport UIManager from '../../../exports/UIManager';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\n\nimport findNodeHandle from '../../../exports/findNodeHandle';\nconst flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport warning from 'fbjs/lib/warning';\nimport { computeWindowedRenderLimits } from '../VirtualizeUtils';\n\ntype Item = any;\ntype ViewStyleProp = $PropertyType<ViewProps, 'style'>;\n\nexport type renderItemType = (info: any) => ?React.Element<any>;\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem: $FlowFixMe<renderItemType>,\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness my suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: ${index} vs ${getItemCount(data) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.',\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State) {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render() {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const ret = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  // $FlowFixMe\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  // $FlowFixMe\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  // $FlowFixMe\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are asuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList\n          .getOutermostParentListRef()\n          .getScrollRef()\n          .getNativeScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  // $FlowFixMe\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  // $FlowFixMe\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  // $FlowFixMe\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  // $FlowFixMe\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  // $FlowFixMe\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\nclass CellRenderer extends React.Component<\n  {\n    CellRendererComponent?: ?React.ComponentType<any>,\n    ItemSeparatorComponent: ?React.ComponentType<*>,\n    cellKey: string,\n    fillRateHelper: FillRateHelper,\n    horizontal: ?boolean,\n    index: number,\n    inversionStyle: ViewStyleProp,\n    item: Item,\n    onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n    onUnmount: (cellKey: string) => void,\n    onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n    parentProps: {\n      getItemLayout?: ?Function,\n      renderItem: renderItemType,\n    },\n    prevCellKey: ?string,\n  },\n  $FlowFixMeState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout} = parentProps;\n    invariant(renderItem, 'no renderItem!');\n    const element = renderItem({\n      item,\n      index,\n      separators: this._separators,\n    });\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nexport default VirtualizedList;\n"]},"metadata":{},"sourceType":"module"}