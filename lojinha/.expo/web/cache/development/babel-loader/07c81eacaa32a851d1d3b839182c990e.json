{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _walk = _interopRequireDefault(require(\"./walk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction copyFiles(srcPath, destPath) {\n  var options,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function copyFiles$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n          return _context2.abrupt(\"return\", Promise.all((0, _walk.default)(srcPath).map(function _callee(absoluteSrcFilePath) {\n            var exclude, relativeFilePath;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    exclude = options.exclude;\n\n                    if (!(exclude && exclude.some(function (p) {\n                      return p.test(absoluteSrcFilePath);\n                    }))) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 3:\n                    relativeFilePath = _path().default.relative(srcPath, absoluteSrcFilePath);\n                    _context.next = 6;\n                    return _regeneratorRuntime.awrap(copyFile(absoluteSrcFilePath, _path().default.resolve(destPath, relativeFilePath)));\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction copyFile(srcPath, destPath) {\n  if (_fs().default.lstatSync(srcPath).isDirectory()) {\n    if (!_fs().default.existsSync(destPath)) {\n      _fs().default.mkdirSync(destPath);\n    }\n\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    copyBinaryFile(srcPath, destPath, function (err) {\n      if (err) {\n        reject(err);\n      }\n\n      resolve(destPath);\n    });\n  });\n}\n\nfunction copyBinaryFile(srcPath, destPath, cb) {\n  var cbCalled = false;\n\n  var _fs$default$statSync = _fs().default.statSync(srcPath),\n      mode = _fs$default$statSync.mode;\n\n  var readStream = _fs().default.createReadStream(srcPath);\n\n  var writeStream = _fs().default.createWriteStream(destPath);\n\n  readStream.on('error', function (err) {\n    done(err);\n  });\n  writeStream.on('error', function (err) {\n    done(err);\n  });\n  readStream.on('close', function () {\n    done();\n\n    _fs().default.chmodSync(destPath, mode);\n  });\n  readStream.pipe(writeStream);\n\n  function done(err) {\n    if (!cbCalled) {\n      cb(err);\n      cbCalled = true;\n    }\n  }\n}\n\nvar _default = copyFiles;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/copyFiles.js"],"names":["Object","defineProperty","exports","value","default","_fs","data","_interopRequireDefault","require","_path","_walk","obj","__esModule","copyFiles","srcPath","destPath","options","Promise","all","map","absoluteSrcFilePath","exclude","some","p","test","relativeFilePath","relative","copyFile","resolve","lstatSync","isDirectory","existsSync","mkdirSync","reject","copyBinaryFile","err","cb","cbCalled","statSync","mode","readStream","createReadStream","writeStream","createWriteStream","on","done","chmodSync","pipe","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _walk = _interopRequireDefault(require(\"./walk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Copy files (binary included) recursively.\n */\nasync function copyFiles(srcPath, destPath, options = {}) {\n  return Promise.all((0, _walk.default)(srcPath).map(async absoluteSrcFilePath => {\n    const exclude = options.exclude;\n\n    if (exclude && exclude.some(p => p.test(absoluteSrcFilePath))) {\n      return;\n    }\n\n    const relativeFilePath = _path().default.relative(srcPath, absoluteSrcFilePath);\n\n    await copyFile(absoluteSrcFilePath, _path().default.resolve(destPath, relativeFilePath));\n  }));\n}\n/**\n * Copy a file to given destination.\n */\n\n\nfunction copyFile(srcPath, destPath) {\n  if (_fs().default.lstatSync(srcPath).isDirectory()) {\n    if (!_fs().default.existsSync(destPath)) {\n      _fs().default.mkdirSync(destPath);\n    } // Not recursive\n\n\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    copyBinaryFile(srcPath, destPath, err => {\n      if (err) {\n        reject(err);\n      }\n\n      resolve(destPath);\n    });\n  });\n}\n/**\n * Same as 'cp' on Unix. Don't do any replacements.\n */\n\n\nfunction copyBinaryFile(srcPath, destPath, cb) {\n  let cbCalled = false;\n\n  const {\n    mode\n  } = _fs().default.statSync(srcPath);\n\n  const readStream = _fs().default.createReadStream(srcPath);\n\n  const writeStream = _fs().default.createWriteStream(destPath);\n\n  readStream.on('error', err => {\n    done(err);\n  });\n  writeStream.on('error', err => {\n    done(err);\n  });\n  readStream.on('close', () => {\n    done();\n\n    _fs().default.chmodSync(destPath, mode);\n  });\n  readStream.pipe(writeStream);\n\n  function done(err) {\n    if (!cbCalled) {\n      cb(err);\n      cbCalled = true;\n    }\n  }\n}\n\nvar _default = copyFiles;\nexports.default = _default;\n\n//# sourceMappingURL=copyFiles.js.map"]},"metadata":{},"sourceType":"script"}