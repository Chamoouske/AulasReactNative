{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'fbjs/lib/invariant';\n\nvar Share = function () {\n  function Share() {\n    _classCallCheck(this, Share);\n  }\n\n  _createClass(Share, null, [{\n    key: \"share\",\n    value: function share(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');\n      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');\n      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n      invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');\n\n      if (window.navigator.share !== undefined) {\n        return window.navigator.share({\n          title: content.title,\n          text: content.message,\n          url: content.url\n        });\n      } else {\n        return Promise.reject(new Error('Share is not supported in this browser'));\n      }\n    }\n  }, {\n    key: \"sharedAction\",\n    get: function get() {\n      return 'sharedAction';\n    }\n  }, {\n    key: \"dismissedAction\",\n    get: function get() {\n      return 'dismissedAction';\n    }\n  }]);\n\n  return Share;\n}();\n\nexport default Share;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/Share/index.js"],"names":["invariant","Share","content","options","url","message","title","window","navigator","share","undefined","text","Promise","reject","Error"],"mappings":";;AAUA,OAAOA,SAAP,MAAsB,oBAAtB;;IAMMC,K;;;;;;;WACJ,eAAaC,OAAb,EAAsE;AAAA,UAAvCC,OAAuC,uEAArB,EAAqB;AACpEH,MAAAA,SAAS,CACP,OAAOE,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IADpC,EAEP,yCAFO,CAAT;AAIAF,MAAAA,SAAS,CACP,OAAOE,OAAO,CAACE,GAAf,KAAuB,QAAvB,IAAmC,OAAOF,OAAO,CAACG,OAAf,KAA2B,QADvD,EAEP,6CAFO,CAAT;AAIAL,MAAAA,SAAS,CAAC,OAAOG,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,KAAK,IAA5C,EAAkD,gCAAlD,CAAT;AACAH,MAAAA,SAAS,CACP,CAACE,OAAO,CAACI,KAAT,IAAkB,OAAOJ,OAAO,CAACI,KAAf,KAAyB,QADpC,EAEP,0CAFO,CAAT;;AAKA,UAAIC,MAAM,CAACC,SAAP,CAAiBC,KAAjB,KAA2BC,SAA/B,EAA0C;AACxC,eAAOH,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CAAuB;AAC5BH,UAAAA,KAAK,EAAEJ,OAAO,CAACI,KADa;AAE5BK,UAAAA,IAAI,EAAET,OAAO,CAACG,OAFc;AAG5BD,UAAAA,GAAG,EAAEF,OAAO,CAACE;AAHe,SAAvB,CAAP;AAKD,OAND,MAMO;AACL,eAAOQ,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,wCAAV,CAAf,CAAP;AACD;AACF;;;SAKD,eAAkC;AAChC,aAAO,cAAP;AACD;;;SAMD,eAAqC;AACnC,aAAO,iBAAP;AACD;;;;;;AAGH,eAAeb,KAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'fbjs/lib/invariant';\n\ntype Content =\n  | { title?: string, message?: string, url: string }\n  | { title?: string, message: string, url?: string };\n\nclass Share {\n  static share(content: Content, options: Object = {}): Promise<Object> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object'\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required'\n    );\n    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');\n    invariant(\n      !content.title || typeof content.title === 'string',\n      'Invalid title: title should be a string.'\n    );\n\n    if (window.navigator.share !== undefined) {\n      return window.navigator.share({\n        title: content.title,\n        text: content.message,\n        url: content.url\n      });\n    } else {\n      return Promise.reject(new Error('Share is not supported in this browser'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static get sharedAction(): string {\n    return 'sharedAction';\n  }\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static get dismissedAction(): string {\n    return 'dismissedAction';\n  }\n}\n\nexport default Share;\n"]},"metadata":{},"sourceType":"module"}