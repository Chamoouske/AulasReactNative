{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar android_plugins_1 = require(\"../plugins/android-plugins\");\n\nvar Manifest_1 = require(\"./Manifest\");\n\nexports.SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\nexports.withOrientation = android_plugins_1.createAndroidManifestPlugin(setAndroidOrientation, 'withOrientation');\n\nfunction getOrientation(config) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexports.getOrientation = getOrientation;\n\nfunction setAndroidOrientation(config, androidManifest) {\n  var orientation = getOrientation(config);\n\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  var mainActivity = Manifest_1.getMainActivityOrThrow(androidManifest);\n  mainActivity.$[exports.SCREEN_ORIENTATION_ATTRIBUTE] = orientation !== 'default' ? orientation : 'unspecified';\n  return androidManifest;\n}\n\nexports.setAndroidOrientation = setAndroidOrientation;","map":{"version":3,"sources":["../../src/android/Orientation.ts"],"names":[],"mappings":";;;;;;AAEA,IAAA,iBAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,UAAA,GAAA,OAAA,cAAA;;AAEa,OAAA,CAAA,4BAAA,GAA+B,2BAA/B;AAEA,OAAA,CAAA,eAAA,GAAkB,iBAAA,CAAA,2BAAA,CAC7B,qBAD6B,EAE7B,iBAF6B,CAAlB;;AAKb,SAAgB,cAAhB,CAA+B,MAA/B,EAAsE;AACpE,SAAO,OAAO,MAAM,CAAC,WAAd,KAA8B,QAA9B,GAAyC,MAAM,CAAC,WAAhD,GAA8D,IAArE;AACD;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAIA,SAAgB,qBAAhB,CACE,MADF,EAEE,eAFF,EAEkC;AAEhC,MAAM,WAAW,GAAG,cAAc,CAAC,MAAD,CAAlC;;AAEA,MAAI,CAAC,WAAL,EAAkB;AAChB,WAAO,eAAP;AACD;;AAED,MAAM,YAAY,GAAG,UAAA,CAAA,sBAAA,CAAuB,eAAvB,CAArB;AAEA,EAAA,YAAY,CAAC,CAAb,CAAe,OAAA,CAAA,4BAAf,IACE,WAAW,KAAK,SAAhB,GAA4B,WAA5B,GAA0C,aAD5C;AAGA,SAAO,eAAP;AACD;;AAhBD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nexport const SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\n\nexport const withOrientation = createAndroidManifestPlugin(\n  setAndroidOrientation,\n  'withOrientation'\n);\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexport function setAndroidOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  androidManifest: AndroidManifest\n) {\n  const orientation = getOrientation(config);\n  // TODO: Remove this if we decide to remove any orientation configuration when not specified\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] =\n    orientation !== 'default' ? orientation : 'unspecified';\n\n  return androidManifest;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}