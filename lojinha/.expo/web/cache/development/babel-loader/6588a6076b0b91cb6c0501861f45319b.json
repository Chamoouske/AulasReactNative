{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/ProgressBarTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar renderApplication = require('react-native/Libraries/ReactNative/renderApplication');\n\nvar ProgressBarSampleApp = function (_React$Component) {\n  _inherits(ProgressBarSampleApp, _React$Component);\n\n  var _super = _createSuper(ProgressBarSampleApp);\n\n  function ProgressBarSampleApp() {\n    var _this;\n\n    _classCallCheck(this, ProgressBarSampleApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ProgressBarSampleApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(ProgressBar, {\n        styleAttr: \"Horizontal\",\n        testID: \"Horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"Small\",\n        testID: \"Small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"Large\",\n        testID: \"Large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"Normal\",\n        testID: \"Normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"Inverse\",\n        testID: \"Inverse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"SmallInverse\",\n        testID: \"SmallInverse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(ProgressBar, {\n        styleAttr: \"LargeInverse\",\n        testID: \"LargeInverse\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, React.createElement(ProgressBar, {\n        styleAttr: \"Horizontal\",\n        testID: \"Horizontal200\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ProgressBarSampleApp;\n}(React.Component);\n\nvar ProgressBarTestModule = {\n  renderProgressBarApplication: function renderProgressBarApplication(rootTag) {\n    renderApplication(ProgressBarSampleApp, {}, rootTag);\n  }\n};\nBatchedBridge.registerCallableModule('ProgressBarTestModule', ProgressBarTestModule);\nvar styles = StyleSheet.create({\n  wrapper: {\n    width: 200\n  }\n});\nmodule.exports = ProgressBarTestModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/ProgressBarTestModule.js"],"names":["React","require","BatchedBridge","renderApplication","ProgressBarSampleApp","state","styles","wrapper","Component","ProgressBarTestModule","renderProgressBarApplication","rootTag","registerCallableModule","StyleSheet","create","width","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;AAMA,IAAMC,aAAa,GAAGD,OAAO,CAAC,oDAAD,CAA7B;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,sDAAD,CAAjC;;IAEMG,oB;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;WAER,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAoC,QAAA,MAAM,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,OAAvB;AAA+B,QAAA,MAAM,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,OAAvB;AAA+B,QAAA,MAAM,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAgC,QAAA,MAAM,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,SAAvB;AAAiC,QAAA,MAAM,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAsC,QAAA,MAAM,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAsC,QAAA,MAAM,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAoC,QAAA,MAAM,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADF;AAcD;;;;EAlBgCP,KAAK,CAACQ,S;;AAqBzC,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,4BAA4B,EAAE,sCAASC,OAAT,EAAkB;AAC9CR,IAAAA,iBAAiB,CAACC,oBAAD,EAAuB,EAAvB,EAA2BO,OAA3B,CAAjB;AACD;AAH2B,CAA9B;AAMAT,aAAa,CAACU,sBAAd,CACE,uBADF,EAEEH,qBAFF;AAKA,IAAMH,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,KAAK,EAAE;AADA;AADsB,CAAlB,CAAf;AAMAC,MAAM,CAACC,OAAP,GAAiBR,qBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  ProgressBarAndroid: ProgressBar,\n  StyleSheet,\n  View,\n} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\nconst renderApplication = require('react-native/Libraries/ReactNative/renderApplication');\n\nclass ProgressBarSampleApp extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <View>\n        <ProgressBar styleAttr=\"Horizontal\" testID=\"Horizontal\" />\n        <ProgressBar styleAttr=\"Small\" testID=\"Small\" />\n        <ProgressBar styleAttr=\"Large\" testID=\"Large\" />\n        <ProgressBar styleAttr=\"Normal\" testID=\"Normal\" />\n        <ProgressBar styleAttr=\"Inverse\" testID=\"Inverse\" />\n        <ProgressBar styleAttr=\"SmallInverse\" testID=\"SmallInverse\" />\n        <ProgressBar styleAttr=\"LargeInverse\" testID=\"LargeInverse\" />\n        <View style={styles.wrapper}>\n          <ProgressBar styleAttr=\"Horizontal\" testID=\"Horizontal200\" />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst ProgressBarTestModule = {\n  renderProgressBarApplication: function(rootTag) {\n    renderApplication(ProgressBarSampleApp, {}, rootTag);\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'ProgressBarTestModule',\n  ProgressBarTestModule,\n);\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: 200,\n  },\n});\n\nmodule.exports = ProgressBarTestModule;\n"]},"metadata":{},"sourceType":"script"}