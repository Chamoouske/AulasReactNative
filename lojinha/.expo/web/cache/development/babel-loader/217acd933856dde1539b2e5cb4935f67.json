{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(function () {\n    return Dimensions.get('window');\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\n  useEffect(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n        setDimensions(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange);\n    handleChange({\n      window: Dimensions.get('window')\n    });\n    return function () {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, [dimensions]);\n  return dimensions;\n}","map":{"version":3,"sources":["useWindowDimensions.tsx"],"names":["useState","Dimensions","useEffect","window","dimensions","setDimensions","handleChange"],"mappings":";;AACA,SAAA,SAAA,EAAA,QAAA,QAAA,OAAA;AAWA,eAAe,SAAA,mBAAA,GAA+C;AAAA,kBACxBA,QAAQ,CAAC;AAAA,WAAMC,UAAU,CAAVA,GAAAA,CAAnD,QAAmDA,CAAN;AAAA,GAAD,CADgB;AAAA;AAAA,MACtD,UADsD;AAAA,MACtD,aADsD;;AAE5DC,EAAAA,SAAS,CAAC,YAAM;AACd,aAAA,YAAA,OAA8D;AAAA,UAAtCC,MAAsC,QAAtCA,MAAsC;;AAC5D,UACEC,UAAU,CAAVA,KAAAA,KAAqBD,MAAM,CAA3BC,KAAAA,IACAA,UAAU,CAAVA,MAAAA,KAAsBD,MAAM,CAD5BC,MAAAA,IAEAA,UAAU,CAAVA,KAAAA,KAAqBD,MAAM,CAF3BC,KAAAA,IAGAA,UAAU,CAAVA,SAAAA,KAAyBD,MAAM,CAJjC,SAAA,EAKE;AACAE,QAAAA,aAAa,CAAbA,MAAa,CAAbA;AACD;AACF;;AACDJ,IAAAA,UAAU,CAAVA,gBAAAA,CAAAA,QAAAA,EAXc,YAWdA;AAIAK,IAAAA,YAAY,CAAC;AAAEH,MAAAA,MAAM,EAAEF,UAAU,CAAVA,GAAAA,CAAAA,QAAAA;AAAV,KAAD,CAAZK;AACA,WAAO,YAAM;AACXL,MAAAA,UAAU,CAAVA,mBAAAA,CAAAA,QAAAA,EAAAA,YAAAA;AADF,KAAA;AAhBO,GAAA,EAmBN,CAnBHC,UAmBG,CAnBM,CAATA;AAoBA,SAAA,UAAA;AACD","sourcesContent":["import { Dimensions } from 'react-native';\nimport { useEffect, useState } from 'react';\n\ntype DisplayMetrics = {\n  width: number;\n  height: number;\n  scale: number;\n  fontScale: number;\n};\n\n// Copied from https://github.com/facebook/react-native/blob/8d57691a/Libraries/Utilities/useWindowDimensions.js\n// for compatibility with React Native < 0.61.\nexport default function useWindowDimensions(): DisplayMetrics {\n  const [dimensions, setDimensions] = useState(() => Dimensions.get('window'));\n  useEffect(() => {\n    function handleChange({ window }: { window: DisplayMetrics }) {\n      if (\n        dimensions.width !== window.width ||\n        dimensions.height !== window.height ||\n        dimensions.scale !== window.scale ||\n        dimensions.fontScale !== window.fontScale\n      ) {\n        setDimensions(window);\n      }\n    }\n    Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    handleChange({ window: Dimensions.get('window') });\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, [dimensions]);\n  return dimensions;\n}\n"]},"metadata":{},"sourceType":"module"}