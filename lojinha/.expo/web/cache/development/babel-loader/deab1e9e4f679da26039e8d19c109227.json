{"ast":null,"code":"'use strict';\n\nvar buildStyleInterpolator = require(\"../buildStyleInterpolator\");\n\nvar validateEmpty = function validateEmpty(interpolator, value, validator) {\n  var emptyObject = {};\n  var changed = interpolator(emptyObject, value);\n  validator(emptyObject);\n  expect(changed).toBe(true);\n  changed = interpolator(emptyObject, value);\n  expect(changed).toBe(false);\n};\n\ndescribe('buildStyleInterpolator', function () {\n  it('should linearly interpolate without extrapolating', function () {\n    var testAnim = {\n      opacity: {\n        from: 100,\n        to: 200,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        extrapolate: false\n      },\n      left: {\n        from: 200,\n        to: 300,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        extrapolate: false\n      },\n      top: {\n        type: 'constant',\n        value: 23.5\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function (res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 1, function (res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, -0.1, function (res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 1.1, function (res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 0.5, function (res) {\n      expect(res).toEqual({\n        opacity: 150,\n        left: 250,\n        top: 23.5\n      });\n    });\n  });\n  it('should linearly interpolate with extrapolating', function () {\n    var testAnim = {\n      opacity: {\n        from: 100,\n        to: 200,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 1,\n        extrapolate: true\n      },\n      left: {\n        from: 200,\n        to: 300,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 1,\n        extrapolate: true\n      },\n      top: {\n        type: 'constant',\n        value: 23.5\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function (res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 1, function (res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, -0.1, function (res) {\n      expect(res).toEqual({\n        opacity: 90,\n        left: 190,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 1.1, function (res) {\n      expect(res).toEqual({\n        opacity: 210,\n        left: 310,\n        top: 23.5\n      });\n    });\n    validateEmpty(interpolator, 0.5, function (res) {\n      expect(res).toEqual({\n        opacity: 150,\n        left: 250,\n        top: 23.5\n      });\n    });\n  });\n  it('should round accordingly', function () {\n    var testAnim = {\n      opacity: {\n        from: 0,\n        to: 1,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 2,\n        extrapolate: true\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function (res) {\n      expect(res).toEqual({\n        opacity: 0\n      });\n    });\n    validateEmpty(interpolator, 0.5, function (res) {\n      expect(res).toEqual({\n        opacity: 0.5\n      });\n    });\n    validateEmpty(interpolator, 0.4, function (res) {\n      expect(res).toEqual({\n        opacity: 0.5\n      });\n    });\n    validateEmpty(interpolator, 0.26, function (res) {\n      expect(res).toEqual({\n        opacity: 0.5\n      });\n    });\n    validateEmpty(interpolator, 0.74, function (res) {\n      expect(res).toEqual({\n        opacity: 0.5\n      });\n    });\n    validateEmpty(interpolator, 0.76, function (res) {\n      expect(res).toEqual({\n        opacity: 1.0\n      });\n    });\n  });\n  it('should detect changes correctly', function () {\n    var testAnim = {\n      opacity: {\n        from: 0,\n        to: 1,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 2,\n        extrapolate: false\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 0\n    });\n    expect(res).toBe(true);\n    res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 0\n    });\n    expect(res).toBe(false);\n    res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      opacity: 1\n    });\n    expect(res).toBe(true);\n    res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      opacity: 1\n    });\n    expect(res).toBe(false);\n  });\n  it('should handle identity', function () {\n    var testAnim = {\n      opacity: {\n        type: 'identity'\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 0.5);\n    expect(obj).toEqual({\n      opacity: 0.5\n    });\n    expect(res).toBe(true);\n    res = interpolator(obj, 0.5);\n    expect(obj).toEqual({\n      opacity: 0.5\n    });\n    expect(res).toBe(false);\n  });\n  it('should translate', function () {\n    var testAnim = {\n      transformTranslate: {\n        from: {\n          x: 1,\n          y: 10,\n          z: 100\n        },\n        to: {\n          x: 5,\n          y: 50,\n          z: 500\n        },\n        min: 0,\n        max: 4,\n        type: 'linear'\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [{\n        matrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 20, 200, 1]\n      }]\n    });\n    expect(res).toBe(true);\n  });\n  it('should scale', function () {\n    var testAnim = {\n      transformScale: {\n        from: {\n          x: 1,\n          y: 10,\n          z: 100\n        },\n        to: {\n          x: 5,\n          y: 50,\n          z: 500\n        },\n        min: 0,\n        max: 4,\n        type: 'linear'\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [{\n        matrix: [2, 0, 0, 0, 0, 20, 0, 0, 0, 0, 200, 0, 0, 0, 0, 1]\n      }]\n    });\n    expect(res).toBe(true);\n  });\n  it('should combine scale and translate', function () {\n    var testAnim = {\n      transformScale: {\n        from: {\n          x: 1,\n          y: 10,\n          z: 100\n        },\n        to: {\n          x: 5,\n          y: 50,\n          z: 500\n        },\n        min: 0,\n        max: 4,\n        type: 'linear'\n      },\n      transformTranslate: {\n        from: {\n          x: 1,\n          y: 10,\n          z: 100\n        },\n        to: {\n          x: 5,\n          y: 50,\n          z: 500\n        },\n        min: 0,\n        max: 4,\n        type: 'linear'\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [{\n        matrix: [2, 0, 0, 0, 0, 20, 0, 0, 0, 0, 200, 0, 4, 400, 40000, 1]\n      }]\n    });\n    expect(res).toBe(true);\n  });\n  it('should step', function () {\n    var testAnim = {\n      opacity: {\n        threshold: 13,\n        from: 10,\n        to: 20,\n        type: 'step'\n      }\n    };\n    var interpolator = buildStyleInterpolator(testAnim);\n    var obj = {};\n    var res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 10\n    });\n    expect(res).toBe(true);\n    res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 10\n    });\n    expect(res).toBe(false);\n    res = interpolator(obj, 10);\n    expect(obj).toEqual({\n      opacity: 10\n    });\n    expect(res).toBe(false);\n    res = interpolator(obj, 12);\n    expect(obj).toEqual({\n      opacity: 10\n    });\n    expect(res).toBe(false);\n    res = interpolator(obj, 13);\n    expect(obj).toEqual({\n      opacity: 20\n    });\n    expect(res).toBe(true);\n    res = interpolator(obj, 13.1);\n    expect(obj).toEqual({\n      opacity: 20\n    });\n    expect(res).toBe(false);\n    res = interpolator(obj, 25);\n    expect(obj).toEqual({\n      opacity: 20\n    });\n    expect(res).toBe(false);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/buildStyleInterpolator-test.js"],"names":["buildStyleInterpolator","require","validateEmpty","interpolator","value","validator","emptyObject","changed","expect","toBe","describe","it","testAnim","opacity","from","to","min","max","type","extrapolate","left","top","res","toEqual","round","obj","transformTranslate","x","y","z","transform","matrix","transformScale","threshold"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst buildStyleInterpolator = require('../buildStyleInterpolator');\n\nconst validateEmpty = function(interpolator, value, validator) {\n  const emptyObject = {};\n  let changed = interpolator(emptyObject, value);\n  validator(emptyObject);\n  expect(changed).toBe(true);\n  changed = interpolator(emptyObject, value);\n  expect(changed).toBe(false);\n};\ndescribe('buildStyleInterpolator', function() {\n  it('should linearly interpolate without extrapolating', function() {\n    const testAnim = {\n      opacity: {\n        from: 100,\n        to: 200,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        extrapolate: false,\n      },\n      left: {\n        from: 200,\n        to: 300,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        extrapolate: false,\n      },\n      top: {\n        type: 'constant',\n        value: 23.5,\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function(res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 1, function(res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, -0.1, function(res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 1.1, function(res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 0.5, function(res) {\n      expect(res).toEqual({\n        opacity: 150,\n        left: 250,\n        top: 23.5,\n      });\n    });\n  });\n  it('should linearly interpolate with extrapolating', function() {\n    const testAnim = {\n      opacity: {\n        from: 100,\n        to: 200,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 1, // To make testing easier\n        extrapolate: true,\n      },\n      left: {\n        from: 200,\n        to: 300,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 1, // To make testing easier\n        extrapolate: true,\n      },\n      top: {\n        type: 'constant',\n        value: 23.5,\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function(res) {\n      expect(res).toEqual({\n        opacity: 100,\n        left: 200,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 1, function(res) {\n      expect(res).toEqual({\n        opacity: 200,\n        left: 300,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, -0.1, function(res) {\n      expect(res).toEqual({\n        opacity: 90,\n        left: 190,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 1.1, function(res) {\n      expect(res).toEqual({\n        opacity: 210,\n        left: 310,\n        top: 23.5,\n      });\n    });\n    validateEmpty(interpolator, 0.5, function(res) {\n      expect(res).toEqual({\n        opacity: 150,\n        left: 250,\n        top: 23.5,\n      });\n    });\n  });\n  it('should round accordingly', function() {\n    const testAnim = {\n      opacity: {\n        from: 0,\n        to: 1,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 2, // As in one over two\n        extrapolate: true,\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    validateEmpty(interpolator, 0, function(res) {\n      expect(res).toEqual({\n        opacity: 0,\n      });\n    });\n    validateEmpty(interpolator, 0.5, function(res) {\n      expect(res).toEqual({\n        opacity: 0.5,\n      });\n    });\n    validateEmpty(interpolator, 0.4, function(res) {\n      expect(res).toEqual({\n        opacity: 0.5,\n      });\n    });\n    validateEmpty(interpolator, 0.26, function(res) {\n      expect(res).toEqual({\n        opacity: 0.5,\n      });\n    });\n    validateEmpty(interpolator, 0.74, function(res) {\n      expect(res).toEqual({\n        opacity: 0.5,\n      });\n    });\n    validateEmpty(interpolator, 0.76, function(res) {\n      expect(res).toEqual({\n        opacity: 1.0,\n      });\n    });\n  });\n  it('should detect changes correctly', function() {\n    const testAnim = {\n      opacity: {\n        from: 0,\n        to: 1,\n        min: 0,\n        max: 1,\n        type: 'linear',\n        round: 2, // As in one over two\n        extrapolate: false,\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    let res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 0,\n    });\n    expect(res).toBe(true);\n\n    res = interpolator(obj, 0);\n    // No change detected\n    expect(obj).toEqual({\n      opacity: 0,\n    });\n    expect(res).toBe(false);\n\n    // No change detected\n    res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      opacity: 1,\n    });\n    expect(res).toBe(true);\n\n    // Still no change detected even when clipping\n    res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      opacity: 1,\n    });\n    expect(res).toBe(false);\n  });\n  it('should handle identity', function() {\n    const testAnim = {\n      opacity: {\n        type: 'identity',\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    let res = interpolator(obj, 0.5);\n    expect(obj).toEqual({\n      opacity: 0.5,\n    });\n    expect(res).toBe(true);\n\n    res = interpolator(obj, 0.5);\n    // No change detected\n    expect(obj).toEqual({\n      opacity: 0.5,\n    });\n    expect(res).toBe(false);\n  });\n  it('should translate', function() {\n    const testAnim = {\n      transformTranslate: {\n        from: {x: 1, y: 10, z: 100},\n        to: {x: 5, y: 50, z: 500},\n        min: 0,\n        max: 4,\n        type: 'linear',\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    const res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [\n        {\n          matrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 20, 200, 1],\n        },\n      ],\n    });\n    expect(res).toBe(true);\n  });\n  it('should scale', function() {\n    const testAnim = {\n      transformScale: {\n        from: {x: 1, y: 10, z: 100},\n        to: {x: 5, y: 50, z: 500},\n        min: 0,\n        max: 4,\n        type: 'linear',\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    const res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [\n        {\n          matrix: [2, 0, 0, 0, 0, 20, 0, 0, 0, 0, 200, 0, 0, 0, 0, 1],\n        },\n      ],\n    });\n    expect(res).toBe(true);\n  });\n  it('should combine scale and translate', function() {\n    const testAnim = {\n      transformScale: {\n        from: {x: 1, y: 10, z: 100},\n        to: {x: 5, y: 50, z: 500},\n        min: 0,\n        max: 4,\n        type: 'linear',\n      },\n      transformTranslate: {\n        from: {x: 1, y: 10, z: 100},\n        to: {x: 5, y: 50, z: 500},\n        min: 0,\n        max: 4,\n        type: 'linear',\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    const res = interpolator(obj, 1);\n    expect(obj).toEqual({\n      transform: [\n        {\n          matrix: [2, 0, 0, 0, 0, 20, 0, 0, 0, 0, 200, 0, 4, 400, 40000, 1],\n        },\n      ],\n    });\n    expect(res).toBe(true);\n  });\n  it('should step', function() {\n    const testAnim = {\n      opacity: {\n        threshold: 13,\n        from: 10,\n        to: 20,\n        type: 'step',\n      },\n    };\n    const interpolator = buildStyleInterpolator(testAnim);\n    const obj = {};\n    let res = interpolator(obj, 0);\n    expect(obj).toEqual({\n      opacity: 10,\n    });\n    expect(res).toBe(true);\n\n    res = interpolator(obj, 0);\n    // No change detected\n    expect(obj).toEqual({\n      opacity: 10,\n    });\n    expect(res).toBe(false);\n\n    // No change detected\n    res = interpolator(obj, 10);\n    expect(obj).toEqual({\n      opacity: 10,\n    });\n    expect(res).toBe(false);\n\n    // No change detected\n    res = interpolator(obj, 12);\n    expect(obj).toEqual({\n      opacity: 10,\n    });\n    expect(res).toBe(false);\n\n    // No change detected\n    res = interpolator(obj, 13);\n    expect(obj).toEqual({\n      opacity: 20,\n    });\n    expect(res).toBe(true);\n\n    // No change detected\n    res = interpolator(obj, 13.1);\n    expect(obj).toEqual({\n      opacity: 20,\n    });\n    expect(res).toBe(false);\n\n    // No change detected\n    res = interpolator(obj, 25);\n    expect(obj).toEqual({\n      opacity: 20,\n    });\n    expect(res).toBe(false);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}