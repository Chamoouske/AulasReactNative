{"ast":null,"code":"'use strict';\n\nimport * as React from 'react';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\n\nvar requireNativeComponent = require(\"../../ReactNative/requireNativeComponent\");\n\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeValue']\n});\nexport default requireNativeComponent('AndroidCheckBox');","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/CheckBox/AndroidCheckBoxNativeComponent.js"],"names":["React","codegenNativeCommands","requireNativeComponent","require","Commands","supportedCommands"],"mappings":"AAUA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,qBAAP,MAAkC,wDAAlC;;AAEA,IAAMC,sBAAsB,GAAGC,OAAO,4CAAtC;;AAmDA,OAAO,IAAMC,QAAwB,GAAGH,qBAAqB,CAAiB;AAC5EI,EAAAA,iBAAiB,EAAE,CAAC,gBAAD;AADyD,CAAjB,CAAtD;AAIP,eAAgBH,sBAAsB,CACpC,iBADoC,CAAtC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport * as React from 'react';\n\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\n\nconst requireNativeComponent = require('../../ReactNative/requireNativeComponent');\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\n\ntype CheckBoxEvent = SyntheticEvent<\n  $ReadOnly<{|\n    target: number,\n    value: boolean,\n  |}>,\n>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Used in case the props change removes the component.\n   */\n  onChange?: ?(event: CheckBoxEvent) => mixed,\n\n  /**\n   * Invoked with the new value when the value changes.\n   */\n  onValueChange?: ?(value: boolean) => mixed,\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: ?string,\n\n  on?: ?boolean,\n  enabled?: boolean,\n  tintColors:\n    | {|\n        true: ?ProcessedColorValue,\n        false: ?ProcessedColorValue,\n      |}\n    | typeof undefined,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeValue: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeValue'],\n});\n\nexport default (requireNativeComponent<NativeProps>(\n  'AndroidCheckBox',\n): NativeType);\n"]},"metadata":{},"sourceType":"module"}