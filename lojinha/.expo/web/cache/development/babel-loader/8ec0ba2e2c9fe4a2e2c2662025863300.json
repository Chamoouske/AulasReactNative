{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _common = require(\"./common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar URLS = {\n  darwin: 'https://stackoverflow.com/a/28296325/4252781',\n  win32: 'https://stackoverflow.com/a/54888107/4252781',\n  linux: 'https://stackoverflow.com/a/39228100/4252781'\n};\nvar label = 'ANDROID_HOME';\nvar platform = process.platform;\n\nvar message = \"Read more about how to set the \" + label + \" at \" + _chalk().default.dim(URLS[platform]);\n\nvar _default = {\n  label: label,\n  getDiagnostics: function getDiagnostics() {\n    return _regeneratorRuntime.async(function getDiagnostics$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              needsToBeFixed: !process.env.ANDROID_HOME\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  runAutomaticFix: function runAutomaticFix(_ref) {\n    var loader;\n    return _regeneratorRuntime.async(function runAutomaticFix$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loader = _ref.loader;\n\n            if (!process.env.ANDROID_HOME) {\n              _context2.next = 4;\n              break;\n            }\n\n            loader.succeed();\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            loader.fail();\n            (0, _common.logManualInstallation)({\n              message: message\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/doctor/healthchecks/androidHomeEnvVariable.js"],"names":["Object","defineProperty","exports","value","default","_chalk","data","_interopRequireDefault","require","_common","obj","__esModule","URLS","darwin","win32","linux","label","platform","process","message","dim","_default","getDiagnostics","needsToBeFixed","env","ANDROID_HOME","runAutomaticFix","loader","succeed","fail","logManualInstallation"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,MAAT,GAAkB;AAChB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,kBAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,OAAO,GAAGD,OAAO,YAArB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAG/F,IAAME,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,8CADG;AAEXC,EAAAA,KAAK,EAAE,8CAFI;AAGXC,EAAAA,KAAK,EAAE;AAHI,CAAb;AAKA,IAAMC,KAAK,GAAG,cAAd;AAGA,IAAMC,QAAQ,GAAGC,OAAO,CAACD,QAAzB;;AACA,IAAME,OAAO,uCAAqCH,KAArC,YAAiDX,MAAM,GAAGD,OAAT,CAAiBgB,GAAjB,CAAqBR,IAAI,CAACK,QAAD,CAAzB,CAA9D;;AACA,IAAII,QAAQ,GAAG;AACbL,EAAAA,KAAK,EAALA,KADa;AAEbM,EAAAA,cAAc,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAa;AAC3BC,cAAAA,cAAc,EAAE,CAACL,OAAO,CAACM,GAAR,CAAYC;AADF,aAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFH;AAKbC,EAAAA,eAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,MADe,QACfA,MADe;;AAAA,iBAIXT,OAAO,CAACM,GAAR,CAAYC,YAJD;AAAA;AAAA;AAAA;;AAKbE,YAAAA,MAAM,CAACC,OAAP;AALa;;AAAA;AASfD,YAAAA,MAAM,CAACE,IAAP;AACA,aAAC,GAAGpB,OAAO,CAACqB,qBAAZ,EAAmC;AACjCX,cAAAA,OAAO,EAAPA;AADiC,aAAnC;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,CAAf;AAoBAjB,OAAO,CAACE,OAAR,GAAkBiB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _common = require(\"./common\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of answers on how to set `ANDROID_HOME` for each platform\nconst URLS = {\n  darwin: 'https://stackoverflow.com/a/28296325/4252781',\n  win32: 'https://stackoverflow.com/a/54888107/4252781',\n  linux: 'https://stackoverflow.com/a/39228100/4252781'\n};\nconst label = 'ANDROID_HOME'; // Force the options for the platform to avoid providing a link\n// for `ANDROID_HOME` for every platform NodeJS supports\n\nconst platform = process.platform;\nconst message = `Read more about how to set the ${label} at ${_chalk().default.dim(URLS[platform])}`;\nvar _default = {\n  label,\n  getDiagnostics: async () => ({\n    needsToBeFixed: !process.env.ANDROID_HOME\n  }),\n  runAutomaticFix: async ({\n    loader\n  }) => {\n    // Variable could have been added if installing Android Studio so double checking\n    if (process.env.ANDROID_HOME) {\n      loader.succeed();\n      return;\n    }\n\n    loader.fail();\n    (0, _common.logManualInstallation)({\n      message\n    });\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=androidHomeEnvVariable.js.map"]},"metadata":{},"sourceType":"script"}