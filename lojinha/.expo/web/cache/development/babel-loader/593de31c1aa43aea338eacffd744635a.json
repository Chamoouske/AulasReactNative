{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JoiError = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar JoiError = function (_cliTools$CLIError) {\n  _inherits(JoiError, _cliTools$CLIError);\n\n  var _super = _createSuper(JoiError);\n\n  function JoiError(joiError) {\n    var _this;\n\n    _classCallCheck(this, JoiError);\n\n    _this = _super.call(this, joiError.details.map(function (error) {\n      var name = error.path.join('.');\n\n      switch (error.type) {\n        case 'object.allowUnknown':\n          {\n            var value = JSON.stringify(error.context && error.context.value);\n            return \"\\n                Unknown option \" + name + \" with value \\\"\" + value + \"\\\" was found.\\n                This is either a typing error or a user mistake. Fixing it will remove this message.\\n              \";\n          }\n\n        case 'object.base':\n        case 'string.base':\n          {\n            var expectedType = error.type.replace('.base', '');\n            var actualType = typeof (error.context && error.context.value);\n            return \"\\n                Option \" + name + \" must be a \" + expectedType + \", instead got \" + actualType + \"\\n              \";\n          }\n\n        default:\n          return error.message;\n      }\n    }).join());\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), JoiError);\n    }\n\n    return _this;\n  }\n\n  return JoiError;\n}(_cliTools().CLIError);\n\nexports.JoiError = JoiError;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/config/errors.js"],"names":["Object","defineProperty","exports","value","JoiError","_cliTools","data","require","joiError","details","map","error","name","path","join","type","JSON","stringify","context","expectedType","replace","actualType","message","Error","captureStackTrace","CLIError"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGC,OAAO,CAAC,mCAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;IAEKF,Q;;;;;AACJ,oBAAYI,QAAZ,EAAsB;AAAA;;AAAA;;AACpB,8BAAMA,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqB,UAAAC,KAAK,EAAI;AAClC,UAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgB,GAAhB,CAAb;;AAEA,cAAQH,KAAK,CAACI,IAAd;AACE,aAAK,qBAAL;AACE;AACE,gBAAMZ,KAAK,GAAGa,IAAI,CAACC,SAAL,CAAeN,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcf,KAA9C,CAAd;AACA,yDACqBS,IADrB,sBACyCT,KADzC;AAID;;AAEH,aAAK,aAAL;AACA,aAAK,aAAL;AACE;AACE,gBAAMgB,YAAY,GAAGR,KAAK,CAACI,IAAN,CAAWK,OAAX,CAAmB,OAAnB,EAA4B,EAA5B,CAArB;AACA,gBAAMC,UAAU,GAAG,QAAQV,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAcf,KAAvC,CAAnB;AACA,iDACaS,IADb,mBAC+BO,YAD/B,sBAC4DE,UAD5D;AAGD;;AAEH;AACE,iBAAOV,KAAK,CAACW,OAAb;AArBJ;AAuBD,KA1BK,EA0BHR,IA1BG,EAAN;;AA4BA,QAAIS,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,MAAAA,KAAK,CAACC,iBAAN,gCAA8BpB,QAA9B;AACD;;AA/BmB;AAgCrB;;;EAjCoBC,SAAS,GAAGoB,Q;;AAqCnCvB,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JoiError = void 0;\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nclass JoiError extends _cliTools().CLIError {\n  constructor(joiError) {\n    super(joiError.details.map(error => {\n      const name = error.path.join('.');\n\n      switch (error.type) {\n        case 'object.allowUnknown':\n          {\n            const value = JSON.stringify(error.context && error.context.value);\n            return `\n                Unknown option ${name} with value \"${value}\" was found.\n                This is either a typing error or a user mistake. Fixing it will remove this message.\n              `;\n          }\n\n        case 'object.base':\n        case 'string.base':\n          {\n            const expectedType = error.type.replace('.base', '');\n            const actualType = typeof (error.context && error.context.value);\n            return `\n                Option ${name} must be a ${expectedType}, instead got ${actualType}\n              `;\n          }\n\n        default:\n          return error.message;\n      }\n    }).join());\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, JoiError);\n    }\n  }\n\n}\n\nexports.JoiError = JoiError;\n\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}