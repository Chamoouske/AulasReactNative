{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorStackFrame-test.js\";\n\nvar React = require('react');\n\nvar LogBoxInspectorStackFrame = require(\"../LogBoxInspectorStackFrame\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('LogBoxInspectorStackFrame', function () {\n  it('should render stack frame', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorStackFrame, {\n      onPress: function onPress() {},\n      frame: {\n        column: 1,\n        file: 'app.js',\n        lineNumber: 1,\n        methodName: 'foo',\n        collapse: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render stack frame without press feedback', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorStackFrame, {\n      frame: {\n        column: 1,\n        file: 'app.js',\n        lineNumber: 1,\n        methodName: 'foo',\n        collapse: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render collapsed stack frame with dimmed text', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorStackFrame, {\n      onPress: function onPress() {},\n      frame: {\n        column: 1,\n        file: 'app.js',\n        lineNumber: 1,\n        methodName: 'foo',\n        collapse: true\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorStackFrame-test.js"],"names":["React","require","LogBoxInspectorStackFrame","default","render","describe","it","output","shallowRender","column","file","lineNumber","methodName","collapse","expect","toMatchSnapshot"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,yBAAyB,GAAGD,OAAO,gCAAP,CAC/BE,OADH;;AAEA,IAAMC,MAAM,GAAGH,OAAO,6BAAtB;;AAEAI,QAAQ,CAAC,2BAAD,EAA8B,YAAM;AAC1CC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,yBAAD;AACE,MAAA,OAAO,EAAE,mBAAM,CAAE,CADnB;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,UAAU,EAAE,CAHP;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,QAAQ,EAAE;AALL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAaAC,IAAAA,MAAM,CAACP,MAAD,CAAN,CAAeQ,eAAf;AACD,GAfC,CAAF;AAiBAT,EAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AAC3D,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,yBAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,UAAU,EAAE,CAHP;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,QAAQ,EAAE;AALL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAaAC,IAAAA,MAAM,CAACP,MAAD,CAAN,CAAeQ,eAAf;AACD,GAfC,CAAF;AAiBAT,EAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAM;AAC/D,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,yBAAD;AACE,MAAA,OAAO,EAAE,mBAAM,CAAE,CADnB;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,UAAU,EAAE,CAHP;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,QAAQ,EAAE;AALL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AAaAC,IAAAA,MAAM,CAACP,MAAD,CAAN,CAAeQ,eAAf;AACD,GAfC,CAAF;AAgBD,CAnDO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxInspectorStackFrame = require('../LogBoxInspectorStackFrame')\n  .default;\nconst render = require('../../../../jest/renderer');\n\ndescribe('LogBoxInspectorStackFrame', () => {\n  it('should render stack frame', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorStackFrame\n        onPress={() => {}}\n        frame={{\n          column: 1,\n          file: 'app.js',\n          lineNumber: 1,\n          methodName: 'foo',\n          collapse: false,\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render stack frame without press feedback', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorStackFrame\n        frame={{\n          column: 1,\n          file: 'app.js',\n          lineNumber: 1,\n          methodName: 'foo',\n          collapse: false,\n        }}\n      />,\n    );\n\n    // Both button backgrounds should be transparent\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render collapsed stack frame with dimmed text', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorStackFrame\n        onPress={() => {}}\n        frame={{\n          column: 1,\n          file: 'app.js',\n          lineNumber: 1,\n          methodName: 'foo',\n          collapse: true,\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}