{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/RTL/RTLExample.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar Animated = require(\"react-native-web/dist/exports/Animated\").default;\n\nvar I18nManager = require(\"react-native-web/dist/exports/I18nManager\").default;\n\nvar Image = require(\"react-native-web/dist/exports/Image\").default;\n\nvar PixelRatio = require(\"react-native-web/dist/exports/PixelRatio\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar Switch = require(\"react-native-web/dist/exports/Switch\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Button = require(\"react-native-web/dist/exports/Button\").default;\n\nvar SCALE = PixelRatio.get();\nvar IMAGE_DIMENSION = 100 * SCALE;\nvar IMAGE_SIZE = [IMAGE_DIMENSION, IMAGE_DIMENSION];\nvar IS_RTL = I18nManager.isRTL;\n\nfunction ListItem(props) {\n  return React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.column1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: props.imageSource,\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.column2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.textBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Text Text Text\"))), React.createElement(View, {\n    style: styles.column3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.smallButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.fontSizeSmall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Button\"))));\n}\n\nvar TextAlignmentExample = withRTLState(function (_ref) {\n  var isRTL = _ref.isRTL,\n      setRTL = _ref.setRTL,\n      props = _objectWithoutProperties(_ref, [\"isRTL\", \"setRTL\"]);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: directionStyle(isRTL),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: props.style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Left-to-Right language without text alignment.\"), React.createElement(Text, {\n    style: props.style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"\\u0645\\u0646 \\u0627\\u0644\\u064A\\u0645\\u064A\\u0646 \" + \"\\u0625\\u0644\\u0649 \\u0627\\u0644\\u064A\\u0633\\u0627\\u0631 \" + \"\\u0627\\u0644\\u0644\\u063A\\u0629 \\u062F\\u0648\\u0646 \" + \"\\u0645\\u062D\\u0627\\u0630\\u0627\\u0629 \\u0627\\u0644\\u0646\\u0635\"), React.createElement(Text, {\n    style: props.style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"\\u05DE\\u05D9\\u05DE\\u05D9\\u05DF \\u05DC\\u05E9\\u05DE\\u05D0\\u05DC \" + \"\\u05D4\\u05E9\\u05E4\\u05D4 \\u05D1\\u05DC\\u05D9 \" + \"\\u05D9\\u05D9\\u05E9\\u05D5\\u05E8 \\u05D8\\u05E7\\u05E1\\u05D8\")));\n});\nvar IconsExample = withRTLState(function (_ref2) {\n  var isRTL = _ref2.isRTL,\n      setRTL = _ref2.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.flexDirectionRow, directionStyle(isRTL)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/like.png\"),\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.fontSizeExtraSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Without directional meaning\")), React.createElement(View, {\n    style: styles.rightAlignStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/poke.png\"),\n    style: [styles.image, styles.withRTLStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.fontSizeExtraSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"With directional meaning\"))));\n});\n\nfunction AnimationBlock(props) {\n  return React.createElement(View, {\n    style: styles.block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: props.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.Image, {\n    style: [styles.img, props.imgStyle],\n    source: require(\"../../assets/poke.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction withRTLState(Component) {\n  return function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this2;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2 = _super.call.apply(_super, [this].concat(args));\n      _this2.state = {\n        isRTL: IS_RTL\n      };\n      return _this2;\n    }\n\n    _createClass(_class, [{\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var setRTL = function setRTL(isRTL) {\n          return _this3.setState({\n            isRTL: isRTL\n          });\n        };\n\n        return React.createElement(Component, _extends({\n          isRTL: this.state.isRTL,\n          setRTL: setRTL\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n\n    return _class;\n  }(React.Component);\n}\n\nvar RTLToggler = function RTLToggler(_ref3) {\n  var isRTL = _ref3.isRTL,\n      setRTL = _ref3.setRTL;\n\n  if (Platform.OS === 'android') {\n    return React.createElement(Text, {\n      style: styles.rtlToggler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }\n    }, isRTL ? 'RTL' : 'LTR');\n  }\n\n  var toggleRTL = function toggleRTL() {\n    return setRTL(!isRTL);\n  };\n\n  return React.createElement(Button, {\n    onPress: toggleRTL,\n    title: isRTL ? 'RTL' : 'LTR',\n    color: \"gray\",\n    accessibilityLabel: \"Change layout direction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  });\n};\n\nvar RTLToggleExample = function (_React$Component2) {\n  _inherits(RTLToggleExample, _React$Component2);\n\n  var _super2 = _createSuper(RTLToggleExample);\n\n  function RTLToggleExample(props) {\n    var _this4;\n\n    _classCallCheck(this, RTLToggleExample);\n\n    _this4 = _super2.call(this, props);\n\n    _this4._onDirectionChange = function () {\n      I18nManager.forceRTL(!_this4.state.isRTL);\n\n      _this4.setState({\n        isRTL: !_this4.state.isRTL\n      });\n\n      Alert.alert('Reload this page', 'Please reload this page to change the UI direction! ' + 'All examples in this app will be affected. ' + 'Check them out to see what they look like in RTL layout.');\n    };\n\n    _this4.state = {\n      isRTL: IS_RTL\n    };\n    return _this4;\n  }\n\n  _createClass(RTLToggleExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.directionBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.directionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, this.state.isRTL ? 'Right-to-Left' : 'Left-to-Right')), React.createElement(View, {\n        style: styles.flexDirectionRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.switchRowTextView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, \"forceRTL\"), React.createElement(View, {\n        style: styles.switchRowSwitchView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, React.createElement(Switch, {\n        onValueChange: this._onDirectionChange,\n        style: styles.rightAlignStyle,\n        value: this.state.isRTL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return RTLToggleExample;\n}(React.Component);\n\nvar SimpleListItemExample = withRTLState(function (_ref4) {\n  var isRTL = _ref4.isRTL,\n      setRTL = _ref4.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.list, directionStyle(isRTL)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    imageSource: require(\"../../assets/like.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), React.createElement(ListItem, {\n    imageSource: require(\"../../assets/poke.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  })));\n});\nvar AnimationContainer = withRTLState(function (_ref5) {\n  var isRTL = _ref5.isRTL,\n      setRTL = _ref5.setRTL;\n  return React.createElement(AnimationExample, {\n    isRTL: isRTL,\n    setRTL: setRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }\n  });\n});\n\nvar AnimationExample = function (_React$Component3) {\n  _inherits(AnimationExample, _React$Component3);\n\n  var _super3 = _createSuper(AnimationExample);\n\n  function AnimationExample(props) {\n    var _this5;\n\n    _classCallCheck(this, AnimationExample);\n\n    _this5 = _super3.call(this, props);\n\n    _this5._onLayout = function (e) {\n      _this5.setState({\n        windowWidth: e.nativeEvent.layout.width\n      });\n    };\n\n    _this5._linearTap = function (e) {\n      _this5.setState({\n        toggleStatus: _objectSpread(_objectSpread({}, _this5.state.toggleStatus), {}, _defineProperty({}, e, !_this5.state.toggleStatus[e]))\n      });\n\n      var offset = IMAGE_SIZE[0] / SCALE / 2 + 10;\n      var toMaxDistance = (_this5.props.isRTL ? -1 : 1) * (_this5.state.windowWidth / 2 - offset);\n      Animated.timing(_this5.state.linear, {\n        toValue: _this5.state.toggleStatus[e] ? toMaxDistance : 0,\n        duration: 2000,\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this5.state = {\n      toggleStatus: {},\n      linear: new Animated.Value(0),\n      windowWidth: 0\n    };\n    return _this5;\n  }\n\n  _createClass(AnimationExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }\n      }, React.createElement(RTLToggler, {\n        setRTL: this.props.setRTL,\n        isRTL: this.props.isRTL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.view,\n        onLayout: this._onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }\n      }, React.createElement(AnimationBlock, {\n        onPress: this._linearTap,\n        imgStyle: {\n          transform: [{\n            translateX: this.state.linear\n          }, {\n            scaleX: this.props.isRTL ? -1 : 1\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return AnimationExample;\n}(React.Component);\n\nvar PaddingExample = withRTLState(function (_ref6) {\n  var isRTL = _ref6.isRTL,\n      setRTL = _ref6.setRTL;\n  var color = 'teal';\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, \"paddingStart: 50,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, \"paddingEnd: 10\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, \"The \", color, \" is padding.\"), React.createElement(View, {\n    style: {\n      backgroundColor: color,\n      paddingStart: 50,\n      paddingEnd: 10,\n      borderWidth: 1,\n      borderColor: color,\n      direction: isRTL ? 'rtl' : 'ltr'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      paddingTop: 5,\n      paddingBottom: 5,\n      borderLeftWidth: 1,\n      borderRightWidth: 1,\n      borderColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }))));\n});\nvar MarginExample = withRTLState(function (_ref7) {\n  var isRTL = _ref7.isRTL,\n      setRTL = _ref7.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, \"marginStart: 50,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, \"marginEnd: 10\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, \"The green is margin.\"), React.createElement(View, {\n    style: {\n      backgroundColor: 'green',\n      borderWidth: 1,\n      borderColor: 'green',\n      direction: isRTL ? 'rtl' : 'ltr'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      paddingTop: 5,\n      paddingBottom: 5,\n      marginStart: 50,\n      marginEnd: 10,\n      borderLeftWidth: 1,\n      borderRightWidth: 1,\n      borderColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }))));\n});\nvar PositionExample = withRTLState(function (_ref8) {\n  var isRTL = _ref8.isRTL,\n      setRTL = _ref8.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, \"start: 50\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, \"The orange is position.\"), React.createElement(View, {\n    style: {\n      backgroundColor: 'orange',\n      borderWidth: 1,\n      borderColor: 'orange',\n      direction: isRTL ? 'rtl' : 'ltr'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      start: 50,\n      borderColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }\n  }, \"end: 50\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, \"The orange is position.\"), React.createElement(View, {\n    style: {\n      backgroundColor: 'orange',\n      borderWidth: 1,\n      borderColor: 'orange',\n      direction: isRTL ? 'rtl' : 'ltr'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      end: 50,\n      borderColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }))));\n});\nvar BorderWidthExample = withRTLState(function (_ref9) {\n  var isRTL = _ref9.isRTL,\n      setRTL = _ref9.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }, \"borderStartWidth: 10,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }\n  }, \"borderEndWidth: 50\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(View, {\n    style: directionStyle(isRTL),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderStartWidth: 10,\n      borderEndWidth: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  })))));\n});\nvar BorderColorExample = withRTLState(function (_ref10) {\n  var isRTL = _ref10.isRTL,\n      setRTL = _ref10.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }, \"borderStartColor: 'red',\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }\n  }, \"borderEndColor: 'green',\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(View, {\n    style: directionStyle(isRTL),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderStartColor: 'red',\n      borderEndColor: 'green',\n      borderLeftWidth: 20,\n      borderRightWidth: 20,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  })))));\n});\nvar BorderRadiiExample = withRTLState(function (_ref11) {\n  var isRTL = _ref11.isRTL,\n      setRTL = _ref11.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }\n  }, \"borderTopStartRadius: 10,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }\n  }, \"borderTopEndRadius: 20,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }\n  }, \"borderBottomStartRadius: 30,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }\n  }, \"borderBottomEndRadius: 40\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(View, {\n    style: directionStyle(isRTL),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 10,\n      borderTopStartRadius: 10,\n      borderTopEndRadius: 20,\n      borderBottomStartRadius: 30,\n      borderBottomEndRadius: 40,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  })))));\n});\nvar BorderExample = withRTLState(function (_ref12) {\n  var isRTL = _ref12.isRTL,\n      setRTL = _ref12.setRTL;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }\n  }, \"Styles\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }\n  }, \"borderStartColor: 'red',\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }\n  }, \"borderEndColor: 'green',\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }\n  }, \"borderStartWidth: 10,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, \"borderEndWidth: 50,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }\n  }, \"borderTopStartRadius: 10,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, \"borderTopEndRadius: 20,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }\n  }, \"borderBottomStartRadius: 30,\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }\n  }, \"borderBottomEndRadius: 40\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }\n  }, \"Demo: \"), React.createElement(View, {\n    style: directionStyle(isRTL),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderStartColor: 'red',\n      borderEndColor: 'green',\n      borderStartWidth: 10,\n      borderEndWidth: 50,\n      borderTopStartRadius: 10,\n      borderTopEndRadius: 20,\n      borderBottomStartRadius: 30,\n      borderBottomEndRadius: 40,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 11\n    }\n  }, React.createElement(RTLToggler, {\n    setRTL: setRTL,\n    isRTL: isRTL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }\n  })))));\n});\n\nvar directionStyle = function directionStyle(isRTL) {\n  return Platform.OS === 'ios' ? {\n    direction: isRTL ? 'rtl' : 'ltr'\n  } : null;\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#e9eaed',\n    paddingTop: 15\n  },\n  directionBox: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    borderWidth: 0.5,\n    borderColor: 'black',\n    marginBottom: 15\n  },\n  directionText: {\n    padding: 10,\n    fontSize: 16,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  switchRowTextView: {\n    flex: 1,\n    marginBottom: 5,\n    marginTop: 5,\n    textAlign: 'center'\n  },\n  switchRowSwitchView: {\n    flex: 3\n  },\n  rightAlignStyle: {\n    right: 10,\n    position: 'absolute'\n  },\n  list: {\n    height: 120,\n    marginBottom: 5,\n    borderTopWidth: 0.5,\n    borderLeftWidth: 0.5,\n    borderRightWidth: 0.5,\n    borderColor: '#e5e5e5'\n  },\n  row: {\n    height: 60,\n    flexDirection: 'row',\n    borderBottomWidth: 0.5,\n    borderColor: '#e5e5e5'\n  },\n  column1: {\n    width: 60\n  },\n  column2: {\n    flex: 2.5,\n    padding: 6\n  },\n  column3: {\n    flex: 1.5\n  },\n  icon: {\n    width: 48,\n    height: 48,\n    margin: 6,\n    borderWidth: 0.5,\n    borderColor: '#e5e5e5'\n  },\n  withRTLStyle: {\n    transform: [{\n      scaleX: IS_RTL ? -1 : 1\n    }]\n  },\n  image: {\n    left: 30,\n    width: 48,\n    height: 48\n  },\n  img: {\n    width: IMAGE_SIZE[0] / SCALE,\n    height: IMAGE_SIZE[1] / SCALE\n  },\n  view: {\n    flex: 1\n  },\n  block: {\n    padding: 10,\n    alignItems: 'center'\n  },\n  smallButton: {\n    top: 18,\n    borderRadius: 5,\n    height: 24,\n    width: 64,\n    backgroundColor: '#e5e5e5',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fontSizeSmall: {\n    fontSize: 10\n  },\n  fontSizeExtraSmall: {\n    fontSize: 8\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  textAlignRight: {\n    textAlign: 'right'\n  },\n  textBox: {\n    width: 28\n  },\n  flexDirectionRow: {\n    flexDirection: 'row'\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  rtlToggler: {\n    color: 'gray',\n    padding: 8,\n    textAlign: 'center',\n    fontWeight: '500'\n  }\n});\nexports.title = 'RTLExample';\nexports.description = 'Examples to show how to apply components to RTL layout.';\nexports.examples = [{\n  title: 'Current Layout Direction',\n  render: function render() {\n    return React.createElement(RTLToggleExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'A Simple List Item Layout',\n  render: function render() {\n    return React.createElement(SimpleListItemExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Default Text Alignment',\n  description: 'In iOS, it depends on active language. ' + 'In Android, it depends on the text content.',\n  render: function render() {\n    return React.createElement(TextAlignmentExample, {\n      style: styles.fontSizeSmall,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: \"Using textAlign: 'left'\",\n  description: 'In iOS/Android, text alignment flips regardless of ' + 'languages or text content.',\n  render: function render() {\n    return React.createElement(TextAlignmentExample, {\n      style: [styles.fontSizeSmall, styles.textAlignLeft],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: \"Using textAlign: 'right'\",\n  description: 'In iOS/Android, text alignment flips regardless of ' + 'languages or text content.',\n  render: function render() {\n    return React.createElement(TextAlignmentExample, {\n      style: [styles.fontSizeSmall, styles.textAlignRight],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: 'Working With Icons',\n  render: function render() {\n    return React.createElement(IconsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Controlling Animation',\n  description: 'Animation direction according to layout',\n  render: function render() {\n    return React.createElement(AnimationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Padding Start/End',\n  render: function render() {\n    return React.createElement(PaddingExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Margin Start/End',\n  render: function render() {\n    return React.createElement(MarginExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Position Start/End',\n  render: function render() {\n    return React.createElement(PositionExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Border Width Start/End',\n  render: function render() {\n    return React.createElement(BorderWidthExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Border Color Start/End',\n  render: function render() {\n    return React.createElement(BorderColorExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Border Radii Start/End',\n  render: function render() {\n    return React.createElement(BorderRadiiExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Border',\n  render: function render() {\n    return React.createElement(BorderExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/RTL/RTLExample.js"],"names":["React","require","SCALE","PixelRatio","get","IMAGE_DIMENSION","IMAGE_SIZE","IS_RTL","I18nManager","isRTL","ListItem","props","styles","row","column1","imageSource","icon","column2","textBox","column3","smallButton","fontSizeSmall","TextAlignmentExample","withRTLState","setRTL","directionStyle","style","IconsExample","flexDirectionRow","image","fontSizeExtraSmall","rightAlignStyle","withRTLStyle","AnimationBlock","block","onPress","img","imgStyle","Component","args","state","setState","RTLToggler","Platform","OS","rtlToggler","toggleRTL","RTLToggleExample","_onDirectionChange","forceRTL","Alert","alert","directionBox","directionText","switchRowTextView","switchRowSwitchView","SimpleListItemExample","list","AnimationContainer","AnimationExample","_onLayout","e","windowWidth","nativeEvent","layout","width","_linearTap","toggleStatus","offset","toMaxDistance","Animated","timing","linear","toValue","duration","useNativeDriver","start","Value","view","transform","translateX","scaleX","PaddingExample","color","bold","backgroundColor","paddingStart","paddingEnd","borderWidth","borderColor","direction","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","MarginExample","marginStart","marginEnd","PositionExample","end","BorderWidthExample","borderStartWidth","borderEndWidth","BorderColorExample","borderStartColor","borderEndColor","padding","BorderRadiiExample","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","BorderExample","StyleSheet","create","container","flex","marginBottom","fontSize","textAlign","fontWeight","marginTop","right","position","height","borderTopWidth","flexDirection","borderBottomWidth","margin","left","alignItems","top","borderRadius","justifyContent","textAlignLeft","textAlignRight","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Alert,\n  Animated,\n  I18nManager,\n  Image,\n  PixelRatio,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  Switch,\n  View,\n  Button,\n} = require('react-native');\n\ntype State = {\n  toggleStatus: any,\n  pan: Object,\n  linear: Object,\n  isRTL: boolean,\n  ...\n};\n\ntype RTLToggleState = {isRTL: boolean, ...};\n\ntype AnimationState = {\n  toggleStatus: any,\n  linear: Object,\n  windowWidth: number,\n  ...\n};\n\nconst SCALE = PixelRatio.get();\nconst IMAGE_DIMENSION = 100 * SCALE;\nconst IMAGE_SIZE = [IMAGE_DIMENSION, IMAGE_DIMENSION];\n\nconst IS_RTL = I18nManager.isRTL;\n\nfunction ListItem(props) {\n  return (\n    <View style={styles.row}>\n      <View style={styles.column1}>\n        <Image source={props.imageSource} style={styles.icon} />\n      </View>\n      <View style={styles.column2}>\n        <View style={styles.textBox}>\n          <Text>Text Text Text</Text>\n        </View>\n      </View>\n      <View style={styles.column3}>\n        <View style={styles.smallButton}>\n          <Text style={styles.fontSizeSmall}>Button</Text>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst TextAlignmentExample = withRTLState(({isRTL, setRTL, ...props}) => {\n  return (\n    <View>\n      <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n      <View style={directionStyle(isRTL)}>\n        <Text style={props.style}>\n          Left-to-Right language without text alignment.\n        </Text>\n        <Text style={props.style}>\n          {'\\u0645\\u0646 \\u0627\\u0644\\u064A\\u0645\\u064A\\u0646 ' +\n            '\\u0625\\u0644\\u0649 \\u0627\\u0644\\u064A\\u0633\\u0627\\u0631 ' +\n            '\\u0627\\u0644\\u0644\\u063A\\u0629 \\u062F\\u0648\\u0646 ' +\n            '\\u0645\\u062D\\u0627\\u0630\\u0627\\u0629 \\u0627\\u0644\\u0646\\u0635'}\n        </Text>\n        <Text style={props.style}>\n          {'\\u05DE\\u05D9\\u05DE\\u05D9\\u05DF \\u05DC\\u05E9\\u05DE\\u05D0\\u05DC ' +\n            '\\u05D4\\u05E9\\u05E4\\u05D4 \\u05D1\\u05DC\\u05D9 ' +\n            '\\u05D9\\u05D9\\u05E9\\u05D5\\u05E8 \\u05D8\\u05E7\\u05E1\\u05D8'}\n        </Text>\n      </View>\n    </View>\n  );\n});\n\nconst IconsExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n      <View style={[styles.flexDirectionRow, directionStyle(isRTL)]}>\n        <View>\n          <Image\n            source={require('../../assets/like.png')}\n            style={styles.image}\n          />\n          <Text style={styles.fontSizeExtraSmall}>\n            Without directional meaning\n          </Text>\n        </View>\n        <View style={styles.rightAlignStyle}>\n          <Image\n            source={require('../../assets/poke.png')}\n            style={[styles.image, styles.withRTLStyle]}\n          />\n          <Text style={styles.fontSizeExtraSmall}>\n            With directional meaning\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nfunction AnimationBlock(props) {\n  return (\n    <View style={styles.block}>\n      <TouchableWithoutFeedback onPress={props.onPress}>\n        <Animated.Image\n          style={[styles.img, props.imgStyle]}\n          source={require('../../assets/poke.png')}\n        />\n      </TouchableWithoutFeedback>\n    </View>\n  );\n}\n\ntype RTLSwitcherComponentState = {|\n  isRTL: boolean,\n|};\n\nfunction withRTLState(Component) {\n  return class extends React.Component<*, RTLSwitcherComponentState> {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        isRTL: IS_RTL,\n      };\n    }\n\n    render() {\n      const setRTL = isRTL => this.setState({isRTL: isRTL});\n      return (\n        <Component isRTL={this.state.isRTL} setRTL={setRTL} {...this.props} />\n      );\n    }\n  };\n}\n\nconst RTLToggler = ({isRTL, setRTL}) => {\n  if (Platform.OS === 'android') {\n    return <Text style={styles.rtlToggler}>{isRTL ? 'RTL' : 'LTR'}</Text>;\n  }\n\n  const toggleRTL = () => setRTL(!isRTL);\n  return (\n    <Button\n      onPress={toggleRTL}\n      title={isRTL ? 'RTL' : 'LTR'}\n      color=\"gray\"\n      accessibilityLabel=\"Change layout direction\"\n    />\n  );\n};\n\nclass RTLToggleExample extends React.Component<any, RTLToggleState> {\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      isRTL: IS_RTL,\n    };\n  }\n\n  render() {\n    return (\n      <View>\n        <View style={styles.directionBox}>\n          <Text style={styles.directionText}>\n            {this.state.isRTL ? 'Right-to-Left' : 'Left-to-Right'}\n          </Text>\n        </View>\n        <View style={styles.flexDirectionRow}>\n          <Text style={styles.switchRowTextView}>forceRTL</Text>\n          <View style={styles.switchRowSwitchView}>\n            <Switch\n              onValueChange={this._onDirectionChange}\n              style={styles.rightAlignStyle}\n              value={this.state.isRTL}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  _onDirectionChange = () => {\n    I18nManager.forceRTL(!this.state.isRTL);\n    this.setState({isRTL: !this.state.isRTL});\n    Alert.alert(\n      'Reload this page',\n      'Please reload this page to change the UI direction! ' +\n        'All examples in this app will be affected. ' +\n        'Check them out to see what they look like in RTL layout.',\n    );\n  };\n}\n\nconst SimpleListItemExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n      <View style={[styles.list, directionStyle(isRTL)]}>\n        <ListItem imageSource={require('../../assets/like.png')} />\n        <ListItem imageSource={require('../../assets/poke.png')} />\n      </View>\n    </View>\n  );\n});\n\nconst AnimationContainer = withRTLState(({isRTL, setRTL}) => {\n  return <AnimationExample isRTL={isRTL} setRTL={setRTL} />;\n});\n\nclass AnimationExample extends React.Component<any, AnimationState> {\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      toggleStatus: {},\n      linear: new Animated.Value(0),\n      windowWidth: 0,\n    };\n  }\n\n  render() {\n    return (\n      <View>\n        <RTLToggler setRTL={this.props.setRTL} isRTL={this.props.isRTL} />\n        <View style={styles.view} onLayout={this._onLayout}>\n          <AnimationBlock\n            onPress={this._linearTap}\n            imgStyle={{\n              transform: [\n                {translateX: this.state.linear},\n                {scaleX: this.props.isRTL ? -1 : 1},\n              ],\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  _onLayout = (e: Object) => {\n    this.setState({\n      windowWidth: e.nativeEvent.layout.width,\n    });\n  };\n\n  _linearTap = (e: Object) => {\n    this.setState({\n      toggleStatus: {\n        ...this.state.toggleStatus,\n        [e]: !this.state.toggleStatus[e],\n      },\n    });\n    const offset = IMAGE_SIZE[0] / SCALE / 2 + 10;\n    const toMaxDistance =\n      (this.props.isRTL ? -1 : 1) * (this.state.windowWidth / 2 - offset);\n    Animated.timing(this.state.linear, {\n      toValue: this.state.toggleStatus[e] ? toMaxDistance : 0,\n      duration: 2000,\n      useNativeDriver: true,\n    }).start();\n  };\n}\n\nconst PaddingExample = withRTLState(({isRTL, setRTL}) => {\n  const color = 'teal';\n\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>paddingStart: 50,</Text>\n      <Text>paddingEnd: 10</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <Text>The {color} is padding.</Text>\n      <View\n        style={{\n          backgroundColor: color,\n          paddingStart: 50,\n          paddingEnd: 10,\n          borderWidth: 1,\n          borderColor: color,\n          direction: isRTL ? 'rtl' : 'ltr',\n        }}>\n        <View\n          style={{\n            backgroundColor: 'white',\n            paddingTop: 5,\n            paddingBottom: 5,\n            borderLeftWidth: 1,\n            borderRightWidth: 1,\n            borderColor: 'gray',\n          }}>\n          <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst MarginExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>marginStart: 50,</Text>\n      <Text>marginEnd: 10</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <Text>The green is margin.</Text>\n      <View\n        style={{\n          backgroundColor: 'green',\n          borderWidth: 1,\n          borderColor: 'green',\n          direction: isRTL ? 'rtl' : 'ltr',\n        }}>\n        <View\n          style={{\n            backgroundColor: 'white',\n            paddingTop: 5,\n            paddingBottom: 5,\n            marginStart: 50,\n            marginEnd: 10,\n            borderLeftWidth: 1,\n            borderRightWidth: 1,\n            borderColor: 'gray',\n          }}>\n          <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst PositionExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>start: 50</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <Text>The orange is position.</Text>\n      <View\n        style={{\n          backgroundColor: 'orange',\n          borderWidth: 1,\n          borderColor: 'orange',\n          direction: isRTL ? 'rtl' : 'ltr',\n        }}>\n        <View\n          style={{\n            backgroundColor: 'white',\n            start: 50,\n            borderColor: 'gray',\n          }}>\n          <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n        </View>\n      </View>\n      <Text />\n      <Text style={styles.bold}>Styles</Text>\n      <Text>end: 50</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <Text>The orange is position.</Text>\n      <View\n        style={{\n          backgroundColor: 'orange',\n          borderWidth: 1,\n          borderColor: 'orange',\n          direction: isRTL ? 'rtl' : 'ltr',\n        }}>\n        <View\n          style={{\n            backgroundColor: 'white',\n            end: 50,\n            borderColor: 'gray',\n          }}>\n          <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst BorderWidthExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>borderStartWidth: 10,</Text>\n      <Text>borderEndWidth: 50</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <View style={directionStyle(isRTL)}>\n        <View\n          style={{\n            borderStartWidth: 10,\n            borderEndWidth: 50,\n          }}>\n          <View>\n            <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst BorderColorExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>borderStartColor: 'red',</Text>\n      <Text>borderEndColor: 'green',</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <View style={directionStyle(isRTL)}>\n        <View\n          style={{\n            borderStartColor: 'red',\n            borderEndColor: 'green',\n            borderLeftWidth: 20,\n            borderRightWidth: 20,\n            padding: 10,\n          }}>\n          <View>\n            <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst BorderRadiiExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>borderTopStartRadius: 10,</Text>\n      <Text>borderTopEndRadius: 20,</Text>\n      <Text>borderBottomStartRadius: 30,</Text>\n      <Text>borderBottomEndRadius: 40</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <View style={directionStyle(isRTL)}>\n        <View\n          style={{\n            borderWidth: 10,\n            borderTopStartRadius: 10,\n            borderTopEndRadius: 20,\n            borderBottomStartRadius: 30,\n            borderBottomEndRadius: 40,\n            padding: 10,\n          }}>\n          <View>\n            <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst BorderExample = withRTLState(({isRTL, setRTL}) => {\n  return (\n    <View>\n      <Text style={styles.bold}>Styles</Text>\n      <Text>borderStartColor: 'red',</Text>\n      <Text>borderEndColor: 'green',</Text>\n      <Text>borderStartWidth: 10,</Text>\n      <Text>borderEndWidth: 50,</Text>\n      <Text>borderTopStartRadius: 10,</Text>\n      <Text>borderTopEndRadius: 20,</Text>\n      <Text>borderBottomStartRadius: 30,</Text>\n      <Text>borderBottomEndRadius: 40</Text>\n      <Text />\n      <Text style={styles.bold}>Demo: </Text>\n      <View style={directionStyle(isRTL)}>\n        <View\n          style={{\n            borderStartColor: 'red',\n            borderEndColor: 'green',\n            borderStartWidth: 10,\n            borderEndWidth: 50,\n            borderTopStartRadius: 10,\n            borderTopEndRadius: 20,\n            borderBottomStartRadius: 30,\n            borderBottomEndRadius: 40,\n            padding: 10,\n          }}>\n          <View>\n            <RTLToggler setRTL={setRTL} isRTL={isRTL} />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nconst directionStyle = isRTL =>\n  Platform.OS === 'ios' ? {direction: isRTL ? 'rtl' : 'ltr'} : null;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#e9eaed',\n    paddingTop: 15,\n  },\n  directionBox: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n    borderWidth: 0.5,\n    borderColor: 'black',\n    marginBottom: 15,\n  },\n  directionText: {\n    padding: 10,\n    fontSize: 16,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  switchRowTextView: {\n    flex: 1,\n    marginBottom: 5,\n    marginTop: 5,\n    textAlign: 'center',\n  },\n  switchRowSwitchView: {\n    flex: 3,\n  },\n  rightAlignStyle: {\n    right: 10,\n    position: 'absolute',\n  },\n  list: {\n    height: 120,\n    marginBottom: 5,\n    borderTopWidth: 0.5,\n    borderLeftWidth: 0.5,\n    borderRightWidth: 0.5,\n    borderColor: '#e5e5e5',\n  },\n  row: {\n    height: 60,\n    flexDirection: 'row',\n    borderBottomWidth: 0.5,\n    borderColor: '#e5e5e5',\n  },\n  column1: {\n    width: 60,\n  },\n  column2: {\n    flex: 2.5,\n    padding: 6,\n  },\n  column3: {\n    flex: 1.5,\n  },\n  icon: {\n    width: 48,\n    height: 48,\n    margin: 6,\n    borderWidth: 0.5,\n    borderColor: '#e5e5e5',\n  },\n  withRTLStyle: {\n    transform: [{scaleX: IS_RTL ? -1 : 1}],\n  },\n  image: {\n    left: 30,\n    width: 48,\n    height: 48,\n  },\n  img: {\n    width: IMAGE_SIZE[0] / SCALE,\n    height: IMAGE_SIZE[1] / SCALE,\n  },\n  view: {\n    flex: 1,\n  },\n  block: {\n    padding: 10,\n    alignItems: 'center',\n  },\n  smallButton: {\n    top: 18,\n    borderRadius: 5,\n    height: 24,\n    width: 64,\n    backgroundColor: '#e5e5e5',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  fontSizeSmall: {\n    fontSize: 10,\n  },\n  fontSizeExtraSmall: {\n    fontSize: 8,\n  },\n  textAlignLeft: {\n    textAlign: 'left',\n  },\n  textAlignRight: {\n    textAlign: 'right',\n  },\n  textBox: {\n    width: 28,\n  },\n  flexDirectionRow: {\n    flexDirection: 'row',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  rtlToggler: {\n    color: 'gray',\n    padding: 8,\n    textAlign: 'center',\n    fontWeight: '500',\n  },\n});\n\nexports.title = 'RTLExample';\nexports.description = 'Examples to show how to apply components to RTL layout.';\nexports.examples = [\n  {\n    title: 'Current Layout Direction',\n    render: function(): React.Element<any> {\n      return <RTLToggleExample />;\n    },\n  },\n  {\n    title: 'A Simple List Item Layout',\n    render: function(): React.Element<any> {\n      return <SimpleListItemExample />;\n    },\n  },\n  {\n    title: 'Default Text Alignment',\n    description: ('In iOS, it depends on active language. ' +\n      'In Android, it depends on the text content.': string),\n    render: function(): React.Element<any> {\n      return <TextAlignmentExample style={styles.fontSizeSmall} />;\n    },\n  },\n  {\n    title: \"Using textAlign: 'left'\",\n    description: ('In iOS/Android, text alignment flips regardless of ' +\n      'languages or text content.': string),\n    render: function(): React.Element<any> {\n      return (\n        <TextAlignmentExample\n          style={[styles.fontSizeSmall, styles.textAlignLeft]}\n        />\n      );\n    },\n  },\n  {\n    title: \"Using textAlign: 'right'\",\n    description: ('In iOS/Android, text alignment flips regardless of ' +\n      'languages or text content.': string),\n    render: function(): React.Element<any> {\n      return (\n        <TextAlignmentExample\n          style={[styles.fontSizeSmall, styles.textAlignRight]}\n        />\n      );\n    },\n  },\n  {\n    title: 'Working With Icons',\n    render: function(): React.Element<any> {\n      return <IconsExample />;\n    },\n  },\n  {\n    title: 'Controlling Animation',\n    description: 'Animation direction according to layout',\n    render: function(): React.Element<any> {\n      return <AnimationContainer />;\n    },\n  },\n  {\n    title: 'Padding Start/End',\n    render: function(): React.Element<any> {\n      return <PaddingExample />;\n    },\n  },\n  {\n    title: 'Margin Start/End',\n    render: function(): React.Element<any> {\n      return <MarginExample />;\n    },\n  },\n  {\n    title: 'Position Start/End',\n    render: function(): React.Element<any> {\n      return <PositionExample />;\n    },\n  },\n  {\n    title: 'Border Width Start/End',\n    render: function(): React.Element<any> {\n      return <BorderWidthExample />;\n    },\n  },\n  {\n    title: 'Border Color Start/End',\n    render: function(): React.Element<any> {\n      return <BorderColorExample />;\n    },\n  },\n  {\n    title: 'Border Radii Start/End',\n    render: function(): React.Element<any> {\n      return <BorderRadiiExample />;\n    },\n  },\n  {\n    title: 'Border',\n    render: function(): React.Element<any> {\n      return <BorderExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}