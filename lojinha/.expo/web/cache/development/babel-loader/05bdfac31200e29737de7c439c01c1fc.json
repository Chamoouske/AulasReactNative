{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/XHR/XHRExampleDownload.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Switch = require(\"react-native-web/dist/exports/Switch\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nfunction roundKilo(value) {\n  return Math.round(value / 1000);\n}\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'android') {\n        return React.createElement(ProgressBarAndroid, {\n          progress: this.props.progress,\n          styleAttr: \"Horizontal\",\n          indeterminate: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(ProgressViewIOS, {\n        progress: this.props.progress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\nvar XHRExampleDownload = function (_React$Component2) {\n  _inherits(XHRExampleDownload, _React$Component2);\n\n  var _super2 = _createSuper(XHRExampleDownload);\n\n  function XHRExampleDownload() {\n    var _this;\n\n    _classCallCheck(this, XHRExampleDownload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      downloading: false,\n      contentLength: 1,\n      responseLength: 0,\n      progressTotal: 1,\n      progressLoaded: 0,\n      readystateHandler: false,\n      progressHandler: true,\n      arraybuffer: false\n    };\n    _this.xhr = null;\n    _this.cancelled = false;\n\n    _this._download = function () {\n      var xhr;\n\n      if (_this.xhr) {\n        xhr = _this.xhr;\n        xhr.abort();\n      } else {\n        xhr = _this.xhr = new XMLHttpRequest();\n      }\n\n      var onreadystatechange = function onreadystatechange() {\n        if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n          var contentLength = parseInt(xhr.getResponseHeader('Content-Length'), 10);\n\n          _this.setState({\n            contentLength: contentLength,\n            responseLength: 0\n          });\n        } else if (xhr.readyState === xhr.LOADING && xhr.response) {\n          _this.setState({\n            responseLength: xhr.response.length\n          });\n        }\n      };\n\n      var onprogress = function onprogress(event) {\n        _this.setState({\n          progressTotal: event.total,\n          progressLoaded: event.loaded\n        });\n      };\n\n      if (_this.state.readystateHandler) {\n        xhr.onreadystatechange = onreadystatechange;\n      }\n\n      if (_this.state.progressHandler) {\n        xhr.onprogress = onprogress;\n      }\n\n      if (_this.state.arraybuffer) {\n        xhr.responseType = 'arraybuffer';\n      }\n\n      xhr.onload = function () {\n        _this.setState({\n          downloading: false\n        });\n\n        if (_this.cancelled) {\n          _this.cancelled = false;\n          return;\n        }\n\n        if (xhr.status === 200) {\n          var responseType = \"Response is a string, \" + xhr.response.length + \" characters long.\";\n\n          if (xhr.response instanceof ArrayBuffer) {\n            responseType = \"Response is an ArrayBuffer, \" + xhr.response.byteLength + \" bytes long.\";\n          }\n\n          Alert.alert('Download complete!', responseType);\n        } else if (xhr.status !== 0) {\n          Alert.alert('Error', \"Server returned HTTP status of \" + xhr.status + \": \" + xhr.responseText);\n        } else {\n          Alert.alert('Error', xhr.responseText);\n        }\n      };\n\n      xhr.open('GET', 'http://aleph.gutenberg.org/cache/epub/100/pg100.txt.utf8');\n      xhr.setRequestHeader('Accept-Encoding', '');\n      xhr.send();\n\n      _this.setState({\n        downloading: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(XHRExampleDownload, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelled = true;\n      this.xhr && this.xhr.abort();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var button = this.state.downloading ? React.createElement(View, {\n        style: styles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"Downloading...\"))) : React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this._download,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, \"Download 5MB Text File\")));\n      var readystate = null;\n      var progress = null;\n\n      if (this.state.readystateHandler && !this.state.arraybuffer) {\n        var _this$state = this.state,\n            responseLength = _this$state.responseLength,\n            contentLength = _this$state.contentLength;\n        readystate = React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.progressBarLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }\n        }, \"responseText: \", roundKilo(responseLength), \"/\", roundKilo(contentLength), \"k chars\"), React.createElement(ProgressBar, {\n          progress: responseLength / contentLength,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      if (this.state.progressHandler) {\n        var _this$state2 = this.state,\n            progressLoaded = _this$state2.progressLoaded,\n            progressTotal = _this$state2.progressTotal;\n        progress = React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.progressBarLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }\n        }, \"onprogress: \", roundKilo(progressLoaded), \"/\", roundKilo(progressTotal), ' ', \"KB\"), React.createElement(ProgressBar, {\n          progress: progressLoaded / progressTotal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.configRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, \"onreadystatechange handler\"), React.createElement(Switch, {\n        value: this.state.readystateHandler,\n        onValueChange: function onValueChange(readystateHandler) {\n          return _this2.setState({\n            readystateHandler: readystateHandler\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.configRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, \"onprogress handler\"), React.createElement(Switch, {\n        value: this.state.progressHandler,\n        onValueChange: function onValueChange(progressHandler) {\n          return _this2.setState({\n            progressHandler: progressHandler\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.configRow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"download as arraybuffer\"), React.createElement(Switch, {\n        value: this.state.arraybuffer,\n        onValueChange: function onValueChange(arraybuffer) {\n          return _this2.setState({\n            arraybuffer: arraybuffer\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      })), button, readystate, progress);\n    }\n  }]);\n\n  return XHRExampleDownload;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 8\n  },\n  progressBarLabel: {\n    marginTop: 12,\n    marginBottom: 8\n  },\n  configRow: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\nmodule.exports = XHRExampleDownload;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/XHR/XHRExampleDownload.js"],"names":["React","require","roundKilo","value","Math","round","ProgressBar","Platform","OS","props","progress","Component","XHRExampleDownload","state","downloading","contentLength","responseLength","progressTotal","progressLoaded","readystateHandler","progressHandler","arraybuffer","xhr","cancelled","_download","abort","XMLHttpRequest","onreadystatechange","readyState","HEADERS_RECEIVED","parseInt","getResponseHeader","setState","LOADING","response","length","onprogress","event","total","loaded","responseType","onload","status","ArrayBuffer","byteLength","Alert","alert","responseText","open","setRequestHeader","send","button","styles","wrapper","readystate","progressBarLabel","configRow","StyleSheet","create","borderRadius","marginBottom","backgroundColor","padding","marginTop","flexDirection","paddingVertical","alignItems","justifyContent","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Alert,\n  Platform,\n  ProgressBarAndroid,\n  ProgressViewIOS,\n  StyleSheet,\n  Switch,\n  Text,\n  TouchableHighlight,\n  View,\n} = require('react-native');\n\n/**\n * Convert number of bytes to MB and round to the nearest 0.1 MB.\n */\nfunction roundKilo(value: number): number {\n  return Math.round(value / 1000);\n}\n\nclass ProgressBar extends React.Component<$FlowFixMeProps> {\n  render() {\n    if (Platform.OS === 'android') {\n      return (\n        <ProgressBarAndroid\n          progress={this.props.progress}\n          styleAttr=\"Horizontal\"\n          indeterminate={false}\n        />\n      );\n    }\n    return <ProgressViewIOS progress={this.props.progress} />;\n  }\n}\n\nclass XHRExampleDownload extends React.Component<{...}, Object> {\n  state: Object = {\n    downloading: false,\n    // set by onreadystatechange\n    contentLength: 1,\n    responseLength: 0,\n    // set by onprogress\n    progressTotal: 1,\n    progressLoaded: 0,\n\n    readystateHandler: false,\n    progressHandler: true,\n    arraybuffer: false,\n  };\n\n  xhr: ?XMLHttpRequest = null;\n  cancelled: boolean = false;\n\n  _download = () => {\n    let xhr;\n    if (this.xhr) {\n      xhr = this.xhr;\n      xhr.abort();\n    } else {\n      xhr = this.xhr = new XMLHttpRequest();\n    }\n\n    const onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        const contentLength = parseInt(\n          xhr.getResponseHeader('Content-Length'),\n          10,\n        );\n        this.setState({\n          contentLength,\n          responseLength: 0,\n        });\n      } else if (xhr.readyState === xhr.LOADING && xhr.response) {\n        this.setState({\n          responseLength: xhr.response.length,\n        });\n      }\n    };\n    const onprogress = event => {\n      this.setState({\n        progressTotal: event.total,\n        progressLoaded: event.loaded,\n      });\n    };\n\n    if (this.state.readystateHandler) {\n      xhr.onreadystatechange = onreadystatechange;\n    }\n    if (this.state.progressHandler) {\n      xhr.onprogress = onprogress;\n    }\n    if (this.state.arraybuffer) {\n      xhr.responseType = 'arraybuffer';\n    }\n    xhr.onload = () => {\n      this.setState({downloading: false});\n      if (this.cancelled) {\n        this.cancelled = false;\n        return;\n      }\n      if (xhr.status === 200) {\n        let responseType = `Response is a string, ${\n          xhr.response.length\n        } characters long.`;\n        if (xhr.response instanceof ArrayBuffer) {\n          responseType = `Response is an ArrayBuffer, ${\n            xhr.response.byteLength\n          } bytes long.`;\n        }\n        Alert.alert('Download complete!', responseType);\n      } else if (xhr.status !== 0) {\n        Alert.alert(\n          'Error',\n          `Server returned HTTP status of ${xhr.status}: ${xhr.responseText}`,\n        );\n      } else {\n        Alert.alert('Error', xhr.responseText);\n      }\n    };\n    xhr.open('GET', 'http://aleph.gutenberg.org/cache/epub/100/pg100.txt.utf8');\n    // Avoid gzip so we can actually show progress\n    xhr.setRequestHeader('Accept-Encoding', '');\n    xhr.send();\n\n    this.setState({downloading: true});\n  };\n\n  componentWillUnmount() {\n    this.cancelled = true;\n    this.xhr && this.xhr.abort();\n  }\n\n  render(): React.Node {\n    const button = this.state.downloading ? (\n      <View style={styles.wrapper}>\n        <View style={styles.button}>\n          <Text>Downloading...</Text>\n        </View>\n      </View>\n    ) : (\n      <TouchableHighlight style={styles.wrapper} onPress={this._download}>\n        <View style={styles.button}>\n          <Text>Download 5MB Text File</Text>\n        </View>\n      </TouchableHighlight>\n    );\n\n    let readystate = null;\n    let progress = null;\n    if (this.state.readystateHandler && !this.state.arraybuffer) {\n      const {responseLength, contentLength} = this.state;\n      readystate = (\n        <View>\n          <Text style={styles.progressBarLabel}>\n            responseText: {roundKilo(responseLength)}/{roundKilo(contentLength)}\n            k chars\n          </Text>\n          <ProgressBar progress={responseLength / contentLength} />\n        </View>\n      );\n    }\n    if (this.state.progressHandler) {\n      const {progressLoaded, progressTotal} = this.state;\n      progress = (\n        <View>\n          <Text style={styles.progressBarLabel}>\n            onprogress: {roundKilo(progressLoaded)}/{roundKilo(progressTotal)}{' '}\n            KB\n          </Text>\n          <ProgressBar progress={progressLoaded / progressTotal} />\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        <View style={styles.configRow}>\n          <Text>onreadystatechange handler</Text>\n          <Switch\n            value={this.state.readystateHandler}\n            onValueChange={readystateHandler =>\n              this.setState({readystateHandler})\n            }\n          />\n        </View>\n        <View style={styles.configRow}>\n          <Text>onprogress handler</Text>\n          <Switch\n            value={this.state.progressHandler}\n            onValueChange={progressHandler => this.setState({progressHandler})}\n          />\n        </View>\n        <View style={styles.configRow}>\n          <Text>download as arraybuffer</Text>\n          <Switch\n            value={this.state.arraybuffer}\n            onValueChange={arraybuffer => this.setState({arraybuffer})}\n          />\n        </View>\n        {button}\n        {readystate}\n        {progress}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 8,\n  },\n  progressBarLabel: {\n    marginTop: 12,\n    marginBottom: 8,\n  },\n  configRow: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n\nmodule.exports = XHRExampleDownload;\n"]},"metadata":{},"sourceType":"script"}