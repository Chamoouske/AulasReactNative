{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ios_plugins_1 = require(\"../plugins/ios-plugins\");\n\nvar Scheme_1 = require(\"./Scheme\");\n\nvar fbSchemes = ['fbapi', 'fb-messenger-api', 'fbauth2', 'fbshareextension'];\nexports.withFacebook = ios_plugins_1.createInfoPlistPlugin(setFacebookConfig, 'withFacebook');\n\nfunction getFacebookScheme(config) {\n  var _a;\n\n  return (_a = config.facebookScheme) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookScheme = getFacebookScheme;\n\nfunction getFacebookAppId(config) {\n  var _a;\n\n  return (_a = config.facebookAppId) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookAppId = getFacebookAppId;\n\nfunction getFacebookDisplayName(config) {\n  var _a;\n\n  return (_a = config.facebookDisplayName) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookDisplayName = getFacebookDisplayName;\n\nfunction getFacebookAutoInitEnabled(config) {\n  var _a;\n\n  return (_a = config.facebookAutoInitEnabled) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookAutoInitEnabled = getFacebookAutoInitEnabled;\n\nfunction getFacebookAutoLogAppEvents(config) {\n  var _a;\n\n  return (_a = config.facebookAutoLogAppEventsEnabled) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookAutoLogAppEvents = getFacebookAutoLogAppEvents;\n\nfunction getFacebookAdvertiserIDCollection(config) {\n  var _a;\n\n  return (_a = config.facebookAdvertiserIDCollectionEnabled) !== null && _a !== void 0 ? _a : null;\n}\n\nexports.getFacebookAdvertiserIDCollection = getFacebookAdvertiserIDCollection;\n\nfunction setFacebookConfig(config, infoPlist) {\n  infoPlist = setFacebookAppId(config, infoPlist);\n  infoPlist = setFacebookApplicationQuerySchemes(config, infoPlist);\n  infoPlist = setFacebookDisplayName(config, infoPlist);\n  infoPlist = setFacebookAutoInitEnabled(config, infoPlist);\n  infoPlist = setFacebookAutoLogAppEventsEnabled(config, infoPlist);\n  infoPlist = setFacebookAdvertiserIDCollectionEnabled(config, infoPlist);\n  infoPlist = setFacebookScheme(config, infoPlist);\n  return infoPlist;\n}\n\nexports.setFacebookConfig = setFacebookConfig;\n\nfunction setFacebookScheme(config, infoPlist) {\n  var facebookScheme = getFacebookScheme(config);\n  return Scheme_1.appendScheme(facebookScheme, infoPlist);\n}\n\nexports.setFacebookScheme = setFacebookScheme;\n\nfunction setFacebookAutoInitEnabled(config, _a) {\n  var FacebookAutoInitEnabled = _a.FacebookAutoInitEnabled,\n      infoPlist = __rest(_a, [\"FacebookAutoInitEnabled\"]);\n\n  var facebookAutoInitEnabled = getFacebookAutoInitEnabled(config);\n\n  if (facebookAutoInitEnabled === null) {\n    return infoPlist;\n  }\n\n  return _extends(_extends({}, infoPlist), {\n    FacebookAutoInitEnabled: facebookAutoInitEnabled\n  });\n}\n\nexports.setFacebookAutoInitEnabled = setFacebookAutoInitEnabled;\n\nfunction setFacebookAutoLogAppEventsEnabled(config, _a) {\n  var FacebookAutoLogAppEventsEnabled = _a.FacebookAutoLogAppEventsEnabled,\n      infoPlist = __rest(_a, [\"FacebookAutoLogAppEventsEnabled\"]);\n\n  var facebookAutoLogAppEventsEnabled = getFacebookAutoLogAppEvents(config);\n\n  if (facebookAutoLogAppEventsEnabled === null) {\n    return infoPlist;\n  }\n\n  return _extends(_extends({}, infoPlist), {\n    FacebookAutoLogAppEventsEnabled: facebookAutoLogAppEventsEnabled\n  });\n}\n\nexports.setFacebookAutoLogAppEventsEnabled = setFacebookAutoLogAppEventsEnabled;\n\nfunction setFacebookAdvertiserIDCollectionEnabled(config, _a) {\n  var FacebookAdvertiserIDCollectionEnabled = _a.FacebookAdvertiserIDCollectionEnabled,\n      infoPlist = __rest(_a, [\"FacebookAdvertiserIDCollectionEnabled\"]);\n\n  var facebookAdvertiserIDCollectionEnabled = getFacebookAdvertiserIDCollection(config);\n\n  if (facebookAdvertiserIDCollectionEnabled === null) {\n    return infoPlist;\n  }\n\n  return _extends(_extends({}, infoPlist), {\n    FacebookAdvertiserIDCollectionEnabled: facebookAdvertiserIDCollectionEnabled\n  });\n}\n\nexports.setFacebookAdvertiserIDCollectionEnabled = setFacebookAdvertiserIDCollectionEnabled;\n\nfunction setFacebookAppId(config, _a) {\n  var FacebookAppID = _a.FacebookAppID,\n      infoPlist = __rest(_a, [\"FacebookAppID\"]);\n\n  var facebookAppId = getFacebookAppId(config);\n\n  if (facebookAppId) {\n    return _extends(_extends({}, infoPlist), {\n      FacebookAppID: facebookAppId\n    });\n  }\n\n  return infoPlist;\n}\n\nexports.setFacebookAppId = setFacebookAppId;\n\nfunction setFacebookDisplayName(config, _a) {\n  var FacebookDisplayName = _a.FacebookDisplayName,\n      infoPlist = __rest(_a, [\"FacebookDisplayName\"]);\n\n  var facebookDisplayName = getFacebookDisplayName(config);\n\n  if (facebookDisplayName) {\n    return _extends(_extends({}, infoPlist), {\n      FacebookDisplayName: facebookDisplayName\n    });\n  }\n\n  return infoPlist;\n}\n\nexports.setFacebookDisplayName = setFacebookDisplayName;\n\nfunction setFacebookApplicationQuerySchemes(config, infoPlist) {\n  var facebookAppId = getFacebookAppId(config);\n  var existingSchemes = infoPlist.LSApplicationQueriesSchemes || [];\n\n  if (facebookAppId && existingSchemes.includes('fbapi')) {\n    return infoPlist;\n  } else if (!facebookAppId && !existingSchemes.length) {\n    var LSApplicationQueriesSchemes = infoPlist.LSApplicationQueriesSchemes,\n        restInfoPlist = __rest(infoPlist, [\"LSApplicationQueriesSchemes\"]);\n\n    if (LSApplicationQueriesSchemes === null || LSApplicationQueriesSchemes === void 0 ? void 0 : LSApplicationQueriesSchemes.length) {\n      return infoPlist;\n    } else {\n      return restInfoPlist;\n    }\n  }\n\n  var _loop = function _loop(scheme) {\n    var index = existingSchemes.findIndex(function (s) {\n      return s === scheme;\n    });\n\n    if (index > -1) {\n      existingSchemes.splice(index, 1);\n    }\n  };\n\n  for (var _iterator = _createForOfIteratorHelperLoose(fbSchemes), _step; !(_step = _iterator()).done;) {\n    var scheme = _step.value;\n\n    _loop(scheme);\n  }\n\n  if (!facebookAppId) {\n    infoPlist.LSApplicationQueriesSchemes = existingSchemes;\n\n    if (!infoPlist.LSApplicationQueriesSchemes.length) {\n      delete infoPlist.LSApplicationQueriesSchemes;\n    }\n\n    return infoPlist;\n  }\n\n  var updatedSchemes = [].concat(_toConsumableArray(existingSchemes), fbSchemes);\n  return _extends(_extends({}, infoPlist), {\n    LSApplicationQueriesSchemes: updatedSchemes\n  });\n}\n\nexports.setFacebookApplicationQuerySchemes = setFacebookApplicationQuerySchemes;","map":{"version":3,"sources":["../../src/ios/Facebook.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\nimport { appendScheme } from './Scheme';\n\ntype ExpoConfigFacebook = Pick<\n  ExpoConfig,\n  | 'facebookScheme'\n  | 'facebookAdvertiserIDCollectionEnabled'\n  | 'facebookAppId'\n  | 'facebookAutoInitEnabled'\n  | 'facebookAutoLogAppEventsEnabled'\n  | 'facebookDisplayName'\n>;\n\nconst fbSchemes = ['fbapi', 'fb-messenger-api', 'fbauth2', 'fbshareextension'];\n\nexport const withFacebook = createInfoPlistPlugin(setFacebookConfig, 'withFacebook');\n\n/**\n * Getters\n * TODO: these getters are the same between ios/android, we could reuse them\n */\n\nexport function getFacebookScheme(config: ExpoConfigFacebook) {\n  return config.facebookScheme ?? null;\n}\n\nexport function getFacebookAppId(config: Pick<ExpoConfigFacebook, 'facebookAppId'>) {\n  return config.facebookAppId ?? null;\n}\n\nexport function getFacebookDisplayName(config: ExpoConfigFacebook) {\n  return config.facebookDisplayName ?? null;\n}\nexport function getFacebookAutoInitEnabled(config: ExpoConfigFacebook) {\n  return config.facebookAutoInitEnabled ?? null;\n}\n\nexport function getFacebookAutoLogAppEvents(config: ExpoConfigFacebook) {\n  return config.facebookAutoLogAppEventsEnabled ?? null;\n}\n\nexport function getFacebookAdvertiserIDCollection(config: ExpoConfigFacebook) {\n  return config.facebookAdvertiserIDCollectionEnabled ?? null;\n}\n\n/**\n * Setters\n */\n\nexport function setFacebookConfig(config: ExpoConfigFacebook, infoPlist: InfoPlist) {\n  infoPlist = setFacebookAppId(config, infoPlist);\n  infoPlist = setFacebookApplicationQuerySchemes(config, infoPlist);\n  infoPlist = setFacebookDisplayName(config, infoPlist);\n  infoPlist = setFacebookAutoInitEnabled(config, infoPlist);\n  infoPlist = setFacebookAutoLogAppEventsEnabled(config, infoPlist);\n  infoPlist = setFacebookAdvertiserIDCollectionEnabled(config, infoPlist);\n  infoPlist = setFacebookScheme(config, infoPlist);\n  return infoPlist;\n}\n\nexport function setFacebookScheme(config: ExpoConfigFacebook, infoPlist: InfoPlist) {\n  const facebookScheme = getFacebookScheme(config);\n  return appendScheme(facebookScheme, infoPlist);\n}\n\nexport function setFacebookAutoInitEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAutoInitEnabled, ...infoPlist }: InfoPlist\n) {\n  const facebookAutoInitEnabled = getFacebookAutoInitEnabled(config);\n\n  if (facebookAutoInitEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoInitEnabled: facebookAutoInitEnabled,\n  };\n}\n\nexport function setFacebookAutoLogAppEventsEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAutoLogAppEventsEnabled, ...infoPlist }: InfoPlist\n) {\n  const facebookAutoLogAppEventsEnabled = getFacebookAutoLogAppEvents(config);\n\n  if (facebookAutoLogAppEventsEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAutoLogAppEventsEnabled: facebookAutoLogAppEventsEnabled,\n  };\n}\n\nexport function setFacebookAdvertiserIDCollectionEnabled(\n  config: ExpoConfigFacebook,\n  { FacebookAdvertiserIDCollectionEnabled, ...infoPlist }: InfoPlist\n) {\n  const facebookAdvertiserIDCollectionEnabled = getFacebookAdvertiserIDCollection(config);\n\n  if (facebookAdvertiserIDCollectionEnabled === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    FacebookAdvertiserIDCollectionEnabled: facebookAdvertiserIDCollectionEnabled,\n  };\n}\n\nexport function setFacebookAppId(\n  config: Pick<ExpoConfigFacebook, 'facebookAppId'>,\n  { FacebookAppID, ...infoPlist }: InfoPlist\n) {\n  const facebookAppId = getFacebookAppId(config);\n  if (facebookAppId) {\n    return {\n      ...infoPlist,\n      FacebookAppID: facebookAppId,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookDisplayName(\n  config: ExpoConfigFacebook,\n  { FacebookDisplayName, ...infoPlist }: InfoPlist\n) {\n  const facebookDisplayName = getFacebookDisplayName(config);\n\n  if (facebookDisplayName) {\n    return {\n      ...infoPlist,\n      FacebookDisplayName: facebookDisplayName,\n    };\n  }\n\n  return infoPlist;\n}\n\nexport function setFacebookApplicationQuerySchemes(\n  config: Pick<ExpoConfigFacebook, 'facebookAppId'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const facebookAppId = getFacebookAppId(config);\n\n  const existingSchemes = infoPlist.LSApplicationQueriesSchemes || [];\n\n  if (facebookAppId && existingSchemes.includes('fbapi')) {\n    // already inlcuded, no need to add again\n    return infoPlist;\n  } else if (!facebookAppId && !existingSchemes.length) {\n    // already removed, no need to strip again\n    const { LSApplicationQueriesSchemes, ...restInfoPlist } = infoPlist;\n    if (LSApplicationQueriesSchemes?.length) {\n      return infoPlist;\n    } else {\n      // Return without the empty LSApplicationQueriesSchemes array.\n      return restInfoPlist;\n    }\n  }\n\n  // Remove all schemes\n  for (const scheme of fbSchemes) {\n    const index = existingSchemes.findIndex(s => s === scheme);\n    if (index > -1) {\n      existingSchemes.splice(index, 1);\n    }\n  }\n\n  if (!facebookAppId) {\n    // Run again to ensure the LSApplicationQueriesSchemes array is stripped if needed.\n    infoPlist.LSApplicationQueriesSchemes = existingSchemes;\n    if (!infoPlist.LSApplicationQueriesSchemes.length) {\n      delete infoPlist.LSApplicationQueriesSchemes;\n    }\n    return infoPlist;\n  }\n\n  // TODO: it's actually necessary to add more query schemes (specific to the\n  // app) to support all of the features that the Facebook SDK provides, should\n  // we sync those here too?\n  const updatedSchemes = [...existingSchemes, ...fbSchemes];\n\n  return {\n    ...infoPlist,\n    LSApplicationQueriesSchemes: updatedSchemes,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}