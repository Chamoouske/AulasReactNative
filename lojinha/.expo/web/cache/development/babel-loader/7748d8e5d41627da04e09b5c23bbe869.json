{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Vibration/VibrationExample.js\";\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar Vibration = require(\"react-native-web/dist/exports/Vibration\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nexports.framework = 'React';\nexports.title = 'Vibration';\nexports.description = 'Vibration API';\nvar pattern, patternLiteral, patternDescription;\n\nif (Platform.OS === 'android') {\n  pattern = [0, 500, 200, 500];\n  patternLiteral = '[0, 500, 200, 500]';\n  patternDescription = patternLiteral + \"\\narg 0: duration to wait before turning the vibrator on.\\narg with odd: vibration length.\\narg with even: duration to wait before next vibration.\\n\";\n} else {\n  pattern = [0, 1000, 2000, 3000];\n  patternLiteral = '[0, 1000, 2000, 3000]';\n  patternDescription = patternLiteral + \"\\nvibration length on iOS is fixed.\\npattern controls durations BETWEEN each vibration only.\\n\\narg 0: duration to wait before turning the vibrator on.\\nsubsequent args: duration to wait before next vibration.\\n\";\n}\n\nexports.examples = [{\n  title: 'Pattern Descriptions',\n  render: function render() {\n    return React.createElement(View, {\n      style: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, patternDescription));\n  }\n}, {\n  title: 'Vibration.vibrate()',\n  render: function render() {\n    return React.createElement(TouchableHighlight, {\n      style: styles.wrapper,\n      onPress: function onPress() {\n        return Vibration.vibrate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Vibrate\")));\n  }\n}, {\n  title: \"Vibration.vibrate(\" + patternLiteral + \")\",\n  render: function render() {\n    return React.createElement(TouchableHighlight, {\n      style: styles.wrapper,\n      onPress: function onPress() {\n        return Vibration.vibrate(pattern);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Vibrate once\")));\n  }\n}, {\n  title: \"Vibration.vibrate(\" + patternLiteral + \", true)\",\n  render: function render() {\n    return React.createElement(TouchableHighlight, {\n      style: styles.wrapper,\n      onPress: function onPress() {\n        return Vibration.vibrate(pattern, true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Vibrate until cancel\")));\n  }\n}, {\n  title: 'Vibration.cancel()',\n  render: function render() {\n    return React.createElement(TouchableHighlight, {\n      style: styles.wrapper,\n      onPress: function onPress() {\n        return Vibration.cancel();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Cancel\")));\n  }\n}];\nvar styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Vibration/VibrationExample.js"],"names":["React","require","exports","framework","title","description","pattern","patternLiteral","patternDescription","Platform","OS","examples","render","styles","wrapper","Vibration","vibrate","button","cancel","StyleSheet","create","borderRadius","marginBottom","backgroundColor","padding"],"mappings":"AAUA;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;;;;;AAWAC,OAAO,CAACC,SAAR,GAAoB,OAApB;AACAD,OAAO,CAACE,KAAR,GAAgB,WAAhB;AACAF,OAAO,CAACG,WAAR,GAAsB,eAAtB;AAEA,IAAIC,OAAJ,EAAaC,cAAb,EAA6BC,kBAA7B;;AACA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BJ,EAAAA,OAAO,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAAV;AACAC,EAAAA,cAAc,GAAG,oBAAjB;AACAC,EAAAA,kBAAkB,GAAMD,cAAN,yJAAlB;AAKD,CARD,MAQO;AACLD,EAAAA,OAAO,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,CAAV;AACAC,EAAAA,cAAc,GAAG,uBAAjB;AACAC,EAAAA,kBAAkB,GAAMD,cAAN,wNAAlB;AAOD;;AAEDL,OAAO,CAACS,QAAR,GAAmB,CACjB;AACEP,EAAAA,KAAK,EAAE,sBADT;AAEEQ,EAAAA,MAFF,oBAEuB;AACnB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAON,kBAAP,CADF,CADF;AAKD;AARH,CADiB,EAWjB;AACEJ,EAAAA,KAAK,EAAE,qBADT;AAEEQ,EAAAA,MAFF,oBAEuB;AACnB,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,OADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAACC,OAAV,EAAN;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAHF,CADF;AASD;AAZH,CAXiB,EAyBjB;AACEb,EAAAA,KAAK,yBAAuBG,cAAvB,MADP;AAEEK,EAAAA,MAFF,oBAEuB;AACnB,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,OADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAACC,OAAV,CAAkBV,OAAlB,CAAN;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAHF,CADF;AASD;AAZH,CAzBiB,EAuCjB;AACEb,EAAAA,KAAK,yBAAuBG,cAAvB,YADP;AAEEK,EAAAA,MAFF,oBAEuB;AACnB,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,OADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAACC,OAAV,CAAkBV,OAAlB,EAA2B,IAA3B,CAAN;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAHF,CADF;AASD;AAZH,CAvCiB,EAqDjB;AACEb,EAAAA,KAAK,EAAE,oBADT;AAEEQ,EAAAA,MAFF,oBAEuB;AACnB,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,OADhB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAACG,MAAV,EAAN;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAHF,CADF;AASD;AAZH,CArDiB,CAAnB;AAqEA,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,OAAO,EAAE;AACPO,IAAAA,YAAY,EAAE,CADP;AAEPC,IAAAA,YAAY,EAAE;AAFP,GADsB;AAK/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,OAAO,EAAE;AAFH;AALuB,CAAlB,CAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  StyleSheet,\n  View,\n  Text,\n  TouchableHighlight,\n  Vibration,\n  Platform,\n} = require('react-native');\n\nexports.framework = 'React';\nexports.title = 'Vibration';\nexports.description = 'Vibration API';\n\nlet pattern, patternLiteral, patternDescription;\nif (Platform.OS === 'android') {\n  pattern = [0, 500, 200, 500];\n  patternLiteral = '[0, 500, 200, 500]';\n  patternDescription = `${patternLiteral}\narg 0: duration to wait before turning the vibrator on.\narg with odd: vibration length.\narg with even: duration to wait before next vibration.\n`;\n} else {\n  pattern = [0, 1000, 2000, 3000];\n  patternLiteral = '[0, 1000, 2000, 3000]';\n  patternDescription = `${patternLiteral}\nvibration length on iOS is fixed.\npattern controls durations BETWEEN each vibration only.\n\narg 0: duration to wait before turning the vibrator on.\nsubsequent args: duration to wait before next vibration.\n`;\n}\n\nexports.examples = [\n  {\n    title: 'Pattern Descriptions',\n    render(): React.Node {\n      return (\n        <View style={styles.wrapper}>\n          <Text>{patternDescription}</Text>\n        </View>\n      );\n    },\n  },\n  {\n    title: 'Vibration.vibrate()',\n    render(): React.Node {\n      return (\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => Vibration.vibrate()}>\n          <View style={styles.button}>\n            <Text>Vibrate</Text>\n          </View>\n        </TouchableHighlight>\n      );\n    },\n  },\n  {\n    title: `Vibration.vibrate(${patternLiteral})`,\n    render(): React.Node {\n      return (\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => Vibration.vibrate(pattern)}>\n          <View style={styles.button}>\n            <Text>Vibrate once</Text>\n          </View>\n        </TouchableHighlight>\n      );\n    },\n  },\n  {\n    title: `Vibration.vibrate(${patternLiteral}, true)`,\n    render(): React.Node {\n      return (\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => Vibration.vibrate(pattern, true)}>\n          <View style={styles.button}>\n            <Text>Vibrate until cancel</Text>\n          </View>\n        </TouchableHighlight>\n      );\n    },\n  },\n  {\n    title: 'Vibration.cancel()',\n    render(): React.Node {\n      return (\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={() => Vibration.cancel()}>\n          <View style={styles.button}>\n            <Text>Cancel</Text>\n          </View>\n        </TouchableHighlight>\n      );\n    },\n  },\n];\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}