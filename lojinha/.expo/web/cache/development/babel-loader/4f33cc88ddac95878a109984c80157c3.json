{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspector-test.js\";\n\nvar React = require('react');\n\nvar LogBoxInspector = require(\"../LogBoxInspector\").default;\n\nvar LogBoxLog = require(\"../../Data/LogBoxLog\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\nvar logs = [new LogBoxLog({\n  level: 'warn',\n  isComponentError: false,\n  message: {\n    content: 'Some kind of message (first)',\n    substitutions: []\n  },\n  stack: [],\n  category: 'Some kind of message (first)',\n  componentStack: []\n}), new LogBoxLog({\n  level: 'error',\n  isComponentError: false,\n  message: {\n    content: 'Some kind of message (second)',\n    substitutions: []\n  },\n  stack: [],\n  category: 'Some kind of message (second)',\n  componentStack: []\n}), new LogBoxLog({\n  level: 'fatal',\n  isComponentError: false,\n  message: {\n    content: 'Some kind of message (third)',\n    substitutions: []\n  },\n  stack: [],\n  category: 'Some kind of message (third)',\n  componentStack: []\n})];\ndescribe('LogBoxContainer', function () {\n  it('should render null with no logs', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspector, {\n      onDismiss: function onDismiss() {},\n      onMinimize: function onMinimize() {},\n      onChangeSelectedIndex: function onChangeSelectedIndex() {},\n      logs: [],\n      selectedIndex: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render warning with selectedIndex 0', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspector, {\n      onDismiss: function onDismiss() {},\n      onMinimize: function onMinimize() {},\n      onChangeSelectedIndex: function onChangeSelectedIndex() {},\n      logs: logs,\n      selectedIndex: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render fatal with selectedIndex 2', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspector, {\n      onDismiss: function onDismiss() {},\n      onMinimize: function onMinimize() {},\n      onChangeSelectedIndex: function onChangeSelectedIndex() {},\n      logs: logs,\n      selectedIndex: 2,\n      fatalType: \"fatal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspector-test.js"],"names":["React","require","LogBoxInspector","default","LogBoxLog","render","logs","level","isComponentError","message","content","substitutions","stack","category","componentStack","describe","it","output","shallowRender","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxInspector = require('../LogBoxInspector').default;\nconst LogBoxLog = require('../../Data/LogBoxLog').default;\nconst render = require('../../../../jest/renderer');\n\nconst logs = [\n  new LogBoxLog({\n    level: 'warn',\n    isComponentError: false,\n    message: {\n      content: 'Some kind of message (first)',\n      substitutions: [],\n    },\n    stack: [],\n    category: 'Some kind of message (first)',\n    componentStack: [],\n  }),\n  new LogBoxLog({\n    level: 'error',\n    isComponentError: false,\n    message: {\n      content: 'Some kind of message (second)',\n      substitutions: [],\n    },\n    stack: [],\n    category: 'Some kind of message (second)',\n    componentStack: [],\n  }),\n  new LogBoxLog({\n    level: 'fatal',\n    isComponentError: false,\n    message: {\n      content: 'Some kind of message (third)',\n      substitutions: [],\n    },\n    stack: [],\n    category: 'Some kind of message (third)',\n    componentStack: [],\n  }),\n];\n\ndescribe('LogBoxContainer', () => {\n  it('should render null with no logs', () => {\n    const output = render.shallowRender(\n      <LogBoxInspector\n        onDismiss={() => {}}\n        onMinimize={() => {}}\n        onChangeSelectedIndex={() => {}}\n        logs={[]}\n        selectedIndex={0}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render warning with selectedIndex 0', () => {\n    const output = render.shallowRender(\n      <LogBoxInspector\n        onDismiss={() => {}}\n        onMinimize={() => {}}\n        onChangeSelectedIndex={() => {}}\n        logs={logs}\n        selectedIndex={0}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render fatal with selectedIndex 2', () => {\n    const output = render.shallowRender(\n      <LogBoxInspector\n        onDismiss={() => {}}\n        onMinimize={() => {}}\n        onChangeSelectedIndex={() => {}}\n        logs={logs}\n        selectedIndex={2}\n        fatalType=\"fatal\"\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}