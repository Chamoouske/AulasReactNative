{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = headerSearchPathIter;\nvar defaultHeaderPaths = ['\"$(inherited)\"'];\n\nfunction headerSearchPathIter(project, func) {\n  var config = project.pbxXCBuildConfigurationSection();\n  Object.keys(config).filter(function (ref) {\n    return ref.indexOf('_comment') === -1;\n  }).forEach(function (ref) {\n    var buildSettings = config[ref].buildSettings;\n    var shouldVisitBuildSettings = (Array.isArray(buildSettings.OTHER_LDFLAGS) ? buildSettings.OTHER_LDFLAGS : []).indexOf('\"-lc++\"') >= 0;\n\n    if (shouldVisitBuildSettings) {\n      var searchPaths = buildSettings.HEADER_SEARCH_PATHS ? [].concat(buildSettings.HEADER_SEARCH_PATHS) : defaultHeaderPaths;\n      buildSettings.HEADER_SEARCH_PATHS = func(searchPaths);\n    }\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/mapHeaderSearchPaths.js"],"names":["Object","defineProperty","exports","value","default","headerSearchPathIter","defaultHeaderPaths","project","func","config","pbxXCBuildConfigurationSection","keys","filter","ref","indexOf","forEach","buildSettings","shouldVisitBuildSettings","Array","isArray","OTHER_LDFLAGS","searchPaths","HEADER_SEARCH_PATHS","concat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,oBAAlB;AAyBA,IAAMC,kBAAkB,GAAG,CAAC,gBAAD,CAA3B;;AAEA,SAASD,oBAAT,CAA8BE,OAA9B,EAAuCC,IAAvC,EAA6C;AAC3C,MAAMC,MAAM,GAAGF,OAAO,CAACG,8BAAR,EAAf;AACAV,EAAAA,MAAM,CAACW,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,CAA2B,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,CAAY,UAAZ,MAA4B,CAAC,CAAjC;AAAA,GAA9B,EAAkEC,OAAlE,CAA0E,UAAAF,GAAG,EAAI;AAAA,QAE7EG,aAF6E,GAG3EP,MAAM,CAACI,GAAD,CAHqE,CAE7EG,aAF6E;AAI/E,QAAMC,wBAAwB,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,aAAa,CAACI,aAA5B,IAA6CJ,aAAa,CAACI,aAA3D,GAA2E,EAA5E,EAAgFN,OAAhF,CAAwF,SAAxF,KAAsG,CAAvI;;AAEA,QAAIG,wBAAJ,EAA8B;AAC5B,UAAMI,WAAW,GAAGL,aAAa,CAACM,mBAAd,GAAoC,GAAGC,MAAH,CAAUP,aAAa,CAACM,mBAAxB,CAApC,GAAmFhB,kBAAvG;AACAU,MAAAA,aAAa,CAACM,mBAAd,GAAoCd,IAAI,CAACa,WAAD,CAAxC;AACD;AACF,GAVD;AAWD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = headerSearchPathIter;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Given Xcode project and path, iterate over all build configurations\n * and execute func with HEADER_SEARCH_PATHS from current section\n *\n * We cannot use builtin addToHeaderSearchPaths method since react-native init does not\n * use $(TARGET_NAME) for PRODUCT_NAME, but sets it manually so that method will skip\n * that target.\n *\n * To workaround that issue and make it more bullet-proof for different names,\n * we iterate over all configurations and look for `lc++` linker flag to detect\n * React Native target.\n *\n * Important: That function mutates `buildSettings` and it's not pure thus you should\n * not rely on its return value\n */\nconst defaultHeaderPaths = ['\"$(inherited)\"'];\n\nfunction headerSearchPathIter(project, func) {\n  const config = project.pbxXCBuildConfigurationSection();\n  Object.keys(config).filter(ref => ref.indexOf('_comment') === -1).forEach(ref => {\n    const {\n      buildSettings\n    } = config[ref];\n    const shouldVisitBuildSettings = (Array.isArray(buildSettings.OTHER_LDFLAGS) ? buildSettings.OTHER_LDFLAGS : []).indexOf('\"-lc++\"') >= 0;\n\n    if (shouldVisitBuildSettings) {\n      const searchPaths = buildSettings.HEADER_SEARCH_PATHS ? [].concat(buildSettings.HEADER_SEARCH_PATHS) : defaultHeaderPaths;\n      buildSettings.HEADER_SEARCH_PATHS = func(searchPaths);\n    }\n  });\n}\n\n//# sourceMappingURL=mapHeaderSearchPaths.js.map"]},"metadata":{},"sourceType":"script"}