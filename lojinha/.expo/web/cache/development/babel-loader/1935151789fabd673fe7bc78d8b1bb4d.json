{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getHeaderSearchPath;\n\nfunction _path() {\n  var data = require(\"path\");\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nvar getOuterDirectory = function getOuterDirectory(directories) {\n  return directories.reduce(function (topDir, currentDir) {\n    var currentFolders = currentDir.split(_path().posix.sep);\n    var topMostFolders = topDir.split(_path().posix.sep);\n\n    if (currentFolders.length === topMostFolders.length && (0, _lodash().last)(currentFolders) !== (0, _lodash().last)(topMostFolders)) {\n      return currentFolders.slice(0, -1).join(_path().posix.sep);\n    }\n\n    return currentFolders.length < topMostFolders.length ? currentDir : topDir;\n  });\n};\n\nfunction getHeaderSearchPath(sourceDir, headers) {\n  var directories = (0, _lodash().union)(headers.map(_path().posix.dirname));\n  return directories.length === 1 ? \"\\\"$(SRCROOT)/\" + _path().posix.relative(sourceDir, directories[0]) + \"\\\"\" : \"\\\"$(SRCROOT)/\" + _path().posix.relative(sourceDir, getOuterDirectory(directories)) + \"/**\\\"\";\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/getHeaderSearchPath.js"],"names":["Object","defineProperty","exports","value","default","getHeaderSearchPath","_path","data","require","_lodash","getOuterDirectory","directories","reduce","topDir","currentDir","currentFolders","split","posix","sep","topMostFolders","length","last","slice","join","sourceDir","headers","union","map","dirname","relative"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,SAASC,KAAT,GAAiB;AACf,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAF,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,OAAT,GAAmB;AACjB,MAAMF,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,EAAAA,OAAO,GAAG,mBAAY;AACpB,WAAOF,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAoBD,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,WAAW;AAAA,SAAIA,WAAW,CAACC,MAAZ,CAAmB,UAACC,MAAD,EAASC,UAAT,EAAwB;AAClF,QAAMC,cAAc,GAAGD,UAAU,CAACE,KAAX,CAAiBV,KAAK,GAAGW,KAAR,CAAcC,GAA/B,CAAvB;AACA,QAAMC,cAAc,GAAGN,MAAM,CAACG,KAAP,CAAaV,KAAK,GAAGW,KAAR,CAAcC,GAA3B,CAAvB;;AAEA,QAAIH,cAAc,CAACK,MAAf,KAA0BD,cAAc,CAACC,MAAzC,IAAmD,CAAC,GAAGX,OAAO,GAAGY,IAAd,EAAoBN,cAApB,MAAwC,CAAC,GAAGN,OAAO,GAAGY,IAAd,EAAoBF,cAApB,CAA/F,EAAoI;AAClI,aAAOJ,cAAc,CAACO,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,EAA4BC,IAA5B,CAAiCjB,KAAK,GAAGW,KAAR,CAAcC,GAA/C,CAAP;AACD;;AAED,WAAOH,cAAc,CAACK,MAAf,GAAwBD,cAAc,CAACC,MAAvC,GAAgDN,UAAhD,GAA6DD,MAApE;AACD,GATwC,CAAJ;AAAA,CAArC;;AA0BA,SAASR,mBAAT,CAA6BmB,SAA7B,EAAwCC,OAAxC,EAAiD;AAC/C,MAAMd,WAAW,GAAG,CAAC,GAAGF,OAAO,GAAGiB,KAAd,EAAqBD,OAAO,CAACE,GAAR,CAAYrB,KAAK,GAAGW,KAAR,CAAcW,OAA1B,CAArB,CAApB;AACA,SAAOjB,WAAW,CAACS,MAAZ,KAAuB,CAAvB,qBAA0Cd,KAAK,GAAGW,KAAR,CAAcY,QAAd,CAAuBL,SAAvB,EAAkCb,WAAW,CAAC,CAAD,CAA7C,CAA1C,4BAAgHL,KAAK,GAAGW,KAAR,CAAcY,QAAd,CAAuBL,SAAvB,EAAkCd,iBAAiB,CAACC,WAAD,CAAnD,CAAhH,UAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getHeaderSearchPath;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Given an array of directories, it returns the one that contains\n * all the other directories in a given array inside it.\n *\n * Example:\n * Given an array of directories: ['/Users/Kureev/a', '/Users/Kureev/b']\n * the returned folder is `/Users/Kureev`\n *\n * Check `getHeaderSearchPath.spec.js` for more use-cases.\n */\nconst getOuterDirectory = directories => directories.reduce((topDir, currentDir) => {\n  const currentFolders = currentDir.split(_path().posix.sep);\n  const topMostFolders = topDir.split(_path().posix.sep);\n\n  if (currentFolders.length === topMostFolders.length && (0, _lodash().last)(currentFolders) !== (0, _lodash().last)(topMostFolders)) {\n    return currentFolders.slice(0, -1).join(_path().posix.sep);\n  }\n\n  return currentFolders.length < topMostFolders.length ? currentDir : topDir;\n});\n/**\n * Given an array of headers it returns search path so Xcode can resolve\n * headers when referenced like below:\n * ```\n * #import \"CodePush.h\"\n * ```\n * If all files are located in one directory (directories.length === 1),\n * we simply return a relative path to that location.\n *\n * Otherwise, we loop through them all to find the outer one that contains\n * all the headers inside. That location is then returned with /** appended at\n * the end so Xcode marks that location as `recursive` and will look inside\n * every folder of it to locate correct headers.\n */\n\n\nfunction getHeaderSearchPath(sourceDir, headers) {\n  const directories = (0, _lodash().union)(headers.map(_path().posix.dirname));\n  return directories.length === 1 ? `\"$(SRCROOT)/${_path().posix.relative(sourceDir, directories[0])}\"` : `\"$(SRCROOT)/${_path().posix.relative(sourceDir, getOuterDirectory(directories))}/**\"`;\n}\n\n//# sourceMappingURL=getHeaderSearchPath.js.map"]},"metadata":{},"sourceType":"script"}