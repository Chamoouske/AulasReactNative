{"ast":null,"code":"import React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styleToBarStyle from \"./styleToBarStyle\";\nimport useColorScheme from \"./useColorScheme\";\nexport default function ExpoStatusBar(props) {\n  var style = props.style,\n      animated = props.animated,\n      hidden = props.hidden,\n      backgroundColorProp = props.backgroundColor,\n      translucentProp = props.translucent;\n  var translucent = translucentProp != null ? translucentProp : true;\n  var colorScheme = useColorScheme();\n  var barStyle = styleToBarStyle(style, colorScheme);\n  var backgroundColor = backgroundColorProp;\n\n  if (translucent && !backgroundColor) {\n    backgroundColor = 'transparent';\n  }\n\n  return React.createElement(StatusBar, {\n    translucent: translucent,\n    barStyle: barStyle,\n    backgroundColor: backgroundColor,\n    animated: animated,\n    hidden: hidden\n  });\n}","map":{"version":3,"sources":["../src/ExpoStatusBar.android.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;;AAIA,OAAO,eAAP;AACA,OAAO,cAAP;AAEA,eAAc,SAAU,aAAV,CAAwB,KAAxB,EAA6C;AAAA,MAEvD,KAFuD,GAOrD,KAPqD,CAEvD,KAFuD;AAAA,MAGvD,QAHuD,GAOrD,KAPqD,CAGvD,QAHuD;AAAA,MAIvD,MAJuD,GAOrD,KAPqD,CAIvD,MAJuD;AAAA,MAKtC,mBALsC,GAOrD,KAPqD,CAKvD,eALuD;AAAA,MAM1C,eAN0C,GAOrD,KAPqD,CAMvD,WANuD;AAUzD,MAAM,WAAW,GAAG,eAAH,WAAG,eAAH,GAAsB,IAAvC;AAIA,MAAM,WAAW,GAAG,cAAc,EAAlC;AACA,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAD,EAAQ,WAAR,CAAhC;AAIA,MAAI,eAAe,GAAG,mBAAtB;;AACA,MAAI,WAAW,IAAI,CAAC,eAApB,EAAqC;AACnC,IAAA,eAAe,GAAG,aAAlB;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,IAAA,WAAW,EAAE,WADL;AAER,IAAA,QAAQ,EAAE,QAFF;AAGR,IAAA,eAAe,EAAE,eAHT;AAIR,IAAA,QAAQ,EAAE,QAJF;AAKR,IAAA,MAAM,EAAE;AALA,GAAV,CADF;AASD","sourcesContent":["import React from 'react';\nimport { StatusBar } from 'react-native';\n\nimport { StatusBarProps } from './StatusBar.types';\nimport styleToBarStyle from './styleToBarStyle';\nimport useColorScheme from './useColorScheme';\n\nexport default function ExpoStatusBar(props: StatusBarProps) {\n  const {\n    style,\n    animated,\n    hidden,\n    backgroundColor: backgroundColorProp,\n    translucent: translucentProp,\n  } = props;\n\n  // Default to true for translucent\n  const translucent = translucentProp ?? true;\n\n  // Pick appropriate default value depending on current theme, so if we are\n  // locked to light mode we don't end up with a light status bar\n  const colorScheme = useColorScheme();\n  const barStyle = styleToBarStyle(style, colorScheme);\n\n  // If translucent and no backgroundColor is provided, then use transparent\n  // background\n  let backgroundColor = backgroundColorProp;\n  if (translucent && !backgroundColor) {\n    backgroundColor = 'transparent';\n  }\n\n  return (\n    <StatusBar\n      translucent={translucent}\n      barStyle={barStyle}\n      backgroundColor={backgroundColor}\n      animated={animated}\n      hidden={hidden}\n    />\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}