{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/MultitouchHandlingTestAppModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Recording = NativeModules.Recording;\n\nvar extractSingleTouch = function extractSingleTouch(nativeEvent) {\n  var touches = nativeEvent.touches;\n  var changedTouches = nativeEvent.changedTouches;\n  var hasTouches = touches && touches.length > 0;\n  var hasChangedTouches = changedTouches && changedTouches.length > 0;\n  return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\n};\n\nvar TouchTestApp = function (_React$Component) {\n  _inherits(TouchTestApp, _React$Component);\n\n  var _super = _createSuper(TouchTestApp);\n\n  function TouchTestApp() {\n    var _this;\n\n    _classCallCheck(this, TouchTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleStartShouldSetResponder = function (e) {\n      return true;\n    };\n\n    _this.handleOnResponderMove = function (e) {\n      e = extractSingleTouch(e.nativeEvent);\n      Recording.record('move;' + e.touches.length);\n    };\n\n    _this.handleResponderStart = function (e) {\n      e = extractSingleTouch(e.nativeEvent);\n\n      if (e.touches) {\n        Recording.record('start;' + e.touches.length);\n      } else {\n        Recording.record('start;ExtraPointer');\n      }\n    };\n\n    _this.handleResponderEnd = function (e) {\n      e = extractSingleTouch(e.nativeEvent);\n\n      if (e.touches) {\n        Recording.record('end;' + e.touches.length);\n      } else {\n        Recording.record('end;ExtraPointer');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TouchTestApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        onStartShouldSetResponder: this.handleStartShouldSetResponder,\n        onResponderMove: this.handleOnResponderMove,\n        onResponderStart: this.handleResponderStart,\n        onResponderEnd: this.handleResponderEnd,\n        collapsable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return TouchTestApp;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nmodule.exports = TouchTestApp;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/MultitouchHandlingTestAppModule.js"],"names":["React","require","Recording","NativeModules","extractSingleTouch","nativeEvent","touches","changedTouches","hasTouches","length","hasChangedTouches","TouchTestApp","handleStartShouldSetResponder","e","handleOnResponderMove","record","handleResponderStart","handleResponderEnd","styles","container","Component","StyleSheet","create","flex","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;IAGOC,S,GAAaC,a,CAAbD,S;;AAEP,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,WAAW,EAAI;AACxC,MAAMC,OAAO,GAAGD,WAAW,CAACC,OAA5B;AACA,MAAMC,cAAc,GAAGF,WAAW,CAACE,cAAnC;AACA,MAAMC,UAAU,GAAGF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAA/C;AACA,MAAMC,iBAAiB,GAAGH,cAAc,IAAIA,cAAc,CAACE,MAAf,GAAwB,CAApE;AAEA,SAAO,CAACD,UAAD,IAAeE,iBAAf,GACHH,cAAc,CAAC,CAAD,CADX,GAEHC,UAAU,GACVF,OAAO,CAAC,CAAD,CADG,GAEVD,WAJJ;AAKD,CAXD;;IAaMM,Y;;;;;;;;;;;;;;;;UACJC,6B,GAAgC,UAAAC,CAAC,EAAI;AACnC,aAAO,IAAP;AACD,K;;UAEDC,qB,GAAwB,UAAAD,CAAC,EAAI;AAC3BA,MAAAA,CAAC,GAAGT,kBAAkB,CAACS,CAAC,CAACR,WAAH,CAAtB;AACAH,MAAAA,SAAS,CAACa,MAAV,CAAiB,UAAUF,CAAC,CAACP,OAAF,CAAUG,MAArC;AACD,K;;UAEDO,oB,GAAuB,UAAAH,CAAC,EAAI;AAC1BA,MAAAA,CAAC,GAAGT,kBAAkB,CAACS,CAAC,CAACR,WAAH,CAAtB;;AACA,UAAIQ,CAAC,CAACP,OAAN,EAAe;AACbJ,QAAAA,SAAS,CAACa,MAAV,CAAiB,WAAWF,CAAC,CAACP,OAAF,CAAUG,MAAtC;AACD,OAFD,MAEO;AACLP,QAAAA,SAAS,CAACa,MAAV,CAAiB,oBAAjB;AACD;AACF,K;;UAEDE,kB,GAAqB,UAAAJ,CAAC,EAAI;AACxBA,MAAAA,CAAC,GAAGT,kBAAkB,CAACS,CAAC,CAACR,WAAH,CAAtB;;AACA,UAAIQ,CAAC,CAACP,OAAN,EAAe;AACbJ,QAAAA,SAAS,CAACa,MAAV,CAAiB,SAASF,CAAC,CAACP,OAAF,CAAUG,MAApC;AACD,OAFD,MAEO;AACLP,QAAAA,SAAS,CAACa,MAAV,CAAiB,kBAAjB;AACD;AACF,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEG,MAAM,CAACC,SADhB;AAEE,QAAA,yBAAyB,EAAE,KAAKP,6BAFlC;AAGE,QAAA,eAAe,EAAE,KAAKE,qBAHxB;AAIE,QAAA,gBAAgB,EAAE,KAAKE,oBAJzB;AAKE,QAAA,cAAc,EAAE,KAAKC,kBALvB;AAME,QAAA,WAAW,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAvCwBjB,KAAK,CAACoB,S;;AA0CjC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAMAC,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {NativeModules, StyleSheet, View} = require('react-native');\n\nconst {Recording} = NativeModules;\n\nconst extractSingleTouch = nativeEvent => {\n  const touches = nativeEvent.touches;\n  const changedTouches = nativeEvent.changedTouches;\n  const hasTouches = touches && touches.length > 0;\n  const hasChangedTouches = changedTouches && changedTouches.length > 0;\n\n  return !hasTouches && hasChangedTouches\n    ? changedTouches[0]\n    : hasTouches\n    ? touches[0]\n    : nativeEvent;\n};\n\nclass TouchTestApp extends React.Component {\n  handleStartShouldSetResponder = e => {\n    return true;\n  };\n\n  handleOnResponderMove = e => {\n    e = extractSingleTouch(e.nativeEvent);\n    Recording.record('move;' + e.touches.length);\n  };\n\n  handleResponderStart = e => {\n    e = extractSingleTouch(e.nativeEvent);\n    if (e.touches) {\n      Recording.record('start;' + e.touches.length);\n    } else {\n      Recording.record('start;ExtraPointer');\n    }\n  };\n\n  handleResponderEnd = e => {\n    e = extractSingleTouch(e.nativeEvent);\n    if (e.touches) {\n      Recording.record('end;' + e.touches.length);\n    } else {\n      Recording.record('end;ExtraPointer');\n    }\n  };\n\n  render() {\n    return (\n      <View\n        style={styles.container}\n        onStartShouldSetResponder={this.handleStartShouldSetResponder}\n        onResponderMove={this.handleOnResponderMove}\n        onResponderStart={this.handleResponderStart}\n        onResponderEnd={this.handleResponderEnd}\n        collapsable={false}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nmodule.exports = TouchTestApp;\n"]},"metadata":{},"sourceType":"script"}