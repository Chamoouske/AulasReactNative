{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInstalled;\n\nfunction _xcode() {\n  var data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function _xcode() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getGroup = _interopRequireDefault(require(\"./getGroup\"));\n\nvar _hasLibraryImported = _interopRequireDefault(require(\"./hasLibraryImported\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar memo = new Map();\n\nfunction isInstalled(projectConfig, dependencyConfig) {\n  var project;\n\n  if (memo.has(projectConfig.pbxprojPath)) {\n    project = memo.get(projectConfig.pbxprojPath);\n  } else {\n    project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n    memo.set(projectConfig.pbxprojPath, project);\n  }\n\n  var libraries = (0, _getGroup.default)(project, projectConfig.libraryFolder);\n\n  if (!libraries) {\n    return false;\n  }\n\n  return (0, _hasLibraryImported.default)(libraries, dependencyConfig.projectName);\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/isInstalled.js"],"names":["Object","defineProperty","exports","value","default","isInstalled","_xcode","data","_interopRequireDefault","require","_getGroup","_hasLibraryImported","obj","__esModule","memo","Map","projectConfig","dependencyConfig","project","has","pbxprojPath","get","parseSync","set","libraries","libraryFolder","projectName"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,SAASC,MAAT,GAAkB;AAChB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAH,EAAAA,MAAM,GAAG,kBAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,SAAS,GAAGF,sBAAsB,CAACC,OAAO,cAAR,CAAtC;;AAEA,IAAIE,mBAAmB,GAAGH,sBAAsB,CAACC,OAAO,wBAAR,CAAhD;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAS/F,IAAME,IAAI,GAAG,IAAIC,GAAJ,EAAb;;AAMA,SAASV,WAAT,CAAqBW,aAArB,EAAoCC,gBAApC,EAAsD;AACpD,MAAIC,OAAJ;;AAEA,MAAIJ,IAAI,CAACK,GAAL,CAASH,aAAa,CAACI,WAAvB,CAAJ,EAAyC;AACvCF,IAAAA,OAAO,GAAGJ,IAAI,CAACO,GAAL,CAASL,aAAa,CAACI,WAAvB,CAAV;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,GAAGZ,MAAM,GAAGF,OAAT,CAAiBc,OAAjB,CAAyBF,aAAa,CAACI,WAAvC,EAAoDE,SAApD,EAAV;AACAR,IAAAA,IAAI,CAACS,GAAL,CAASP,aAAa,CAACI,WAAvB,EAAoCF,OAApC;AACD;;AAED,MAAMM,SAAS,GAAG,CAAC,GAAGd,SAAS,CAACN,OAAd,EAAuBc,OAAvB,EAAgCF,aAAa,CAACS,aAA9C,CAAlB;;AAEA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,SAAO,CAAC,GAAGb,mBAAmB,CAACP,OAAxB,EAAiCoB,SAAjC,EAA4CP,gBAAgB,CAACS,WAA7D,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInstalled;\n\nfunction _xcode() {\n  const data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getGroup = _interopRequireDefault(require(\"./getGroup\"));\n\nvar _hasLibraryImported = _interopRequireDefault(require(\"./hasLibraryImported\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst memo = new Map();\n/**\n * Returns true if `xcodeproj` specified by dependencyConfig is present\n * in a top level `libraryFolder`\n */\n\nfunction isInstalled(projectConfig, dependencyConfig) {\n  let project;\n\n  if (memo.has(projectConfig.pbxprojPath)) {\n    project = memo.get(projectConfig.pbxprojPath);\n  } else {\n    project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n    memo.set(projectConfig.pbxprojPath, project);\n  }\n\n  const libraries = (0, _getGroup.default)(project, projectConfig.libraryFolder);\n\n  if (!libraries) {\n    return false;\n  }\n\n  return (0, _hasLibraryImported.default)(libraries, dependencyConfig.projectName);\n}\n\n//# sourceMappingURL=isInstalled.js.map"]},"metadata":{},"sourceType":"script"}