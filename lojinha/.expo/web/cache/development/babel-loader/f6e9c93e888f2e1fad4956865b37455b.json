{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _healthchecks = require(\"./healthchecks\");\n\nvar _loader = require(\"../../tools/loader\");\n\nvar _printFixOptions = _interopRequireWildcard(require(\"./printFixOptions\"));\n\nvar _runAutomaticFix = _interopRequireWildcard(require(\"./runAutomaticFix\"));\n\nvar _envinfo = _interopRequireDefault(require(\"../../tools/envinfo\"));\n\nvar _common = require(\"./healthchecks/common\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar printCategory = function printCategory(_ref) {\n  var label = _ref.label,\n      key = _ref.key;\n\n  if (key > 0) {\n    _cliTools().logger.log();\n  }\n\n  _cliTools().logger.log(_chalk().default.dim(label));\n};\n\nvar printVersions = function printVersions(_ref2) {\n  var version = _ref2.version,\n      versions = _ref2.versions,\n      versionRange = _ref2.versionRange;\n\n  if (versions) {\n    var _versionsToShow = Array.isArray(versions) ? versions.join(', ') : 'N/A';\n\n    (0, _common.logMessage)(\"- Versions found: \" + _chalk().default.red(_versionsToShow));\n    (0, _common.logMessage)(\"- Version supported: \" + _chalk().default.green(versionRange));\n    return;\n  }\n\n  var versionsToShow = version && version !== 'Not Found' ? version : 'N/A';\n  (0, _common.logMessage)(\"- Version found: \" + _chalk().default.red(versionsToShow));\n  (0, _common.logMessage)(\"- Version supported: \" + _chalk().default.green(versionRange));\n  return;\n};\n\nvar printIssue = function printIssue(_ref3) {\n  var label = _ref3.label,\n      needsToBeFixed = _ref3.needsToBeFixed,\n      version = _ref3.version,\n      versions = _ref3.versions,\n      versionRange = _ref3.versionRange,\n      isRequired = _ref3.isRequired,\n      description = _ref3.description;\n  var symbol = needsToBeFixed ? isRequired ? _chalk().default.red('✖') : _chalk().default.yellow('●') : _chalk().default.green('✓');\n  var descriptionToShow = description ? \" - \" + description : '';\n\n  _cliTools().logger.log(\" \" + symbol + \" \" + label + descriptionToShow);\n\n  if (needsToBeFixed && versionRange) {\n    return printVersions({\n      version: version,\n      versions: versions,\n      versionRange: versionRange\n    });\n  }\n};\n\nvar printOverallStats = function printOverallStats(_ref4) {\n  var errors = _ref4.errors,\n      warnings = _ref4.warnings;\n\n  _cliTools().logger.log(\"\\n\" + _chalk().default.bold('Errors:') + \"   \" + errors);\n\n  _cliTools().logger.log(_chalk().default.bold('Warnings:') + \" \" + warnings);\n};\n\nvar getAutomaticFixForPlatform = function getAutomaticFixForPlatform(healthcheck, platform) {\n  switch (platform) {\n    case 'win32':\n      return healthcheck.win32AutomaticFix || healthcheck.runAutomaticFix;\n\n    case 'darwin':\n      return healthcheck.darwinAutomaticFix || healthcheck.runAutomaticFix;\n\n    case 'linux':\n      return healthcheck.linuxAutomaticFix || healthcheck.runAutomaticFix;\n\n    default:\n      return healthcheck.runAutomaticFix;\n  }\n};\n\nvar _default = function _default(_, options) {\n  var Loader, loader, environmentInfo, iterateOverHealthChecks, removeFixedCategories, iterateOverCategories, healthchecksPerCategory, stats, removeKeyPressListener, onKeyPress;\n  return _regeneratorRuntime.async(function _default$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          Loader = (0, _loader.getLoader)();\n          loader = new Loader();\n          loader.start('Running diagnostics...');\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap((0, _envinfo.default)());\n\n        case 5:\n          environmentInfo = _context4.sent;\n\n          iterateOverHealthChecks = function iterateOverHealthChecks(_ref5) {\n            var label, healthchecks;\n            return _regeneratorRuntime.async(function iterateOverHealthChecks$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    label = _ref5.label, healthchecks = _ref5.healthchecks;\n                    _context2.t0 = label;\n                    _context2.next = 4;\n                    return _regeneratorRuntime.awrap(Promise.all(healthchecks.map(function _callee(healthcheck) {\n                      var _await$healthcheck$ge, needsToBeFixed, version, versions, versionRange, isRequired, isWarning;\n\n                      return _regeneratorRuntime.async(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              if (!(healthcheck.visible === false)) {\n                                _context.next = 2;\n                                break;\n                              }\n\n                              return _context.abrupt(\"return\");\n\n                            case 2:\n                              _context.next = 4;\n                              return _regeneratorRuntime.awrap(healthcheck.getDiagnostics(environmentInfo));\n\n                            case 4:\n                              _await$healthcheck$ge = _context.sent;\n                              needsToBeFixed = _await$healthcheck$ge.needsToBeFixed;\n                              version = _await$healthcheck$ge.version;\n                              versions = _await$healthcheck$ge.versions;\n                              versionRange = _await$healthcheck$ge.versionRange;\n                              isRequired = healthcheck.isRequired !== false;\n                              isWarning = needsToBeFixed && !isRequired;\n                              return _context.abrupt(\"return\", {\n                                label: healthcheck.label,\n                                needsToBeFixed: Boolean(needsToBeFixed),\n                                version: version,\n                                versions: versions,\n                                versionRange: versionRange,\n                                description: healthcheck.description,\n                                runAutomaticFix: getAutomaticFixForPlatform(healthcheck, process.platform),\n                                isRequired: isRequired,\n                                type: needsToBeFixed ? isWarning ? _healthchecks.HEALTHCHECK_TYPES.WARNING : _healthchecks.HEALTHCHECK_TYPES.ERROR : undefined\n                              });\n\n                            case 12:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    })));\n\n                  case 4:\n                    _context2.t1 = _context2.sent.filter(function (healthcheck) {\n                      return healthcheck !== undefined;\n                    });\n                    return _context2.abrupt(\"return\", {\n                      label: _context2.t0,\n                      healthchecks: _context2.t1\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          removeFixedCategories = function removeFixedCategories(categories) {\n            return categories.filter(function (category) {\n              return category.healthchecks.some(function (healthcheck) {\n                return healthcheck.needsToBeFixed;\n              });\n            });\n          };\n\n          iterateOverCategories = function iterateOverCategories(categories) {\n            return Promise.all(categories.map(iterateOverHealthChecks));\n          };\n\n          _context4.next = 11;\n          return _regeneratorRuntime.awrap(iterateOverCategories(Object.values((0, _healthchecks.getHealthchecks)(options)).filter(function (category) {\n            return category !== undefined;\n          })));\n\n        case 11:\n          healthchecksPerCategory = _context4.sent;\n          loader.stop();\n          stats = {\n            errors: 0,\n            warnings: 0\n          };\n          healthchecksPerCategory.forEach(function (issueCategory, key) {\n            printCategory(_objectSpread(_objectSpread({}, issueCategory), {}, {\n              key: key\n            }));\n            issueCategory.healthchecks.forEach(function (healthcheck) {\n              printIssue(healthcheck);\n\n              if (healthcheck.type === _healthchecks.HEALTHCHECK_TYPES.WARNING) {\n                stats.warnings++;\n                return;\n              }\n\n              if (healthcheck.type === _healthchecks.HEALTHCHECK_TYPES.ERROR) {\n                stats.errors++;\n                return;\n              }\n            });\n          });\n          printOverallStats(stats);\n\n          if (!options.fix) {\n            _context4.next = 20;\n            break;\n          }\n\n          _context4.next = 19;\n          return _regeneratorRuntime.awrap((0, _runAutomaticFix.default)({\n            healthchecks: removeFixedCategories(healthchecksPerCategory),\n            automaticFixLevel: _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ALL_ISSUES,\n            stats: stats,\n            loader: loader,\n            environmentInfo: environmentInfo\n          }));\n\n        case 19:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 20:\n          removeKeyPressListener = function removeKeyPressListener() {\n            if (typeof process.stdin.setRawMode === 'function') {\n              process.stdin.setRawMode(false);\n            }\n\n            process.stdin.removeAllListeners('data');\n          };\n\n          onKeyPress = function onKeyPress(key) {\n            var _automaticFixLevel, automaticFixLevel;\n\n            return _regeneratorRuntime.async(function onKeyPress$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!(key === _printFixOptions.KEYS.EXIT || key === \"\\x03\")) {\n                      _context3.next = 4;\n                      break;\n                    }\n\n                    removeKeyPressListener();\n                    process.exit(0);\n                    return _context3.abrupt(\"return\");\n\n                  case 4:\n                    if (![_printFixOptions.KEYS.FIX_ALL_ISSUES, _printFixOptions.KEYS.FIX_ERRORS, _printFixOptions.KEYS.FIX_WARNINGS].includes(key)) {\n                      _context3.next = 16;\n                      break;\n                    }\n\n                    removeKeyPressListener();\n                    _context3.prev = 6;\n                    automaticFixLevel = (_automaticFixLevel = {}, _defineProperty(_automaticFixLevel, _printFixOptions.KEYS.FIX_ALL_ISSUES, _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ALL_ISSUES), _defineProperty(_automaticFixLevel, _printFixOptions.KEYS.FIX_ERRORS, _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ERRORS), _defineProperty(_automaticFixLevel, _printFixOptions.KEYS.FIX_WARNINGS, _runAutomaticFix.AUTOMATIC_FIX_LEVELS.WARNINGS), _automaticFixLevel);\n                    _context3.next = 10;\n                    return _regeneratorRuntime.awrap((0, _runAutomaticFix.default)({\n                      healthchecks: removeFixedCategories(healthchecksPerCategory),\n                      automaticFixLevel: automaticFixLevel[key],\n                      stats: stats,\n                      loader: loader,\n                      environmentInfo: environmentInfo\n                    }));\n\n                  case 10:\n                    process.exit(0);\n                    _context3.next = 16;\n                    break;\n\n                  case 13:\n                    _context3.prev = 13;\n                    _context3.t0 = _context3[\"catch\"](6);\n                    process.exit(1);\n\n                  case 16:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, [[6, 13]], Promise);\n          };\n\n          if (stats.errors || stats.warnings) {\n            (0, _printFixOptions.default)({\n              onKeyPress: onKeyPress\n            });\n          }\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/doctor/doctor.js"],"names":["Object","defineProperty","exports","value","default","_chalk","data","_interopRequireDefault","require","_cliTools","_healthchecks","_loader","_printFixOptions","_interopRequireWildcard","_runAutomaticFix","_envinfo","_common","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","printCategory","label","logger","log","dim","printVersions","version","versions","versionRange","versionsToShow","Array","isArray","join","logMessage","red","green","printIssue","needsToBeFixed","isRequired","description","symbol","yellow","descriptionToShow","printOverallStats","errors","warnings","bold","getAutomaticFixForPlatform","healthcheck","platform","win32AutomaticFix","runAutomaticFix","darwinAutomaticFix","linuxAutomaticFix","_default","_","options","Loader","getLoader","loader","start","environmentInfo","iterateOverHealthChecks","healthchecks","Promise","all","map","visible","getDiagnostics","isWarning","Boolean","process","type","HEALTHCHECK_TYPES","WARNING","ERROR","undefined","filter","removeFixedCategories","categories","category","some","iterateOverCategories","values","getHealthchecks","healthchecksPerCategory","stop","stats","forEach","issueCategory","fix","automaticFixLevel","AUTOMATIC_FIX_LEVELS","ALL_ISSUES","removeKeyPressListener","stdin","setRawMode","removeAllListeners","onKeyPress","KEYS","EXIT","exit","FIX_ALL_ISSUES","FIX_ERRORS","FIX_WARNINGS","includes","ERRORS","WARNINGS"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _healthchecks = require(\"./healthchecks\");\n\nvar _loader = require(\"../../tools/loader\");\n\nvar _printFixOptions = _interopRequireWildcard(require(\"./printFixOptions\"));\n\nvar _runAutomaticFix = _interopRequireWildcard(require(\"./runAutomaticFix\"));\n\nvar _envinfo = _interopRequireDefault(require(\"../../tools/envinfo\"));\n\nvar _common = require(\"./healthchecks/common\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst printCategory = ({\n  label,\n  key\n}) => {\n  if (key > 0) {\n    _cliTools().logger.log();\n  }\n\n  _cliTools().logger.log(_chalk().default.dim(label));\n};\n\nconst printVersions = ({\n  version,\n  versions,\n  versionRange\n}) => {\n  if (versions) {\n    const versionsToShow = Array.isArray(versions) ? versions.join(', ') : 'N/A';\n    (0, _common.logMessage)(`- Versions found: ${_chalk().default.red(versionsToShow)}`);\n    (0, _common.logMessage)(`- Version supported: ${_chalk().default.green(versionRange)}`);\n    return;\n  }\n\n  const versionsToShow = version && version !== 'Not Found' ? version : 'N/A';\n  (0, _common.logMessage)(`- Version found: ${_chalk().default.red(versionsToShow)}`);\n  (0, _common.logMessage)(`- Version supported: ${_chalk().default.green(versionRange)}`);\n  return;\n};\n\nconst printIssue = ({\n  label,\n  needsToBeFixed,\n  version,\n  versions,\n  versionRange,\n  isRequired,\n  description\n}) => {\n  const symbol = needsToBeFixed ? isRequired ? _chalk().default.red('✖') : _chalk().default.yellow('●') : _chalk().default.green('✓');\n  const descriptionToShow = description ? ` - ${description}` : '';\n\n  _cliTools().logger.log(` ${symbol} ${label}${descriptionToShow}`);\n\n  if (needsToBeFixed && versionRange) {\n    return printVersions({\n      version,\n      versions,\n      versionRange\n    });\n  }\n};\n\nconst printOverallStats = ({\n  errors,\n  warnings\n}) => {\n  _cliTools().logger.log(`\\n${_chalk().default.bold('Errors:')}   ${errors}`);\n\n  _cliTools().logger.log(`${_chalk().default.bold('Warnings:')} ${warnings}`);\n};\n\n/**\n * Given a `healthcheck` and a `platform`, returns the specific fix for\n * it or the fallback one if there is not one (`runAutomaticFix`).\n */\nconst getAutomaticFixForPlatform = (healthcheck, platform) => {\n  switch (platform) {\n    case 'win32':\n      return healthcheck.win32AutomaticFix || healthcheck.runAutomaticFix;\n\n    case 'darwin':\n      return healthcheck.darwinAutomaticFix || healthcheck.runAutomaticFix;\n\n    case 'linux':\n      return healthcheck.linuxAutomaticFix || healthcheck.runAutomaticFix;\n\n    default:\n      return healthcheck.runAutomaticFix;\n  }\n};\n\nvar _default = async (_, options) => {\n  const Loader = (0, _loader.getLoader)();\n  const loader = new Loader();\n  loader.start('Running diagnostics...');\n  const environmentInfo = await (0, _envinfo.default)();\n\n  const iterateOverHealthChecks = async ({\n    label,\n    healthchecks\n  }) => ({\n    label,\n    healthchecks: (await Promise.all(healthchecks.map(async healthcheck => {\n      if (healthcheck.visible === false) {\n        return;\n      }\n\n      const {\n        needsToBeFixed,\n        version,\n        versions,\n        versionRange\n      } = await healthcheck.getDiagnostics(environmentInfo); // Assume that it's required unless specified otherwise\n\n      const isRequired = healthcheck.isRequired !== false;\n      const isWarning = needsToBeFixed && !isRequired;\n      return {\n        label: healthcheck.label,\n        needsToBeFixed: Boolean(needsToBeFixed),\n        version,\n        versions,\n        versionRange,\n        description: healthcheck.description,\n        runAutomaticFix: getAutomaticFixForPlatform(healthcheck, process.platform),\n        isRequired,\n        type: needsToBeFixed ? isWarning ? _healthchecks.HEALTHCHECK_TYPES.WARNING : _healthchecks.HEALTHCHECK_TYPES.ERROR : undefined\n      };\n    }))).filter(healthcheck => healthcheck !== undefined)\n  }); // Remove all the categories that don't have any healthcheck with\n  // `needsToBeFixed` so they don't show when the user taps to fix encountered\n  // issues\n\n\n  const removeFixedCategories = categories => categories.filter(category => category.healthchecks.some(healthcheck => healthcheck.needsToBeFixed));\n\n  const iterateOverCategories = categories => Promise.all(categories.map(iterateOverHealthChecks));\n\n  const healthchecksPerCategory = await iterateOverCategories(Object.values((0, _healthchecks.getHealthchecks)(options)).filter(category => category !== undefined));\n  loader.stop();\n  const stats = {\n    errors: 0,\n    warnings: 0\n  };\n  healthchecksPerCategory.forEach((issueCategory, key) => {\n    printCategory({ ...issueCategory,\n      key\n    });\n    issueCategory.healthchecks.forEach(healthcheck => {\n      printIssue(healthcheck);\n\n      if (healthcheck.type === _healthchecks.HEALTHCHECK_TYPES.WARNING) {\n        stats.warnings++;\n        return;\n      }\n\n      if (healthcheck.type === _healthchecks.HEALTHCHECK_TYPES.ERROR) {\n        stats.errors++;\n        return;\n      }\n    });\n  });\n  printOverallStats(stats);\n\n  if (options.fix) {\n    return await (0, _runAutomaticFix.default)({\n      healthchecks: removeFixedCategories(healthchecksPerCategory),\n      automaticFixLevel: _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ALL_ISSUES,\n      stats,\n      loader,\n      environmentInfo\n    });\n  }\n\n  const removeKeyPressListener = () => {\n    if (typeof process.stdin.setRawMode === 'function') {\n      process.stdin.setRawMode(false);\n    }\n\n    process.stdin.removeAllListeners('data');\n  };\n\n  const onKeyPress = async key => {\n    if (key === _printFixOptions.KEYS.EXIT || key === '\\u0003') {\n      removeKeyPressListener();\n      process.exit(0);\n      return;\n    }\n\n    if ([_printFixOptions.KEYS.FIX_ALL_ISSUES, _printFixOptions.KEYS.FIX_ERRORS, _printFixOptions.KEYS.FIX_WARNINGS].includes(key)) {\n      removeKeyPressListener();\n\n      try {\n        const automaticFixLevel = {\n          [_printFixOptions.KEYS.FIX_ALL_ISSUES]: _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ALL_ISSUES,\n          [_printFixOptions.KEYS.FIX_ERRORS]: _runAutomaticFix.AUTOMATIC_FIX_LEVELS.ERRORS,\n          [_printFixOptions.KEYS.FIX_WARNINGS]: _runAutomaticFix.AUTOMATIC_FIX_LEVELS.WARNINGS\n        };\n        await (0, _runAutomaticFix.default)({\n          healthchecks: removeFixedCategories(healthchecksPerCategory),\n          automaticFixLevel: automaticFixLevel[key],\n          stats,\n          loader,\n          environmentInfo\n        });\n        process.exit(0);\n      } catch (err) {\n        // TODO: log error\n        process.exit(1);\n      }\n    }\n  };\n\n  if (stats.errors || stats.warnings) {\n    (0, _printFixOptions.default)({\n      onKeyPress\n    });\n  }\n};\n\nexports.default = _default;\n\n//# sourceMappingURL=doctor.js.map"]},"metadata":{},"sourceType":"script"}