{"ast":null,"code":"'use strict';\n\nvar Promise = require('promise');\n\nfunction expectToBeCalledOnce(fn) {\n  expect(fn.mock.calls.length).toBe(1);\n}\n\nfunction clearTaskQueue(taskQueue) {\n  do {\n    jest.runAllTimers();\n    taskQueue.processNext();\n    jest.runAllTimers();\n  } while (taskQueue.hasTasksToProcess());\n}\n\ndescribe('TaskQueue', function () {\n  var taskQueue;\n  var onMoreTasks;\n  var sequenceId;\n\n  function createSequenceTask(expectedSequenceId) {\n    return jest.fn(function () {\n      expect(++sequenceId).toBe(expectedSequenceId);\n    });\n  }\n\n  beforeEach(function () {\n    jest.resetModules();\n    onMoreTasks = jest.fn();\n\n    var TaskQueue = require(\"../TaskQueue\");\n\n    taskQueue = new TaskQueue({\n      onMoreTasks: onMoreTasks\n    });\n    sequenceId = 0;\n  });\n  it('should run a basic task', function () {\n    var task1 = createSequenceTask(1);\n    taskQueue.enqueue({\n      run: task1,\n      name: 'run1'\n    });\n    expect(taskQueue.hasTasksToProcess()).toBe(true);\n    taskQueue.processNext();\n    expectToBeCalledOnce(task1);\n  });\n  it('should handle blocking promise task', function () {\n    var task1 = jest.fn(function () {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          expect(++sequenceId).toBe(1);\n          resolve();\n        }, 1);\n      });\n    });\n    var task2 = createSequenceTask(2);\n    taskQueue.enqueue({\n      gen: task1,\n      name: 'gen1'\n    });\n    taskQueue.enqueue({\n      run: task2,\n      name: 'run2'\n    });\n    taskQueue.processNext();\n    expectToBeCalledOnce(task1);\n    expect(task2).not.toBeCalled();\n    expect(onMoreTasks).not.toBeCalled();\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n    clearTaskQueue(taskQueue);\n    expectToBeCalledOnce(onMoreTasks);\n    expectToBeCalledOnce(task2);\n  });\n  it('should handle nested simple tasks', function () {\n    var task1 = jest.fn(function () {\n      expect(++sequenceId).toBe(1);\n      taskQueue.enqueue({\n        run: task3,\n        name: 'run3'\n      });\n    });\n    var task2 = createSequenceTask(2);\n    var task3 = createSequenceTask(3);\n    taskQueue.enqueue({\n      run: task1,\n      name: 'run1'\n    });\n    taskQueue.enqueue({\n      run: task2,\n      name: 'run2'\n    });\n    clearTaskQueue(taskQueue);\n    expectToBeCalledOnce(task1);\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task3);\n  });\n  it('should handle nested promises', function () {\n    var task1 = jest.fn(function () {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          expect(++sequenceId).toBe(1);\n          taskQueue.enqueue({\n            gen: task2,\n            name: 'gen2'\n          });\n          taskQueue.enqueue({\n            run: resolve,\n            name: 'resolve1'\n          });\n        }, 1);\n      });\n    });\n    var task2 = jest.fn(function () {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          expect(++sequenceId).toBe(2);\n          taskQueue.enqueue({\n            run: task3,\n            name: 'run3'\n          });\n          taskQueue.enqueue({\n            run: resolve,\n            name: 'resolve2'\n          });\n        }, 1);\n      });\n    });\n    var task3 = createSequenceTask(3);\n    var task4 = createSequenceTask(4);\n    taskQueue.enqueue({\n      gen: task1,\n      name: 'gen1'\n    });\n    taskQueue.enqueue({\n      run: task4,\n      name: 'run4'\n    });\n    clearTaskQueue(taskQueue);\n    expectToBeCalledOnce(task1);\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task3);\n    expectToBeCalledOnce(task4);\n  });\n  it('should be able to cancel tasks', function () {\n    var task1 = jest.fn();\n    var task2 = createSequenceTask(1);\n    var task3 = jest.fn();\n    var task4 = createSequenceTask(2);\n    taskQueue.enqueue(task1);\n    taskQueue.enqueue(task2);\n    taskQueue.enqueue(task3);\n    taskQueue.enqueue(task4);\n    taskQueue.cancelTasks([task1, task3]);\n    clearTaskQueue(taskQueue);\n    expect(task1).not.toBeCalled();\n    expect(task3).not.toBeCalled();\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task4);\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n  });\n  it('should not crash when last task is cancelled', function () {\n    var task1 = jest.fn();\n    taskQueue.enqueue(task1);\n    taskQueue.cancelTasks([task1]);\n    clearTaskQueue(taskQueue);\n    expect(task1).not.toBeCalled();\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Interaction/__tests__/TaskQueue-test.js"],"names":["Promise","require","expectToBeCalledOnce","fn","expect","mock","calls","length","toBe","clearTaskQueue","taskQueue","jest","runAllTimers","processNext","hasTasksToProcess","describe","onMoreTasks","sequenceId","createSequenceTask","expectedSequenceId","beforeEach","resetModules","TaskQueue","it","task1","enqueue","run","name","resolve","setTimeout","task2","gen","not","toBeCalled","task3","task4","cancelTasks"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst Promise = require('promise');\n\nfunction expectToBeCalledOnce(fn) {\n  expect(fn.mock.calls.length).toBe(1);\n}\n\nfunction clearTaskQueue(taskQueue) {\n  do {\n    jest.runAllTimers();\n    taskQueue.processNext();\n    jest.runAllTimers();\n  } while (taskQueue.hasTasksToProcess());\n}\n\ndescribe('TaskQueue', () => {\n  let taskQueue;\n  let onMoreTasks;\n  let sequenceId;\n  function createSequenceTask(expectedSequenceId) {\n    return jest.fn(() => {\n      expect(++sequenceId).toBe(expectedSequenceId);\n    });\n  }\n  beforeEach(() => {\n    jest.resetModules();\n    onMoreTasks = jest.fn();\n    const TaskQueue = require('../TaskQueue');\n    taskQueue = new TaskQueue({onMoreTasks});\n    sequenceId = 0;\n  });\n\n  it('should run a basic task', () => {\n    const task1 = createSequenceTask(1);\n    taskQueue.enqueue({run: task1, name: 'run1'});\n    expect(taskQueue.hasTasksToProcess()).toBe(true);\n    taskQueue.processNext();\n    expectToBeCalledOnce(task1);\n  });\n\n  it('should handle blocking promise task', () => {\n    const task1 = jest.fn(() => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          expect(++sequenceId).toBe(1);\n          resolve();\n        }, 1);\n      });\n    });\n    const task2 = createSequenceTask(2);\n    taskQueue.enqueue({gen: task1, name: 'gen1'});\n    taskQueue.enqueue({run: task2, name: 'run2'});\n\n    taskQueue.processNext();\n\n    expectToBeCalledOnce(task1);\n    expect(task2).not.toBeCalled();\n    expect(onMoreTasks).not.toBeCalled();\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n\n    clearTaskQueue(taskQueue);\n\n    expectToBeCalledOnce(onMoreTasks);\n    expectToBeCalledOnce(task2);\n  });\n\n  it('should handle nested simple tasks', () => {\n    const task1 = jest.fn(() => {\n      expect(++sequenceId).toBe(1);\n      taskQueue.enqueue({run: task3, name: 'run3'});\n    });\n    const task2 = createSequenceTask(2);\n    const task3 = createSequenceTask(3);\n    taskQueue.enqueue({run: task1, name: 'run1'});\n    taskQueue.enqueue({run: task2, name: 'run2'}); // not blocked by task 1\n\n    clearTaskQueue(taskQueue);\n\n    expectToBeCalledOnce(task1);\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task3);\n  });\n\n  it('should handle nested promises', () => {\n    const task1 = jest.fn(() => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          expect(++sequenceId).toBe(1);\n          taskQueue.enqueue({gen: task2, name: 'gen2'});\n          taskQueue.enqueue({run: resolve, name: 'resolve1'});\n        }, 1);\n      });\n    });\n    const task2 = jest.fn(() => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          expect(++sequenceId).toBe(2);\n          taskQueue.enqueue({run: task3, name: 'run3'});\n          taskQueue.enqueue({run: resolve, name: 'resolve2'});\n        }, 1);\n      });\n    });\n    const task3 = createSequenceTask(3);\n    const task4 = createSequenceTask(4);\n    taskQueue.enqueue({gen: task1, name: 'gen1'});\n    taskQueue.enqueue({run: task4, name: 'run4'}); // blocked by task 1 promise\n\n    clearTaskQueue(taskQueue);\n\n    expectToBeCalledOnce(task1);\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task3);\n    expectToBeCalledOnce(task4);\n  });\n\n  it('should be able to cancel tasks', () => {\n    const task1 = jest.fn();\n    const task2 = createSequenceTask(1);\n    const task3 = jest.fn();\n    const task4 = createSequenceTask(2);\n    taskQueue.enqueue(task1);\n    taskQueue.enqueue(task2);\n    taskQueue.enqueue(task3);\n    taskQueue.enqueue(task4);\n    taskQueue.cancelTasks([task1, task3]);\n    clearTaskQueue(taskQueue);\n    expect(task1).not.toBeCalled();\n    expect(task3).not.toBeCalled();\n    expectToBeCalledOnce(task2);\n    expectToBeCalledOnce(task4);\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n  });\n\n  it('should not crash when last task is cancelled', () => {\n    const task1 = jest.fn();\n    taskQueue.enqueue(task1);\n    taskQueue.cancelTasks([task1]);\n    clearTaskQueue(taskQueue);\n    expect(task1).not.toBeCalled();\n    expect(taskQueue.hasTasksToProcess()).toBe(false);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}