{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/Picker/PickerIOS.ios.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"../../StyleSheet/StyleSheet\");\n\nvar View = require(\"../View/View\");\n\nvar invariant = require('invariant');\n\nvar processColor = require(\"../../StyleSheet/processColor\");\n\nimport RCTPickerNativeComponent, { Commands as PickerCommands } from \"./RCTPickerNativeComponent\";\n\nvar PickerIOSItem = function PickerIOSItem(props) {\n  return null;\n};\n\nvar PickerIOS = function (_React$Component) {\n  _inherits(PickerIOS, _React$Component);\n\n  var _super = _createSuper(PickerIOS);\n\n  function PickerIOS() {\n    var _this;\n\n    _classCallCheck(this, PickerIOS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._picker = null;\n    _this.state = {\n      selectedIndex: 0,\n      items: []\n    };\n\n    _this._onChange = function (event) {\n      if (_this.props.onChange) {\n        _this.props.onChange(event);\n      }\n\n      if (_this.props.onValueChange) {\n        _this.props.onValueChange(event.nativeEvent.newValue, event.nativeEvent.newIndex);\n      }\n\n      _this._lastNativeValue = event.nativeEvent.newIndex;\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerIOS, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, React.createElement(RCTPickerNativeComponent, {\n        ref: function ref(picker) {\n          _this2._picker = picker;\n        },\n        testID: this.props.testID,\n        style: [styles.pickerIOS, this.props.itemStyle],\n        items: this.state.items,\n        selectedIndex: this.state.selectedIndex,\n        onChange: this._onChange,\n        accessibilityLabel: this.props.accessibilityLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._picker && this._lastNativeValue !== undefined && this._lastNativeValue !== this.state.selectedIndex) {\n        PickerCommands.setNativeSelectedIndex(this._picker, this.state.selectedIndex);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      var selectedIndex = 0;\n      var items = [];\n      React.Children.toArray(props.children).filter(function (child) {\n        return child !== null;\n      }).forEach(function (child, index) {\n        if (child.props.value === props.selectedValue) {\n          selectedIndex = index;\n        }\n\n        var processedTextColor = processColor(child.props.color);\n        invariant(processedTextColor == null || typeof processedTextColor === 'number', 'Unexpected color given for PickerIOSItem color');\n        items.push({\n          value: child.props.value,\n          label: child.props.label,\n          textColor: processedTextColor\n        });\n      });\n      return {\n        selectedIndex: selectedIndex,\n        items: items\n      };\n    }\n  }]);\n\n  return PickerIOS;\n}(React.Component);\n\nPickerIOS.Item = PickerIOSItem;\nvar styles = StyleSheet.create({\n  pickerIOS: {\n    height: 216\n  }\n});\nmodule.exports = PickerIOS;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/Picker/PickerIOS.ios.js"],"names":["React","require","StyleSheet","View","invariant","processColor","RCTPickerNativeComponent","Commands","PickerCommands","PickerIOSItem","props","PickerIOS","_picker","state","selectedIndex","items","_onChange","event","onChange","onValueChange","nativeEvent","newValue","newIndex","_lastNativeValue","forceUpdate","style","picker","testID","styles","pickerIOS","itemStyle","accessibilityLabel","undefined","setNativeSelectedIndex","Children","toArray","children","filter","child","forEach","index","value","selectedValue","processedTextColor","color","push","label","textColor","Component","Item","create","height","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This is a controlled component version of RCTPickerIOS.\n\n'use strict';\n\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst View = require('../View/View');\n\nconst invariant = require('invariant');\nconst processColor = require('../../StyleSheet/processColor');\n\nimport RCTPickerNativeComponent, {\n  Commands as PickerCommands,\n} from './RCTPickerNativeComponent';\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {ColorValue} from '../../StyleSheet/StyleSheetTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype PickerIOSChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    newValue: number | string,\n    newIndex: number,\n  |}>,\n>;\n\ntype RCTPickerIOSItemType = $ReadOnly<{|\n  label: ?Label,\n  value: ?(number | string),\n  textColor: ?ProcessedColorValue,\n|}>;\n\ntype Label = Stringish | number;\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  children: React.ChildrenArray<React.Element<typeof PickerIOSItem>>,\n  itemStyle?: ?TextStyleProp,\n  onChange?: ?(event: PickerIOSChangeEvent) => mixed,\n  onValueChange?: ?(itemValue: string | number, itemIndex: number) => mixed,\n  selectedValue: ?(number | string),\n  accessibilityLabel?: ?string,\n|}>;\n\ntype State = {|\n  selectedIndex: number,\n  items: $ReadOnlyArray<RCTPickerIOSItemType>,\n|};\n\ntype ItemProps = $ReadOnly<{|\n  label: ?Label,\n  value?: ?(number | string),\n  color?: ?ColorValue,\n|}>;\n\nconst PickerIOSItem = (props: ItemProps): null => {\n  return null;\n};\n\nclass PickerIOS extends React.Component<Props, State> {\n  _picker: ?React.ElementRef<typeof RCTPickerNativeComponent> = null;\n  _lastNativeValue: ?number;\n\n  state: State = {\n    selectedIndex: 0,\n    items: [],\n  };\n\n  static Item: (props: ItemProps) => null = PickerIOSItem;\n\n  static getDerivedStateFromProps(props: Props): State {\n    let selectedIndex = 0;\n    const items = [];\n    React.Children.toArray(props.children)\n      .filter(child => child !== null)\n      .forEach(function(child, index) {\n        if (child.props.value === props.selectedValue) {\n          selectedIndex = index;\n        }\n        const processedTextColor = processColor(child.props.color);\n        invariant(\n          processedTextColor == null || typeof processedTextColor === 'number',\n          'Unexpected color given for PickerIOSItem color',\n        );\n        items.push({\n          value: child.props.value,\n          label: child.props.label,\n          textColor: processedTextColor,\n        });\n      });\n    return {selectedIndex, items};\n  }\n\n  render(): React.Node {\n    return (\n      <View style={this.props.style}>\n        <RCTPickerNativeComponent\n          ref={picker => {\n            this._picker = picker;\n          }}\n          testID={this.props.testID}\n          style={[styles.pickerIOS, this.props.itemStyle]}\n          items={this.state.items}\n          selectedIndex={this.state.selectedIndex}\n          onChange={this._onChange}\n          accessibilityLabel={this.props.accessibilityLabel}\n        />\n      </View>\n    );\n  }\n\n  componentDidUpdate() {\n    // This is necessary in case native updates the picker and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    if (\n      this._picker &&\n      this._lastNativeValue !== undefined &&\n      this._lastNativeValue !== this.state.selectedIndex\n    ) {\n      PickerCommands.setNativeSelectedIndex(\n        this._picker,\n        this.state.selectedIndex,\n      );\n    }\n  }\n\n  _onChange = event => {\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n    if (this.props.onValueChange) {\n      this.props.onValueChange(\n        event.nativeEvent.newValue,\n        event.nativeEvent.newIndex,\n      );\n    }\n\n    this._lastNativeValue = event.nativeEvent.newIndex;\n    this.forceUpdate();\n  };\n}\n\nconst styles = StyleSheet.create({\n  pickerIOS: {\n    // The picker will conform to whatever width is given, but we do\n    // have to set the component's height explicitly on the\n    // surrounding view to ensure it gets rendered.\n    height: 216,\n  },\n});\n\nmodule.exports = PickerIOS;\n"]},"metadata":{},"sourceType":"module"}