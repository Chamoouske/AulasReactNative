{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nimport { Config, Printer, Refs } from './types';\r\n/**\r\n * Return entries (for example, of a map)\r\n * with spacing, indentation, and comma\r\n * without surrounding punctuation (for example, braces)\r\n */\r\nexport declare function printIteratorEntries(iterator: Iterator<[unknown, unknown]>, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer, separator?: string): string;\r\n/**\r\n * Return values (for example, of a set)\r\n * with spacing, indentation, and comma\r\n * without surrounding punctuation (braces or brackets)\r\n */\r\nexport declare function printIteratorValues(iterator: Iterator<unknown>, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer): string;\r\n/**\r\n * Return items (for example, of an array)\r\n * with spacing, indentation, and comma\r\n * without surrounding punctuation (for example, brackets)\r\n **/\r\nexport declare function printListItems(list: ArrayLike<unknown>, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer): string;\r\n/**\r\n * Return properties of an object\r\n * with spacing, indentation, and comma\r\n * without surrounding punctuation (for example, braces)\r\n */\r\nexport declare function printObjectProperties(val: Record<string, unknown>, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer): string;\r\n"]},"metadata":{},"sourceType":"module"}