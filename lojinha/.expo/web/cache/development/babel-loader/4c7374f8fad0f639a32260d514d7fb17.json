{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/AppState/AppStateExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar AppState = require(\"react-native-web/dist/exports/AppState\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar AppStateSubscription = function (_React$Component) {\n  _inherits(AppStateSubscription, _React$Component);\n\n  var _super = _createSuper(AppStateSubscription);\n\n  function AppStateSubscription() {\n    var _this;\n\n    _classCallCheck(this, AppStateSubscription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appState: AppState.currentState,\n      previousAppStates: [],\n      memoryWarnings: 0\n    };\n\n    _this._handleMemoryWarning = function () {\n      _this.setState({\n        memoryWarnings: _this.state.memoryWarnings + 1\n      });\n    };\n\n    _this._handleAppStateChange = function (appState) {\n      var previousAppStates = _this.state.previousAppStates.slice();\n\n      previousAppStates.push(_this.state.appState);\n\n      _this.setState({\n        appState: appState,\n        previousAppStates: previousAppStates\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppStateSubscription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppState.addEventListener('change', this._handleAppStateChange);\n      AppState.addEventListener('memoryWarning', this._handleMemoryWarning);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppState.removeEventListener('change', this._handleAppStateChange);\n      AppState.removeEventListener('memoryWarning', this._handleMemoryWarning);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.showMemoryWarnings) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, this.state.memoryWarnings));\n      }\n\n      if (this.props.showCurrentOnly) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, this.state.appState));\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, JSON.stringify(this.state.previousAppStates)));\n    }\n  }]);\n\n  return AppStateSubscription;\n}(React.Component);\n\nexports.title = 'AppState';\nexports.description = 'app background status';\nexports.examples = [{\n  title: 'AppState.currentState',\n  description: 'Can be null on app initialization',\n  render: function render() {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }\n    }, AppState.currentState);\n  }\n}, {\n  title: 'Subscribed AppState:',\n  description: 'This changes according to the current state, so you can only ever see it rendered as \"active\"',\n  render: function render() {\n    return React.createElement(AppStateSubscription, {\n      showCurrentOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Previous states:',\n  render: function render() {\n    return React.createElement(AppStateSubscription, {\n      showCurrentOnly: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  platform: 'ios',\n  title: 'Memory Warnings',\n  description: 'In the IOS simulator, hit Shift+Command+M to simulate a memory warning.',\n  render: function render() {\n    return React.createElement(AppStateSubscription, {\n      showMemoryWarnings: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/AppState/AppStateExample.js"],"names":["React","require","AppStateSubscription","state","appState","AppState","currentState","previousAppStates","memoryWarnings","_handleMemoryWarning","setState","_handleAppStateChange","slice","push","addEventListener","removeEventListener","props","showMemoryWarnings","showCurrentOnly","JSON","stringify","Component","exports","title","description","examples","render","platform"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {AppState, Text, View} = require('react-native');\n\nclass AppStateSubscription extends React.Component<\n  $FlowFixMeProps,\n  $FlowFixMeState,\n> {\n  state = {\n    appState: AppState.currentState,\n    previousAppStates: [],\n    memoryWarnings: 0,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener('change', this._handleAppStateChange);\n    AppState.addEventListener('memoryWarning', this._handleMemoryWarning);\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener('change', this._handleAppStateChange);\n    AppState.removeEventListener('memoryWarning', this._handleMemoryWarning);\n  }\n\n  _handleMemoryWarning = () => {\n    this.setState({memoryWarnings: this.state.memoryWarnings + 1});\n  };\n\n  _handleAppStateChange = appState => {\n    const previousAppStates = this.state.previousAppStates.slice();\n    previousAppStates.push(this.state.appState);\n    this.setState({\n      appState,\n      previousAppStates,\n    });\n  };\n\n  render() {\n    if (this.props.showMemoryWarnings) {\n      return (\n        <View>\n          <Text>{this.state.memoryWarnings}</Text>\n        </View>\n      );\n    }\n    if (this.props.showCurrentOnly) {\n      return (\n        <View>\n          <Text>{this.state.appState}</Text>\n        </View>\n      );\n    }\n    return (\n      <View>\n        <Text>{JSON.stringify(this.state.previousAppStates)}</Text>\n      </View>\n    );\n  }\n}\n\nexports.title = 'AppState';\nexports.description = 'app background status';\nexports.examples = [\n  {\n    title: 'AppState.currentState',\n    description: 'Can be null on app initialization',\n    render(): React.Node {\n      return <Text>{AppState.currentState}</Text>;\n    },\n  },\n  {\n    title: 'Subscribed AppState:',\n    description:\n      'This changes according to the current state, so you can only ever see it rendered as \"active\"',\n    render(): React.Element<any> {\n      return <AppStateSubscription showCurrentOnly={true} />;\n    },\n  },\n  {\n    title: 'Previous states:',\n    render(): React.Element<any> {\n      return <AppStateSubscription showCurrentOnly={false} />;\n    },\n  },\n  {\n    platform: 'ios',\n    title: 'Memory Warnings',\n    description:\n      'In the IOS simulator, hit Shift+Command+M to simulate a memory warning.',\n    render(): React.Element<any> {\n      return <AppStateSubscription showMemoryWarnings={true} />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}