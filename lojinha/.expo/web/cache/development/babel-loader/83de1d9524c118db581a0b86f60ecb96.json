{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar firebase = require('firebase/app');\n\nrequire('firebase/auth');\n\nrequire('firebase/firestore');\n\nfunction initializeStore(email, password) {\n  var PROJECT_ID, apiKey, app;\n  return _regeneratorRuntime.async(function initializeStore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          PROJECT_ID = 'react-native-1583841384889';\n          apiKey = ['AIzaSyCm', '5hN3nVNY', 'tF9zkSHa', 'oFpeVe3g', 'LceuC0Q'].join('');\n          app = firebase.initializeApp({\n            apiKey: apiKey,\n            authDomain: PROJECT_ID + \".firebaseapp.com\",\n            databaseURL: \"https://\" + PROJECT_ID + \".firebaseio.com\",\n            projectId: PROJECT_ID,\n            storageBucket: PROJECT_ID + \".appspot.com\",\n            messagingSenderId: '329254200967',\n            appId: '1:329254200967:web:c465681d024115bc303a22',\n            measurementId: 'G-ZKSZ7SCLHK'\n          });\n\n          if (!(email && password)) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(app.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n            return console.log(error);\n          }));\n\n        case 6:\n          return _context.abrupt(\"return\", app.firestore());\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction initializeBinarySizesCollection(firestore) {\n  return getBinarySizesCollection(firestore).doc('a15603d8f1ecdd673d80be318293cee53eb4475d').set({\n    'android-hermes-arm64-v8a': 0,\n    'android-hermes-armeabi-v7a': 0,\n    'android-hermes-x86': 0,\n    'android-hermes-x86_64': 0,\n    'android-jsc-arm64-v8a': 0,\n    'android-jsc-armeabi-v7a': 0,\n    'android-jsc-x86': 0,\n    'android-jsc-x86_64': 0,\n    'ios-universal': 0,\n    timestamp: new Date('Thu Jan 29 17:10:49 2015 -0800')\n  });\n}\n\nfunction getBinarySizesCollection(firestore) {\n  var BINARY_SIZES_COLLECTION = 'binary-sizes';\n  return firestore.collection(BINARY_SIZES_COLLECTION);\n}\n\nfunction createOrUpdateDocument(collection, sha, data) {\n  var stampedData = _objectSpread(_objectSpread({}, data), {}, {\n    timestamp: firebase.firestore.Timestamp.now()\n  });\n\n  var docRef = collection.doc(sha);\n  return docRef.update(stampedData).catch(function _callee(error) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(error.code === 'not-found')) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(docRef.set(stampedData).catch(function (setError) {\n              return console.log(setError);\n            }));\n\n          case 3:\n            _context2.next = 6;\n            break;\n\n          case 5:\n            console.log(error);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n}\n\nfunction getLatestDocument(collection) {\n  return collection.orderBy('timestamp', 'desc').limit(1).get().then(function (snapshot) {\n    if (snapshot.empty) {\n      return undefined;\n    }\n\n    var doc = snapshot.docs[0];\n    return _objectSpread(_objectSpread({}, doc.data()), {}, {\n      commit: doc.id\n    });\n  }).catch(function (error) {\n    console.log(error);\n    return undefined;\n  });\n}\n\nmodule.exports = {\n  initializeStore: initializeStore,\n  initializeBinarySizesCollection: initializeBinarySizesCollection,\n  getBinarySizesCollection: getBinarySizesCollection,\n  createOrUpdateDocument: createOrUpdateDocument,\n  getLatestDocument: getLatestDocument\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/bots/datastore.js"],"names":["firebase","require","initializeStore","email","password","PROJECT_ID","apiKey","join","app","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","signInWithEmailAndPassword","catch","error","console","log","firestore","initializeBinarySizesCollection","getBinarySizesCollection","doc","set","timestamp","Date","BINARY_SIZES_COLLECTION","collection","createOrUpdateDocument","sha","data","stampedData","Timestamp","now","docRef","update","code","setError","getLatestDocument","orderBy","limit","get","then","snapshot","empty","undefined","docs","commit","id","module","exports"],"mappings":"AASA;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AAQA,SAAeC,eAAf,CAA+BC,KAA/B,EAAsCC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,UAAAA,UADR,GACqB,4BADrB;AAEQC,UAAAA,MAFR,GAEiB,CACb,UADa,EAEb,UAFa,EAGb,UAHa,EAIb,UAJa,EAKb,SALa,EAMbC,IANa,CAMR,EANQ,CAFjB;AASQC,UAAAA,GATR,GAScR,QAAQ,CAACS,aAAT,CAAuB;AACjCH,YAAAA,MAAM,EAANA,MADiC;AAEjCI,YAAAA,UAAU,EAAKL,UAAL,qBAFuB;AAGjCM,YAAAA,WAAW,eAAaN,UAAb,oBAHsB;AAIjCO,YAAAA,SAAS,EAAEP,UAJsB;AAKjCQ,YAAAA,aAAa,EAAKR,UAAL,iBALoB;AAMjCS,YAAAA,iBAAiB,EAAE,cANc;AAOjCC,YAAAA,KAAK,EAAE,2CAP0B;AAQjCC,YAAAA,aAAa,EAAE;AARkB,WAAvB,CATd;;AAAA,gBAoBMb,KAAK,IAAIC,QApBf;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAqBUI,GAAG,CACNS,IADG,GAEHC,0BAFG,CAEwBf,KAFxB,EAE+BC,QAF/B,EAGHe,KAHG,CAGG,UAAAC,KAAK;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,WAHR,CArBV;;AAAA;AAAA,2CA2BSZ,GAAG,CAACe,SAAJ,EA3BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkCA,SAASC,+BAAT,CAAyCD,SAAzC,EAAoD;AAClD,SAAOE,wBAAwB,CAACF,SAAD,CAAxB,CACJG,GADI,CACA,0CADA,EAEJC,GAFI,CAEA;AACH,gCAA4B,CADzB;AAEH,kCAA8B,CAF3B;AAGH,0BAAsB,CAHnB;AAIH,6BAAyB,CAJtB;AAKH,6BAAyB,CALtB;AAMH,+BAA2B,CANxB;AAOH,uBAAmB,CAPhB;AAQH,0BAAsB,CARnB;AASH,qBAAiB,CATd;AAUHC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,gCAAT;AAVR,GAFA,CAAP;AAcD;;AAMD,SAASJ,wBAAT,CAAkCF,SAAlC,EAA6C;AAC3C,MAAMO,uBAAuB,GAAG,cAAhC;AACA,SAAOP,SAAS,CAACQ,UAAV,CAAqBD,uBAArB,CAAP;AACD;;AASD,SAASE,sBAAT,CAAgCD,UAAhC,EAA4CE,GAA5C,EAAiDC,IAAjD,EAAuD;AACrD,MAAMC,WAAW,mCACZD,IADY;AAEfN,IAAAA,SAAS,EAAE5B,QAAQ,CAACuB,SAAT,CAAmBa,SAAnB,CAA6BC,GAA7B;AAFI,IAAjB;;AAIA,MAAMC,MAAM,GAAGP,UAAU,CAACL,GAAX,CAAeO,GAAf,CAAf;AACA,SAAOK,MAAM,CAACC,MAAP,CAAcJ,WAAd,EAA2BhB,KAA3B,CAAiC,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClCA,KAAK,CAACoB,IAAN,KAAe,WADmB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAE9BF,MAAM,CAACX,GAAP,CAAWQ,WAAX,EAAwBhB,KAAxB,CAA8B,UAAAsB,QAAQ;AAAA,qBAAIpB,OAAO,CAACC,GAAR,CAAYmB,QAAZ,CAAJ;AAAA,aAAtC,CAF8B;;AAAA;AAAA;AAAA;;AAAA;AAIpCpB,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAJoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC,CAAP;AAOD;;AAOD,SAASsB,iBAAT,CAA2BX,UAA3B,EAAuC;AACrC,SAAOA,UAAU,CACdY,OADI,CACI,WADJ,EACiB,MADjB,EAEJC,KAFI,CAEE,CAFF,EAGJC,GAHI,GAIJC,IAJI,CAIC,UAAAC,QAAQ,EAAI;AAChB,QAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,aAAOC,SAAP;AACD;;AAED,QAAMvB,GAAG,GAAGqB,QAAQ,CAACG,IAAT,CAAc,CAAd,CAAZ;AACA,2CACKxB,GAAG,CAACQ,IAAJ,EADL;AAEEiB,MAAAA,MAAM,EAAEzB,GAAG,CAAC0B;AAFd;AAID,GAdI,EAeJjC,KAfI,CAeE,UAAAC,KAAK,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO6B,SAAP;AACD,GAlBI,CAAP;AAmBD;;AAeDI,MAAM,CAACC,OAAP,GAAiB;AACfpD,EAAAA,eAAe,EAAfA,eADe;AAEfsB,EAAAA,+BAA+B,EAA/BA,+BAFe;AAGfC,EAAAA,wBAAwB,EAAxBA,wBAHe;AAIfO,EAAAA,sBAAsB,EAAtBA,sBAJe;AAKfU,EAAAA,iBAAiB,EAAjBA;AALe,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst firebase = require('firebase/app');\nrequire('firebase/auth');\nrequire('firebase/firestore');\n\n/**\n * Initializes store, and optionally authenticates current user.\n * @param {string?} email\n * @param {string?} password\n * @returns {Promise<firebase.firestore.Firestore>} Reference to store instance\n */\nasync function initializeStore(email, password) {\n  const PROJECT_ID = 'react-native-1583841384889';\n  const apiKey = [\n    'AIzaSyCm',\n    '5hN3nVNY',\n    'tF9zkSHa',\n    'oFpeVe3g',\n    'LceuC0Q',\n  ].join('');\n  const app = firebase.initializeApp({\n    apiKey,\n    authDomain: `${PROJECT_ID}.firebaseapp.com`,\n    databaseURL: `https://${PROJECT_ID}.firebaseio.com`,\n    projectId: PROJECT_ID,\n    storageBucket: `${PROJECT_ID}.appspot.com`,\n    messagingSenderId: '329254200967',\n    appId: '1:329254200967:web:c465681d024115bc303a22',\n    measurementId: 'G-ZKSZ7SCLHK',\n  });\n\n  if (email && password) {\n    await app\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => console.log(error));\n  }\n\n  return app.firestore();\n}\n\n/**\n * Initializes 'binary-sizes' collection using the initial commit's data.\n * @param {firebase.firestore.Firestore} firestore Reference to store instance\n */\nfunction initializeBinarySizesCollection(firestore) {\n  return getBinarySizesCollection(firestore)\n    .doc('a15603d8f1ecdd673d80be318293cee53eb4475d')\n    .set({\n      'android-hermes-arm64-v8a': 0,\n      'android-hermes-armeabi-v7a': 0,\n      'android-hermes-x86': 0,\n      'android-hermes-x86_64': 0,\n      'android-jsc-arm64-v8a': 0,\n      'android-jsc-armeabi-v7a': 0,\n      'android-jsc-x86': 0,\n      'android-jsc-x86_64': 0,\n      'ios-universal': 0,\n      timestamp: new Date('Thu Jan 29 17:10:49 2015 -0800'),\n    });\n}\n\n/**\n * Returns 'binary-sizes' collection.\n * @param {firebase.firestore.Firestore} firestore Reference to store instance\n */\nfunction getBinarySizesCollection(firestore) {\n  const BINARY_SIZES_COLLECTION = 'binary-sizes';\n  return firestore.collection(BINARY_SIZES_COLLECTION);\n}\n\n/**\n * Creates or updates the specified entry.\n * @param {firebase.firestore.CollectionReference<firebase.firestore.DocumentData>} collection\n * @param {string} sha The Git SHA used to identify the entry\n * @param {firebase.firestore.UpdateData} data The data to be inserted/updated\n * @returns {Promise<void>}\n */\nfunction createOrUpdateDocument(collection, sha, data) {\n  const stampedData = {\n    ...data,\n    timestamp: firebase.firestore.Timestamp.now(),\n  };\n  const docRef = collection.doc(sha);\n  return docRef.update(stampedData).catch(async error => {\n    if (error.code === 'not-found') {\n      await docRef.set(stampedData).catch(setError => console.log(setError));\n    } else {\n      console.log(error);\n    }\n  });\n}\n\n/**\n * Returns the latest document in collection.\n * @param {firebase.firestore.CollectionReference<firebase.firestore.DocumentData>} collection\n * @returns {Promise<firebase.firestore.DocumentData | undefined>}\n */\nfunction getLatestDocument(collection) {\n  return collection\n    .orderBy('timestamp', 'desc')\n    .limit(1)\n    .get()\n    .then(snapshot => {\n      if (snapshot.empty) {\n        return undefined;\n      }\n\n      const doc = snapshot.docs[0];\n      return {\n        ...doc.data(),\n        commit: doc.id,\n      };\n    })\n    .catch(error => {\n      console.log(error);\n      return undefined;\n    });\n}\n\n/**\n * Example usage:\n *\n *     const datastore = require('./datastore');\n *     const store = datastore.initializeStore();\n *     const binarySizes = datastore.getBinarySizesCollection(store);\n *     console.log(await getLatestDocument(binarySizes));\n *     console.log(await createOrUpdateDocument(binarySizes, 'some-id', {data: 0}));\n *\n *     // Documentation says that we don't need to call `terminate()` but the script\n *     // will just hang around until the connection times out if we don't.\n *     firestore.terminate();\n */\nmodule.exports = {\n  initializeStore,\n  initializeBinarySizesCollection,\n  getBinarySizesCollection,\n  createOrUpdateDocument,\n  getLatestDocument,\n};\n"]},"metadata":{},"sourceType":"script"}