{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/AccessibilityManagerTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar View = ReactNative.View;\n\nvar RCTDeviceEventEmitter = require('react-native/Libraries/EventEmitter/RCTDeviceEventEmitter');\n\nvar TestModule = ReactNative.NativeModules.TestModule;\nimport NativeAccessibilityManager from 'react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityManager';\nimport invariant from 'invariant';\n\nvar AccessibilityManagerTest = function (_React$Component) {\n  _inherits(AccessibilityManagerTest, _React$Component);\n\n  var _super = _createSuper(AccessibilityManagerTest);\n\n  function AccessibilityManagerTest() {\n    _classCallCheck(this, AccessibilityManagerTest);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccessibilityManagerTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      invariant(NativeAccessibilityManager, \"NativeAccessibilityManager doesn't exist\");\n      NativeAccessibilityManager.setAccessibilityContentSizeMultipliers({\n        extraSmall: 1.0,\n        small: 2.0,\n        medium: 3.0,\n        large: 4.0,\n        extraLarge: 5.0,\n        extraExtraLarge: 6.0,\n        extraExtraExtraLarge: 7.0,\n        accessibilityMedium: 8.0,\n        accessibilityLarge: 9.0,\n        accessibilityExtraLarge: 10.0,\n        accessibilityExtraExtraLarge: 11.0,\n        accessibilityExtraExtraExtraLarge: 12.0\n      });\n      RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {\n        TestModule.markTestPassed(update.window.fontScale === 4.0);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return AccessibilityManagerTest;\n}(React.Component);\n\nAccessibilityManagerTest.displayName = 'AccessibilityManagerTest';\nmodule.exports = AccessibilityManagerTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/AccessibilityManagerTest.js"],"names":["React","require","View","ReactNative","RCTDeviceEventEmitter","TestModule","NativeModules","NativeAccessibilityManager","invariant","AccessibilityManagerTest","setAccessibilityContentSizeMultipliers","extraSmall","small","medium","large","extraLarge","extraExtraLarge","extraExtraExtraLarge","accessibilityMedium","accessibilityLarge","accessibilityExtraLarge","accessibilityExtraExtraLarge","accessibilityExtraExtraExtraLarge","addListener","update","markTestPassed","window","fontScale","Component","displayName","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;IAEOC,I,GAAQC,W,CAARD,I;;AACP,IAAME,qBAAqB,GAAGH,OAAO,CAAC,2DAAD,CAArC;;IACOI,U,GAAcF,WAAW,CAACG,a,CAA1BD,U;AACP,OAAOE,0BAAP,MAAuC,gFAAvC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;IAEMC,wB;;;;;;;;;;;;;WACJ,6BAAoB;AAClBD,MAAAA,SAAS,CACPD,0BADO,EAEP,0CAFO,CAAT;AAKAA,MAAAA,0BAA0B,CAACG,sCAA3B,CAAkE;AAChEC,QAAAA,UAAU,EAAE,GADoD;AAEhEC,QAAAA,KAAK,EAAE,GAFyD;AAGhEC,QAAAA,MAAM,EAAE,GAHwD;AAIhEC,QAAAA,KAAK,EAAE,GAJyD;AAKhEC,QAAAA,UAAU,EAAE,GALoD;AAMhEC,QAAAA,eAAe,EAAE,GAN+C;AAOhEC,QAAAA,oBAAoB,EAAE,GAP0C;AAQhEC,QAAAA,mBAAmB,EAAE,GAR2C;AAShEC,QAAAA,kBAAkB,EAAE,GAT4C;AAUhEC,QAAAA,uBAAuB,EAAE,IAVuC;AAWhEC,QAAAA,4BAA4B,EAAE,IAXkC;AAYhEC,QAAAA,iCAAiC,EAAE;AAZ6B,OAAlE;AAcAlB,MAAAA,qBAAqB,CAACmB,WAAtB,CAAkC,qBAAlC,EAAyD,UAAAC,MAAM,EAAI;AACjEnB,QAAAA,UAAU,CAACoB,cAAX,CAA0BD,MAAM,CAACE,MAAP,CAAcC,SAAd,KAA4B,GAAtD;AACD,OAFD;AAGD;;;WAED,kBAAqB;AACnB,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA5BoC3B,KAAK,CAAC4B,S;;AA+B7CnB,wBAAwB,CAACoB,WAAzB,GAAuC,0BAAvC;AAEAC,MAAM,CAACC,OAAP,GAAiBtB,wBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {View} = ReactNative;\nconst RCTDeviceEventEmitter = require('react-native/Libraries/EventEmitter/RCTDeviceEventEmitter');\nconst {TestModule} = ReactNative.NativeModules;\nimport NativeAccessibilityManager from 'react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityManager';\nimport invariant from 'invariant';\n\nclass AccessibilityManagerTest extends React.Component<{...}> {\n  componentDidMount() {\n    invariant(\n      NativeAccessibilityManager,\n      \"NativeAccessibilityManager doesn't exist\",\n    );\n\n    NativeAccessibilityManager.setAccessibilityContentSizeMultipliers({\n      extraSmall: 1.0,\n      small: 2.0,\n      medium: 3.0,\n      large: 4.0,\n      extraLarge: 5.0,\n      extraExtraLarge: 6.0,\n      extraExtraExtraLarge: 7.0,\n      accessibilityMedium: 8.0,\n      accessibilityLarge: 9.0,\n      accessibilityExtraLarge: 10.0,\n      accessibilityExtraExtraLarge: 11.0,\n      accessibilityExtraExtraExtraLarge: 12.0,\n    });\n    RCTDeviceEventEmitter.addListener('didUpdateDimensions', update => {\n      TestModule.markTestPassed(update.window.fontScale === 4.0);\n    });\n  }\n\n  render(): React.Node {\n    return <View />;\n  }\n}\n\nAccessibilityManagerTest.displayName = 'AccessibilityManagerTest';\n\nmodule.exports = AccessibilityManagerTest;\n"]},"metadata":{},"sourceType":"module"}