{"ast":null,"code":"'use strict';\n\nimport * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.getEnforcing('ImageLoader');","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/NativeImageLoaderAndroid.js"],"names":["TurboModuleRegistry","getEnforcing"],"mappings":"AAUA;;AAGA,OAAO,KAAKA,mBAAZ;AA0BA,eAAgBA,mBAAmB,CAACC,YAApB,CAAuC,aAAvC,CAAhB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +abortRequest: (requestId: number) => void;\n  +getConstants: () => {||};\n  +getSize: (\n    uri: string,\n  ) => Promise<\n    $ReadOnly<{\n      width: number,\n      height: number,\n      ...\n    }>,\n  >;\n  +getSizeWithHeaders: (\n    uri: string,\n    headers: Object,\n  ) => Promise<{\n    width: number,\n    height: number,\n    ...\n  }>;\n  +prefetchImage: (uri: string, requestId: number) => Promise<boolean>;\n  +queryCache: (uris: Array<string>) => Promise<Object>;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('ImageLoader'): Spec);\n"]},"metadata":{},"sourceType":"module"}