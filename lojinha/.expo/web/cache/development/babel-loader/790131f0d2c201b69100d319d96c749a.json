{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Property } from \"./Property\";\nimport { toCppNamespace, toCppType } from \"./Converters\";\nexport var Event = function () {\n  function Event(domain, obj, ignoreExperimental) {\n    _classCallCheck(this, Event);\n\n    this.domain = domain;\n    this.name = obj.name;\n    this.description = obj.description;\n    this.parameters = Property.createArray(domain, obj.parameters || [], ignoreExperimental);\n  }\n\n  _createClass(Event, [{\n    key: \"getDebuggerName\",\n    value: function getDebuggerName() {\n      return this.domain + \".\" + this.name;\n    }\n  }, {\n    key: \"getCppNamespace\",\n    value: function getCppNamespace() {\n      return toCppNamespace(this.domain);\n    }\n  }, {\n    key: \"getCppType\",\n    value: function getCppType() {\n      return toCppType(this.name + 'Notification');\n    }\n  }, {\n    key: \"getForwardDecls\",\n    value: function getForwardDecls() {\n      return [\"struct \" + this.getCppType() + \";\"];\n    }\n  }, {\n    key: \"getForwardDeclSortKey\",\n    value: function getForwardDeclSortKey() {\n      return this.getCppType();\n    }\n  }], [{\n    key: \"create\",\n    value: function create(domain, obj, ignoreExperimental) {\n      return ignoreExperimental && obj.experimental ? null : new Event(domain, obj, ignoreExperimental);\n    }\n  }]);\n\n  return Event;\n}();","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactCommon/hermes/inspector/tools/msggen/src/Event.js"],"names":["Property","toCppNamespace","toCppType","Event","domain","obj","ignoreExperimental","name","description","parameters","createArray","getCppType","experimental"],"mappings":"AAUA;;;;AAEA,SAAQA,QAAR;AACA,SAAQC,cAAR,EAAwBC,SAAxB;AAEA,WAAaC,KAAb;AAaE,iBAAYC,MAAZ,EAA4BC,GAA5B,EAAsCC,kBAAtC,EAAmE;AAAA;;AACjE,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,IAAL,GAAYF,GAAG,CAACE,IAAhB;AACA,SAAKC,WAAL,GAAmBH,GAAG,CAACG,WAAvB;AACA,SAAKC,UAAL,GAAkBT,QAAQ,CAACU,WAAT,CAChBN,MADgB,EAEhBC,GAAG,CAACI,UAAJ,IAAkB,EAFF,EAGhBH,kBAHgB,CAAlB;AAKD;;AAtBH;AAAA;AAAA,WAwBE,2BAA0B;AACxB,aAAU,KAAKF,MAAf,SAAyB,KAAKG,IAA9B;AACD;AA1BH;AAAA;AAAA,WA4BE,2BAA0B;AACxB,aAAON,cAAc,CAAC,KAAKG,MAAN,CAArB;AACD;AA9BH;AAAA;AAAA,WAgCE,sBAAqB;AACnB,aAAOF,SAAS,CAAC,KAAKK,IAAL,GAAY,cAAb,CAAhB;AACD;AAlCH;AAAA;AAAA,WAoCE,2BAAiC;AAC/B,aAAO,aAAW,KAAKI,UAAL,EAAX,OAAP;AACD;AAtCH;AAAA;AAAA,WAwCE,iCAAgC;AAC9B,aAAO,KAAKA,UAAL,EAAP;AACD;AA1CH;AAAA;AAAA,WAOE,gBAAcP,MAAd,EAA8BC,GAA9B,EAAwCC,kBAAxC,EAA6E;AAC3E,aAAOA,kBAAkB,IAAID,GAAG,CAACO,YAA1B,GACH,IADG,GAEH,IAAIT,KAAJ,CAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,kBAAvB,CAFJ;AAGD;AAXH;;AAAA;AAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport {Property} from './Property';\nimport {toCppNamespace, toCppType} from './Converters';\n\nexport class Event {\n  domain: string;\n  name: string;\n  description: ?string;\n  experimental: ?boolean;\n  parameters: Array<Property>;\n\n  static create(domain: string, obj: any, ignoreExperimental: boolean): ?Event {\n    return ignoreExperimental && obj.experimental\n      ? null\n      : new Event(domain, obj, ignoreExperimental);\n  }\n\n  constructor(domain: string, obj: any, ignoreExperimental: boolean) {\n    this.domain = domain;\n    this.name = obj.name;\n    this.description = obj.description;\n    this.parameters = Property.createArray(\n      domain,\n      obj.parameters || [],\n      ignoreExperimental,\n    );\n  }\n\n  getDebuggerName(): string {\n    return `${this.domain}.${this.name}`;\n  }\n\n  getCppNamespace(): string {\n    return toCppNamespace(this.domain);\n  }\n\n  getCppType(): string {\n    return toCppType(this.name + 'Notification');\n  }\n\n  getForwardDecls(): Array<string> {\n    return [`struct ${this.getCppType()};`];\n  }\n\n  getForwardDeclSortKey(): string {\n    return this.getCppType();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}