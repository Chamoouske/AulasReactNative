{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/ReactContentSizeUpdateTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RCTNativeAppEventEmitter = require('react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter');\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\nvar reactViewWidth = 101;\nvar reactViewHeight = 102;\nvar newReactViewWidth = 201;\nvar newReactViewHeight = 202;\n\nvar ReactContentSizeUpdateTest = function (_React$Component) {\n  _inherits(ReactContentSizeUpdateTest, _React$Component);\n\n  var _super = _createSuper(ReactContentSizeUpdateTest);\n\n  function ReactContentSizeUpdateTest() {\n    var _this;\n\n    _classCallCheck(this, ReactContentSizeUpdateTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._timeoutID = null;\n    _this._subscription = null;\n    _this.state = {\n      height: reactViewHeight,\n      width: reactViewWidth\n    };\n\n    _this.rootViewDidChangeIntrinsicSize = function (intrinsicSize) {\n      if (intrinsicSize.height === newReactViewHeight && intrinsicSize.width === newReactViewWidth) {\n        TestModule.markTestPassed(true);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactContentSizeUpdateTest, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._subscription = RCTNativeAppEventEmitter.addListener('rootViewDidChangeIntrinsicSize', this.rootViewDidChangeIntrinsicSize);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._timeoutID = setTimeout(function () {\n        _this2.updateViewSize();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._timeoutID != null) {\n        clearTimeout(this._timeoutID);\n      }\n\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n  }, {\n    key: \"updateViewSize\",\n    value: function updateViewSize() {\n      this.setState({\n        height: newReactViewHeight,\n        width: newReactViewWidth\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          height: this.state.height,\n          width: this.state.width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ReactContentSizeUpdateTest;\n}(React.Component);\n\nmodule.exports = ReactContentSizeUpdateTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/ReactContentSizeUpdateTest.js"],"names":["RCTNativeAppEventEmitter","require","React","View","ReactNative","TestModule","NativeModules","reactViewWidth","reactViewHeight","newReactViewWidth","newReactViewHeight","ReactContentSizeUpdateTest","_timeoutID","_subscription","state","height","width","rootViewDidChangeIntrinsicSize","intrinsicSize","markTestPassed","addListener","setTimeout","updateViewSize","clearTimeout","remove","setState","Component","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,8DAAD,CAAxC;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;;;IAGOE,I,GAAQC,W,CAARD,I;IAEAE,U,GAAcD,WAAW,CAACE,a,CAA1BD,U;AAGP,IAAME,cAAc,GAAG,GAAvB;AACA,IAAMC,eAAe,GAAG,GAAxB;AACA,IAAMC,iBAAiB,GAAG,GAA1B;AACA,IAAMC,kBAAkB,GAAG,GAA3B;;IASMC,0B;;;;;;;;;;;;;;;UACJC,U,GAAyB,I;UACzBC,a,GAAsC,I;UAEtCC,K,GAAe;AACbC,MAAAA,MAAM,EAAEP,eADK;AAEbQ,MAAAA,KAAK,EAAET;AAFM,K;;UAmCfU,8B,GAAiE,UAC/DC,aAD+D,EAE5D;AACH,UACEA,aAAa,CAACH,MAAd,KAAyBL,kBAAzB,IACAQ,aAAa,CAACF,KAAd,KAAwBP,iBAF1B,EAGE;AACAJ,QAAAA,UAAU,CAACc,cAAX,CAA0B,IAA1B;AACD;AACF,K;;;;;;;WAvCD,qCAA4B;AAC1B,WAAKN,aAAL,GAAqBb,wBAAwB,CAACoB,WAAzB,CACnB,gCADmB,EAEnB,KAAKH,8BAFc,CAArB;AAID;;;WAED,6BAAoB;AAAA;;AAClB,WAAKL,UAAL,GAAkBS,UAAU,CAAC,YAAM;AACjC,QAAA,MAAI,CAACC,cAAL;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGD;;;WAED,gCAAuB;AACrB,UAAI,KAAKV,UAAL,IAAmB,IAAvB,EAA6B;AAC3BW,QAAAA,YAAY,CAAC,KAAKX,UAAN,CAAZ;AACD;;AAED,UAAI,KAAKC,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,aAAKA,aAAL,CAAmBW,MAAnB;AACD;AACF;;;WAED,0BAAiB;AACf,WAAKC,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAEL,kBADI;AAEZM,QAAAA,KAAK,EAAEP;AAFK,OAAd;AAID;;;WAaD,kBAAqB;AACnB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACM,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAApB;AAA4BC,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAA9C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAtDsCd,KAAK,CAACwB,S;;AAyD/CC,MAAM,CAACC,OAAP,GAAiBjB,0BAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst RCTNativeAppEventEmitter = require('react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter');\nconst React = require('react');\nconst ReactNative = require('react-native');\n\nconst {View} = ReactNative;\n\nconst {TestModule} = ReactNative.NativeModules;\nimport type EmitterSubscription from 'react-native/Libraries/vendor/emitter/EmitterSubscription';\n\nconst reactViewWidth = 101;\nconst reactViewHeight = 102;\nconst newReactViewWidth = 201;\nconst newReactViewHeight = 202;\n\ntype Props = {||};\n\ntype State = {|\n  height: number,\n  width: number,\n|};\n\nclass ReactContentSizeUpdateTest extends React.Component<Props, State> {\n  _timeoutID: ?TimeoutID = null;\n  _subscription: ?EmitterSubscription = null;\n\n  state: State = {\n    height: reactViewHeight,\n    width: reactViewWidth,\n  };\n\n  UNSAFE_componentWillMount() {\n    this._subscription = RCTNativeAppEventEmitter.addListener(\n      'rootViewDidChangeIntrinsicSize',\n      this.rootViewDidChangeIntrinsicSize,\n    );\n  }\n\n  componentDidMount() {\n    this._timeoutID = setTimeout(() => {\n      this.updateViewSize();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this._timeoutID != null) {\n      clearTimeout(this._timeoutID);\n    }\n\n    if (this._subscription != null) {\n      this._subscription.remove();\n    }\n  }\n\n  updateViewSize() {\n    this.setState({\n      height: newReactViewHeight,\n      width: newReactViewWidth,\n    });\n  }\n\n  rootViewDidChangeIntrinsicSize: (intrinsicSize: State) => void = (\n    intrinsicSize: State,\n  ) => {\n    if (\n      intrinsicSize.height === newReactViewHeight &&\n      intrinsicSize.width === newReactViewWidth\n    ) {\n      TestModule.markTestPassed(true);\n    }\n  };\n\n  render(): React.Node {\n    return (\n      <View style={{height: this.state.height, width: this.state.width}} />\n    );\n  }\n}\n\nmodule.exports = ReactContentSizeUpdateTest;\n"]},"metadata":{},"sourceType":"script"}