{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _require = require(\"../e2e-helpers\"),\n    openComponentWithLabel = _require.openComponentWithLabel,\n    openExampleWithTitle = _require.openExampleWithTitle;\n\ndescribe('Picker', function () {\n  beforeAll(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(device.reloadReactNative());\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(openComponentWithLabel('<Picker>', '<Picker> Provides multiple options to choose from, using either a dropdown menu or a dialog.'));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n  it('should be selectable by ID', function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(openExampleWithTitle('Basic picker'));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(expect(element(by.id('basic-picker'))).toBeVisible());\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/e2e/__tests__/Picker-test.js"],"names":["require","openComponentWithLabel","openExampleWithTitle","describe","beforeAll","device","reloadReactNative","it","expect","element","by","id","toBeVisible"],"mappings":";;eAcIA,OAAO,kB;IAFTC,sB,YAAAA,sB;IACAC,oB,YAAAA,oB;;AAGFC,QAAQ,CAAC,QAAD,EAAW,YAAM;AACvBC,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFC,MAAM,CAACC,iBAAP,EADE;;AAAA;AAAA;AAAA,6CAEFL,sBAAsB,CAC1B,UAD0B,EAE1B,8FAF0B,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAAT;AAQAM,EAAAA,EAAE,CAAC,4BAAD,EAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACzBL,oBAAoB,CAAC,cAAD,CADK;;AAAA;AAAA;AAAA,6CAEzBM,MAAM,CAACC,OAAO,CAACC,EAAE,CAACC,EAAH,CAAM,cAAN,CAAD,CAAR,CAAN,CAAuCC,WAAvC,EAFyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B,CAAF;AAID,CAbO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+react_native\n * @format\n */\n\n/* global device, element, by, expect */\nconst {\n  openComponentWithLabel,\n  openExampleWithTitle,\n} = require('../e2e-helpers');\n\ndescribe('Picker', () => {\n  beforeAll(async () => {\n    await device.reloadReactNative();\n    await openComponentWithLabel(\n      '<Picker>',\n      '<Picker> Provides multiple options to choose from, using either a dropdown menu or a dialog.',\n    );\n  });\n\n  it('should be selectable by ID', async () => {\n    await openExampleWithTitle('Basic picker');\n    await expect(element(by.id('basic-picker'))).toBeVisible();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}