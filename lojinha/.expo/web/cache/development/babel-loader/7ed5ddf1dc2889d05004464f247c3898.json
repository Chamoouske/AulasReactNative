{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/AsyncStorage/AsyncStorageExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar PickerItemIOS = PickerIOS.Item;\nvar STORAGE_KEY = '@AsyncStorageExample:key';\nvar COLORS = ['red', 'orange', 'yellow', 'green', 'blue'];\n\nvar BasicStorageExample = function (_React$Component) {\n  _inherits(BasicStorageExample, _React$Component);\n\n  var _super = _createSuper(BasicStorageExample);\n\n  function BasicStorageExample() {\n    var _this;\n\n    _classCallCheck(this, BasicStorageExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedValue: COLORS[0],\n      messages: []\n    };\n\n    _this._loadInitialState = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n            case 3:\n              value = _context.sent;\n\n              if (value !== null) {\n                _this.setState({\n                  selectedValue: value\n                });\n\n                _this._appendMessage('Recovered selection from disk: ' + value);\n              } else {\n                _this._appendMessage('Initialized with no selection on disk.');\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              _this._appendMessage('AsyncStorage error: ' + _context.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this._onValueChange = function _callee2(selectedValue) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                selectedValue: selectedValue\n              });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, selectedValue));\n\n            case 4:\n              _this._appendMessage('Saved selection to disk: ' + selectedValue);\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this._appendMessage('AsyncStorage error: ' + _context2.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    };\n\n    _this._removeStorage = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(STORAGE_KEY));\n\n            case 3:\n              _this._appendMessage('Selection removed from disk.');\n\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n\n              _this._appendMessage('AsyncStorage error: ' + _context3.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this._appendMessage = function (message) {\n      _this.setState({\n        messages: _this.state.messages.concat(message)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BasicStorageExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadInitialState().done();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var color = this.state.selectedValue;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(PickerIOS, {\n        selectedValue: color,\n        onValueChange: this._onValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, COLORS.map(function (value) {\n        return React.createElement(PickerItemIOS, {\n          key: value,\n          value: value,\n          label: value,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        });\n      })), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, 'Selected: ', React.createElement(Text, {\n        style: {\n          color: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, this.state.selectedValue)), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        onPress: this._removeStorage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"Press here to remove from storage.\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"Messages:\"), this.state.messages.map(function (m) {\n        return React.createElement(Text, {\n          key: m,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, m);\n      }));\n    }\n  }]);\n\n  return BasicStorageExample;\n}(React.Component);\n\nexports.title = 'AsyncStorage';\nexports.description = 'Asynchronous local disk storage.';\nexports.examples = [{\n  title: 'Basics - getItem, setItem, removeItem',\n  render: function render() {\n    return React.createElement(BasicStorageExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/AsyncStorage/AsyncStorageExample.js"],"names":["React","require","PickerItemIOS","PickerIOS","Item","STORAGE_KEY","COLORS","BasicStorageExample","state","selectedValue","messages","_loadInitialState","AsyncStorage","getItem","value","setState","_appendMessage","message","_onValueChange","setItem","_removeStorage","removeItem","concat","done","color","map","m","Component","exports","title","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;AAEA,IAAMC,aAAa,GAAGC,SAAS,CAACC,IAAhC;AAEA,IAAMC,WAAW,GAAG,0BAApB;AACA,IAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,OAA5B,EAAqC,MAArC,CAAf;;IAEMC,mB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAEH,MAAM,CAAC,CAAD,CADf;AAENI,MAAAA,QAAQ,EAAE;AAFJ,K;;UASRC,iB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEIC,YAAY,CAACC,OAAb,CAAqBR,WAArB,CAFJ;;AAAA;AAEVS,cAAAA,KAFU;;AAGhB,kBAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,sBAAKC,QAAL,CAAc;AAACN,kBAAAA,aAAa,EAAEK;AAAhB,iBAAd;;AACA,sBAAKE,cAAL,CAAoB,oCAAoCF,KAAxD;AACD,eAHD,MAGO;AACL,sBAAKE,cAAL,CAAoB,wCAApB;AACD;;AARe;AAAA;;AAAA;AAAA;AAAA;;AAUhB,oBAAKA,cAAL,CAAoB,yBAAyB,YAAMC,OAAnD;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAwCpBC,c,GAAiB,kBAAMT,aAAN;AAAA;AAAA;AAAA;AAAA;AACf,oBAAKM,QAAL,CAAc;AAACN,gBAAAA,aAAa,EAAbA;AAAD,eAAd;;AADe;AAAA;AAAA,+CAGPG,YAAY,CAACO,OAAb,CAAqBd,WAArB,EAAkCI,aAAlC,CAHO;;AAAA;AAIb,oBAAKO,cAAL,CAAoB,8BAA8BP,aAAlD;;AAJa;AAAA;;AAAA;AAAA;AAAA;;AAMb,oBAAKO,cAAL,CAAoB,yBAAyB,aAAMC,OAAnD;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAUjBG,c,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEPR,YAAY,CAACS,UAAb,CAAwBhB,WAAxB,CAFO;;AAAA;AAGb,oBAAKW,cAAL,CAAoB,8BAApB;;AAHa;AAAA;;AAAA;AAAA;AAAA;;AAKb,oBAAKA,cAAL,CAAoB,yBAAyB,aAAMC,OAAnD;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UASjBD,c,GAAiB,UAAAC,OAAO,EAAI;AAC1B,YAAKF,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QAAX,CAAoBY,MAApB,CAA2BL,OAA3B;AAAX,OAAd;AACD,K;;;;;;;WAjED,6BAAoB;AAClB,WAAKN,iBAAL,GAAyBY,IAAzB;AACD;;;WAgBD,kBAAS;AAAA;;AACP,UAAMC,KAAK,GAAG,KAAKhB,KAAL,CAAWC,aAAzB;AACA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAEe,KAA1B;AAAiC,QAAA,aAAa,EAAE,KAAKN,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,MAAM,CAACmB,GAAP,CAAW,UAAAX,KAAK;AAAA,eACf,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,KAApB;AAA2B,UAAA,KAAK,EAAEA,KAAlC;AAAyC,UAAA,KAAK,EAAEA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,OAAhB,CADH,CADF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,YADH,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAALA;AAAD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKhB,KAAL,CAAWC,aAAlC,CAFF,CANF,EAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKW,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAXF,EAcE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfF,EAgBG,KAAKZ,KAAL,CAAWE,QAAX,CAAoBe,GAApB,CAAwB,UAAAC,CAAC;AAAA,eACxB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,CAAf,CADwB;AAAA,OAAzB,CAhBH,CADF;AAsBD;;;;EAhD+B1B,KAAK,CAAC2B,S;;AA0ExCC,OAAO,CAACC,KAAR,GAAgB,cAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,kCAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,uCADT;AAEEG,EAAAA,MAFF,oBAE+B;AAC3B,WAAO,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {AsyncStorage, PickerIOS, Text, View} = require('react-native');\nconst PickerItemIOS = PickerIOS.Item;\n\nconst STORAGE_KEY = '@AsyncStorageExample:key';\nconst COLORS = ['red', 'orange', 'yellow', 'green', 'blue'];\n\nclass BasicStorageExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    selectedValue: COLORS[0],\n    messages: [],\n  };\n\n  componentDidMount() {\n    this._loadInitialState().done();\n  }\n\n  _loadInitialState = async () => {\n    try {\n      const value = await AsyncStorage.getItem(STORAGE_KEY);\n      if (value !== null) {\n        this.setState({selectedValue: value});\n        this._appendMessage('Recovered selection from disk: ' + value);\n      } else {\n        this._appendMessage('Initialized with no selection on disk.');\n      }\n    } catch (error) {\n      this._appendMessage('AsyncStorage error: ' + error.message);\n    }\n  };\n\n  render() {\n    const color = this.state.selectedValue;\n    return (\n      <View>\n        <PickerIOS selectedValue={color} onValueChange={this._onValueChange}>\n          {COLORS.map(value => (\n            <PickerItemIOS key={value} value={value} label={value} />\n          ))}\n        </PickerIOS>\n        <Text>\n          {'Selected: '}\n          <Text style={{color}}>{this.state.selectedValue}</Text>\n        </Text>\n        <Text />\n        <Text onPress={this._removeStorage}>\n          Press here to remove from storage.\n        </Text>\n        <Text />\n        <Text>Messages:</Text>\n        {this.state.messages.map(m => (\n          <Text key={m}>{m}</Text>\n        ))}\n      </View>\n    );\n  }\n\n  _onValueChange = async selectedValue => {\n    this.setState({selectedValue});\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, selectedValue);\n      this._appendMessage('Saved selection to disk: ' + selectedValue);\n    } catch (error) {\n      this._appendMessage('AsyncStorage error: ' + error.message);\n    }\n  };\n\n  _removeStorage = async () => {\n    try {\n      await AsyncStorage.removeItem(STORAGE_KEY);\n      this._appendMessage('Selection removed from disk.');\n    } catch (error) {\n      this._appendMessage('AsyncStorage error: ' + error.message);\n    }\n  };\n\n  _appendMessage = message => {\n    this.setState({messages: this.state.messages.concat(message)});\n  };\n}\n\nexports.title = 'AsyncStorage';\nexports.description = 'Asynchronous local disk storage.';\nexports.examples = [\n  {\n    title: 'Basics - getItem, setItem, removeItem',\n    render(): React.Element<any> {\n      return <BasicStorageExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}