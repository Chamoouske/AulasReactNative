{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/IntegrationTestHarnessTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar requestAnimationFrame = require('fbjs/lib/requestAnimationFrame');\n\nvar Text = ReactNative.Text,\n    View = ReactNative.View,\n    StyleSheet = ReactNative.StyleSheet;\nvar TestModule = ReactNative.NativeModules.TestModule;\n\nvar IntegrationTestHarnessTest = function (_React$Component) {\n  _inherits(IntegrationTestHarnessTest, _React$Component);\n\n  var _super = _createSuper(IntegrationTestHarnessTest);\n\n  function IntegrationTestHarnessTest() {\n    var _this;\n\n    _classCallCheck(this, IntegrationTestHarnessTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      done: false\n    };\n\n    _this.runTest = function () {\n      if (_this.props.shouldThrow) {\n        throw new Error('Throwing error because shouldThrow');\n      }\n\n      if (!TestModule) {\n        throw new Error('RCTTestModule is not registered.');\n      } else if (!TestModule.markTestCompleted) {\n        throw new Error('RCTTestModule.markTestCompleted not defined.');\n      }\n\n      _this.setState({\n        done: true\n      }, function () {\n        TestModule.markTestCompleted();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(IntegrationTestHarnessTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.waitOneFrame) {\n        requestAnimationFrame(this.runTest);\n      } else {\n        this.runTest();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, this.constructor.displayName + ': ', this.state.done ? 'Done' : 'Testing...'));\n    }\n  }]);\n\n  return IntegrationTestHarnessTest;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 40\n  }\n});\nIntegrationTestHarnessTest.displayName = 'IntegrationTestHarnessTest';\nmodule.exports = IntegrationTestHarnessTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/IntegrationTestHarnessTest.js"],"names":["React","require","requestAnimationFrame","Text","ReactNative","View","StyleSheet","TestModule","NativeModules","IntegrationTestHarnessTest","state","done","runTest","props","shouldThrow","Error","markTestCompleted","setState","waitOneFrame","styles","container","constructor","displayName","Component","create","backgroundColor","padding","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;AAGA,IAAMC,qBAAqB,GAAGD,OAAO,CAAC,gCAAD,CAArC;;IACOE,I,GAA0BC,W,CAA1BD,I;IAAME,I,GAAoBD,W,CAApBC,I;IAAMC,U,GAAcF,W,CAAdE,U;IACZC,U,GAAcH,WAAW,CAACI,a,CAA1BD,U;;IAWDE,0B;;;;;;;;;;;;;;;UACJC,K,GAAe;AACbC,MAAAA,IAAI,EAAE;AADO,K;;UAYfC,O,GAAsB,YAAM;AAC1B,UAAI,MAAKC,KAAL,CAAWC,WAAf,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,UAAI,CAACR,UAAL,EAAiB;AACf,cAAM,IAAIQ,KAAJ,CAAU,kCAAV,CAAN;AACD,OAFD,MAEO,IAAI,CAACR,UAAU,CAACS,iBAAhB,EAAmC;AACxC,cAAM,IAAID,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,YAAKE,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAE;AAAP,OAAd,EAA4B,YAAM;AAChCJ,QAAAA,UAAU,CAACS,iBAAX;AACD,OAFD;AAGD,K;;;;;;;WApBD,6BAAoB;AAClB,UAAI,KAAKH,KAAL,CAAWK,YAAf,EAA6B;AAC3BhB,QAAAA,qBAAqB,CAAC,KAAKU,OAAN,CAArB;AACD,OAFD,MAEO;AACL,aAAKA,OAAL;AACD;AACF;;;WAgBD,kBAAqB;AACnB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,KAAKC,WAAL,CAAiBC,WAAjB,GAA+B,IAJjC,EAKG,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,MAAlB,GAA2B,YAL9B,CADF,CADF;AAWD;;;;EAvCsCX,KAAK,CAACuB,S;;AA0C/C,IAAMJ,MAAM,GAAGb,UAAU,CAACkB,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,OAAO,EAAE;AAFA;AADoB,CAAlB,CAAf;AAOAjB,0BAA0B,CAACa,WAA3B,GAAyC,4BAAzC;AAEAK,MAAM,CAACC,OAAP,GAAiBnB,0BAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\n\nconst requestAnimationFrame = require('fbjs/lib/requestAnimationFrame');\nconst {Text, View, StyleSheet} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\ntype Props = $ReadOnly<{|\n  shouldThrow?: boolean,\n  waitOneFrame?: boolean,\n|}>;\n\ntype State = {|\n  done: boolean,\n|};\n\nclass IntegrationTestHarnessTest extends React.Component<Props, State> {\n  state: State = {\n    done: false,\n  };\n\n  componentDidMount() {\n    if (this.props.waitOneFrame) {\n      requestAnimationFrame(this.runTest);\n    } else {\n      this.runTest();\n    }\n  }\n\n  runTest: () => void = () => {\n    if (this.props.shouldThrow) {\n      throw new Error('Throwing error because shouldThrow');\n    }\n    if (!TestModule) {\n      throw new Error('RCTTestModule is not registered.');\n    } else if (!TestModule.markTestCompleted) {\n      throw new Error('RCTTestModule.markTestCompleted not defined.');\n    }\n    this.setState({done: true}, () => {\n      TestModule.markTestCompleted();\n    });\n  };\n\n  render(): React.Node {\n    return (\n      <View style={styles.container}>\n        <Text>\n          {/* $FlowFixMe(>=0.54.0 site=react_native_fb,react_native_oss) This\n           * comment suppresses an error found when Flow v0.54 was deployed.\n           * To see the error delete this comment and run Flow. */\n          this.constructor.displayName + ': '}\n          {this.state.done ? 'Done' : 'Testing...'}\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 40,\n  },\n});\n\nIntegrationTestHarnessTest.displayName = 'IntegrationTestHarnessTest';\n\nmodule.exports = IntegrationTestHarnessTest;\n"]},"metadata":{},"sourceType":"script"}