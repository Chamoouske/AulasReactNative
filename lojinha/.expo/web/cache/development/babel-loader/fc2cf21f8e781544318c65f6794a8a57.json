{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from \"../Dimensions\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (window.navigator.languages) {\n        return window.navigator.languages[0];\n      } else {\n        return window.navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? window.navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? window.navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/DeviceInfo/index.js"],"names":["canUseDOM","Dimensions","DeviceInfo","windowPhysicalPixels","get","width","height","fontScale","scale","screenPhysicalPixels","locale","window","navigator","languages","language","totalMemory","deviceMemory","undefined","userAgent"],"mappings":"AAWA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,UAAP;AAEA,IAAMC,UAAU,GAAG;AACjBD,EAAAA,UAAU,EAAE;AACV,QAAIE,oBAAJ,GAA2C;AAAA,4BACGF,UAAU,CAACG,GAAX,CAAe,QAAf,CADH;AAAA,UACjCC,KADiC,mBACjCA,KADiC;AAAA,UAC1BC,MAD0B,mBAC1BA,MAD0B;AAAA,UAClBC,SADkB,mBAClBA,SADkB;AAAA,UACPC,KADO,mBACPA,KADO;;AAEzC,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAALA,KAHK;AAILD,QAAAA,SAAS,EAATA;AAJK,OAAP;AAMD,KATS;;AAUV,QAAIE,oBAAJ,GAA2C;AAAA,6BACGR,UAAU,CAACG,GAAX,CAAe,QAAf,CADH;AAAA,UACjCC,KADiC,oBACjCA,KADiC;AAAA,UAC1BC,MAD0B,oBAC1BA,MAD0B;AAAA,UAClBC,SADkB,oBAClBA,SADkB;AAAA,UACPC,KADO,oBACPA,KADO;;AAEzC,aAAO;AACLH,QAAAA,KAAK,EAAEA,KAAK,GAAGG,KADV;AAELF,QAAAA,MAAM,EAAEA,MAAM,GAAGE,KAFZ;AAGLA,QAAAA,KAAK,EAALA,KAHK;AAILD,QAAAA,SAAS,EAATA;AAJK,OAAP;AAMD;;AAlBS,GADK;;AAsBjB,MAAIG,MAAJ,GAAa;AACX,QAAIV,SAAJ,EAAe;AACb,UAAIW,MAAM,CAACC,SAAP,CAAiBC,SAArB,EAAgC;AAC9B,eAAOF,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2B,CAA3B,CAAP;AACD,OAFD,MAEO;AACL,eAAOF,MAAM,CAACC,SAAP,CAAiBE,QAAxB;AACD;AACF;AACF,GA9BgB;;AAgCjB,MAAIC,WAAJ,GAAkB;AAChB,WAAOf,SAAS,GAAGW,MAAM,CAACC,SAAP,CAAiBI,YAApB,GAAmCC,SAAnD;AACD,GAlCgB;;AAoCjB,MAAIC,SAAJ,GAAgB;AACd,WAAOlB,SAAS,GAAGW,MAAM,CAACC,SAAP,CAAiBM,SAApB,GAAgC,EAAhD;AACD;;AAtCgB,CAAnB;AAyCA,eAAehB,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { DisplayMetrics } from '../Dimensions';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from '../Dimensions';\n\nconst DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels(): DisplayMetrics {\n      const { width, height, fontScale, scale } = Dimensions.get('window');\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    },\n    get screenPhysicalPixels(): DisplayMetrics {\n      const { width, height, fontScale, scale } = Dimensions.get('screen');\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale,\n        fontScale\n      };\n    }\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (window.navigator.languages) {\n        return window.navigator.languages[0];\n      } else {\n        return window.navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? window.navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? window.navigator.userAgent : '';\n  }\n};\n\nexport default DeviceInfo;\n"]},"metadata":{},"sourceType":"module"}