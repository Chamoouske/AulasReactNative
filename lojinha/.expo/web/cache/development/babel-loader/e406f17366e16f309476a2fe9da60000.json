{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.func = void 0;\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getPlatformName = _interopRequireDefault(require(\"./getPlatformName\"));\n\nvar _linkDependency = _interopRequireDefault(require(\"./linkDependency\"));\n\nvar _linkAssets = _interopRequireDefault(require(\"./linkAssets\"));\n\nvar _linkAll = _interopRequireDefault(require(\"./linkAll\"));\n\nvar _makeHook = _interopRequireDefault(require(\"./makeHook\"));\n\nvar _printDeprecationWarning = _interopRequireDefault(require(\"./printDeprecationWarning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction link(_ref, ctx, opts) {\n  var _ref2, rawPackageName, platforms, project, packageName, dependency;\n\n  return _regeneratorRuntime.async(function link$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref2 = _slicedToArray(_ref, 1), rawPackageName = _ref2[0];\n          platforms = ctx.platforms;\n          project = ctx.project;\n\n          if (opts.platforms) {\n            platforms = (0, _lodash().pick)(platforms, opts.platforms);\n\n            _cliTools().logger.debug('Skipping selected platforms');\n          }\n\n          _cliTools().logger.debug('Available platforms: ' + (\"\" + Object.keys(platforms).map(_getPlatformName.default).join(', ')));\n\n          if (!(rawPackageName === undefined)) {\n            _context.next = 8;\n            break;\n          }\n\n          _cliTools().logger.debug('No package name provided, will link all possible assets.');\n\n          return _context.abrupt(\"return\", (0, _linkAll.default)(ctx, {\n            linkDeps: opts.all,\n            linkAssets: true\n          }));\n\n        case 8:\n          (0, _printDeprecationWarning.default)('react-native link [packageName]');\n          packageName = rawPackageName.replace(/^(.+?)(@.+?)$/gi, '$1');\n\n          if (Object.keys(ctx.dependencies).includes(packageName)) {\n            _context.next = 12;\n            break;\n          }\n\n          throw new (_cliTools().CLIError)(\"\\n      Unknown dependency. Make sure that the package you are trying to link is\\n      already installed in your \\\"node_modules\\\" and present in your \\\"package.json\\\" dependencies.\\n    \");\n\n        case 12:\n          dependency = ctx.dependencies[packageName];\n\n          _cliTools().logger.debug(\"Package to link: \" + rawPackageName);\n\n          _context.prev = 14;\n\n          if (!dependency.hooks.prelink) {\n            _context.next = 18;\n            break;\n          }\n\n          _context.next = 18;\n          return _regeneratorRuntime.awrap((0, _makeHook.default)(dependency.hooks.prelink)());\n\n        case 18:\n          _context.next = 20;\n          return _regeneratorRuntime.awrap((0, _linkDependency.default)(platforms, project, dependency));\n\n        case 20:\n          if (!dependency.hooks.postlink) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 23;\n          return _regeneratorRuntime.awrap((0, _makeHook.default)(dependency.hooks.postlink)());\n\n        case 23:\n          _context.next = 25;\n          return _regeneratorRuntime.awrap((0, _linkAssets.default)(platforms, project, dependency.assets));\n\n        case 25:\n          _context.next = 30;\n          break;\n\n        case 27:\n          _context.prev = 27;\n          _context.t0 = _context[\"catch\"](14);\n          throw new (_cliTools().CLIError)(\"Linking \\\"\" + _chalk().default.bold(dependency.name) + \"\\\" failed.\", _context.t0);\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[14, 27]], Promise);\n}\n\nvar func = link;\nexports.func = func;\nvar _default = {\n  func: link,\n  description: 'links assets and optionally native modules',\n  name: 'link [packageName]',\n  options: [{\n    name: '--platforms [list]',\n    description: 'Scope linking to specified platforms',\n    parse: function parse(val) {\n      return val.toLowerCase().split(',');\n    }\n  }, {\n    name: '--all [boolean]',\n    description: 'Link all native modules and assets',\n    parse: function parse(val) {\n      return val.toLowerCase().split(',');\n    }\n  }]\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/link/link.js"],"names":["Object","defineProperty","exports","value","default","func","_chalk","data","_interopRequireDefault","require","_lodash","_cliTools","_getPlatformName","_linkDependency","_linkAssets","_linkAll","_makeHook","_printDeprecationWarning","obj","__esModule","link","ctx","opts","rawPackageName","platforms","project","pick","logger","debug","keys","map","join","undefined","linkDeps","all","linkAssets","packageName","replace","dependencies","includes","CLIError","dependency","hooks","prelink","postlink","assets","bold","name","_default","description","options","parse","val","toLowerCase","split"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.func = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getPlatformName = _interopRequireDefault(require(\"./getPlatformName\"));\n\nvar _linkDependency = _interopRequireDefault(require(\"./linkDependency\"));\n\nvar _linkAssets = _interopRequireDefault(require(\"./linkAssets\"));\n\nvar _linkAll = _interopRequireDefault(require(\"./linkAll\"));\n\nvar _makeHook = _interopRequireDefault(require(\"./makeHook\"));\n\nvar _printDeprecationWarning = _interopRequireDefault(require(\"./printDeprecationWarning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Updates project and links all dependencies to it.\n *\n * @param args If optional argument [packageName] is provided,\n *             only that package is processed.\n */\nasync function link([rawPackageName], ctx, opts) {\n  let platforms = ctx.platforms;\n  let project = ctx.project;\n\n  if (opts.platforms) {\n    // @ts-ignore\n    platforms = (0, _lodash().pick)(platforms, opts.platforms);\n\n    _cliTools().logger.debug('Skipping selected platforms');\n  }\n\n  _cliTools().logger.debug('Available platforms: ' + `${Object.keys(platforms).map(_getPlatformName.default).join(', ')}`);\n\n  if (rawPackageName === undefined) {\n    _cliTools().logger.debug('No package name provided, will link all possible assets.');\n\n    return (0, _linkAll.default)(ctx, {\n      linkDeps: opts.all,\n      linkAssets: true\n    });\n  }\n\n  (0, _printDeprecationWarning.default)('react-native link [packageName]'); // Trim the version / tag out of the package name (eg. package@latest)\n\n  const packageName = rawPackageName.replace(/^(.+?)(@.+?)$/gi, '$1');\n\n  if (!Object.keys(ctx.dependencies).includes(packageName)) {\n    throw new (_cliTools().CLIError)(`\n      Unknown dependency. Make sure that the package you are trying to link is\n      already installed in your \"node_modules\" and present in your \"package.json\" dependencies.\n    `);\n  }\n\n  const {\n    [packageName]: dependency\n  } = ctx.dependencies;\n\n  _cliTools().logger.debug(`Package to link: ${rawPackageName}`);\n\n  try {\n    if (dependency.hooks.prelink) {\n      await (0, _makeHook.default)(dependency.hooks.prelink)();\n    }\n\n    await (0, _linkDependency.default)(platforms, project, dependency);\n\n    if (dependency.hooks.postlink) {\n      await (0, _makeHook.default)(dependency.hooks.postlink)();\n    }\n\n    await (0, _linkAssets.default)(platforms, project, dependency.assets);\n  } catch (error) {\n    throw new (_cliTools().CLIError)(`Linking \"${_chalk().default.bold(dependency.name)}\" failed.`, error);\n  }\n}\n\nconst func = link;\nexports.func = func;\nvar _default = {\n  func: link,\n  description: 'links assets and optionally native modules',\n  name: 'link [packageName]',\n  options: [{\n    name: '--platforms [list]',\n    description: 'Scope linking to specified platforms',\n    parse: val => val.toLowerCase().split(',')\n  }, {\n    name: '--all [boolean]',\n    description: 'Link all native modules and assets',\n    parse: val => val.toLowerCase().split(',')\n  }]\n};\nexports.default = _default;\n\n//# sourceMappingURL=link.js.map"]},"metadata":{},"sourceType":"script"}