{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/KeyboardAvoidingView/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"../View\";\nimport React from 'react';\n\nvar KeyboardAvoidingView = function (_React$Component) {\n  _inherits(KeyboardAvoidingView, _React$Component);\n\n  var _super = _createSuper(KeyboardAvoidingView);\n\n  function KeyboardAvoidingView() {\n    var _this;\n\n    _classCallCheck(this, KeyboardAvoidingView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.frame = null;\n\n    _this.onLayout = function (event) {\n      _this.frame = event.nativeEvent.layout;\n    };\n\n    return _this;\n  }\n\n  _createClass(KeyboardAvoidingView, [{\n    key: \"relativeKeyboardHeight\",\n    value: function relativeKeyboardHeight(keyboardFrame) {\n      var frame = this.frame;\n\n      if (!frame || !keyboardFrame) {\n        return 0;\n      }\n\n      var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n      return Math.max(frame.y + frame.height - keyboardY, 0);\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          behavior = _this$props.behavior,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n          rest = _objectWithoutProperties(_this$props, [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"]);\n\n      return React.createElement(View, _extends({\n        onLayout: this.onLayout\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return KeyboardAvoidingView;\n}(React.Component);\n\nexport default KeyboardAvoidingView;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/KeyboardAvoidingView/index.js"],"names":["View","React","KeyboardAvoidingView","frame","onLayout","event","nativeEvent","layout","keyboardFrame","keyboardY","screenY","props","keyboardVerticalOffset","Math","max","y","height","behavior","contentContainerStyle","rest","Component"],"mappings":";;;;;;;;;;;;;AAaA,OAAOA,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IASMC,oB;;;;;;;;;;;;;;;UACJC,K,GAAsB,I;;UAatBC,Q,GAAW,UAACC,KAAD,EAAwB;AACjC,YAAKF,KAAL,GAAaE,KAAK,CAACC,WAAN,CAAkBC,MAA/B;AACD,K;;;;;;;WAbD,gCAAuBC,aAAvB,EAAsD;AACpD,UAAML,KAAK,GAAG,KAAKA,KAAnB;;AACA,UAAI,CAACA,KAAD,IAAU,CAACK,aAAf,EAA8B;AAC5B,eAAO,CAAP;AACD;;AACD,UAAMC,SAAS,GAAGD,aAAa,CAACE,OAAd,IAAyB,KAAKC,KAAL,CAAWC,sBAAX,IAAqC,CAA9D,CAAlB;AACA,aAAOC,IAAI,CAACC,GAAL,CAASX,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACa,MAAhB,GAAyBP,SAAlC,EAA6C,CAA7C,CAAP;AACD;;;WAED,0BAAiBJ,KAAjB,EAAgC,CAAE;;;WAMlC,kBAAS;AAAA,wBAQH,KAAKM,KARF;AAAA,UAGLM,QAHK,eAGLA,QAHK;AAAA,UAILC,qBAJK,eAILA,qBAJK;AAAA,UAKLN,sBALK,eAKLA,sBALK;AAAA,UAOFO,IAPE;;AAUP,aAAO,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKf;AAArB,SAAmCe,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA7BgClB,KAAK,CAACmB,S;;AAgCzC,eAAelB,oBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { LayoutEvent, LayoutValue } from '../../types';\nimport type { ViewProps } from '../View';\n\nimport View from '../View';\nimport React from 'react';\n\ntype KeyboardAvoidingViewProps = {\n  ...ViewProps,\n  behavior?: 'height' | 'padding' | 'position',\n  contentContainerStyle?: $PropertyType<ViewProps, 'style'>,\n  keyboardVerticalOffset: number\n};\n\nclass KeyboardAvoidingView extends React.Component<KeyboardAvoidingViewProps> {\n  frame: ?LayoutValue = null;\n\n  relativeKeyboardHeight(keyboardFrame: Object): number {\n    const frame = this.frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n    const keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  onKeyboardChange(event: Object) {}\n\n  onLayout = (event: LayoutEvent) => {\n    this.frame = event.nativeEvent.layout;\n  };\n\n  render() {\n    const {\n      /* eslint-disable */\n      behavior,\n      contentContainerStyle,\n      keyboardVerticalOffset,\n      /* eslint-enable */\n      ...rest\n    } = this.props;\n\n    return <View onLayout={this.onLayout} {...rest} />;\n  }\n}\n\nexport default KeyboardAvoidingView;\n"]},"metadata":{},"sourceType":"module"}