{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction printRunInstructions(projectDir, projectName) {\n  var iosProjectDir = _path().default.resolve(projectDir, 'ios');\n\n  var iosPodsFile = _path().default.resolve(iosProjectDir, projectName + \".xcworkspace\");\n\n  var isUsingPods = _fs().default.existsSync(iosPodsFile);\n\n  var relativeXcodeProjectPath = _path().default.relative('..', isUsingPods ? iosPodsFile : _path().default.resolve(iosProjectDir, projectName + \".xcodeproj\"));\n\n  _cliTools().logger.log(\"\\n  \" + _chalk().default.cyan(\"Run instructions for \" + _chalk().default.bold('iOS')) + \":\\n    \\u2022 cd \\\"\" + projectDir + \"\\\" && npx react-native run-ios\\n    \" + _chalk().default.dim('- or -') + \"\\n    \\u2022 Open \" + relativeXcodeProjectPath + \" in Xcode or run \\\"xed -b ios\\\"\\n    \\u2022 Hit the Run button\\n\\n  \" + _chalk().default.green(\"Run instructions for \" + _chalk().default.bold('Android')) + \":\\n    \\u2022 Have an Android emulator running (quickest way to get started), or a device connected.\\n    \\u2022 cd \\\"\" + projectDir + \"\\\" && npx react-native run-android\\n\\n  \" + _chalk().default.magenta(\"Run instructions for \" + _chalk().default.bold('Windows') + \" and \" + _chalk().default.bold('macOS')) + \":\\n    \\u2022 See \" + _chalk().default.underline('https://aka.ms/ReactNative') + \" for the latest up-to-date instructions.\\n\");\n}\n\nvar _default = printRunInstructions;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/init/printRunInstructions.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_fs","_chalk","_cliTools","obj","__esModule","printRunInstructions","projectDir","projectName","iosProjectDir","resolve","iosPodsFile","isUsingPods","existsSync","relativeXcodeProjectPath","relative","logger","log","cyan","bold","dim","green","magenta","underline","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,KAAT,GAAiB;AACf,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,GAAT,GAAe;AACb,MAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAnC;;AAEAC,EAAAA,GAAG,GAAG,eAAY;AAChB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,MAAT,GAAkB;AAChB,MAAMJ,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAE,EAAAA,MAAM,GAAG,kBAAY;AACnB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASK,SAAT,GAAqB;AACnB,MAAML,IAAI,GAAGE,OAAO,CAAC,mCAAD,CAApB;;AAEAG,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOL,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAU/F,SAASE,oBAAT,CAA8BC,UAA9B,EAA0CC,WAA1C,EAAuD;AACrD,MAAMC,aAAa,GAAGZ,KAAK,GAAGD,OAAR,CAAgBc,OAAhB,CAAwBH,UAAxB,EAAoC,KAApC,CAAtB;;AAEA,MAAMI,WAAW,GAAGd,KAAK,GAAGD,OAAR,CAAgBc,OAAhB,CAAwBD,aAAxB,EAA0CD,WAA1C,kBAApB;;AAEA,MAAMI,WAAW,GAAGX,GAAG,GAAGL,OAAN,CAAciB,UAAd,CAAyBF,WAAzB,CAApB;;AAEA,MAAMG,wBAAwB,GAAGjB,KAAK,GAAGD,OAAR,CAAgBmB,QAAhB,CAAyB,IAAzB,EAA+BH,WAAW,GAAGD,WAAH,GAAiBd,KAAK,GAAGD,OAAR,CAAgBc,OAAhB,CAAwBD,aAAxB,EAA0CD,WAA1C,gBAA3D,CAAjC;;AAEAL,EAAAA,SAAS,GAAGa,MAAZ,CAAmBC,GAAnB,UACEf,MAAM,GAAGN,OAAT,CAAiBsB,IAAjB,2BAA8ChB,MAAM,GAAGN,OAAT,CAAiBuB,IAAjB,CAAsB,KAAtB,CAA9C,CADF,2BAEUZ,UAFV,4CAGIL,MAAM,GAAGN,OAAT,CAAiBwB,GAAjB,CAAqB,QAArB,CAHJ,0BAIWN,wBAJX,4EAOEZ,MAAM,GAAGN,OAAT,CAAiByB,KAAjB,2BAA+CnB,MAAM,GAAGN,OAAT,CAAiBuB,IAAjB,CAAsB,SAAtB,CAA/C,CAPF,8HASUZ,UATV,gDAWEL,MAAM,GAAGN,OAAT,CAAiB0B,OAAjB,2BAAiDpB,MAAM,GAAGN,OAAT,CAAiBuB,IAAjB,CAAsB,SAAtB,CAAjD,aAAyFjB,MAAM,GAAGN,OAAT,CAAiBuB,IAAjB,CAAsB,OAAtB,CAAzF,CAXF,0BAYUjB,MAAM,GAAGN,OAAT,CAAiB2B,SAAjB,CAA2B,4BAA3B,CAZV;AAcD;;AAED,IAAIC,QAAQ,GAAGlB,oBAAf;AACAZ,OAAO,CAACE,OAAR,GAAkB4B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nfunction printRunInstructions(projectDir, projectName) {\n  const iosProjectDir = _path().default.resolve(projectDir, 'ios');\n\n  const iosPodsFile = _path().default.resolve(iosProjectDir, `${projectName}.xcworkspace`);\n\n  const isUsingPods = _fs().default.existsSync(iosPodsFile);\n\n  const relativeXcodeProjectPath = _path().default.relative('..', isUsingPods ? iosPodsFile : _path().default.resolve(iosProjectDir, `${projectName}.xcodeproj`));\n\n  _cliTools().logger.log(`\n  ${_chalk().default.cyan(`Run instructions for ${_chalk().default.bold('iOS')}`)}:\n    • cd \"${projectDir}\" && npx react-native run-ios\n    ${_chalk().default.dim('- or -')}\n    • Open ${relativeXcodeProjectPath} in Xcode or run \"xed -b ios\"\n    • Hit the Run button\n\n  ${_chalk().default.green(`Run instructions for ${_chalk().default.bold('Android')}`)}:\n    • Have an Android emulator running (quickest way to get started), or a device connected.\n    • cd \"${projectDir}\" && npx react-native run-android\n\n  ${_chalk().default.magenta(`Run instructions for ${_chalk().default.bold('Windows')} and ${_chalk().default.bold('macOS')}`)}:\n    • See ${_chalk().default.underline('https://aka.ms/ReactNative')} for the latest up-to-date instructions.\n`);\n}\n\nvar _default = printRunInstructions;\nexports.default = _default;\n\n//# sourceMappingURL=printRunInstructions.js.map"]},"metadata":{},"sourceType":"script"}