{"ast":null,"code":"var messages = [];\nvar packages = [];\nvar namedImports = [];\nvar extraInstructions = [];\nexport default function deprecatedModule(message, namedImport, packageName, extraInstruction) {\n  if (__DEV__) {\n    messages.push(message);\n    packages.push(packageName);\n    namedImports.push(namedImport);\n\n    if (extraInstruction) {\n      extraInstructions.push(extraInstruction);\n    }\n\n    setTimeout(logWarning, 1000);\n  }\n}\n\nfunction logWarning() {\n  if (!messages.length) {\n    return;\n  }\n\n  var instructions = '';\n  messages = Array.from(new Set(messages));\n  messages.sort();\n  packages = Array.from(new Set(packages));\n  packages.sort();\n  namedImports = Array.from(new Set(namedImports));\n  namedImports.sort();\n  extraInstructions = Array.from(new Set(extraInstructions));\n  extraInstructions.sort();\n  instructions += namedImports.join(', ');\n  instructions += \".\\n\\n\";\n  instructions += \"1. Add correct versions of these packages to your project using:\\n\\n\";\n  instructions += \"   expo install \" + packages.join(' ') + \"\\n\\n\";\n  instructions += \"2. Change your imports so they use specific packages instead of the \\\"expo\\\" package:\\n\\n\";\n  messages.forEach(function (message) {\n    instructions += \" - \" + message + \"\\n\";\n  });\n\n  if (extraInstructions.length) {\n    instructions += \"3. Make the following other changes:\\n\\n\";\n    extraInstructions.forEach(function (instruction) {\n      instructions += \" - \" + instruction + \"\\n\";\n    });\n  }\n\n  instructions += '\\n';\n  console.log(\"The following APIs have moved to separate packages and importing them from the \\\"expo\\\" package is deprecated: \" + instructions);\n  messages = [];\n  packages = [];\n  namedImports = [];\n}","map":{"version":3,"sources":["../src/deprecatedModule.ts"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAa,EAAzB;AACA,IAAI,QAAQ,GAAa,EAAzB;AACA,IAAI,YAAY,GAAa,EAA7B;AACA,IAAI,iBAAiB,GAAa,EAAlC;AAEA,eAAc,SAAU,gBAAV,CAA2B,OAA3B,EAAoC,WAApC,EAAiD,WAAjD,EAA8D,gBAA9D,EAA+E;AAC3F,MAAI,OAAJ,EAAa;AACX,IAAA,QAAQ,CAAC,IAAT,CAAc,OAAd;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,WAAd;AACA,IAAA,YAAY,CAAC,IAAb,CAAkB,WAAlB;;AACA,QAAI,gBAAJ,EAAsB;AACpB,MAAA,iBAAiB,CAAC,IAAlB,CAAuB,gBAAvB;AACD;;AACD,IAAA,UAAU,CAAC,UAAD,EAAa,IAAb,CAAV;AACD;AACF;;AAED,SAAS,UAAT,GAAmB;AACjB,MAAI,CAAC,QAAQ,CAAC,MAAd,EAAsB;AACpB;AACD;;AACD,MAAI,YAAY,GAAG,EAAnB;AAEA,EAAA,QAAQ,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,QAAR,CAAX,CAAX;AACA,EAAA,QAAQ,CAAC,IAAT;AAEA,EAAA,QAAQ,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,QAAR,CAAX,CAAX;AACA,EAAA,QAAQ,CAAC,IAAT;AAEA,EAAA,YAAY,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,YAAR,CAAX,CAAf;AACA,EAAA,YAAY,CAAC,IAAb;AAEA,EAAA,iBAAiB,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,iBAAR,CAAX,CAApB;AACA,EAAA,iBAAiB,CAAC,IAAlB;AAEA,EAAA,YAAY,IAAI,YAAY,CAAC,IAAb,CAAkB,IAAlB,CAAhB;AACA,EAAA,YAAY,WAAZ;AACA,EAAA,YAAY,0EAAZ;AACA,EAAA,YAAY,yBAAuB,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAvB,SAAZ;AACA,EAAA,YAAY,+FAAZ;AACA,EAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,OAAO,EAAG;AACzB,IAAA,YAAY,YAAU,OAAV,OAAZ;AACD,GAFD;;AAIA,MAAI,iBAAiB,CAAC,MAAtB,EAA8B;AAC5B,IAAA,YAAY,8CAAZ;AACA,IAAA,iBAAiB,CAAC,OAAlB,CAA0B,UAAA,WAAW,EAAG;AACtC,MAAA,YAAY,YAAU,WAAV,OAAZ;AACD,KAFD;AAGD;;AAED,EAAA,YAAY,IAAI,IAAhB;AACA,EAAA,OAAO,CAAC,GAAR,qHACkH,YADlH;AAGA,EAAA,QAAQ,GAAG,EAAX;AACA,EAAA,QAAQ,GAAG,EAAX;AACA,EAAA,YAAY,GAAG,EAAf;AACD","sourcesContent":["let messages: string[] = [];\nlet packages: string[] = [];\nlet namedImports: string[] = [];\nlet extraInstructions: string[] = [];\n\nexport default function deprecatedModule(message, namedImport, packageName, extraInstruction?) {\n  if (__DEV__) {\n    messages.push(message);\n    packages.push(packageName);\n    namedImports.push(namedImport);\n    if (extraInstruction) {\n      extraInstructions.push(extraInstruction);\n    }\n    setTimeout(logWarning, 1000);\n  }\n}\n\nfunction logWarning() {\n  if (!messages.length) {\n    return;\n  }\n  let instructions = '';\n\n  messages = Array.from(new Set(messages));\n  messages.sort();\n\n  packages = Array.from(new Set(packages));\n  packages.sort();\n\n  namedImports = Array.from(new Set(namedImports));\n  namedImports.sort();\n\n  extraInstructions = Array.from(new Set(extraInstructions));\n  extraInstructions.sort();\n\n  instructions += namedImports.join(', ');\n  instructions += `.\\n\\n`;\n  instructions += `1. Add correct versions of these packages to your project using:\\n\\n`;\n  instructions += `   expo install ${packages.join(' ')}\\n\\n`;\n  instructions += `2. Change your imports so they use specific packages instead of the \"expo\" package:\\n\\n`;\n  messages.forEach(message => {\n    instructions += ` - ${message}\\n`;\n  });\n\n  if (extraInstructions.length) {\n    instructions += `3. Make the following other changes:\\n\\n`;\n    extraInstructions.forEach(instruction => {\n      instructions += ` - ${instruction}\\n`;\n    });\n  }\n\n  instructions += '\\n';\n  console.log(\n    `The following APIs have moved to separate packages and importing them from the \"expo\" package is deprecated: ${instructions}`\n  );\n  messages = [];\n  packages = [];\n  namedImports = [];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}