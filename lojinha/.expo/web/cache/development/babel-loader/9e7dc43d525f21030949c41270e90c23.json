{"ast":null,"code":"'use strict';\n\nfunction tryExecNTimes(funcToRetry, retriesLeft, onEveryError) {\n  var exitCode = funcToRetry();\n\n  if (exitCode === 0) {\n    return exitCode;\n  } else {\n    if (onEveryError) {\n      onEveryError();\n    }\n\n    retriesLeft--;\n    console.warn(\"Command failed, \" + retriesLeft + \" retries left\");\n\n    if (retriesLeft === 0) {\n      return exitCode;\n    } else {\n      return tryExecNTimes(funcToRetry, retriesLeft, onEveryError);\n    }\n  }\n}\n\nmodule.exports = tryExecNTimes;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/scripts/try-n-times.js"],"names":["tryExecNTimes","funcToRetry","retriesLeft","onEveryError","exitCode","console","warn","module","exports"],"mappings":"AASA;;AAUA,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,WAApC,EAAiDC,YAAjD,EAA+D;AAC7D,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AACA,MAAIG,QAAQ,KAAK,CAAjB,EAAoB;AAClB,WAAOA,QAAP;AACD,GAFD,MAEO;AACL,QAAID,YAAJ,EAAkB;AAChBA,MAAAA,YAAY;AACb;;AACDD,IAAAA,WAAW;AACXG,IAAAA,OAAO,CAACC,IAAR,sBAAgCJ,WAAhC;;AACA,QAAIA,WAAW,KAAK,CAApB,EAAuB;AACrB,aAAOE,QAAP;AACD,KAFD,MAEO;AACL,aAAOJ,aAAa,CAACC,WAAD,EAAcC,WAAd,EAA2BC,YAA3B,CAApB;AACD;AACF;AACF;;AAEDI,MAAM,CAACC,OAAP,GAAiBR,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Try executing a function n times recursively.\n * Return 0 the first time it succeeds\n * Return code of the last failed commands if not more retries left\n * @funcToRetry - function that gets retried\n * @retriesLeft - number of retries to execute funcToRetry\n * @onEveryError - func to execute if funcToRetry returns non 0\n */\nfunction tryExecNTimes(funcToRetry, retriesLeft, onEveryError) {\n  const exitCode = funcToRetry();\n  if (exitCode === 0) {\n    return exitCode;\n  } else {\n    if (onEveryError) {\n      onEveryError();\n    }\n    retriesLeft--;\n    console.warn(`Command failed, ${retriesLeft} retries left`);\n    if (retriesLeft === 0) {\n      return exitCode;\n    } else {\n      return tryExecNTimes(funcToRetry, retriesLeft, onEveryError);\n    }\n  }\n}\n\nmodule.exports = tryExecNTimes;\n"]},"metadata":{},"sourceType":"script"}