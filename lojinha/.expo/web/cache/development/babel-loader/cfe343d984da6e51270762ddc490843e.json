{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unlinkAssetsAndroid;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction unlinkAssetsAndroid(files, project) {\n  var assets = (0, _cliTools().groupFilesByType)(files);\n\n  _cliTools().logger.debug(\"Assets path: \" + project.assetsPath);\n\n  (assets.font || []).forEach(function (file) {\n    var filePath = _path().default.join(project.assetsPath, 'fonts', _path().default.basename(file));\n\n    if (_fs().default.existsSync(filePath)) {\n      _cliTools().logger.debug(\"Removing asset \" + filePath);\n\n      _fs().default.unlinkSync(filePath);\n    }\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-android/build/link/unlinkAssets.js"],"names":["Object","defineProperty","exports","value","default","unlinkAssetsAndroid","_fs","data","_interopRequireDefault","require","_path","_cliTools","obj","__esModule","files","project","assets","groupFilesByType","logger","debug","assetsPath","font","forEach","file","filePath","join","basename","existsSync","unlinkSync"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAnC;;AAEAH,EAAAA,GAAG,GAAG,eAAY;AAChB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,KAAT,GAAiB;AACf,MAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAC,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,SAAT,GAAqB;AACnB,MAAMJ,IAAI,GAAGE,OAAO,CAAC,mCAAD,CAApB;;AAEAE,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAgB/F,SAASP,mBAAT,CAA6BS,KAA7B,EAAoCC,OAApC,EAA6C;AAC3C,MAAMC,MAAM,GAAG,CAAC,GAAGL,SAAS,GAAGM,gBAAhB,EAAkCH,KAAlC,CAAf;;AAEAH,EAAAA,SAAS,GAAGO,MAAZ,CAAmBC,KAAnB,mBAAyCJ,OAAO,CAACK,UAAjD;;AAEA,GAACJ,MAAM,CAACK,IAAP,IAAe,EAAhB,EAAoBC,OAApB,CAA4B,UAAAC,IAAI,EAAI;AAClC,QAAMC,QAAQ,GAAGd,KAAK,GAAGN,OAAR,CAAgBqB,IAAhB,CAAqBV,OAAO,CAACK,UAA7B,EAAyC,OAAzC,EAAkDV,KAAK,GAAGN,OAAR,CAAgBsB,QAAhB,CAAyBH,IAAzB,CAAlD,CAAjB;;AAEA,QAAIjB,GAAG,GAAGF,OAAN,CAAcuB,UAAd,CAAyBH,QAAzB,CAAJ,EAAwC;AACtCb,MAAAA,SAAS,GAAGO,MAAZ,CAAmBC,KAAnB,qBAA2CK,QAA3C;;AAEAlB,MAAAA,GAAG,GAAGF,OAAN,CAAcwB,UAAd,CAAyBJ,QAAzB;AACD;AACF,GARD;AASD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unlinkAssetsAndroid;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Copies each file from an array of assets provided to targetPath directory\n *\n * For now, the only types of files that are handled are:\n * - Fonts (otf, ttf) - copied to targetPath/fonts under original name\n */\nfunction unlinkAssetsAndroid(files, project) {\n  const assets = (0, _cliTools().groupFilesByType)(files);\n\n  _cliTools().logger.debug(`Assets path: ${project.assetsPath}`);\n\n  (assets.font || []).forEach(file => {\n    const filePath = _path().default.join(project.assetsPath, 'fonts', _path().default.basename(file));\n\n    if (_fs().default.existsSync(filePath)) {\n      _cliTools().logger.debug(`Removing asset ${filePath}`);\n\n      _fs().default.unlinkSync(filePath);\n    }\n  });\n}\n\n//# sourceMappingURL=unlinkAssets.js.map"]},"metadata":{},"sourceType":"script"}