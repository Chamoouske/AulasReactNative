{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxMessage-test.js\";\n\nvar React = require('react');\n\nvar LogBoxMessage = require(\"../LogBoxMessage\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('LogBoxMessage', function () {\n  it('should render message', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      message: {\n        content: 'Some kind of message',\n        substitutions: []\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render message truncated to 6 chars', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: 5,\n      message: {\n        content: 'Some kind of message',\n        substitutions: []\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render the whole message when maxLength = message length', function () {\n    var message = 'Some kind of message';\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: message.length,\n      message: {\n        content: message,\n        substitutions: []\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render message with substitution', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      message: {\n        content: 'normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render message with substitution, truncating the first word 3 letters in', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: 3,\n      message: {\n        content: 'normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render message with substitution, truncating the second word 6 letters in', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: 13,\n      message: {\n        content: 'normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render message with substitution, truncating the third word 2 letters in', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: 22,\n      message: {\n        content: 'normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render the whole message with substitutions when maxLength = message length', function () {\n    var message = 'normal substitution normal';\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      maxLength: message.length,\n      message: {\n        content: message,\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render a plaintext message with no substitutions', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      plaintext: true,\n      style: {},\n      message: {\n        content: 'normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 7\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render a plaintext message and clean the content', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      plaintext: true,\n      style: {},\n      message: {\n        content: 'Error: This should not start with Error:',\n        substitutions: []\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('Should strip \"TransformError \" without breaking substitution', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      message: {\n        content: 'TransformError normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 22\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('Should strip \"Warning: \" without breaking substitution', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      message: {\n        content: 'Warning: normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 16\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('Should strip \"Warning: Warning: \" without breaking substitution', function () {\n    var output = render.shallowRender(React.createElement(LogBoxMessage, {\n      style: {},\n      message: {\n        content: 'Warning: Warning: normal substitution normal',\n        substitutions: [{\n          length: 12,\n          offset: 25\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxMessage-test.js"],"names":["React","require","LogBoxMessage","default","render","describe","it","output","shallowRender","content","substitutions","expect","toMatchSnapshot","message","length","offset"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxMessage = require('../LogBoxMessage').default;\nconst render = require('../../../../jest/renderer');\n\ndescribe('LogBoxMessage', () => {\n  it('should render message', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        message={{\n          content: 'Some kind of message',\n          substitutions: [],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render message truncated to 6 chars', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={5}\n        message={{\n          content: 'Some kind of message',\n          substitutions: [],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render the whole message when maxLength = message length', () => {\n    const message = 'Some kind of message';\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={message.length}\n        message={{\n          content: message,\n          substitutions: [],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render message with substitution', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        message={{\n          content: 'normal substitution normal',\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render message with substitution, truncating the first word 3 letters in', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={3}\n        message={{\n          content: 'normal substitution normal',\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render message with substitution, truncating the second word 6 letters in', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={13}\n        message={{\n          content: 'normal substitution normal',\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render message with substitution, truncating the third word 2 letters in', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={22}\n        message={{\n          content: 'normal substitution normal',\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render the whole message with substitutions when maxLength = message length', () => {\n    const message = 'normal substitution normal';\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        maxLength={message.length}\n        message={{\n          content: message,\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render a plaintext message with no substitutions', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        plaintext\n        style={{}}\n        message={{\n          content: 'normal substitution normal',\n          substitutions: [{length: 12, offset: 7}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render a plaintext message and clean the content', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        plaintext\n        style={{}}\n        message={{\n          content: 'Error: This should not start with Error:',\n          substitutions: [],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('Should strip \"TransformError \" without breaking substitution', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        message={{\n          content: 'TransformError normal substitution normal',\n          substitutions: [{length: 12, offset: 22}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('Should strip \"Warning: \" without breaking substitution', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        message={{\n          content: 'Warning: normal substitution normal',\n          substitutions: [{length: 12, offset: 16}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('Should strip \"Warning: Warning: \" without breaking substitution', () => {\n    const output = render.shallowRender(\n      <LogBoxMessage\n        style={{}}\n        message={{\n          content: 'Warning: Warning: normal substitution normal',\n          substitutions: [{length: 12, offset: 25}],\n        }}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}