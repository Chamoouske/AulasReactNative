{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _logkitty() {\n  var data = require(\"logkitty\");\n\n  _logkitty = function _logkitty() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction logAndroid() {\n  var emitter;\n  return _regeneratorRuntime.async(function logAndroid$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _cliTools().logger.info('Starting logkitty');\n\n          emitter = (0, _logkitty().logkitty)({\n            platform: 'android',\n            priority: _logkitty().AndroidPriority.VERBOSE,\n            filter: (0, _logkitty().makeTagsFilter)('ReactNative', 'ReactNativeJS')\n          });\n          emitter.on('entry', function (entry) {\n            _cliTools().logger.log((0, _logkitty().formatEntry)(entry));\n          });\n          emitter.on('error', function (error) {\n            _cliTools().logger.log((0, _logkitty().formatError)(error));\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _default = {\n  name: 'log-android',\n  description: 'starts logkitty',\n  func: logAndroid\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-android/build/commands/logAndroid/index.js"],"names":["Object","defineProperty","exports","value","default","_logkitty","data","require","_cliTools","logAndroid","logger","info","emitter","logkitty","platform","priority","AndroidPriority","VERBOSE","filter","makeTagsFilter","on","entry","log","formatEntry","error","formatError","_default","name","description","func"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,SAAT,GAAqB;AACnB,MAAMF,IAAI,GAAGC,OAAO,CAAC,mCAAD,CAApB;;AAEAC,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOF,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAQD,SAAeG,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACED,UAAAA,SAAS,GAAGE,MAAZ,CAAmBC,IAAnB,CAAwB,mBAAxB;;AAEMC,UAAAA,OAHR,GAGkB,CAAC,GAAGP,SAAS,GAAGQ,QAAhB,EAA0B;AACxCC,YAAAA,QAAQ,EAAE,SAD8B;AAExCC,YAAAA,QAAQ,EAAEV,SAAS,GAAGW,eAAZ,CAA4BC,OAFE;AAGxCC,YAAAA,MAAM,EAAE,CAAC,GAAGb,SAAS,GAAGc,cAAhB,EAAgC,aAAhC,EAA+C,eAA/C;AAHgC,WAA1B,CAHlB;AAQEP,UAAAA,OAAO,CAACQ,EAAR,CAAW,OAAX,EAAoB,UAAAC,KAAK,EAAI;AAC3Bb,YAAAA,SAAS,GAAGE,MAAZ,CAAmBY,GAAnB,CAAuB,CAAC,GAAGjB,SAAS,GAAGkB,WAAhB,EAA6BF,KAA7B,CAAvB;AACD,WAFD;AAGAT,UAAAA,OAAO,CAACQ,EAAR,CAAW,OAAX,EAAoB,UAAAI,KAAK,EAAI;AAC3BhB,YAAAA,SAAS,GAAGE,MAAZ,CAAmBY,GAAnB,CAAuB,CAAC,GAAGjB,SAAS,GAAGoB,WAAhB,EAA6BD,KAA7B,CAAvB;AACD,WAFD;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,IAAIE,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,aADO;AAEbC,EAAAA,WAAW,EAAE,iBAFA;AAGbC,EAAAA,IAAI,EAAEpB;AAHO,CAAf;AAKAP,OAAO,CAACE,OAAR,GAAkBsB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _logkitty() {\n  const data = require(\"logkitty\");\n\n  _logkitty = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nasync function logAndroid() {\n  _cliTools().logger.info('Starting logkitty');\n\n  const emitter = (0, _logkitty().logkitty)({\n    platform: 'android',\n    priority: _logkitty().AndroidPriority.VERBOSE,\n    filter: (0, _logkitty().makeTagsFilter)('ReactNative', 'ReactNativeJS')\n  });\n  emitter.on('entry', entry => {\n    _cliTools().logger.log((0, _logkitty().formatEntry)(entry));\n  });\n  emitter.on('error', error => {\n    _cliTools().logger.log((0, _logkitty().formatError)(error));\n  });\n}\n\nvar _default = {\n  name: 'log-android',\n  description: 'starts logkitty',\n  func: logAndroid\n};\nexports.default = _default;\n\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}