{"ast":null,"code":"function assertElement(element) {\n  if (!(element instanceof HTMLElement)) {\n    throw new Error('Must pass a DOM element to find/findAll(element, styledComponent)\"');\n  }\n}\n\nfunction assertStyledComponent(styledComponent) {\n  if (!(styledComponent.styledComponentId && typeof styledComponent.styledComponentId === 'string')) {\n    throw new Error((styledComponent.displayName || styledComponent.name || 'Component') + \" is not a styled component.\");\n  }\n}\n\nfunction enzymeFind(wrapper, styledComponent) {\n  assertStyledComponent(styledComponent);\n  return wrapper.find(\".\" + styledComponent.styledComponentId);\n}\n\nfunction find(element, styledComponent) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelector(\".\" + styledComponent.styledComponentId);\n}\n\nfunction findAll(element, styledComponent) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelectorAll(\".\" + styledComponent.styledComponentId);\n}\n\nexports.enzymeFind = enzymeFind;\nexports.find = find;\nexports.findAll = findAll;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/styled-components/test-utils/index.js"],"names":["assertElement","element","HTMLElement","Error","assertStyledComponent","styledComponent","styledComponentId","displayName","name","enzymeFind","wrapper","find","querySelector","findAll","querySelectorAll","exports"],"mappings":"AAEA,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAI,EAAEA,OAAO,YAAYC,WAArB,CAAJ,EAAuC;AACrC,UAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACD;AACF;;AAED,SAASC,qBAAT,CAA+BC,eAA/B,EAAgD;AAC9C,MACE,EAAEA,eAAe,CAACC,iBAAhB,IAAqC,OAAOD,eAAe,CAACC,iBAAvB,KAA6C,QAApF,CADF,EAEE;AACA,UAAM,IAAIH,KAAJ,EACDE,eAAe,CAACE,WAAhB,IACDF,eAAe,CAACG,IADf,IAED,WAHE,kCAAN;AAKD;AACF;;AAED,SAASC,UAAT,CAAoBC,OAApB,EAA4CL,eAA5C,EAA4E;AAC1ED,EAAAA,qBAAqB,CAACC,eAAD,CAArB;AAEA,SAAOK,OAAO,CAACC,IAAR,OAAiBN,eAAe,CAACC,iBAAjC,CAAP;AACD;;AAED,SAASK,IAAT,CAAcV,OAAd,EAAuCI,eAAvC,EAAuE;AACrEL,EAAAA,aAAa,CAACC,OAAD,CAAb;AACAG,EAAAA,qBAAqB,CAACC,eAAD,CAArB;AACA,SAAOJ,OAAO,CAACW,aAAR,OAA0BP,eAAe,CAACC,iBAA1C,CAAP;AACD;;AAED,SAASO,OAAT,CAAiBZ,OAAjB,EAA0CI,eAA1C,EAA0E;AACxEL,EAAAA,aAAa,CAACC,OAAD,CAAb;AACAG,EAAAA,qBAAqB,CAACC,eAAD,CAArB;AACA,SAAOJ,OAAO,CAACa,gBAAR,OAA6BT,eAAe,CAACC,iBAA7C,CAAP;AACD;;AAEDS,OAAO,CAACN,UAAR,GAAqBA,UAArB;AACAM,OAAO,CAACJ,IAAR,GAAeA,IAAf;AACAI,OAAO,CAACF,OAAR,GAAkBA,OAAlB","sourcesContent":["// @flow\n\nfunction assertElement(element) {\n  if (!(element instanceof HTMLElement)) {\n    throw new Error('Must pass a DOM element to find/findAll(element, styledComponent)\"');\n  }\n}\n\nfunction assertStyledComponent(styledComponent) {\n  if (\n    !(styledComponent.styledComponentId && typeof styledComponent.styledComponentId === 'string')\n  ) {\n    throw new Error(\n      `${styledComponent.displayName ||\n        styledComponent.name ||\n        'Component'} is not a styled component.`\n    );\n  }\n}\n\nfunction enzymeFind(wrapper /* : Object */, styledComponent /* : Object */) {\n  assertStyledComponent(styledComponent);\n\n  return wrapper.find(`.${styledComponent.styledComponentId}`);\n}\n\nfunction find(element /* : Element */, styledComponent /* : Object */) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelector(`.${styledComponent.styledComponentId}`);\n}\n\nfunction findAll(element /* : Element */, styledComponent /* : Object */) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelectorAll(`.${styledComponent.styledComponentId}`);\n}\n\nexports.enzymeFind = enzymeFind;\nexports.find = find;\nexports.findAll = findAll;\n"]},"metadata":{},"sourceType":"script"}