{"ast":null,"code":"'use strict';\n\nvar EMPTY_NATIVE_MODULE = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  // mo methods\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport type String = string;\\n\\nexport interface Spec extends TurboModule {\\n  // Exported methods.\\n  +getObject: (arg: {|const1: {|const1: boolean|}|}) => {|\\n    const1: {|const1: boolean|},\\n  |};\\n  +getReadOnlyObject: (arg: $ReadOnly<{|const1: $ReadOnly<{|const1: boolean|}>|}>) => $ReadOnly<{|\\n    const1: {|const1: boolean|},\\n  |}>;\\n  +getObject2: (arg: { a: String }) => Object;\\n  +getObjectInArray: (arg: {const1: {|const1: boolean|}}) => Array<{|\\n    const1: {const1: boolean},\\n  |}>;\\n}\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +getConstants: () => {|\\n    isTesting: boolean,\\n    reactNativeVersion: {|\\n      major: number,\\n      minor: number,\\n      patch?: number,\\n      prerelease: ?number,\\n    |},\\n    forceTouchAvailable: boolean,\\n    osVersion: string,\\n    systemName: string,\\n    interfaceIdiom: string,\\n  |};\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('PlatformConstants');\\n\\n\";\nvar NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +passBool?: (arg: boolean) => void;\\n  +passNumber: (arg: number) => void;\\n  +passString: (arg: string) => void;\\n  +passStringish: (arg: Stringish) => void;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_WITH_ALIASES = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\ntype NumNum = number;\\nexport type Num = (arg: NumNum) => void;\\ntype Num2 = Num;\\nexport type Void = void;\\nexport type A = number;\\nexport type B = number;\\n\\nexport interface Spec extends TurboModule {\\n  // Exported methods.\\n  +getNumber: Num2;\\n  +getVoid: () => Void;\\n  +getArray: (a : Array<A>) => {| a: B |};\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32 = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\\n\\nexport interface Spec extends TurboModule {\\n  +getInt: (arg: Int32) => Int32;\\n  +getFloat: (arg: Float) => Float;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\";\nvar NATIVE_MODULE_WITH_SIMPLE_OBJECT = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +getObject: (o : Object) => Object,\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_NULLABLE_PARAM = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  // Exported methods.\\n  +voidFunc: (arg: ?string) => void;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_BASIC_ARRAY = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +getArray: (arg: Array<string>) => Array<string>;\\n  +getArray: (arg: $ReadOnlyArray<string>) => $ReadOnlyArray<string>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\ntype DisplayMetricsAndroid = {|\\n width: number,\\n|};\\n\\nexport interface Spec extends TurboModule {\\n  +getConstants: () => {|\\n    +Dimensions: {\\n      windowPhysicalPixels: DisplayMetricsAndroid,\\n    },\\n  |};\\n  +getConstants2: () => $ReadOnly<{|\\n    +Dimensions: {\\n      windowPhysicalPixels: DisplayMetricsAndroid,\\n    },\\n  |}>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +getArray: (arg: Array<[string, string]>) => Array<string | number | boolean>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport type SomeString = string;\\n\\nexport interface Spec extends TurboModule {\\n  +getArray: (arg: Array<SomeString>) => Array<string>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_COMPLEX_ARRAY = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  +getArray: (arg: Array<Array<Array<Array<Array<any>>>>>) => Array<Array<Array<string>>>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_PROMISE = \"/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport type String = string;\\nexport type SomeObj = {| a: string |};\\n\\nexport interface Spec extends TurboModule {\\n  +getValueWithPromise: () => Promise<string>;\\n  +getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\\n  +getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nvar NATIVE_MODULE_WITH_CALLBACK = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @flow strict-local\\n * @format\\n */\\n\\n'use strict';\\n\\nimport type {TurboModule} from '../RCTExport';\\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\\n\\nexport interface Spec extends TurboModule {\\n  // Exported methods.\\n  +getValueWithCallback: (\\n    callback: (value: string, arr: Array<Array<string>>) => void,\\n  ) => void;\\n}\\n\\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\\n\\n\";\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY: NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE: NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32: NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_WITH_ALIASES: NATIVE_MODULE_WITH_WITH_ALIASES,\n  NATIVE_MODULE_WITH_PROMISE: NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS: NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY: NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT: NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM: NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY: NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY: NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS: NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES: NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK: NATIVE_MODULE_WITH_CALLBACK,\n  EMPTY_NATIVE_MODULE: EMPTY_NATIVE_MODULE\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/parsers/flow/modules/__test_fixtures__/fixtures.js"],"names":["EMPTY_NATIVE_MODULE","NATIVE_MODULE_WITH_COMPLEX_OBJECTS","NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY","NATIVE_MODULE_WITH_BASIC_PARAM_TYPES","NATIVE_MODULE_WITH_WITH_ALIASES","NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32","NATIVE_MODULE_WITH_SIMPLE_OBJECT","NATIVE_MODULE_WITH_NULLABLE_PARAM","NATIVE_MODULE_WITH_BASIC_ARRAY","NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY","NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE","NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS","NATIVE_MODULE_WITH_COMPLEX_ARRAY","NATIVE_MODULE_WITH_PROMISE","NATIVE_MODULE_WITH_CALLBACK","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,mBAAmB,wgBAAzB;AAwBA,IAAMC,kCAAkC,+7BAAxC;AAmCA,IAAMC,oDAAoD,uyBAA1D;AAoCA,IAAMC,oCAAoC,ypBAA1C;AA2BA,IAAMC,+BAA+B,0wBAArC;AAkCA,IAAMC,uCAAuC,2oBAA7C;AAyBA,IAAMC,gCAAgC,8hBAAtC;AAwBA,IAAMC,iCAAiC,qjBAAvC;AAyBA,IAAMC,8BAA8B,mnBAApC;AAyBA,IAAMC,iEAAiE,gyBAAvE;AAoCA,IAAMC,8CAA8C,ykBAApD;AAwBA,IAAMC,mCAAmC,olBAAzC;AA0BA,IAAMC,gCAAgC,mlBAAtC;AAwBA,IAAMC,0BAA0B,yvBAAhC;AA4BA,IAAMC,2BAA2B,4nBAAjC;AA2BAC,MAAM,CAACC,OAAP,GAAiB;AACfP,EAAAA,iEAAiE,EAAjEA,iEADe;AAEfC,EAAAA,8CAA8C,EAA9CA,8CAFe;AAGfL,EAAAA,uCAAuC,EAAvCA,uCAHe;AAIfD,EAAAA,+BAA+B,EAA/BA,+BAJe;AAKfS,EAAAA,0BAA0B,EAA1BA,0BALe;AAMfZ,EAAAA,kCAAkC,EAAlCA,kCANe;AAOfC,EAAAA,oDAAoD,EAApDA,oDAPe;AAQfI,EAAAA,gCAAgC,EAAhCA,gCARe;AASfC,EAAAA,iCAAiC,EAAjCA,iCATe;AAUfC,EAAAA,8BAA8B,EAA9BA,8BAVe;AAWfI,EAAAA,gCAAgC,EAAhCA,gCAXe;AAYfD,EAAAA,mCAAmC,EAAnCA,mCAZe;AAafR,EAAAA,oCAAoC,EAApCA,oCAbe;AAcfW,EAAAA,2BAA2B,EAA3BA,2BAde;AAefd,EAAAA,mBAAmB,EAAnBA;AAfe,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst EMPTY_NATIVE_MODULE = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // mo methods\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getObject: (arg: {|const1: {|const1: boolean|}|}) => {|\n    const1: {|const1: boolean|},\n  |};\n  +getReadOnlyObject: (arg: $ReadOnly<{|const1: $ReadOnly<{|const1: boolean|}>|}>) => $ReadOnly<{|\n    const1: {|const1: boolean|},\n  |}>;\n  +getObject2: (arg: { a: String }) => Object;\n  +getObjectInArray: (arg: {const1: {|const1: boolean|}}) => Array<{|\n    const1: {const1: boolean},\n  |}>;\n}\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    isTesting: boolean,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch?: number,\n      prerelease: ?number,\n    |},\n    forceTouchAvailable: boolean,\n    osVersion: string,\n    systemName: string,\n    interfaceIdiom: string,\n  |};\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('PlatformConstants');\n\n`;\n\nconst NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +passBool?: (arg: boolean) => void;\n  +passNumber: (arg: number) => void;\n  +passString: (arg: string) => void;\n  +passStringish: (arg: Stringish) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_WITH_ALIASES = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype NumNum = number;\nexport type Num = (arg: NumNum) => void;\ntype Num2 = Num;\nexport type Void = void;\nexport type A = number;\nexport type B = number;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getNumber: Num2;\n  +getVoid: () => Void;\n  +getArray: (a : Array<A>) => {| a: B |};\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32 = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  +getInt: (arg: Int32) => Int32;\n  +getFloat: (arg: Float) => Float;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\n\nconst NATIVE_MODULE_WITH_SIMPLE_OBJECT = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getObject: (o : Object) => Object,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_NULLABLE_PARAM = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +voidFunc: (arg: ?string) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_BASIC_ARRAY = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<string>) => Array<string>;\n  +getArray: (arg: $ReadOnlyArray<string>) => $ReadOnlyArray<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype DisplayMetricsAndroid = {|\n width: number,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |};\n  +getConstants2: () => $ReadOnly<{|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |}>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<[string, string]>) => Array<string | number | boolean>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<SomeString>) => Array<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_COMPLEX_ARRAY = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<Array<Array<Array<Array<any>>>>>) => Array<Array<Array<string>>>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_PROMISE = `/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\nexport type SomeObj = {| a: string |};\n\nexport interface Spec extends TurboModule {\n  +getValueWithPromise: () => Promise<string>;\n  +getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\n  +getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nconst NATIVE_MODULE_WITH_CALLBACK = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getValueWithCallback: (\n    callback: (value: string, arr: Array<Array<string>>) => void,\n  ) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\n\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEIFNED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_WITH_ALIASES,\n  NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK,\n  EMPTY_NATIVE_MODULE,\n};\n"]},"metadata":{},"sourceType":"script"}