{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/App.js\";\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components/native';\nvar Pagina = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: center;\\n  background-color:#000;\\n\"])));\nvar Texto = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 20px;\\n\"])));\nvar Result = styled.SafeAreaView(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  margin-top: 10px;\\n  width: 90%;\\n  padding: 5px;\\n  border: 1px solid;\\n  background-color: #eee;\\n\"])));\nvar Input = styled.TextInput(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  width: 90%;\\n  height: 50px;\\n  font-size: 18px;\\n  background-color: #eee;\\n  margin-top: 20px;\\n  border-radius: 10px;\\n  border: 1px solid;\\n  padding: 10px;\\n\"])));\nvar GerarButton = styled.TouchableOpacity(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  margin: 10px;\\n  background-color: #41aef4;\\n  padding: 10px;\\n\"])));\nvar TextoBtn = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: #fff;\\n  font-size: 15;\\n\"])));\nvar Imagem = styled.Image(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  width: 200px;\\n  height: 200px;\\n  margin-top: 30px;\\n\"])));\nvar charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!#';\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      psw = _useState2[0],\n      setPsw = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      size = _useState4[0],\n      setSize = _useState4[1];\n\n  var _useState5 = useState({\n    source: require(\"./src/images/unicornDormindo.png\")\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      img = _useState6[0],\n      setImg = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      model = _useState8[0],\n      setModel = _useState8[1];\n\n  function geraPsw() {\n    var pass = '';\n    var n = charset.length;\n\n    if (size < 1 || size > 15) {\n      alert('Tamanho da senha inválido');\n      setImg({\n        source: require(\"./src/images/unicornDormindo.png\")\n      });\n    } else {\n      setImg({\n        source: require(\"./src/images/unicornPass.png\")\n      });\n\n      for (var i = 0; i < size; i++) {\n        pass += charset.charAt(Math.floor(Math.random() * n));\n      }\n\n      setPsw(pass);\n    }\n  }\n\n  return React.createElement(Pagina, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(Imagem, {\n    source: img.source,\n    resizeMode: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Texto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, size, \" Caracteres\"), React.createElement(Input, {\n    style: model.style,\n    placeholder: \"Tamanho da Senha (1 a 15)\",\n    palceholderTextColor: \"#000\",\n    keyboardType: \"numeric\",\n    value: size,\n    onChangeText: function onChangeText(n) {\n      return setSize(n);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(GerarButton, {\n    onPress: geraPsw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(TextoBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Gerar Senha\")), React.createElement(Result, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Texto, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, psw, \" \")), React.createElement(Result, {\n    style: {\n      marginTop: '20%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(Texto, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Ajax Lima\")));\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/App.js"],"names":["React","useState","styled","Pagina","SafeAreaView","Texto","Text","Result","Input","TextInput","GerarButton","TouchableOpacity","TextoBtn","Imagem","Image","charset","App","psw","setPsw","size","setSize","source","require","img","setImg","model","setModel","geraPsw","pass","n","length","alert","i","charAt","Math","floor","random","style","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components/native';\n\nconst Pagina = styled.SafeAreaView`\n  flex: 1;\n  align-items: center;\n  background-color:#000;\n`;\n\nconst Texto = styled.Text`\n  font-size: 20px;\n`;\n\nconst Result = styled.SafeAreaView`\n  align-items: center;\n  margin-top: 10px;\n  width: 90%;\n  padding: 5px;\n  border: 1px solid;\n  background-color: #eee;\n`;\n\nconst Input = styled.TextInput`\n  width: 90%;\n  height: 50px;\n  font-size: 18px;\n  background-color: #eee;\n  margin-top: 20px;\n  border-radius: 10px;\n  border: 1px solid;\n  padding: 10px;\n`;\n\nconst GerarButton = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: center;\n  margin: 10px;\n  background-color: #41aef4;\n  padding: 10px;\n`;\n\nconst TextoBtn = styled.Text`\n  color: #fff;\n  font-size: 15;\n`;\n\nconst Imagem = styled.Image`\n  width: 200px;\n  height: 200px;\n  margin-top: 30px;\n`;\n\nlet charset =\n  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!#';\n\nexport default function App() {\n  // criação das states\n  // state da senha que vai ser gerada\n  const [psw, setPsw] = useState('');\n  // state do tamanho da senha\n  const [size, setSize] = useState('');\n  // state com o caminho da img usada e depois é trocada\n  const [img, setImg] = useState({\n    source: require('./src/images/unicornDormindo.png'),\n  });\n  //\n  const [model, setModel] = useState({});\n\n  function geraPsw() {\n    let pass = '';\n    let n = charset.length;\n\n    if (size < 1 || size > 15) {\n      alert('Tamanho da senha inválido');\n      setImg({ source: require('./src/images/unicornDormindo.png') });\n    } else {\n      setImg({ source: require('./src/images/unicornPass.png') });\n      // copia caracteres aleatórios para a senha\n      for (let i = 0; i < size; i++) {\n        pass += charset.charAt(Math.floor(Math.random() * n));\n      }\n      // atualiza o campo senha (psw)\n      setPsw(pass);\n    }\n  }\n\n  return (\n    <Pagina>\n      <Imagem source={img.source} resizeMode=\"center\" />\n      <Texto>{size} Caracteres</Texto>\n      <Input\n        style={model.style}\n        placeholder=\"Tamanho da Senha (1 a 15)\"\n        palceholderTextColor=\"#000\"\n        keyboardType=\"numeric\"\n        value={size}\n        onChangeText={(n) => setSize(n)}\n      />\n      <GerarButton onPress={geraPsw}>\n        <TextoBtn>Gerar Senha</TextoBtn>\n      </GerarButton>\n      <Result>\n        <Texto style={{ fontSize: 15 }}>{psw} </Texto>\n      </Result>\n\n      <Result style={{ marginTop: '20%' }}>\n        <Texto style={{ fontSize: 15 }}>Ajax Lima</Texto>\n      </Result>\n    </Pagina>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}