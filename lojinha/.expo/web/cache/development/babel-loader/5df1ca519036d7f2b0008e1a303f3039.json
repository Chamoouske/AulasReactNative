{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/RNTesterPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterTitle = require(\"./RNTesterTitle\");\n\nvar React = require('react');\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nimport { RNTesterThemeContext } from \"./RNTesterTheme\";\n\nvar RNTesterPage = function (_React$Component) {\n  _inherits(RNTesterPage, _React$Component);\n\n  var _super = _createSuper(RNTesterPage);\n\n  function RNTesterPage() {\n    _classCallCheck(this, RNTesterPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RNTesterPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var ContentWrapper;\n      var wrapperProps = {};\n\n      if (this.props.noScroll) {\n        ContentWrapper = View;\n      } else {\n        ContentWrapper = ScrollView;\n        wrapperProps.automaticallyAdjustContentInsets = !this.props.title;\n        wrapperProps.keyboardShouldPersistTaps = 'handled';\n        wrapperProps.keyboardDismissMode = 'interactive';\n      }\n\n      var title = this.props.title ? React.createElement(RNTesterTitle, {\n        title: this.props.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }) : null;\n      var spacer = this.props.noSpacer ? null : React.createElement(View, {\n        style: styles.spacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 49\n        }\n      });\n      return React.createElement(RNTesterThemeContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, function (theme) {\n        return React.createElement(View, {\n          style: [styles.container, {\n            backgroundColor: theme.SecondarySystemBackgroundColor\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, title, React.createElement(ContentWrapper, _extends({\n          style: styles.wrapper\n        }, wrapperProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }\n        }), _this.props.children, spacer));\n      });\n    }\n  }]);\n\n  return RNTesterPage;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  spacer: {\n    height: 270\n  },\n  wrapper: {\n    flex: 1,\n    paddingTop: 10\n  }\n});\nmodule.exports = RNTesterPage;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/RNTesterPage.js"],"names":["RNTesterTitle","require","React","RNTesterThemeContext","RNTesterPage","ContentWrapper","wrapperProps","props","noScroll","View","ScrollView","automaticallyAdjustContentInsets","title","keyboardShouldPersistTaps","keyboardDismissMode","spacer","noSpacer","styles","theme","container","backgroundColor","SecondarySystemBackgroundColor","wrapper","children","Component","StyleSheet","create","flex","height","paddingTop","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,mBAA7B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;;;;;;;AAEA,SAAQE,oBAAR;;IASMC,Y;;;;;;;;;;;;;WACJ,kBAAqB;AAAA;;AACnB,UAAIC,cAAJ;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvBH,QAAAA,cAAc,GAAKI,IAAnB;AACD,OAFD,MAEO;AACLJ,QAAAA,cAAc,GAAIK,UAAlB;AACAJ,QAAAA,YAAY,CAACK,gCAAb,GAAgD,CAAC,KAAKJ,KAAL,CAAWK,KAA5D;AACAN,QAAAA,YAAY,CAACO,yBAAb,GAAyC,SAAzC;AACAP,QAAAA,YAAY,CAACQ,mBAAb,GAAmC,aAAnC;AACD;;AACD,UAAMF,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAX,GACZ,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY,GAEV,IAFJ;AAGA,UAAMG,MAAM,GAAG,KAAKR,KAAL,CAAWS,QAAX,GAAsB,IAAtB,GAA6B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AACA,aACE,oBAAC,oBAAD,CAAsB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAG,KAAK,EAAI;AACR,eACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLD,MAAM,CAACE,SADF,EAEL;AAACC,YAAAA,eAAe,EAAEF,KAAK,CAACG;AAAxB,WAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGT,KALH,EAME,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAEK,MAAM,CAACK;AAA9B,WAA2ChB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACG,KAAI,CAACC,KAAL,CAAWgB,QADd,EAEGR,MAFH,CANF,CADF;AAaD,OAfH,CADF;AAmBD;;;;EAnCwBb,KAAK,CAACsB,S;;AAsCjC,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,MAAM,EAAE;AADF,GAJuB;AAO/BN,EAAAA,OAAO,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPE,IAAAA,UAAU,EAAE;AAFL;AAPsB,CAAlB,CAAf;AAaAC,MAAM,CAACC,OAAP,GAAiB3B,YAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst RNTesterTitle = require('./RNTesterTitle');\nconst React = require('react');\nconst {ScrollView, StyleSheet, View} = require('react-native');\nimport {RNTesterThemeContext} from './RNTesterTheme';\n\ntype Props = $ReadOnly<{|\n  children?: React.Node,\n  title?: ?string,\n  noScroll?: ?boolean,\n  noSpacer?: ?boolean,\n|}>;\n\nclass RNTesterPage extends React.Component<Props> {\n  render(): React.Node {\n    let ContentWrapper;\n    let wrapperProps = {};\n    if (this.props.noScroll) {\n      ContentWrapper = ((View: any): React.ComponentType<any>);\n    } else {\n      ContentWrapper = (ScrollView: React.ComponentType<any>);\n      wrapperProps.automaticallyAdjustContentInsets = !this.props.title;\n      wrapperProps.keyboardShouldPersistTaps = 'handled';\n      wrapperProps.keyboardDismissMode = 'interactive';\n    }\n    const title = this.props.title ? (\n      <RNTesterTitle title={this.props.title} />\n    ) : null;\n    const spacer = this.props.noSpacer ? null : <View style={styles.spacer} />;\n    return (\n      <RNTesterThemeContext.Consumer>\n        {theme => {\n          return (\n            <View\n              style={[\n                styles.container,\n                {backgroundColor: theme.SecondarySystemBackgroundColor},\n              ]}>\n              {title}\n              <ContentWrapper style={styles.wrapper} {...wrapperProps}>\n                {this.props.children}\n                {spacer}\n              </ContentWrapper>\n            </View>\n          );\n        }}\n      </RNTesterThemeContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  spacer: {\n    height: 270,\n  },\n  wrapper: {\n    flex: 1,\n    paddingTop: 10,\n  },\n});\n\nmodule.exports = RNTesterPage;\n"]},"metadata":{},"sourceType":"module"}