{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/DatePicker/DatePickerIOSExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar WithDatePickerData = function (_React$Component) {\n  _inherits(WithDatePickerData, _React$Component);\n\n  var _super = _createSuper(WithDatePickerData);\n\n  function WithDatePickerData() {\n    var _this;\n\n    _classCallCheck(this, WithDatePickerData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      date: new Date()\n    };\n\n    _this.onDateChange = function (date) {\n      _this.setState({\n        date: date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WithDatePickerData, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(WithLabel, {\n        label: \"Value:\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        testID: \"date-indicator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, this.state.date.toLocaleDateString()), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"\\xA0\"), React.createElement(Text, {\n        testID: \"time-indicator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, this.state.date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }))), this.props.children(this.state, this.onDateChange));\n    }\n  }]);\n\n  return WithDatePickerData;\n}(React.Component);\n\nvar WithLabel = function (_React$Component2) {\n  _inherits(WithLabel, _React$Component2);\n\n  var _super2 = _createSuper(WithLabel);\n\n  function WithLabel() {\n    _classCallCheck(this, WithLabel);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(WithLabel, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.labelContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.labelView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, this.props.label)), this.props.children);\n    }\n  }]);\n\n  return WithLabel;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textinput: {\n    height: 26,\n    width: 50,\n    borderWidth: 0.5,\n    borderColor: '#0f0f0f',\n    padding: 4,\n    fontSize: 13\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 2\n  },\n  labelView: {\n    marginRight: 10,\n    paddingVertical: 2\n  },\n  label: {\n    fontWeight: '500'\n  }\n});\nexports.title = '<DatePickerIOS>';\nexports.description = 'Select dates and times using the native UIDatePicker.';\nexports.examples = [{\n  title: 'Date and time picker',\n  render: function render() {\n    var _this2 = this;\n\n    return React.createElement(WithDatePickerData, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, function (state, onDateChange) {\n      return React.createElement(DatePickerIOS, {\n        testID: \"date-and-time\",\n        date: state.date,\n        mode: \"datetime\",\n        onDateChange: onDateChange,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n}, {\n  title: 'Date only picker',\n  render: function render() {\n    var _this3 = this;\n\n    return React.createElement(WithDatePickerData, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, function (state, onDateChange) {\n      return React.createElement(DatePickerIOS, {\n        testID: \"date-only\",\n        date: state.date,\n        mode: \"date\",\n        onDateChange: onDateChange,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n}, {\n  title: 'Time only picker, 20-minute interval',\n  render: function render() {\n    var _this4 = this;\n\n    return React.createElement(WithDatePickerData, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, function (state, onDateChange) {\n      return React.createElement(DatePickerIOS, {\n        testID: \"time-with-interval\",\n        date: state.date,\n        minuteInterval: 20,\n        mode: \"time\",\n        onDateChange: onDateChange,\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/DatePicker/DatePickerIOSExample.js"],"names":["React","require","WithDatePickerData","state","date","Date","onDateChange","setState","toLocaleDateString","toLocaleTimeString","hour","minute","props","children","Component","WithLabel","styles","labelContainer","labelView","label","StyleSheet","create","textinput","height","width","borderWidth","borderColor","padding","fontSize","flexDirection","alignItems","marginVertical","marginRight","paddingVertical","fontWeight","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {DatePickerIOS, StyleSheet, Text, View} = require('react-native');\n\ntype State = {|\n  date: Date,\n|};\n\ntype Props = {|\n  children: (State, (Date) => void) => React.Node,\n|};\n\nclass WithDatePickerData extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  onDateChange = date => {\n    this.setState({date: date});\n  };\n\n  render() {\n    return (\n      <View>\n        <WithLabel label=\"Value:\">\n          <Text testID=\"date-indicator\">\n            {this.state.date.toLocaleDateString()}\n          </Text>\n          <Text>&nbsp;</Text>\n          <Text testID=\"time-indicator\">\n            {this.state.date.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n            })}\n          </Text>\n        </WithLabel>\n        {this.props.children(this.state, this.onDateChange)}\n      </View>\n    );\n  }\n}\n\ntype LabelProps = {|\n  label: string,\n  children: React.Node,\n|};\n\nclass WithLabel extends React.Component<LabelProps> {\n  render() {\n    return (\n      <View style={styles.labelContainer}>\n        <View style={styles.labelView}>\n          <Text style={styles.label}>{this.props.label}</Text>\n        </View>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  textinput: {\n    height: 26,\n    width: 50,\n    borderWidth: 0.5,\n    borderColor: '#0f0f0f',\n    padding: 4,\n    fontSize: 13,\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 2,\n  },\n  labelView: {\n    marginRight: 10,\n    paddingVertical: 2,\n  },\n  label: {\n    fontWeight: '500',\n  },\n});\n\nexports.title = '<DatePickerIOS>';\nexports.description = 'Select dates and times using the native UIDatePicker.';\nexports.examples = [\n  {\n    title: 'Date and time picker',\n    render: function(): React.Element<any> {\n      return (\n        <WithDatePickerData>\n          {(state, onDateChange) => (\n            <DatePickerIOS\n              testID=\"date-and-time\"\n              date={state.date}\n              mode=\"datetime\"\n              onDateChange={onDateChange}\n            />\n          )}\n        </WithDatePickerData>\n      );\n    },\n  },\n  {\n    title: 'Date only picker',\n    render: function(): React.Element<any> {\n      return (\n        <WithDatePickerData>\n          {(state, onDateChange) => (\n            <DatePickerIOS\n              testID=\"date-only\"\n              date={state.date}\n              mode=\"date\"\n              onDateChange={onDateChange}\n            />\n          )}\n        </WithDatePickerData>\n      );\n    },\n  },\n  {\n    title: 'Time only picker, 20-minute interval',\n    render: function(): React.Element<any> {\n      return (\n        <WithDatePickerData>\n          {(state, onDateChange) => (\n            <DatePickerIOS\n              testID=\"time-with-interval\"\n              date={state.date}\n              minuteInterval={20}\n              mode=\"time\"\n              onDateChange={onDateChange}\n            />\n          )}\n        </WithDatePickerData>\n      );\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}