{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { PermissionResponse } from 'unimodules-permissions-interface';\nimport { LocationLastKnownOptions, LocationObject, LocationOptions } from './Location.types';\n/**\n * Gets the permission details. The implementation is not very good as it actually requests\n * for the current location, but there is no better way on web so far :(\n */\ndeclare function getPermissionsAsync(): Promise<PermissionResponse>;\ndeclare const _default: {\n    readonly name: string;\n    getProviderStatusAsync(): Promise<{\n        locationServicesEnabled: boolean;\n    }>;\n    getLastKnownPositionAsync(options?: LocationLastKnownOptions): Promise<LocationObject | null>;\n    getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject>;\n    removeWatchAsync(watchId: any): Promise<void>;\n    watchDeviceHeading(headingId: any): Promise<void>;\n    hasServicesEnabledAsync(): Promise<boolean>;\n    geocodeAsync(): Promise<any[]>;\n    reverseGeocodeAsync(): Promise<any[]>;\n    watchPositionImplAsync(watchId: string, options: LocationOptions): Promise<string>;\n    getPermissionsAsync: typeof getPermissionsAsync;\n    requestPermissionsAsync(): Promise<PermissionResponse>;\n    startObserving(): void;\n    stopObserving(): void;\n};\nexport default _default;\n"]},"metadata":{},"sourceType":"module"}