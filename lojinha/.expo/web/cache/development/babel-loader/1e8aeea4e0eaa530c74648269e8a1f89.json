{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changePlaceholderInTemplate = changePlaceholderInTemplate;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _walk = _interopRequireDefault(require(\"../../tools/walk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DEFAULT_TITLE_PLACEHOLDER = 'Hello App Display Name';\n\nfunction replaceNameInUTF8File(filePath, projectName, templateName) {\n  _cliTools().logger.debug(\"Replacing in \" + filePath);\n\n  var fileContent = _fs().default.readFileSync(filePath, 'utf8');\n\n  var replacedFileContent = fileContent.replace(new RegExp(templateName, 'g'), projectName).replace(new RegExp(templateName.toLowerCase(), 'g'), projectName.toLowerCase());\n\n  if (fileContent !== replacedFileContent) {\n    _fs().default.writeFileSync(filePath, replacedFileContent, 'utf8');\n  }\n}\n\nfunction renameFile(filePath, oldName, newName) {\n  var newFileName = _path().default.join(_path().default.dirname(filePath), _path().default.basename(filePath).replace(new RegExp(oldName, 'g'), newName));\n\n  _cliTools().logger.debug(\"Renaming \" + filePath + \" -> file:\" + newFileName);\n\n  _fs().default.renameSync(filePath, newFileName);\n}\n\nfunction shouldRenameFile(filePath, nameToReplace) {\n  return _path().default.basename(filePath).includes(nameToReplace);\n}\n\nfunction shouldIgnoreFile(filePath) {\n  return filePath.match(/node_modules|yarn.lock|package-lock.json/g);\n}\n\nvar UNDERSCORED_DOTFILES = ['buckconfig', 'eslintrc.js', 'flowconfig', 'gitattributes', 'gitignore', 'prettierrc.js', 'watchmanconfig'];\n\nfunction processDotfiles(filePath) {\n  var dotfile = UNDERSCORED_DOTFILES.find(function (e) {\n    return filePath.includes(\"_\" + e);\n  });\n\n  if (dotfile === undefined) {\n    return;\n  }\n\n  renameFile(filePath, \"_\" + dotfile, \".\" + dotfile);\n}\n\nfunction changePlaceholderInTemplate(_ref) {\n  var projectName = _ref.projectName,\n      placeholderName = _ref.placeholderName,\n      _ref$placeholderTitle = _ref.placeholderTitle,\n      placeholderTitle = _ref$placeholderTitle === void 0 ? DEFAULT_TITLE_PLACEHOLDER : _ref$placeholderTitle,\n      _ref$projectTitle = _ref.projectTitle,\n      projectTitle = _ref$projectTitle === void 0 ? projectName : _ref$projectTitle;\n\n  _cliTools().logger.debug(\"Changing \" + placeholderName + \" for \" + projectName + \" in template\");\n\n  (0, _walk.default)(process.cwd()).reverse().forEach(function (filePath) {\n    if (shouldIgnoreFile(filePath)) {\n      return;\n    }\n\n    if (!_fs().default.statSync(filePath).isDirectory()) {\n      replaceNameInUTF8File(filePath, projectName, placeholderName);\n      replaceNameInUTF8File(filePath, projectTitle, placeholderTitle);\n    }\n\n    if (shouldRenameFile(filePath, placeholderName)) {\n      renameFile(filePath, placeholderName, projectName);\n    }\n\n    if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n      renameFile(filePath, placeholderName.toLowerCase(), projectName.toLowerCase());\n    }\n\n    processDotfiles(filePath);\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/init/editTemplate.js"],"names":["Object","defineProperty","exports","value","changePlaceholderInTemplate","_fs","data","_interopRequireDefault","require","_path","_cliTools","_walk","obj","__esModule","default","DEFAULT_TITLE_PLACEHOLDER","replaceNameInUTF8File","filePath","projectName","templateName","logger","debug","fileContent","readFileSync","replacedFileContent","replace","RegExp","toLowerCase","writeFileSync","renameFile","oldName","newName","newFileName","join","dirname","basename","renameSync","shouldRenameFile","nameToReplace","includes","shouldIgnoreFile","match","UNDERSCORED_DOTFILES","processDotfiles","dotfile","find","e","undefined","placeholderName","placeholderTitle","projectTitle","process","cwd","reverse","forEach","statSync","isDirectory"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changePlaceholderInTemplate = changePlaceholderInTemplate;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _walk = _interopRequireDefault(require(\"../../tools/walk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n  TODO: This is a default placeholder for title in react-native template.\n  We should get rid of this once custom templates adapt `placeholderTitle` in their configurations.\n*/\nconst DEFAULT_TITLE_PLACEHOLDER = 'Hello App Display Name';\n\nfunction replaceNameInUTF8File(filePath, projectName, templateName) {\n  _cliTools().logger.debug(`Replacing in ${filePath}`);\n\n  const fileContent = _fs().default.readFileSync(filePath, 'utf8');\n\n  const replacedFileContent = fileContent.replace(new RegExp(templateName, 'g'), projectName).replace(new RegExp(templateName.toLowerCase(), 'g'), projectName.toLowerCase());\n\n  if (fileContent !== replacedFileContent) {\n    _fs().default.writeFileSync(filePath, replacedFileContent, 'utf8');\n  }\n}\n\nfunction renameFile(filePath, oldName, newName) {\n  const newFileName = _path().default.join(_path().default.dirname(filePath), _path().default.basename(filePath).replace(new RegExp(oldName, 'g'), newName));\n\n  _cliTools().logger.debug(`Renaming ${filePath} -> file:${newFileName}`);\n\n  _fs().default.renameSync(filePath, newFileName);\n}\n\nfunction shouldRenameFile(filePath, nameToReplace) {\n  return _path().default.basename(filePath).includes(nameToReplace);\n}\n\nfunction shouldIgnoreFile(filePath) {\n  return filePath.match(/node_modules|yarn.lock|package-lock.json/g);\n}\n\nconst UNDERSCORED_DOTFILES = ['buckconfig', 'eslintrc.js', 'flowconfig', 'gitattributes', 'gitignore', 'prettierrc.js', 'watchmanconfig'];\n\nfunction processDotfiles(filePath) {\n  const dotfile = UNDERSCORED_DOTFILES.find(e => filePath.includes(`_${e}`));\n\n  if (dotfile === undefined) {\n    return;\n  }\n\n  renameFile(filePath, `_${dotfile}`, `.${dotfile}`);\n}\n\nfunction changePlaceholderInTemplate({\n  projectName,\n  placeholderName,\n  placeholderTitle = DEFAULT_TITLE_PLACEHOLDER,\n  projectTitle = projectName\n}) {\n  _cliTools().logger.debug(`Changing ${placeholderName} for ${projectName} in template`);\n\n  (0, _walk.default)(process.cwd()).reverse().forEach(filePath => {\n    if (shouldIgnoreFile(filePath)) {\n      return;\n    }\n\n    if (!_fs().default.statSync(filePath).isDirectory()) {\n      replaceNameInUTF8File(filePath, projectName, placeholderName);\n      replaceNameInUTF8File(filePath, projectTitle, placeholderTitle);\n    }\n\n    if (shouldRenameFile(filePath, placeholderName)) {\n      renameFile(filePath, placeholderName, projectName);\n    }\n\n    if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n      renameFile(filePath, placeholderName.toLowerCase(), projectName.toLowerCase());\n    }\n\n    processDotfiles(filePath);\n  });\n}\n\n//# sourceMappingURL=editTemplate.js.map"]},"metadata":{},"sourceType":"script"}