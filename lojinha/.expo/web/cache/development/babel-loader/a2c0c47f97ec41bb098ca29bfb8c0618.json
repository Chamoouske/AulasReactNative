{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/lojinha/src/pages/Produto/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function Produto(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var estilo = _objectSpread({}, route.params.estilo);\n\n  var url = route.params.url;\n  var user = route.params.user;\n  var desc = route.params.desc;\n  var preco = route.params.preco;\n  var pagamento = route.params.pagamento;\n  var produto = route.params.produto;\n\n  var _useState = useState({\n    style: {\n      borderColor: '#FFB6B6'\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      model = _useState2[0],\n      setModel = _useState2[1];\n\n  var nCor;\n\n  var MudaBorda = function MudaBorda() {\n    var cor = ['#FFB6B6', '#FFCEB6', '#FFDDB6', '#FFEFB6', '#FCFFB6', '#EDFFB6', '#DDFFB6', '#D0FFB6', '#BEFFB6', '#B6FFC3', '#B6FFD8', '#B6FFE8', '#B6FFFA', '#B6EFFF', '#B6DDFF', '#B6CBFF', '#B6B6FF', '#DAB6FF', '#EDB6FF', '#FFB6FA'];\n    nCor = Math.floor(Math.random() * cor.length);\n    setModel({\n      style: {\n        borderColor: cor[nCor]\n      }\n    });\n  };\n\n  setTimeout(MudaBorda, 2000);\n  return React.createElement(View, {\n    style: estilo.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: estilo.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Cliente: \", user), React.createElement(View, {\n    style: [estilo.box, {\n      borderRadius: 10,\n      borderWidth: 5,\n      padding: 5\n    }, model.style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: [estilo.imagem, {\n      width: 300,\n      height: 300\n    }],\n    source: {\n      uri: url.uri\n    },\n    resizeMode: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [model.style, {\n      borderRadius: 10,\n      borderWidth: 5,\n      width: 'auto',\n      height: 'auto',\n      alignItems: 'center',\n      padding: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [{\n      textAlign: 'center',\n      margin: 5,\n      borderBottomWidth: 2,\n      borderBottomColor: '#000'\n    }, estilo.textoRes],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Produto: Gift Card - \", produto), React.createElement(Text, {\n    style: [{\n      textAlign: 'center',\n      borderBottomWidth: 2,\n      borderBottomColor: '#000'\n    }, estilo.textoRes],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Descri\\xE7\\xE3o: \", desc), React.createElement(Text, {\n    style: [{\n      textAlign: 'center',\n      borderBottomWidth: 2,\n      borderBottomColor: '#000'\n    }, estilo.textoRes],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Pre\\xE7o: R$\", preco), React.createElement(Text, {\n    style: estilo.texto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Forma de Pagamento: \", pagamento)), React.createElement(View, {\n    style: {\n      bottom: '1%',\n      right: 5,\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [{\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 5,\n      backgroundColor: '#41AEF4',\n      borderRadius: 5,\n      padding: 5,\n      marginRight: 5\n    }],\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [estilo.texto, {\n      color: '#fff'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Encerrar Compra\"))));\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/lojinha/src/pages/Produto/index.js"],"names":["React","useState","Produto","route","navigation","estilo","params","url","user","desc","preco","pagamento","produto","style","borderColor","model","setModel","nCor","MudaBorda","cor","Math","floor","random","length","setTimeout","container","title","box","borderRadius","borderWidth","padding","imagem","width","height","uri","alignItems","textAlign","margin","borderBottomWidth","borderBottomColor","textoRes","texto","bottom","right","position","justifyContent","backgroundColor","marginRight","navigate","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, Image, TouchableOpacity } from 'react-native';\n\nexport default function Produto({ route, navigation }) {\n  const estilo = { ...route.params.estilo };\n  const url = route.params.url;\n  const user = route.params.user;\n  const desc = route.params.desc;\n  const preco = route.params.preco;\n  const pagamento = route.params.pagamento;\n  const produto = route.params.produto;\n  // state pra mudar styles variados\n  const [model, setModel] = useState({ style: { borderColor: '#FFB6B6' } });\n  let nCor;\n\n  const MudaBorda = function () {\n    let cor = [\n      '#FFB6B6',\n      '#FFCEB6',\n      '#FFDDB6',\n      '#FFEFB6',\n      '#FCFFB6',\n      '#EDFFB6',\n      '#DDFFB6',\n      '#D0FFB6',\n      '#BEFFB6',\n      '#B6FFC3',\n      '#B6FFD8',\n      '#B6FFE8',\n      '#B6FFFA',\n      '#B6EFFF',\n      '#B6DDFF',\n      '#B6CBFF',\n      '#B6B6FF',\n      '#DAB6FF',\n      '#EDB6FF',\n      '#FFB6FA',\n    ];\n    // gera um numero aleatório entre o tamnha do vetor cor e 0\n    nCor = Math.floor(Math.random() * cor.length);\n    // coloca a borda na variável model\n    setModel({ style: { borderColor: cor[nCor] } });\n  };\n  setTimeout(MudaBorda, 2000);\n\n  return (\n    <View style={estilo.container}>\n      <Text style={estilo.title}>Cliente: {user}</Text>\n      <View\n        style={[\n          estilo.box,\n          {\n            borderRadius: 10,\n            borderWidth: 5,\n            padding: 5,\n          },\n          model.style,\n        ]}\n      >\n        <Image\n          style={[\n            estilo.imagem,\n            {\n              width: 300,\n              height: 300,\n            },\n          ]}\n          source={{ uri: url.uri }}\n          resizeMode=\"center\"\n        />\n      </View>\n\n      <View\n        style={[\n          model.style,\n          {\n            borderRadius: 10,\n            borderWidth: 5,\n            width: 'auto',\n            height: 'auto',\n            alignItems: 'center',\n            padding: 5,\n          },\n        ]}\n      >\n        <Text\n          style={[\n            {\n              textAlign: 'center',\n              margin: 5,\n              borderBottomWidth: 2,\n              borderBottomColor: '#000',\n            },\n            estilo.textoRes,\n          ]}\n        >\n          Produto: Gift Card - {produto}\n        </Text>\n\n        <Text\n          style={[\n            {\n              textAlign: 'center',\n              borderBottomWidth: 2,\n              borderBottomColor: '#000',\n            },\n            estilo.textoRes,\n          ]}\n        >\n          Descrição: {desc}\n        </Text>\n\n        <Text\n          style={[\n            {\n              textAlign: 'center',\n              borderBottomWidth: 2,\n              borderBottomColor: '#000',\n            },\n            estilo.textoRes,\n          ]}\n        >\n          Preço: R${preco}\n        </Text>\n        <Text style={estilo.texto}>Forma de Pagamento: {pagamento}</Text>\n      </View>\n\n      <View style={{ bottom: '1%', right: 5, position: 'absolute' }}>\n        <TouchableOpacity\n          style={[\n            {\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: 5,\n              backgroundColor: '#41AEF4',\n              borderRadius: 5,\n              padding: 5,\n              marginRight: 5,\n            },\n          ]}\n          onPress={() => navigation.navigate('Login')}\n        >\n          <Text style={[estilo.texto, { color: '#fff' }]}>Encerrar Compra</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}