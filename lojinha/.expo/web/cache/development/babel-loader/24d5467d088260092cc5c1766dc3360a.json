{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.downloadAndUnzip = void 0;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _unzip = require(\"./unzip\");\n\nvar _deleteFile = require(\"./deleteFile\");\n\nvar downloadAndUnzip = function downloadAndUnzip(_ref) {\n  var loader, downloadUrl, component, installPath, installer;\n  return _regeneratorRuntime.async(function downloadAndUnzip$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          loader = _ref.loader, downloadUrl = _ref.downloadUrl, component = _ref.component, installPath = _ref.installPath;\n          loader.start(\"Downloading \" + component + \" from \\\"\" + downloadUrl + \"\\\" (this may take a few minutes)\");\n          _context.next = 4;\n          return _regeneratorRuntime.awrap((0, _cliTools().fetchToTemp)(downloadUrl));\n\n        case 4:\n          installer = _context.sent;\n          loader.text = \"Installing \" + component + \" in \\\"\" + installPath + \"\\\"\";\n          _context.prev = 6;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap((0, _unzip.unzip)(installer, installPath));\n\n        case 9:\n          _context.prev = 9;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap((0, _deleteFile.deleteFile)(installer));\n\n        case 12:\n          return _context.finish(9);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6,, 9, 13]], Promise);\n};\n\nexports.downloadAndUnzip = downloadAndUnzip;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/downloadAndUnzip.js"],"names":["Object","defineProperty","exports","value","downloadAndUnzip","_cliTools","data","require","_unzip","_deleteFile","loader","downloadUrl","component","installPath","start","fetchToTemp","installer","text","unzip","deleteFile"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGC,OAAO,CAAC,mCAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIE,MAAM,GAAGD,OAAO,WAApB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,gBAAzB;;AAMA,IAAMH,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBM,UAAAA,MADuB,QACvBA,MADuB,EAEvBC,WAFuB,QAEvBA,WAFuB,EAGvBC,SAHuB,QAGvBA,SAHuB,EAIvBC,WAJuB,QAIvBA,WAJuB;AAMvBH,UAAAA,MAAM,CAACI,KAAP,kBAA4BF,SAA5B,gBAA+CD,WAA/C;AANuB;AAAA,2CAOC,CAAC,GAAGN,SAAS,GAAGU,WAAhB,EAA6BJ,WAA7B,CAPD;;AAAA;AAOjBK,UAAAA,SAPiB;AAQvBN,UAAAA,MAAM,CAACO,IAAP,mBAA4BL,SAA5B,cAA6CC,WAA7C;AARuB;AAAA;AAAA,2CAWf,CAAC,GAAGL,MAAM,CAACU,KAAX,EAAkBF,SAAlB,EAA6BH,WAA7B,CAXe;;AAAA;AAAA;AAAA;AAAA,2CAaf,CAAC,GAAGJ,WAAW,CAACU,UAAhB,EAA4BH,SAA5B,CAbe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAiBAd,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.downloadAndUnzip = void 0;\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _unzip = require(\"./unzip\");\n\nvar _deleteFile = require(\"./deleteFile\");\n\n/**\n * Downloads `downloadUrl` and unzips the contents to `installPath` while\n * updating the message of `loader` at each step.\n */\nconst downloadAndUnzip = async ({\n  loader,\n  downloadUrl,\n  component,\n  installPath\n}) => {\n  loader.start(`Downloading ${component} from \"${downloadUrl}\" (this may take a few minutes)`);\n  const installer = await (0, _cliTools().fetchToTemp)(downloadUrl);\n  loader.text = `Installing ${component} in \"${installPath}\"`;\n\n  try {\n    await (0, _unzip.unzip)(installer, installPath);\n  } finally {\n    await (0, _deleteFile.deleteFile)(installer);\n  }\n};\n\nexports.downloadAndUnzip = downloadAndUnzip;\n\n//# sourceMappingURL=downloadAndUnzip.js.map"]},"metadata":{},"sourceType":"script"}