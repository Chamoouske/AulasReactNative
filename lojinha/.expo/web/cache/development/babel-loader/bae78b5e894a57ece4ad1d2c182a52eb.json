{"ast":null,"code":"'use strict';\n\njest.mock(\"../InteractionManager\");\ndescribe('InteractionMixin', function () {\n  var InteractionManager;\n  var InteractionMixin;\n  var component;\n  beforeEach(function () {\n    jest.resetModules();\n    InteractionManager = require(\"../InteractionManager\");\n    InteractionMixin = require(\"../InteractionMixin\");\n    component = Object.create(InteractionMixin);\n  });\n  it('should start interactions', function () {\n    component.createInteractionHandle();\n    expect(InteractionManager.createInteractionHandle).toBeCalled();\n  });\n  it('should end interactions', function () {\n    var handle = {};\n    component.clearInteractionHandle(handle);\n    expect(InteractionManager.clearInteractionHandle).toBeCalledWith(handle);\n  });\n  it('should schedule tasks', function () {\n    var task = jest.fn();\n    component.runAfterInteractions(task);\n    expect(InteractionManager.runAfterInteractions).toBeCalledWith(task);\n  });\n  it('should end unfinished interactions in componentWillUnmount', function () {\n    var handle = component.createInteractionHandle();\n    component.componentWillUnmount();\n    expect(InteractionManager.clearInteractionHandle).toBeCalledWith(handle);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Interaction/__tests__/InteractionMixin-test.js"],"names":["jest","mock","describe","InteractionManager","InteractionMixin","component","beforeEach","resetModules","require","Object","create","it","createInteractionHandle","expect","toBeCalled","handle","clearInteractionHandle","toBeCalledWith","task","fn","runAfterInteractions","componentWillUnmount"],"mappings":"AAUA;;AAEAA,IAAI,CAACC,IAAL;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjC,MAAIC,kBAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,SAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACfN,IAAAA,IAAI,CAACO,YAAL;AACAJ,IAAAA,kBAAkB,GAAGK,OAAO,yBAA5B;AACAJ,IAAAA,gBAAgB,GAAGI,OAAO,uBAA1B;AAEAH,IAAAA,SAAS,GAAGI,MAAM,CAACC,MAAP,CAAcN,gBAAd,CAAZ;AACD,GANS,CAAV;AAQAO,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpCN,IAAAA,SAAS,CAACO,uBAAV;AACAC,IAAAA,MAAM,CAACV,kBAAkB,CAACS,uBAApB,CAAN,CAAmDE,UAAnD;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAClC,QAAMI,MAAM,GAAG,EAAf;AACAV,IAAAA,SAAS,CAACW,sBAAV,CAAiCD,MAAjC;AACAF,IAAAA,MAAM,CAACV,kBAAkB,CAACa,sBAApB,CAAN,CAAkDC,cAAlD,CAAiEF,MAAjE;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChC,QAAMO,IAAI,GAAGlB,IAAI,CAACmB,EAAL,EAAb;AACAd,IAAAA,SAAS,CAACe,oBAAV,CAA+BF,IAA/B;AACAL,IAAAA,MAAM,CAACV,kBAAkB,CAACiB,oBAApB,CAAN,CAAgDH,cAAhD,CAA+DC,IAA/D;AACD,GAJC,CAAF;AAMAP,EAAAA,EAAE,CAAC,4DAAD,EAA+D,YAAM;AACrE,QAAMI,MAAM,GAAGV,SAAS,CAACO,uBAAV,EAAf;AACAP,IAAAA,SAAS,CAACgB,oBAAV;AACAR,IAAAA,MAAM,CAACV,kBAAkB,CAACa,sBAApB,CAAN,CAAkDC,cAAlD,CAAiEF,MAAjE;AACD,GAJC,CAAF;AAKD,CAnCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\njest.mock('../InteractionManager');\n\ndescribe('InteractionMixin', () => {\n  let InteractionManager;\n  let InteractionMixin;\n  let component;\n\n  beforeEach(() => {\n    jest.resetModules();\n    InteractionManager = require('../InteractionManager');\n    InteractionMixin = require('../InteractionMixin');\n\n    component = Object.create(InteractionMixin);\n  });\n\n  it('should start interactions', () => {\n    component.createInteractionHandle();\n    expect(InteractionManager.createInteractionHandle).toBeCalled();\n  });\n\n  it('should end interactions', () => {\n    const handle = {};\n    component.clearInteractionHandle(handle);\n    expect(InteractionManager.clearInteractionHandle).toBeCalledWith(handle);\n  });\n\n  it('should schedule tasks', () => {\n    const task = jest.fn();\n    component.runAfterInteractions(task);\n    expect(InteractionManager.runAfterInteractions).toBeCalledWith(task);\n  });\n\n  it('should end unfinished interactions in componentWillUnmount', () => {\n    const handle = component.createInteractionHandle();\n    component.componentWillUnmount();\n    expect(InteractionManager.clearInteractionHandle).toBeCalledWith(handle);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}