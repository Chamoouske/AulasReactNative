{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/ImageCachePolicyTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar Image = ReactNative.Image,\n    View = ReactNative.View,\n    Text = ReactNative.Text,\n    StyleSheet = ReactNative.StyleSheet;\nvar TestModule = ReactNative.NativeModules.TestModule;\nvar TESTS = ['only-if-cached', 'default', 'reload', 'force-cache'];\n\nvar ImageCachePolicyTest = function (_React$Component) {\n  _inherits(ImageCachePolicyTest, _React$Component);\n\n  var _super = _createSuper(ImageCachePolicyTest);\n\n  function ImageCachePolicyTest() {\n    var _this;\n\n    _classCallCheck(this, ImageCachePolicyTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ImageCachePolicyTest, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var results = TESTS.map(function (x) {\n        return nextState[x];\n      });\n\n      if (!results.includes(undefined)) {\n        var result = results.reduce(function (x, y) {\n          return x === y === true;\n        }, true);\n        TestModule.markTestPassed(result);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"testComplete\",\n    value: function testComplete(name, pass) {\n      this.setState(_defineProperty({}, name, pass));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, \"Hello\"), React.createElement(Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' + Date.now(),\n          cache: 'only-if-cached'\n        },\n        onLoad: function onLoad() {\n          return _this2.testComplete('only-if-cached', false);\n        },\n        onError: function onError() {\n          return _this2.testComplete('only-if-cached', true);\n        },\n        style: styles.base,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' + Date.now(),\n          cache: 'default'\n        },\n        onLoad: function onLoad() {\n          return _this2.testComplete('default', true);\n        },\n        onError: function onError() {\n          return _this2.testComplete('default', false);\n        },\n        style: styles.base,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' + Date.now(),\n          cache: 'reload'\n        },\n        onLoad: function onLoad() {\n          return _this2.testComplete('reload', true);\n        },\n        onError: function onError() {\n          return _this2.testComplete('reload', false);\n        },\n        style: styles.base,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }), React.createElement(Image, {\n        source: {\n          uri: 'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' + Date.now(),\n          cache: 'force-cache'\n        },\n        onLoad: function onLoad() {\n          return _this2.testComplete('force-cache', true);\n        },\n        onError: function onError() {\n          return _this2.testComplete('force-cache', false);\n        },\n        style: styles.base,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ImageCachePolicyTest;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  base: {\n    width: 100,\n    height: 100\n  }\n});\nImageCachePolicyTest.displayName = 'ImageCachePolicyTest';\nmodule.exports = ImageCachePolicyTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/ImageCachePolicyTest.js"],"names":["React","require","Image","ReactNative","View","Text","StyleSheet","TestModule","NativeModules","TESTS","ImageCachePolicyTest","state","nextProps","nextState","results","map","x","includes","undefined","result","reduce","y","markTestPassed","name","pass","setState","styles","container","uri","Date","now","cache","testComplete","base","Component","create","flex","width","height","displayName","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {Image, View, Text, StyleSheet} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\n/*\n * The reload and force-cache tests don't actually verify that the complete functionality.\n *\n * reload: Should have the server set a long cache header, then swap the image on next load\n * with the test comparing the old image to the new image and making sure they are different.\n *\n * force-cache: Should do the above but set a no-cache header. The test should compare the first\n * image with the new one and make sure they are the same.\n */\n\nconst TESTS = ['only-if-cached', 'default', 'reload', 'force-cache'];\n\ntype Props = {...};\ntype State = {\n  'only-if-cached'?: boolean,\n  default?: boolean,\n  reload?: boolean,\n  'force-cache'?: boolean,\n  ...\n};\n\nclass ImageCachePolicyTest extends React.Component<Props, $FlowFixMeState> {\n  state: $FlowFixMe | {...} = {};\n\n  shouldComponentUpdate(nextProps: Props, nextState: State): boolean {\n    const results: Array<?boolean> = TESTS.map(x => nextState[x]);\n\n    if (!results.includes(undefined)) {\n      const result: boolean = results.reduce(\n        (x, y) => (x === y) === true,\n        true,\n      );\n      TestModule.markTestPassed(result);\n    }\n\n    return false;\n  }\n\n  testComplete(name: string, pass: boolean) {\n    this.setState({[name]: pass});\n  }\n\n  render(): React.Node {\n    return (\n      <View style={styles.container}>\n        <Text>Hello</Text>\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' +\n              Date.now(),\n            cache: 'only-if-cached',\n          }}\n          onLoad={() => this.testComplete('only-if-cached', false)}\n          onError={() => this.testComplete('only-if-cached', true)}\n          style={styles.base}\n        />\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' +\n              Date.now(),\n            cache: 'default',\n          }}\n          onLoad={() => this.testComplete('default', true)}\n          onError={() => this.testComplete('default', false)}\n          style={styles.base}\n        />\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' +\n              Date.now(),\n            cache: 'reload',\n          }}\n          onLoad={() => this.testComplete('reload', true)}\n          onError={() => this.testComplete('reload', false)}\n          style={styles.base}\n        />\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/facebook/react-native/master/Libraries/NewAppScreen/components/logo.png?cacheBust=notinCache' +\n              Date.now(),\n            cache: 'force-cache',\n          }}\n          onLoad={() => this.testComplete('force-cache', true)}\n          onError={() => this.testComplete('force-cache', false)}\n          style={styles.base}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  base: {\n    width: 100,\n    height: 100,\n  },\n});\n\nImageCachePolicyTest.displayName = 'ImageCachePolicyTest';\n\nmodule.exports = ImageCachePolicyTest;\n"]},"metadata":{},"sourceType":"script"}