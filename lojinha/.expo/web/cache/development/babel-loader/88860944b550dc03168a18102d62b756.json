{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/XHR/XHRExampleHeaders.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar XHRExampleHeaders = function (_React$Component) {\n  _inherits(XHRExampleHeaders, _React$Component);\n\n  var _super = _createSuper(XHRExampleHeaders);\n\n  function XHRExampleHeaders(props) {\n    var _this;\n\n    _classCallCheck(this, XHRExampleHeaders);\n\n    _this = _super.call(this, props);\n    _this.cancelled = false;\n    _this.state = {\n      status: '',\n      headers: '',\n      contentSize: 1,\n      downloaded: 0\n    };\n    return _this;\n  }\n\n  _createClass(XHRExampleHeaders, [{\n    key: \"download\",\n    value: function download() {\n      var _this2 = this;\n\n      this.xhr && this.xhr.abort();\n      var xhr = this.xhr || new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === xhr.DONE) {\n          if (_this2.cancelled) {\n            _this2.cancelled = false;\n            return;\n          }\n\n          if (xhr.status === 200) {\n            _this2.setState({\n              status: 'Download complete!',\n              headers: xhr.getAllResponseHeaders()\n            });\n          } else if (xhr.status !== 0) {\n            _this2.setState({\n              status: 'Error: Server returned HTTP status of ' + xhr.status + ' ' + xhr.responseText\n            });\n          } else {\n            _this2.setState({\n              status: 'Error: ' + xhr.responseText\n            });\n          }\n        }\n      };\n\n      xhr.open('GET', 'https://httpbin.org/response-headers?header1=value&header2=value1&header2=value2');\n      xhr.send();\n      this.xhr = xhr;\n      this.setState({\n        status: 'Downloading...'\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelled = true;\n      this.xhr && this.xhr.abort();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var button = this.state.status === 'Downloading...' ? React.createElement(View, {\n        style: styles.wrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"...\"))) : React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        onPress: this.download.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"Get headers\")));\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, button, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, this.state.headers));\n    }\n  }]);\n\n  return XHRExampleHeaders;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 8\n  }\n});\nmodule.exports = XHRExampleHeaders;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/XHR/XHRExampleHeaders.js"],"names":["React","require","XHRExampleHeaders","props","cancelled","state","status","headers","contentSize","downloaded","xhr","abort","XMLHttpRequest","onreadystatechange","readyState","DONE","setState","getAllResponseHeaders","responseText","open","send","button","styles","wrapper","download","bind","Component","StyleSheet","create","borderRadius","marginBottom","backgroundColor","padding","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {StyleSheet, Text, TouchableHighlight, View} = require('react-native');\n\nclass XHRExampleHeaders extends React.Component {\n  xhr: XMLHttpRequest;\n  cancelled: boolean;\n\n  constructor(props) {\n    super(props);\n    this.cancelled = false;\n    this.state = {\n      status: '',\n      headers: '',\n      contentSize: 1,\n      downloaded: 0,\n    };\n  }\n\n  download() {\n    this.xhr && this.xhr.abort();\n\n    const xhr = this.xhr || new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.DONE) {\n        if (this.cancelled) {\n          this.cancelled = false;\n          return;\n        }\n        if (xhr.status === 200) {\n          this.setState({\n            status: 'Download complete!',\n            headers: xhr.getAllResponseHeaders(),\n          });\n        } else if (xhr.status !== 0) {\n          this.setState({\n            status:\n              'Error: Server returned HTTP status of ' +\n              xhr.status +\n              ' ' +\n              xhr.responseText,\n          });\n        } else {\n          this.setState({\n            status: 'Error: ' + xhr.responseText,\n          });\n        }\n      }\n    };\n    xhr.open(\n      'GET',\n      'https://httpbin.org/response-headers?header1=value&header2=value1&header2=value2',\n    );\n    xhr.send();\n    this.xhr = xhr;\n\n    this.setState({status: 'Downloading...'});\n  }\n\n  componentWillUnmount() {\n    this.cancelled = true;\n    this.xhr && this.xhr.abort();\n  }\n\n  render() {\n    const button =\n      this.state.status === 'Downloading...' ? (\n        <View style={styles.wrapper}>\n          <View style={styles.button}>\n            <Text>...</Text>\n          </View>\n        </View>\n      ) : (\n        <TouchableHighlight\n          style={styles.wrapper}\n          onPress={this.download.bind(this)}>\n          <View style={styles.button}>\n            <Text>Get headers</Text>\n          </View>\n        </TouchableHighlight>\n      );\n\n    return (\n      <View>\n        {button}\n        <Text>{this.state.headers}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  button: {\n    backgroundColor: '#eeeeee',\n    padding: 8,\n  },\n});\n\nmodule.exports = XHRExampleHeaders;\n"]},"metadata":{},"sourceType":"script"}