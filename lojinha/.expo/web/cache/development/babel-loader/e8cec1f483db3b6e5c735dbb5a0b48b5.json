{"ast":null,"code":"export {};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/node_modules/pretty-format/build/ts3.4/types.d.ts"],"names":[],"mappings":"AAmGA","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport declare type Colors = {\r\n    comment: {\r\n        close: string;\r\n        open: string;\r\n    };\r\n    content: {\r\n        close: string;\r\n        open: string;\r\n    };\r\n    prop: {\r\n        close: string;\r\n        open: string;\r\n    };\r\n    tag: {\r\n        close: string;\r\n        open: string;\r\n    };\r\n    value: {\r\n        close: string;\r\n        open: string;\r\n    };\r\n};\r\ndeclare type Indent = (arg0: string) => string;\r\nexport declare type Refs = Array<unknown>;\r\ndeclare type Print = (arg0: unknown) => string;\r\nexport declare type Theme = {\r\n    comment: string;\r\n    content: string;\r\n    prop: string;\r\n    tag: string;\r\n    value: string;\r\n};\r\ndeclare type ThemeReceived = {\r\n    comment?: string;\r\n    content?: string;\r\n    prop?: string;\r\n    tag?: string;\r\n    value?: string;\r\n};\r\nexport declare type Options = {\r\n    callToJSON: boolean;\r\n    escapeRegex: boolean;\r\n    escapeString: boolean;\r\n    highlight: boolean;\r\n    indent: number;\r\n    maxDepth: number;\r\n    min: boolean;\r\n    plugins: Plugins;\r\n    printFunctionName: boolean;\r\n    theme: Theme;\r\n};\r\nexport declare type OptionsReceived = {\r\n    callToJSON?: boolean;\r\n    escapeRegex?: boolean;\r\n    escapeString?: boolean;\r\n    highlight?: boolean;\r\n    indent?: number;\r\n    maxDepth?: number;\r\n    min?: boolean;\r\n    plugins?: Plugins;\r\n    printFunctionName?: boolean;\r\n    theme?: ThemeReceived;\r\n};\r\nexport declare type Config = {\r\n    callToJSON: boolean;\r\n    colors: Colors;\r\n    escapeRegex: boolean;\r\n    escapeString: boolean;\r\n    indent: string;\r\n    maxDepth: number;\r\n    min: boolean;\r\n    plugins: Plugins;\r\n    printFunctionName: boolean;\r\n    spacingInner: string;\r\n    spacingOuter: string;\r\n};\r\nexport declare type Printer = (val: unknown, config: Config, indentation: string, depth: number, refs: Refs, hasCalledToJSON?: boolean) => string;\r\ndeclare type Test = (arg0: any) => boolean;\r\nexport declare type NewPlugin = {\r\n    serialize: (val: any, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer) => string;\r\n    test: Test;\r\n};\r\ndeclare type PluginOptions = {\r\n    edgeSpacing: string;\r\n    min: boolean;\r\n    spacing: string;\r\n};\r\nexport declare type OldPlugin = {\r\n    print: (val: unknown, print: Print, indent: Indent, options: PluginOptions, colors: Colors) => string;\r\n    test: Test;\r\n};\r\nexport declare type Plugin = NewPlugin | OldPlugin;\r\nexport declare type Plugins = Array<Plugin>;\r\nexport {};\r\n"]},"metadata":{},"sourceType":"module"}