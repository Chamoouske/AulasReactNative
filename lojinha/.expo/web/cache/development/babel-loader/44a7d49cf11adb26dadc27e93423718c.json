{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as HoverState from \"../HoverState\";\nimport Pressability from \"../Pressability\";\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport Platform from \"../../Utilities/Platform\";\nimport UIManager from \"../../ReactNative/UIManager\";\n\nfunction getMock(fn) {\n  if (!jest.isMockFunction(fn)) {\n    throw new Error('Function must be mock function');\n  }\n\n  return fn;\n}\n\nvar createMockPressability = function createMockPressability(overrides) {\n  var config = _objectSpread({\n    cancelable: null,\n    disabled: null,\n    hitSlop: null,\n    pressRectOffset: null,\n    delayHoverIn: null,\n    delayHoverOut: null,\n    delayLongPress: null,\n    delayPressIn: null,\n    delayPressOut: null,\n    onBlur: jest.fn(),\n    onFocus: jest.fn(),\n    onHoverIn: jest.fn(),\n    onHoverOut: jest.fn(),\n    onLongPress: jest.fn(),\n    onPress: jest.fn(),\n    onPressIn: jest.fn(),\n    onPressOut: jest.fn(),\n    onLongPressShouldCancelPress_DEPRECATED: jest.fn(),\n    onResponderTerminationRequest_DEPRECATED: jest.fn(function () {\n      return true;\n    }),\n    onStartShouldSetResponder_DEPRECATED: jest.fn(function () {\n      return true;\n    })\n  }, overrides);\n\n  var touchable = new Pressability(config);\n  var handlers = touchable.getEventHandlers();\n  return {\n    config: config,\n    handlers: handlers,\n    touchable: touchable\n  };\n};\n\nvar mockRegion = {\n  left: 0,\n  top: 0,\n  width: 50,\n  height: 50,\n  pageX: 0,\n  pageY: 0\n};\nvar mockSlop = {\n  top: 10,\n  left: 10,\n  bottom: 10,\n  right: 10\n};\n\nvar mockUIManagerMeasure = function mockUIManagerMeasure(options) {\n  getMock(UIManager.measure).mockImplementation(function (id, fn) {\n    if (options && options.delay) {\n      setTimeout(function () {\n        return fn(mockRegion.left, mockRegion.top, mockRegion.width, mockRegion.height, mockRegion.pageX, mockRegion.pageY);\n      }, options.delay);\n    } else {\n      fn(mockRegion.left, mockRegion.top, mockRegion.width, mockRegion.height, mockRegion.pageX, mockRegion.pageY);\n    }\n  });\n};\n\nvar createMockTargetEvent = function createMockTargetEvent(registrationName) {\n  var nativeEvent = {\n    target: 42\n  };\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName: registrationName\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(function () {\n      return undefined;\n    }),\n    isDefaultPrevented: jest.fn(function () {\n      return false;\n    }),\n    stopPropagation: jest.fn(function () {\n      return undefined;\n    }),\n    isPropagationStopped: jest.fn(function () {\n      return false;\n    }),\n    isTrusted: null,\n    nativeEvent: nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    type: null\n  };\n};\n\nvar createMockMouseEvent = function createMockMouseEvent(registrationName) {\n  var nativeEvent = {\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    timestamp: 1075881600000\n  };\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName: registrationName\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(function () {\n      return undefined;\n    }),\n    isDefaultPrevented: jest.fn(function () {\n      return false;\n    }),\n    stopPropagation: jest.fn(function () {\n      return undefined;\n    }),\n    isPropagationStopped: jest.fn(function () {\n      return false;\n    }),\n    isTrusted: null,\n    nativeEvent: nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    type: null\n  };\n};\n\nvar createMockPressEvent = function createMockPressEvent(nameOrOverrides) {\n  var registrationName = '';\n  var pageX = 0;\n  var pageY = 0;\n\n  if (typeof nameOrOverrides === 'string') {\n    registrationName = nameOrOverrides;\n  } else if (typeof nameOrOverrides === 'object' || nameOrOverrides != null) {\n    registrationName = nameOrOverrides.registrationName;\n    pageX = nameOrOverrides.pageX;\n    pageY = nameOrOverrides.pageY;\n  }\n\n  var nativeEvent = {\n    changedTouches: [],\n    force: 1,\n    identifier: 42,\n    locationX: pageX,\n    locationY: pageY,\n    pageX: pageX,\n    pageY: pageY,\n    target: 42,\n    timestamp: 1075881600000,\n    touches: []\n  };\n  nativeEvent.changedTouches.push(nativeEvent);\n  nativeEvent.touches.push(nativeEvent);\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName: registrationName\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(function () {\n      return undefined;\n    }),\n    isDefaultPrevented: jest.fn(function () {\n      return false;\n    }),\n    stopPropagation: jest.fn(function () {\n      return undefined;\n    }),\n    isPropagationStopped: jest.fn(function () {\n      return false;\n    }),\n    isTrusted: null,\n    nativeEvent: nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    touchHistory: {\n      indexOfSingleActiveTouch: 0,\n      mostRecentTimeStamp: 1075881600000,\n      numberActiveTouches: 1,\n      touchBank: []\n    },\n    type: null\n  };\n};\n\ndescribe('Pressability', function () {\n  beforeEach(function () {\n    jest.resetModules();\n    jest.spyOn(Date, 'now');\n    jest.spyOn(HoverState, 'isHoverEnabled');\n  });\n  describe('onBlur', function () {\n    it('is called if provided in config', function () {\n      var _createMockPressabili = createMockPressability(),\n          config = _createMockPressabili.config,\n          handlers = _createMockPressabili.handlers;\n\n      handlers.onBlur(createMockTargetEvent('onBlur'));\n      expect(config.onBlur).toBeCalled();\n    });\n  });\n  describe('onFocus', function () {\n    it('is called if provided in config', function () {\n      var _createMockPressabili2 = createMockPressability(),\n          config = _createMockPressabili2.config,\n          handlers = _createMockPressabili2.handlers;\n\n      handlers.onFocus(createMockTargetEvent('onFocus'));\n      expect(config.onFocus).toBeCalled();\n    });\n  });\n  describe('onHoverIn', function () {\n    var originalPlatform;\n    beforeEach(function () {\n      originalPlatform = Platform.OS;\n      Platform.OS = 'web';\n      HoverState.isHoverEnabled.mockReturnValue(true);\n    });\n    afterEach(function () {\n      Platform.OS = originalPlatform;\n    });\n    it('is ignored on unsupported platforms`', function () {\n      Platform.OS = 'ios';\n\n      var _createMockPressabili3 = createMockPressability(),\n          handlers = _createMockPressabili3.handlers;\n\n      expect(handlers.onMouseEnter).toBeUndefined();\n    });\n    it('is called after `onMouseEnter`', function () {\n      var _createMockPressabili4 = createMockPressability(),\n          config = _createMockPressabili4.config,\n          handlers = _createMockPressabili4.handlers;\n\n      invariant(typeof handlers.onMouseEnter === 'function', 'Expected to find \"onMouseEnter\" function');\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n    it('is called after no delay by default', function () {\n      var _createMockPressabili5 = createMockPressability({\n        delayHoverIn: null\n      }),\n          config = _createMockPressabili5.config,\n          handlers = _createMockPressabili5.handlers;\n\n      invariant(typeof handlers.onMouseEnter === 'function', 'Expected to find \"onMouseEnter\" function');\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n    it('falls back to no delay if `delayHoverIn` is omitted', function () {\n      var _createMockPressabili6 = createMockPressability({\n        delayHoverIn: null\n      }),\n          config = _createMockPressabili6.config,\n          handlers = _createMockPressabili6.handlers;\n\n      invariant(typeof handlers.onMouseEnter === 'function', 'Expected to find \"onMouseEnter\" function');\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n    it('is called after a configured delay', function () {\n      var _createMockPressabili7 = createMockPressability({\n        delayHoverIn: 500\n      }),\n          config = _createMockPressabili7.config,\n          handlers = _createMockPressabili7.handlers;\n\n      invariant(typeof handlers.onMouseEnter === 'function', 'Expected to find \"onMouseEnter\" function');\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      jest.advanceTimersByTime(499);\n      expect(config.onHoverIn).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onHoverIn).toBeCalled();\n    });\n    it('is called synchronously if delay is 0ms', function () {\n      var _createMockPressabili8 = createMockPressability({\n        delayHoverIn: 0\n      }),\n          config = _createMockPressabili8.config,\n          handlers = _createMockPressabili8.handlers;\n\n      invariant(typeof handlers.onMouseEnter === 'function', 'Expected to find \"onMouseEnter\" function');\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n  });\n  describe('onLongPress', function () {\n    it('is called if pressed for 500ms', function () {\n      var _createMockPressabili9 = createMockPressability(),\n          config = _createMockPressabili9.config,\n          handlers = _createMockPressabili9.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.advanceTimersByTime(499);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n    it('is called if pressed for 500ms after press started', function () {\n      var _createMockPressabili10 = createMockPressability({\n        delayPressIn: 100\n      }),\n          config = _createMockPressabili10.config,\n          handlers = _createMockPressabili10.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.advanceTimersByTime(499);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n    it('is not called if released before delay', function () {\n      var _createMockPressabili11 = createMockPressability(),\n          config = _createMockPressabili11.config,\n          handlers = _createMockPressabili11.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.advanceTimersByTime(499);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).not.toBeCalled();\n    });\n    it('falls back to a minimum of 10ms before calling `onLongPress`', function () {\n      var _createMockPressabili12 = createMockPressability({\n        delayLongPress: 0\n      }),\n          config = _createMockPressabili12.config,\n          handlers = _createMockPressabili12.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.advanceTimersByTime(9);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n    it('is called if touch moves within 10dp', function () {\n      mockUIManagerMeasure();\n\n      var _createMockPressabili13 = createMockPressability(),\n          config = _createMockPressabili13.config,\n          handlers = _createMockPressabili13.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 0,\n        pageY: 0\n      }));\n      jest.advanceTimersByTime(130);\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 7,\n        pageY: 7\n      }));\n      jest.advanceTimersByTime(370);\n      expect(config.onLongPress).toBeCalled();\n    });\n    it('is not called if touch moves beyond 10dp', function () {\n      mockUIManagerMeasure();\n\n      var _createMockPressabili14 = createMockPressability(),\n          config = _createMockPressabili14.config,\n          handlers = _createMockPressabili14.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 0,\n        pageY: 0\n      }));\n      jest.advanceTimersByTime(130);\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 7,\n        pageY: 8\n      }));\n      jest.advanceTimersByTime(370);\n      expect(config.onLongPress).not.toBeCalled();\n    });\n    it('is called independent of preceding long touch gesture', function () {\n      mockUIManagerMeasure();\n\n      var _createMockPressabili15 = createMockPressability(),\n          config = _createMockPressabili15.config,\n          handlers = _createMockPressabili15.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent({\n        registrationName: 'onResponderGrant',\n        pageX: 0,\n        pageY: 0\n      }));\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 0,\n        pageY: 0\n      }));\n      jest.advanceTimersByTime(500);\n      expect(config.onLongPress).toHaveBeenCalledTimes(1);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent({\n        registrationName: 'onResponderGrant',\n        pageX: 7,\n        pageY: 8\n      }));\n      handlers.onResponderMove(createMockPressEvent({\n        registrationName: 'onResponderMove',\n        pageX: 7,\n        pageY: 8\n      }));\n      jest.advanceTimersByTime(500);\n      expect(config.onLongPress).toHaveBeenCalledTimes(2);\n    });\n  });\n  describe('onPress', function () {\n    it('is called even when `measure` does not finish', function () {\n      var _createMockPressabili16 = createMockPressability(),\n          config = _createMockPressabili16.config,\n          handlers = _createMockPressabili16.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      expect(UIManager.measure).toBeCalled();\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      expect(config.onPress).toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n  });\n  describe('onPressIn', function () {\n    it('is called after `onResponderGrant`', function () {\n      var _createMockPressabili17 = createMockPressability(),\n          config = _createMockPressabili17.config,\n          handlers = _createMockPressabili17.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n    });\n    it('is called immediately by default', function () {\n      var _createMockPressabili18 = createMockPressability({\n        delayPressIn: null\n      }),\n          config = _createMockPressabili18.config,\n          handlers = _createMockPressabili18.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      expect(config.onPressIn).toBeCalled();\n    });\n    it('is called after a configured delay', function () {\n      var _createMockPressabili19 = createMockPressability({\n        delayPressIn: 500\n      }),\n          config = _createMockPressabili19.config,\n          handlers = _createMockPressabili19.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.advanceTimersByTime(499);\n      expect(config.onPressIn).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onPressIn).toBeCalled();\n    });\n    it('is called synchronously if delay is 0ms', function () {\n      var _createMockPressabili20 = createMockPressability({\n        delayPressIn: 0\n      }),\n          config = _createMockPressabili20.config,\n          handlers = _createMockPressabili20.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      expect(config.onPressIn).toBeCalled();\n    });\n  });\n  describe('onPressOut', function () {\n    it('is called after `onResponderRelease` before `delayPressIn`', function () {\n      var _createMockPressabili21 = createMockPressability({\n        delayPressIn: Number.EPSILON\n      }),\n          config = _createMockPressabili21.config,\n          handlers = _createMockPressabili21.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      expect(config.onPressIn).not.toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n    it('is called after `onResponderRelease` after `delayPressIn`', function () {\n      var _createMockPressabili22 = createMockPressability({\n        delayPressIn: Number.EPSILON\n      }),\n          config = _createMockPressabili22.config,\n          handlers = _createMockPressabili22.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n    it('is not called after `onResponderTerminate` before `delayPressIn`', function () {\n      var _createMockPressabili23 = createMockPressability({\n        delayPressIn: Number.EPSILON\n      }),\n          config = _createMockPressabili23.config,\n          handlers = _createMockPressabili23.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      handlers.onResponderTerminate(createMockPressEvent('onResponderTerminate'));\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).not.toBeCalled();\n    });\n    it('is not called after `onResponderTerminate` after `delayPressIn`', function () {\n      var _createMockPressabili24 = createMockPressability(),\n          config = _createMockPressabili24.config,\n          handlers = _createMockPressabili24.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderTerminate(createMockPressEvent('onResponderTerminate'));\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n    it('is called after the minimum press duration by default', function () {\n      var _createMockPressabili25 = createMockPressability(),\n          config = _createMockPressabili25.config,\n          handlers = _createMockPressabili25.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      jest.advanceTimersByTime(120);\n      expect(config.onPressOut).not.toBeCalled();\n      jest.advanceTimersByTime(10);\n      expect(config.onPressOut).toBeCalled();\n    });\n    it('is called after only after the remaining minimum press duration', function () {\n      var _createMockPressabili26 = createMockPressability(),\n          config = _createMockPressabili26.config,\n          handlers = _createMockPressabili26.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      var touchActivateTime = Date.now();\n      jest.advanceTimersByTime(120);\n      Date.now.mockReturnValue(touchActivateTime + 120);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      expect(config.onPressOut).not.toBeCalled();\n      jest.advanceTimersByTime(10);\n      expect(config.onPressOut).toBeCalled();\n    });\n    it('is called synchronously if minimum press duration is 0ms', function () {\n      var _createMockPressabili27 = createMockPressability({\n        minPressDuration: 0\n      }),\n          config = _createMockPressabili27.config,\n          handlers = _createMockPressabili27.handlers;\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      expect(config.onPressOut).toBeCalled();\n    });\n  });\n  describe('`onPress*` with movement', function () {\n    describe('within bounds of hit rect', function () {\n      it('`onPress*` are called when no delay', function () {\n        mockUIManagerMeasure();\n\n        var _createMockPressabili28 = createMockPressability({\n          hitSlop: mockSlop\n        }),\n            config = _createMockPressabili28.config,\n            handlers = _createMockPressabili28.handlers;\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n        expect(UIManager.measure).toBeCalled();\n        handlers.onResponderMove(createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: mockRegion.width + mockSlop.right / 2,\n          pageY: mockRegion.height + mockSlop.bottom / 2\n        }));\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPressIn).toBeCalled();\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n      it('`onPress*` are called after a delay', function () {\n        mockUIManagerMeasure();\n\n        var _createMockPressabili29 = createMockPressability({\n          hitSlop: mockSlop,\n          delayPressIn: 500\n        }),\n            config = _createMockPressabili29.config,\n            handlers = _createMockPressabili29.handlers;\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n        expect(UIManager.measure).toBeCalled();\n        handlers.onResponderMove(createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: mockRegion.width + mockSlop.right / 2,\n          pageY: mockRegion.height + mockSlop.bottom / 2\n        }));\n        jest.advanceTimersByTime(499);\n        expect(config.onPressIn).not.toBeCalled();\n        jest.advanceTimersByTime(1);\n        expect(config.onPressIn).toBeCalled();\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n    });\n    describe('beyond bounds of hit rect', function () {\n      it('`onPress` only is not called when no delay', function () {\n        mockUIManagerMeasure();\n\n        var _createMockPressabili30 = createMockPressability({\n          delayPressIn: 0\n        }),\n            config = _createMockPressabili30.config,\n            handlers = _createMockPressabili30.handlers;\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n        expect(UIManager.measure).toBeCalled();\n        handlers.onResponderMove(createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: mockRegion.width * 2,\n          pageY: mockRegion.height * 2\n        }));\n        jest.runOnlyPendingTimers();\n        expect(config.onPressIn).toBeCalled();\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPress).not.toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n      it('`onPress*` are not called after a delay', function () {\n        mockUIManagerMeasure();\n\n        var _createMockPressabili31 = createMockPressability({\n          delayPressIn: 500\n        }),\n            config = _createMockPressabili31.config,\n            handlers = _createMockPressabili31.handlers;\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n        expect(UIManager.measure).toBeCalled();\n        handlers.onResponderMove(createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: mockRegion.width * 2,\n          pageY: mockRegion.height * 2\n        }));\n        jest.runOnlyPendingTimers();\n        expect(config.onPressIn).not.toBeCalled();\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPress).not.toBeCalled();\n        expect(config.onPressOut).not.toBeCalled();\n      });\n      it('`onPress*` are called when press is released before measure completes', function () {\n        mockUIManagerMeasure({\n          delay: 1000\n        });\n\n        var _createMockPressabili32 = createMockPressability({\n          delayPressIn: 500\n        }),\n            config = _createMockPressabili32.config,\n            handlers = _createMockPressabili32.handlers;\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n        expect(UIManager.measure).toBeCalled();\n        handlers.onResponderMove(createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: mockRegion.width * 2,\n          pageY: mockRegion.height * 2\n        }));\n        jest.advanceTimersByTime(499);\n        expect(config.onPressIn).not.toBeCalled();\n        jest.advanceTimersByTime(1);\n        expect(config.onPressIn).toBeCalled();\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n    });\n  });\n  describe('onStartShouldSetResponder', function () {\n    it('if omitted the responder is set by default', function () {\n      var _createMockPressabili33 = createMockPressability({\n        onStartShouldSetResponder_DEPRECATED: null\n      }),\n          handlers = _createMockPressabili33.handlers;\n\n      expect(handlers.onStartShouldSetResponder()).toBe(true);\n    });\n    it('if supplied it is called', function () {\n      var _createMockPressabili34 = createMockPressability(),\n          config = _createMockPressabili34.config,\n          handlers = _createMockPressabili34.handlers;\n\n      var onStartShouldSetResponder_DEPRECATED = nullthrows(config.onStartShouldSetResponder_DEPRECATED);\n      onStartShouldSetResponder_DEPRECATED.mockReturnValue(false);\n      expect(handlers.onStartShouldSetResponder()).toBe(false);\n      onStartShouldSetResponder_DEPRECATED.mockReturnValue(true);\n      expect(handlers.onStartShouldSetResponder()).toBe(true);\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Pressability/__tests__/Pressability-test.js"],"names":["HoverState","Pressability","invariant","nullthrows","Platform","UIManager","getMock","fn","jest","isMockFunction","Error","createMockPressability","overrides","config","cancelable","disabled","hitSlop","pressRectOffset","delayHoverIn","delayHoverOut","delayLongPress","delayPressIn","delayPressOut","onBlur","onFocus","onHoverIn","onHoverOut","onLongPress","onPress","onPressIn","onPressOut","onLongPressShouldCancelPress_DEPRECATED","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","touchable","handlers","getEventHandlers","mockRegion","left","top","width","height","pageX","pageY","mockSlop","bottom","right","mockUIManagerMeasure","options","measure","mockImplementation","id","delay","setTimeout","createMockTargetEvent","registrationName","nativeEvent","target","bubbles","currentTarget","defaultPrevented","dispatchConfig","eventPhase","preventDefault","undefined","isDefaultPrevented","stopPropagation","isPropagationStopped","isTrusted","persist","timeStamp","type","createMockMouseEvent","clientX","clientY","timestamp","createMockPressEvent","nameOrOverrides","changedTouches","force","identifier","locationX","locationY","touches","push","touchHistory","indexOfSingleActiveTouch","mostRecentTimeStamp","numberActiveTouches","touchBank","describe","beforeEach","resetModules","spyOn","Date","it","expect","toBeCalled","originalPlatform","OS","isHoverEnabled","mockReturnValue","afterEach","onMouseEnter","toBeUndefined","advanceTimersByTime","not","onStartShouldSetResponder","onResponderGrant","onResponderMove","onResponderRelease","toHaveBeenCalledTimes","runOnlyPendingTimers","Number","EPSILON","onResponderTerminate","touchActivateTime","now","minPressDuration","toBe"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+react_native\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport * as HoverState from '../HoverState';\nimport Pressability from '../Pressability';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport Platform from '../../Utilities/Platform';\nimport UIManager from '../../ReactNative/UIManager';\n\n// TODO: Move this util to a shared location.\nfunction getMock<TArguments: $ReadOnlyArray<mixed>, TReturn>(\n  fn: (...args: TArguments) => TReturn,\n): JestMockFn<TArguments, TReturn> {\n  if (!jest.isMockFunction(fn)) {\n    throw new Error('Function must be mock function');\n  }\n  return (fn: $FlowFixMe);\n}\n\nconst createMockPressability = overrides => {\n  const config = {\n    cancelable: null,\n    disabled: null,\n    hitSlop: null,\n    pressRectOffset: null,\n    delayHoverIn: null,\n    delayHoverOut: null,\n    delayLongPress: null,\n    delayPressIn: null,\n    delayPressOut: null,\n    onBlur: jest.fn(),\n    onFocus: jest.fn(),\n    onHoverIn: jest.fn(),\n    onHoverOut: jest.fn(),\n    onLongPress: jest.fn(),\n    onPress: jest.fn(),\n    onPressIn: jest.fn(),\n    onPressOut: jest.fn(),\n    onLongPressShouldCancelPress_DEPRECATED: jest.fn(),\n    onResponderTerminationRequest_DEPRECATED: jest.fn(() => true),\n    onStartShouldSetResponder_DEPRECATED: jest.fn(() => true),\n    ...overrides,\n  };\n  const touchable = new Pressability(config);\n  const handlers = touchable.getEventHandlers();\n  return {\n    config,\n    handlers,\n    touchable,\n  };\n};\n\nconst mockRegion = {\n  left: 0,\n  top: 0,\n  width: 50,\n  height: 50,\n  pageX: 0,\n  pageY: 0,\n};\n\nconst mockSlop = {\n  top: 10,\n  left: 10,\n  bottom: 10,\n  right: 10,\n};\n\nconst mockUIManagerMeasure = (options?: {|delay: number|}) => {\n  getMock(UIManager.measure).mockImplementation((id, fn) => {\n    if (options && options.delay) {\n      setTimeout(\n        () =>\n          fn(\n            mockRegion.left,\n            mockRegion.top,\n            mockRegion.width,\n            mockRegion.height,\n            mockRegion.pageX,\n            mockRegion.pageY,\n          ),\n        options.delay,\n      );\n    } else {\n      fn(\n        mockRegion.left,\n        mockRegion.top,\n        mockRegion.width,\n        mockRegion.height,\n        mockRegion.pageX,\n        mockRegion.pageY,\n      );\n    }\n  });\n};\n\nconst createMockTargetEvent = registrationName => {\n  const nativeEvent = {\n    target: 42,\n  };\n\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName,\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(() => undefined),\n    isDefaultPrevented: jest.fn(() => false),\n    stopPropagation: jest.fn(() => undefined),\n    isPropagationStopped: jest.fn(() => false),\n    isTrusted: null,\n    nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    type: null,\n  };\n};\n\nconst createMockMouseEvent = registrationName => {\n  const nativeEvent = {\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    timestamp: 1075881600000,\n  };\n\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName,\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(() => undefined),\n    isDefaultPrevented: jest.fn(() => false),\n    stopPropagation: jest.fn(() => undefined),\n    isPropagationStopped: jest.fn(() => false),\n    isTrusted: null,\n    nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    type: null,\n  };\n};\n\nconst createMockPressEvent = (\n  nameOrOverrides:\n    | string\n    | $ReadOnly<{|\n        registrationName: string,\n        pageX: number,\n        pageY: number,\n      |}>,\n): PressEvent => {\n  let registrationName = '';\n  let pageX = 0;\n  let pageY = 0;\n\n  if (typeof nameOrOverrides === 'string') {\n    registrationName = nameOrOverrides;\n  } else if (typeof nameOrOverrides === 'object' || nameOrOverrides != null) {\n    registrationName = nameOrOverrides.registrationName;\n    pageX = nameOrOverrides.pageX;\n    pageY = nameOrOverrides.pageY;\n  }\n\n  const nativeEvent = {\n    changedTouches: [],\n    force: 1,\n    identifier: 42,\n    locationX: pageX,\n    locationY: pageY,\n    pageX,\n    pageY,\n    target: 42,\n    timestamp: 1075881600000,\n    touches: [],\n  };\n\n  nativeEvent.changedTouches.push(nativeEvent);\n  nativeEvent.touches.push(nativeEvent);\n\n  return {\n    bubbles: null,\n    cancelable: null,\n    currentTarget: 42,\n    defaultPrevented: null,\n    dispatchConfig: {\n      registrationName,\n    },\n    eventPhase: null,\n    preventDefault: jest.fn(() => undefined),\n    isDefaultPrevented: jest.fn(() => false),\n    stopPropagation: jest.fn(() => undefined),\n    isPropagationStopped: jest.fn(() => false),\n    isTrusted: null,\n    nativeEvent,\n    persist: jest.fn(),\n    target: null,\n    timeStamp: 1075881600000,\n    touchHistory: {\n      indexOfSingleActiveTouch: 0,\n      mostRecentTimeStamp: 1075881600000,\n      numberActiveTouches: 1,\n      touchBank: [],\n    },\n    type: null,\n  };\n};\n\ndescribe('Pressability', () => {\n  beforeEach(() => {\n    jest.resetModules();\n    jest.spyOn(Date, 'now');\n    jest.spyOn(HoverState, 'isHoverEnabled');\n  });\n\n  describe('onBlur', () => {\n    it('is called if provided in config', () => {\n      const {config, handlers} = createMockPressability();\n      handlers.onBlur(createMockTargetEvent('onBlur'));\n      expect(config.onBlur).toBeCalled();\n    });\n  });\n\n  describe('onFocus', () => {\n    it('is called if provided in config', () => {\n      const {config, handlers} = createMockPressability();\n      handlers.onFocus(createMockTargetEvent('onFocus'));\n      expect(config.onFocus).toBeCalled();\n    });\n  });\n\n  describe('onHoverIn', () => {\n    let originalPlatform;\n\n    beforeEach(() => {\n      originalPlatform = Platform.OS;\n      Platform.OS = 'web';\n      // $FlowExpectedError\n      HoverState.isHoverEnabled.mockReturnValue(true);\n    });\n\n    afterEach(() => {\n      Platform.OS = originalPlatform;\n    });\n\n    it('is ignored on unsupported platforms`', () => {\n      Platform.OS = 'ios';\n      const {handlers} = createMockPressability();\n      expect(handlers.onMouseEnter).toBeUndefined();\n    });\n\n    it('is called after `onMouseEnter`', () => {\n      const {config, handlers} = createMockPressability();\n      invariant(\n        typeof handlers.onMouseEnter === 'function',\n        'Expected to find \"onMouseEnter\" function',\n      );\n      // $FlowExpectedError\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n\n    it('is called after no delay by default', () => {\n      const {config, handlers} = createMockPressability({\n        delayHoverIn: null,\n      });\n      invariant(\n        typeof handlers.onMouseEnter === 'function',\n        'Expected to find \"onMouseEnter\" function',\n      );\n      // $FlowExpectedError\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n\n    it('falls back to no delay if `delayHoverIn` is omitted', () => {\n      const {config, handlers} = createMockPressability({\n        delayHoverIn: null,\n      });\n      invariant(\n        typeof handlers.onMouseEnter === 'function',\n        'Expected to find \"onMouseEnter\" function',\n      );\n      // $FlowExpectedError\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n\n    it('is called after a configured delay', () => {\n      const {config, handlers} = createMockPressability({\n        delayHoverIn: 500,\n      });\n      invariant(\n        typeof handlers.onMouseEnter === 'function',\n        'Expected to find \"onMouseEnter\" function',\n      );\n      // $FlowExpectedError\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      jest.advanceTimersByTime(499);\n      expect(config.onHoverIn).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onHoverIn).toBeCalled();\n    });\n\n    it('is called synchronously if delay is 0ms', () => {\n      const {config, handlers} = createMockPressability({\n        delayHoverIn: 0,\n      });\n      invariant(\n        typeof handlers.onMouseEnter === 'function',\n        'Expected to find \"onMouseEnter\" function',\n      );\n      // $FlowExpectedError\n      handlers.onMouseEnter(createMockMouseEvent('onMouseEnter'));\n      expect(config.onHoverIn).toBeCalled();\n    });\n  });\n\n  // TODO: onHoverOut tests\n\n  describe('onLongPress', () => {\n    it('is called if pressed for 500ms', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      jest.advanceTimersByTime(499);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n\n    it('is called if pressed for 500ms after press started', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: 100,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      jest.advanceTimersByTime(499);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n\n    it('is not called if released before delay', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      jest.advanceTimersByTime(499);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n      jest.advanceTimersByTime(1);\n\n      expect(config.onLongPress).not.toBeCalled();\n    });\n\n    it('falls back to a minimum of 10ms before calling `onLongPress`', () => {\n      const {config, handlers} = createMockPressability({\n        delayLongPress: 0,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      jest.advanceTimersByTime(9);\n      expect(config.onLongPress).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onLongPress).toBeCalled();\n    });\n\n    it('is called if touch moves within 10dp', () => {\n      mockUIManagerMeasure();\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: 0,\n          pageY: 0,\n        }),\n      );\n\n      jest.advanceTimersByTime(130);\n      handlers.onResponderMove(\n        // NOTE: Delta from (0, 0) is ~9.9 < 10.\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: 7,\n          pageY: 7,\n        }),\n      );\n\n      jest.advanceTimersByTime(370);\n      expect(config.onLongPress).toBeCalled();\n    });\n\n    it('is not called if touch moves beyond 10dp', () => {\n      mockUIManagerMeasure();\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: 0,\n          pageY: 0,\n        }),\n      );\n\n      jest.advanceTimersByTime(130);\n      handlers.onResponderMove(\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          // NOTE: Delta from (0, 0) is ~10.6 > 10.\n          pageX: 7,\n          pageY: 8,\n        }),\n      );\n\n      jest.advanceTimersByTime(370);\n      expect(config.onLongPress).not.toBeCalled();\n    });\n\n    it('is called independent of preceding long touch gesture', () => {\n      mockUIManagerMeasure();\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(\n        createMockPressEvent({\n          registrationName: 'onResponderGrant',\n          pageX: 0,\n          pageY: 0,\n        }),\n      );\n      handlers.onResponderMove(\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: 0,\n          pageY: 0,\n        }),\n      );\n\n      jest.advanceTimersByTime(500);\n      expect(config.onLongPress).toHaveBeenCalledTimes(1);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      // Subsequent long touch gesture should not carry over previous state.\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(\n        createMockPressEvent({\n          registrationName: 'onResponderGrant',\n          pageX: 7,\n          pageY: 8,\n        }),\n      );\n      handlers.onResponderMove(\n        // NOTE: Delta from (0, 0) is ~10.6 > 10, but should not matter.\n        createMockPressEvent({\n          registrationName: 'onResponderMove',\n          pageX: 7,\n          pageY: 8,\n        }),\n      );\n\n      jest.advanceTimersByTime(500);\n      expect(config.onLongPress).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('onPress', () => {\n    it('is called even when `measure` does not finish', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n      expect(UIManager.measure).toBeCalled();\n\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      expect(config.onPress).toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n  });\n\n  describe('onPressIn', () => {\n    it('is called after `onResponderGrant`', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n    });\n\n    it('is called immediately by default', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: null,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      expect(config.onPressIn).toBeCalled();\n    });\n\n    it('is called after a configured delay', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: 500,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      jest.advanceTimersByTime(499);\n      expect(config.onPressIn).not.toBeCalled();\n      jest.advanceTimersByTime(1);\n      expect(config.onPressIn).toBeCalled();\n    });\n\n    it('is called synchronously if delay is 0ms', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: 0,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n\n      expect(config.onPressIn).toBeCalled();\n    });\n  });\n\n  describe('onPressOut', () => {\n    it('is called after `onResponderRelease` before `delayPressIn`', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: Number.EPSILON,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      expect(config.onPressIn).not.toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n\n    it('is called after `onResponderRelease` after `delayPressIn`', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: Number.EPSILON,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n\n    it('is not called after `onResponderTerminate` before `delayPressIn`', () => {\n      const {config, handlers} = createMockPressability({\n        delayPressIn: Number.EPSILON,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      handlers.onResponderTerminate(\n        createMockPressEvent('onResponderTerminate'),\n      );\n\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).not.toBeCalled();\n    });\n\n    it('is not called after `onResponderTerminate` after `delayPressIn`', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderTerminate(\n        createMockPressEvent('onResponderTerminate'),\n      );\n\n      expect(config.onPressOut).not.toBeCalled();\n      jest.runOnlyPendingTimers();\n      expect(config.onPressOut).toBeCalled();\n    });\n\n    it('is called after the minimum press duration by default', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      jest.advanceTimersByTime(120);\n      expect(config.onPressOut).not.toBeCalled();\n      jest.advanceTimersByTime(10);\n      expect(config.onPressOut).toBeCalled();\n    });\n\n    it('is called after only after the remaining minimum press duration', () => {\n      const {config, handlers} = createMockPressability();\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      // WORKAROUND: Jest does not advance `Date.now()`.\n      const touchActivateTime = Date.now();\n      jest.advanceTimersByTime(120);\n      Date.now.mockReturnValue(touchActivateTime + 120);\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      expect(config.onPressOut).not.toBeCalled();\n      jest.advanceTimersByTime(10);\n      expect(config.onPressOut).toBeCalled();\n    });\n\n    it('is called synchronously if minimum press duration is 0ms', () => {\n      const {config, handlers} = createMockPressability({\n        minPressDuration: 0,\n      });\n\n      handlers.onStartShouldSetResponder();\n      handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n      handlers.onResponderMove(createMockPressEvent('onResponderMove'));\n      jest.runOnlyPendingTimers();\n      expect(config.onPressIn).toBeCalled();\n      handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n      expect(config.onPressOut).toBeCalled();\n    });\n  });\n\n  describe('`onPress*` with movement', () => {\n    describe('within bounds of hit rect', () => {\n      it('`onPress*` are called when no delay', () => {\n        mockUIManagerMeasure();\n        const {config, handlers} = createMockPressability({\n          hitSlop: mockSlop,\n        });\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n        expect(UIManager.measure).toBeCalled();\n\n        /** ┌──────────────────┐\n         *  │  ┌────────────┐  │\n         *  │  │ VisualRect │  │\n         *  │  └────────────┘  │\n         *  │     HitRect    X │ <= Move to X and release\n         *  └──────────────────┘\n         */\n        handlers.onResponderMove(\n          createMockPressEvent({\n            registrationName: 'onResponderMove',\n            pageX: mockRegion.width + mockSlop.right / 2,\n            pageY: mockRegion.height + mockSlop.bottom / 2,\n          }),\n        );\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n        expect(config.onPressIn).toBeCalled();\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n\n      it('`onPress*` are called after a delay', () => {\n        mockUIManagerMeasure();\n        const {config, handlers} = createMockPressability({\n          hitSlop: mockSlop,\n          delayPressIn: 500,\n        });\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n        expect(UIManager.measure).toBeCalled();\n\n        /** ┌──────────────────┐\n         *  │  ┌────────────┐  │\n         *  │  │ VisualRect │  │\n         *  │  └────────────┘  │\n         *  │     HitRect    X │ <= Move to X and release\n         *  └──────────────────┘\n         */\n        handlers.onResponderMove(\n          createMockPressEvent({\n            registrationName: 'onResponderMove',\n            pageX: mockRegion.width + mockSlop.right / 2,\n            pageY: mockRegion.height + mockSlop.bottom / 2,\n          }),\n        );\n        jest.advanceTimersByTime(499);\n        expect(config.onPressIn).not.toBeCalled();\n\n        jest.advanceTimersByTime(1);\n        expect(config.onPressIn).toBeCalled();\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n    });\n\n    describe('beyond bounds of hit rect', () => {\n      it('`onPress` only is not called when no delay', () => {\n        mockUIManagerMeasure();\n        const {config, handlers} = createMockPressability({\n          delayPressIn: 0,\n        });\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n        expect(UIManager.measure).toBeCalled();\n\n        handlers.onResponderMove(\n          createMockPressEvent({\n            registrationName: 'onResponderMove',\n            pageX: mockRegion.width * 2,\n            pageY: mockRegion.height * 2,\n          }),\n        );\n        jest.runOnlyPendingTimers();\n        expect(config.onPressIn).toBeCalled();\n\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n        expect(config.onPress).not.toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n\n      it('`onPress*` are not called after a delay', () => {\n        mockUIManagerMeasure();\n        const {config, handlers} = createMockPressability({\n          delayPressIn: 500,\n        });\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n        expect(UIManager.measure).toBeCalled();\n\n        handlers.onResponderMove(\n          createMockPressEvent({\n            registrationName: 'onResponderMove',\n            pageX: mockRegion.width * 2,\n            pageY: mockRegion.height * 2,\n          }),\n        );\n        jest.runOnlyPendingTimers();\n        expect(config.onPressIn).not.toBeCalled();\n\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n        expect(config.onPress).not.toBeCalled();\n        expect(config.onPressOut).not.toBeCalled();\n      });\n\n      it('`onPress*` are called when press is released before measure completes', () => {\n        mockUIManagerMeasure({delay: 1000});\n        const {config, handlers} = createMockPressability({\n          delayPressIn: 500,\n        });\n\n        handlers.onStartShouldSetResponder();\n        handlers.onResponderGrant(createMockPressEvent('onResponderGrant'));\n\n        expect(UIManager.measure).toBeCalled();\n\n        handlers.onResponderMove(\n          createMockPressEvent({\n            registrationName: 'onResponderMove',\n            pageX: mockRegion.width * 2,\n            pageY: mockRegion.height * 2,\n          }),\n        );\n        jest.advanceTimersByTime(499);\n        expect(config.onPressIn).not.toBeCalled();\n\n        jest.advanceTimersByTime(1);\n        expect(config.onPressIn).toBeCalled();\n\n        handlers.onResponderRelease(createMockPressEvent('onResponderRelease'));\n\n        expect(config.onPress).toBeCalled();\n        jest.runOnlyPendingTimers();\n        expect(config.onPressOut).toBeCalled();\n      });\n    });\n  });\n\n  describe('onStartShouldSetResponder', () => {\n    it('if omitted the responder is set by default', () => {\n      const {handlers} = createMockPressability({\n        onStartShouldSetResponder_DEPRECATED: null,\n      });\n\n      expect(handlers.onStartShouldSetResponder()).toBe(true);\n    });\n\n    it('if supplied it is called', () => {\n      const {config, handlers} = createMockPressability();\n      const onStartShouldSetResponder_DEPRECATED = nullthrows(\n        config.onStartShouldSetResponder_DEPRECATED,\n      );\n\n      onStartShouldSetResponder_DEPRECATED.mockReturnValue(false);\n      expect(handlers.onStartShouldSetResponder()).toBe(false);\n\n      onStartShouldSetResponder_DEPRECATED.mockReturnValue(true);\n      expect(handlers.onStartShouldSetResponder()).toBe(true);\n    });\n  });\n});\n"]},"metadata":{},"sourceType":"module"}