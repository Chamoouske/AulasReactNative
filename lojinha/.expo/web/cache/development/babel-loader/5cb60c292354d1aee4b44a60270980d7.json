{"ast":null,"code":"'use strict';\n\nexport var PlatformColor = function PlatformColor() {\n  for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n    names[_key] = arguments[_key];\n  }\n\n  return {\n    semantic: names\n  };\n};\nexport var DynamicColorIOSPrivate = function DynamicColorIOSPrivate(tuple) {\n  return {\n    dynamic: {\n      light: tuple.light,\n      dark: tuple.dark\n    }\n  };\n};\nexport var normalizeColorObject = function normalizeColorObject(color) {\n  if ('semantic' in color) {\n    return color;\n  } else if ('dynamic' in color && color.dynamic !== undefined) {\n    var normalizeColor = require(\"./normalizeColor\");\n\n    var dynamic = color.dynamic;\n    var dynamicColor = {\n      dynamic: {\n        light: normalizeColor(dynamic.light),\n        dark: normalizeColor(dynamic.dark)\n      }\n    };\n    return dynamicColor;\n  }\n\n  return null;\n};\nexport var processColorObject = function processColorObject(color) {\n  if ('dynamic' in color && color.dynamic != null) {\n    var processColor = require(\"./processColor\");\n\n    var dynamic = color.dynamic;\n    var dynamicColor = {\n      dynamic: {\n        light: processColor(dynamic.light),\n        dark: processColor(dynamic.dark)\n      }\n    };\n    return dynamicColor;\n  }\n\n  return color;\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js"],"names":["PlatformColor","names","semantic","DynamicColorIOSPrivate","tuple","dynamic","light","dark","normalizeColorObject","color","undefined","normalizeColor","require","dynamicColor","processColorObject","processColor"],"mappings":"AAUA;;AAaA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAyC;AAAA,oCAArCC,KAAqC;AAArCA,IAAAA,KAAqC;AAAA;;AACpE,SAAO;AAACC,IAAAA,QAAQ,EAAED;AAAX,GAAP;AACD,CAFM;AASP,OAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCC,KADoC,EAErB;AACf,SAAO;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAd;AAAqBC,MAAAA,IAAI,EAAEH,KAAK,CAACG;AAAjC;AAAV,GAAP;AACD,CAJM;AAMP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,KADkC,EAET;AACzB,MAAI,cAAcA,KAAlB,EAAyB;AAEvB,WAAOA,KAAP;AACD,GAHD,MAGO,IAAI,aAAaA,KAAb,IAAsBA,KAAK,CAACJ,OAAN,KAAkBK,SAA5C,EAAuD;AAC5D,QAAMC,cAAc,GAAGC,OAAO,oBAA9B;;AAGA,QAAMP,OAAO,GAAGI,KAAK,CAACJ,OAAtB;AACA,QAAMQ,YAA8B,GAAG;AACrCR,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEK,cAAc,CAACN,OAAO,CAACC,KAAT,CADd;AAEPC,QAAAA,IAAI,EAAEI,cAAc,CAACN,OAAO,CAACE,IAAT;AAFb;AAD4B,KAAvC;AAMA,WAAOM,YAAP;AACD;;AAED,SAAO,IAAP;AACD,CArBM;AAuBP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCL,KADgC,EAEV;AACtB,MAAI,aAAaA,KAAb,IAAsBA,KAAK,CAACJ,OAAN,IAAiB,IAA3C,EAAiD;AAC/C,QAAMU,YAAY,GAAGH,OAAO,kBAA5B;;AACA,QAAMP,OAAO,GAAGI,KAAK,CAACJ,OAAtB;AACA,QAAMQ,YAA8B,GAAG;AACrCR,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAES,YAAY,CAACV,OAAO,CAACC,KAAT,CADZ;AAEPC,QAAAA,IAAI,EAAEQ,YAAY,CAACV,OAAO,CAACE,IAAT;AAFX;AAD4B,KAAvC;AAMA,WAAOM,YAAP;AACD;;AACD,SAAOJ,KAAP;AACD,CAfM","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorValue} from './StyleSheetTypes';\nimport type {ProcessedColorValue} from './processColor';\n\nexport opaque type NativeColorValue = {\n  semantic?: Array<string>,\n  dynamic?: {\n    light: ?(ColorValue | ProcessedColorValue),\n    dark: ?(ColorValue | ProcessedColorValue),\n  },\n};\n\nexport const PlatformColor = (...names: Array<string>): ColorValue => {\n  return {semantic: names};\n};\n\nexport type DynamicColorIOSTuplePrivate = {\n  light: ColorValue,\n  dark: ColorValue,\n};\n\nexport const DynamicColorIOSPrivate = (\n  tuple: DynamicColorIOSTuplePrivate,\n): ColorValue => {\n  return {dynamic: {light: tuple.light, dark: tuple.dark}};\n};\n\nexport const normalizeColorObject = (\n  color: NativeColorValue,\n): ?ProcessedColorValue => {\n  if ('semantic' in color) {\n    // an ios semantic color\n    return color;\n  } else if ('dynamic' in color && color.dynamic !== undefined) {\n    const normalizeColor = require('./normalizeColor');\n\n    // a dynamic, appearance aware color\n    const dynamic = color.dynamic;\n    const dynamicColor: NativeColorValue = {\n      dynamic: {\n        light: normalizeColor(dynamic.light),\n        dark: normalizeColor(dynamic.dark),\n      },\n    };\n    return dynamicColor;\n  }\n\n  return null;\n};\n\nexport const processColorObject = (\n  color: NativeColorValue,\n): ?NativeColorValue => {\n  if ('dynamic' in color && color.dynamic != null) {\n    const processColor = require('./processColor');\n    const dynamic = color.dynamic;\n    const dynamicColor: NativeColorValue = {\n      dynamic: {\n        light: processColor(dynamic.light),\n        dark: processColor(dynamic.dark),\n      },\n    };\n    return dynamicColor;\n  }\n  return color;\n};\n"]},"metadata":{},"sourceType":"module"}