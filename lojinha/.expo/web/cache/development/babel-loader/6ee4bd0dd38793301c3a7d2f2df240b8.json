{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _require = require(\"./CppHelpers.js\"),\n    generateEventStructName = _require.generateEventStructName;\n\nvar template = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n#include <react/components/::_LIBRARY_::/EventEmitters.h>\\n\\nnamespace facebook {\\nnamespace react {\\n\\n::_EVENTS_::\\n\\n} // namespace react\\n} // namespace facebook\\n\";\nvar componentTemplate = \"\\nvoid ::_CLASSNAME_::EventEmitter::::_EVENT_NAME_::(::_STRUCT_NAME_:: event) const {\\n  dispatchEvent(\\\"::_DISPATCH_EVENT_NAME_::\\\", [event=std::move(event)](jsi::Runtime &runtime) {\\n    ::_IMPLEMENTATION_::\\n  });\\n}\\n\".trim();\nvar basicComponentTemplate = \"\\nvoid ::_CLASSNAME_::EventEmitter::::_EVENT_NAME_::() const {\\n  dispatchEvent(\\\"::_DISPATCH_EVENT_NAME_::\\\");\\n}\\n\".trim();\n\nfunction generateSetter(variableName, propertyName, propertyParts) {\n  var trailingPeriod = propertyParts.length === 0 ? '' : '.';\n  var eventChain = \"event.\" + propertyParts.join('.') + trailingPeriod + propertyName + \");\";\n  return variableName + \".setProperty(runtime, \\\"\" + propertyName + \"\\\", \" + eventChain;\n}\n\nfunction generateEnumSetter(variableName, propertyName, propertyParts) {\n  var trailingPeriod = propertyParts.length === 0 ? '' : '.';\n  var eventChain = \"event.\" + propertyParts.join('.') + trailingPeriod + propertyName + \")\";\n  return variableName + \".setProperty(runtime, \\\"\" + propertyName + \"\\\", toString(\" + eventChain + \");\";\n}\n\nfunction generateSetters(parentPropertyName, properties, propertyParts) {\n  var propSetters = properties.map(function (eventProperty) {\n    switch (eventProperty.type) {\n      case 'BooleanTypeAnnotation':\n      case 'StringTypeAnnotation':\n      case 'Int32TypeAnnotation':\n      case 'DoubleTypeAnnotation':\n      case 'FloatTypeAnnotation':\n        return generateSetter(parentPropertyName, eventProperty.name, propertyParts);\n\n      case 'StringEnumTypeAnnotation':\n        return generateEnumSetter(parentPropertyName, eventProperty.name, propertyParts);\n\n      case 'ObjectTypeAnnotation':\n        var propertyName = eventProperty.name;\n        return (\"\\n            {\\n              auto \" + propertyName + \" = jsi::Object(runtime);\\n              \" + generateSetters(propertyName, eventProperty.properties, propertyParts.concat([propertyName])) + \"\\n\\n              \" + parentPropertyName + \".setProperty(runtime, \\\"\" + propertyName + \"\\\", \" + propertyName + \");\\n            }\\n          \").trim();\n\n      default:\n        eventProperty;\n        throw new Error('Received invalid event property type');\n    }\n  }).join('\\n');\n  return propSetters;\n}\n\nfunction generateEvent(componentName, event) {\n  var dispatchEventName = \"\" + event.name[2].toLowerCase() + event.name.slice(3);\n\n  if (event.typeAnnotation.argument) {\n    var implementation = (\"\\n    auto payload = jsi::Object(runtime);\\n    \" + generateSetters('payload', event.typeAnnotation.argument.properties, []) + \"\\n    return payload;\\n  \").trim();\n\n    if (!event.name.startsWith('on')) {\n      throw new Error('Expected the event name to start with `on`');\n    }\n\n    return componentTemplate.replace(/::_CLASSNAME_::/g, componentName).replace(/::_EVENT_NAME_::/g, event.name).replace(/::_DISPATCH_EVENT_NAME_::/g, dispatchEventName).replace('::_STRUCT_NAME_::', generateEventStructName([event.name])).replace('::_IMPLEMENTATION_::', implementation);\n  }\n\n  return basicComponentTemplate.replace(/::_CLASSNAME_::/g, componentName).replace(/::_EVENT_NAME_::/g, event.name).replace(/::_DISPATCH_EVENT_NAME_::/g, dispatchEventName);\n}\n\nmodule.exports = {\n  generate: function generate(libraryName, schema, moduleSpecName) {\n    var moduleComponents = Object.keys(schema.modules).map(function (moduleName) {\n      var components = schema.modules[moduleName].components;\n\n      if (components == null) {\n        return null;\n      }\n\n      return components;\n    }).filter(Boolean).reduce(function (acc, components) {\n      return _extends(acc, components);\n    }, {});\n    var fileName = 'EventEmitters.cpp';\n    var componentEmitters = Object.keys(moduleComponents).map(function (componentName) {\n      var component = moduleComponents[componentName];\n      return component.events.map(function (event) {\n        return generateEvent(componentName, event);\n      }).join('\\n');\n    }).join('\\n');\n    var replacedTemplate = template.replace(/::_COMPONENT_EMITTERS_::/g, componentEmitters).replace('::_LIBRARY_::', libraryName).replace('::_EVENTS_::', componentEmitters);\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/components/GenerateEventEmitterCpp.js"],"names":["require","generateEventStructName","template","componentTemplate","trim","basicComponentTemplate","generateSetter","variableName","propertyName","propertyParts","trailingPeriod","length","eventChain","join","generateEnumSetter","generateSetters","parentPropertyName","properties","propSetters","map","eventProperty","type","name","concat","Error","generateEvent","componentName","event","dispatchEventName","toLowerCase","slice","typeAnnotation","argument","implementation","startsWith","replace","module","exports","generate","libraryName","schema","moduleSpecName","moduleComponents","Object","keys","modules","moduleName","components","filter","Boolean","reduce","acc","fileName","componentEmitters","component","events","replacedTemplate","Map"],"mappings":"AAUA;;;;eAEkCA,OAAO,mB;IAAlCC,uB,YAAAA,uB;;AAgBP,IAAMC,QAAQ,mXAAd;AAmBA,IAAMC,iBAAiB,GAAG,gOAMxBC,IANwB,EAA1B;AAQA,IAAMC,sBAAsB,GAAG,uHAI7BD,IAJ6B,EAA/B;;AAMA,SAASE,cAAT,CAAwBC,YAAxB,EAAsCC,YAAtC,EAAoDC,aAApD,EAAmE;AACjE,MAAMC,cAAc,GAAGD,aAAa,CAACE,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAkC,GAAzD;AACA,MAAMC,UAAU,cAAYH,aAAa,CAACI,IAAd,CAC1B,GAD0B,CAAZ,GAEZH,cAFY,GAEKF,YAFL,OAAhB;AAIA,SAAUD,YAAV,gCAAgDC,YAAhD,YAAkEI,UAAlE;AACD;;AAED,SAASE,kBAAT,CAA4BP,YAA5B,EAA0CC,YAA1C,EAAwDC,aAAxD,EAAuE;AACrE,MAAMC,cAAc,GAAGD,aAAa,CAACE,MAAd,KAAyB,CAAzB,GAA6B,EAA7B,GAAkC,GAAzD;AACA,MAAMC,UAAU,cAAYH,aAAa,CAACI,IAAd,CAC1B,GAD0B,CAAZ,GAEZH,cAFY,GAEKF,YAFL,MAAhB;AAIA,SAAUD,YAAV,gCAAgDC,YAAhD,qBAA2EI,UAA3E;AACD;;AAED,SAASG,eAAT,CACEC,kBADF,EAEEC,UAFF,EAGER,aAHF,EAIU;AACR,MAAMS,WAAW,GAAGD,UAAU,CAC3BE,GADiB,CACb,UAAAC,aAAa,EAAI;AACpB,YAAQA,aAAa,CAACC,IAAtB;AACE,WAAK,uBAAL;AACA,WAAK,sBAAL;AACA,WAAK,qBAAL;AACA,WAAK,sBAAL;AACA,WAAK,qBAAL;AACE,eAAOf,cAAc,CACnBU,kBADmB,EAEnBI,aAAa,CAACE,IAFK,EAGnBb,aAHmB,CAArB;;AAKF,WAAK,0BAAL;AACE,eAAOK,kBAAkB,CACvBE,kBADuB,EAEvBI,aAAa,CAACE,IAFS,EAGvBb,aAHuB,CAAzB;;AAKF,WAAK,sBAAL;AACE,YAAMD,YAAY,GAAGY,aAAa,CAACE,IAAnC;AACA,eAAO,0CAEId,YAFJ,gDAGDO,eAAe,CACfP,YADe,EAEfY,aAAa,CAACH,UAFC,EAGfR,aAAa,CAACc,MAAd,CAAqB,CAACf,YAAD,CAArB,CAHe,CAHd,0BASDQ,kBATC,gCAS2CR,YAT3C,YAS6DA,YAT7D,oCAWLJ,IAXK,EAAP;;AAYF;AACGgB,QAAAA,aAAD;AACA,cAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;AAjCJ;AAmCD,GArCiB,EAsCjBX,IAtCiB,CAsCZ,IAtCY,CAApB;AAwCA,SAAOK,WAAP;AACD;;AAED,SAASO,aAAT,CAAuBC,aAAvB,EAA8CC,KAA9C,EAA6D;AAO3D,MAAMC,iBAAiB,QAAMD,KAAK,CAACL,IAAN,CAAW,CAAX,EAAcO,WAAd,EAAN,GAAoCF,KAAK,CAACL,IAAN,CAAWQ,KAAX,CACzD,CADyD,CAA3D;;AAIA,MAAIH,KAAK,CAACI,cAAN,CAAqBC,QAAzB,EAAmC;AACjC,QAAMC,cAAc,GAAG,sDAErBlB,eAAe,CAAC,SAAD,EAAYY,KAAK,CAACI,cAAN,CAAqBC,QAArB,CAA8Bf,UAA1C,EAAsD,EAAtD,CAFM,gCAIvBb,IAJuB,EAAvB;;AAMA,QAAI,CAACuB,KAAK,CAACL,IAAN,CAAWY,UAAX,CAAsB,IAAtB,CAAL,EAAkC;AAChC,YAAM,IAAIV,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,WAAOrB,iBAAiB,CACrBgC,OADI,CACI,kBADJ,EACwBT,aADxB,EAEJS,OAFI,CAEI,mBAFJ,EAEyBR,KAAK,CAACL,IAF/B,EAGJa,OAHI,CAGI,4BAHJ,EAGkCP,iBAHlC,EAIJO,OAJI,CAII,mBAJJ,EAIyBlC,uBAAuB,CAAC,CAAC0B,KAAK,CAACL,IAAP,CAAD,CAJhD,EAKJa,OALI,CAKI,sBALJ,EAK4BF,cAL5B,CAAP;AAMD;;AAED,SAAO5B,sBAAsB,CAC1B8B,OADI,CACI,kBADJ,EACwBT,aADxB,EAEJS,OAFI,CAEI,mBAFJ,EAEyBR,KAAK,CAACL,IAF/B,EAGJa,OAHI,CAGI,4BAHJ,EAGkCP,iBAHlC,CAAP;AAID;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QADe,oBAEbC,WAFa,EAGbC,MAHa,EAIbC,cAJa,EAKA;AACb,QAAMC,gBAAqC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAM,CAACK,OAAnB,EAC3C1B,GAD2C,CACvC,UAAA2B,UAAU,EAAI;AACjB,UAAMC,UAAU,GAAGP,MAAM,CAACK,OAAP,CAAeC,UAAf,EAA2BC,UAA9C;;AAEA,UAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,IAAP;AACD;;AAED,aAAOA,UAAP;AACD,KAT2C,EAU3CC,MAV2C,CAUpCC,OAVoC,EAW3CC,MAX2C,CAWpC,UAACC,GAAD,EAAMJ,UAAN;AAAA,aAAqB,SAAcI,GAAd,EAAmBJ,UAAnB,CAArB;AAAA,KAXoC,EAWiB,EAXjB,CAA9C;AAaA,QAAMK,QAAQ,GAAG,mBAAjB;AAEA,QAAMC,iBAAiB,GAAGV,MAAM,CAACC,IAAP,CAAYF,gBAAZ,EACvBvB,GADuB,CACnB,UAAAO,aAAa,EAAI;AACpB,UAAM4B,SAAS,GAAGZ,gBAAgB,CAAChB,aAAD,CAAlC;AAEA,aAAO4B,SAAS,CAACC,MAAV,CACJpC,GADI,CACA,UAAAQ,KAAK,EAAI;AACZ,eAAOF,aAAa,CAACC,aAAD,EAAgBC,KAAhB,CAApB;AACD,OAHI,EAIJd,IAJI,CAIC,IAJD,CAAP;AAKD,KATuB,EAUvBA,IAVuB,CAUlB,IAVkB,CAA1B;AAYA,QAAM2C,gBAAgB,GAAGtD,QAAQ,CAC9BiC,OADsB,CACd,2BADc,EACekB,iBADf,EAEtBlB,OAFsB,CAEd,eAFc,EAEGI,WAFH,EAGtBJ,OAHsB,CAGd,cAHc,EAGEkB,iBAHF,CAAzB;AAKA,WAAO,IAAII,GAAJ,CAAQ,CAAC,CAACL,QAAD,EAAWI,gBAAX,CAAD,CAAR,CAAP;AACD;AAvCc,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst {generateEventStructName} = require('./CppHelpers.js');\n\nimport type {\n  ComponentShape,\n  ObjectPropertyType,\n  SchemaType,\n} from '../../CodegenSchema';\n\n// File path -> contents\ntype FilesOutput = Map<string, string>;\n\ntype ComponentCollection = $ReadOnly<{\n  [component: string]: ComponentShape,\n  ...,\n}>;\n\nconst template = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n#include <react/components/::_LIBRARY_::/EventEmitters.h>\n\nnamespace facebook {\nnamespace react {\n\n::_EVENTS_::\n\n} // namespace react\n} // namespace facebook\n`;\n\nconst componentTemplate = `\nvoid ::_CLASSNAME_::EventEmitter::::_EVENT_NAME_::(::_STRUCT_NAME_:: event) const {\n  dispatchEvent(\"::_DISPATCH_EVENT_NAME_::\", [event=std::move(event)](jsi::Runtime &runtime) {\n    ::_IMPLEMENTATION_::\n  });\n}\n`.trim();\n\nconst basicComponentTemplate = `\nvoid ::_CLASSNAME_::EventEmitter::::_EVENT_NAME_::() const {\n  dispatchEvent(\"::_DISPATCH_EVENT_NAME_::\");\n}\n`.trim();\n\nfunction generateSetter(variableName, propertyName, propertyParts) {\n  const trailingPeriod = propertyParts.length === 0 ? '' : '.';\n  const eventChain = `event.${propertyParts.join(\n    '.',\n  )}${trailingPeriod}${propertyName});`;\n\n  return `${variableName}.setProperty(runtime, \"${propertyName}\", ${eventChain}`;\n}\n\nfunction generateEnumSetter(variableName, propertyName, propertyParts) {\n  const trailingPeriod = propertyParts.length === 0 ? '' : '.';\n  const eventChain = `event.${propertyParts.join(\n    '.',\n  )}${trailingPeriod}${propertyName})`;\n\n  return `${variableName}.setProperty(runtime, \"${propertyName}\", toString(${eventChain});`;\n}\n\nfunction generateSetters(\n  parentPropertyName: string,\n  properties: $ReadOnlyArray<ObjectPropertyType>,\n  propertyParts: $ReadOnlyArray<string>,\n): string {\n  const propSetters = properties\n    .map(eventProperty => {\n      switch (eventProperty.type) {\n        case 'BooleanTypeAnnotation':\n        case 'StringTypeAnnotation':\n        case 'Int32TypeAnnotation':\n        case 'DoubleTypeAnnotation':\n        case 'FloatTypeAnnotation':\n          return generateSetter(\n            parentPropertyName,\n            eventProperty.name,\n            propertyParts,\n          );\n        case 'StringEnumTypeAnnotation':\n          return generateEnumSetter(\n            parentPropertyName,\n            eventProperty.name,\n            propertyParts,\n          );\n        case 'ObjectTypeAnnotation':\n          const propertyName = eventProperty.name;\n          return `\n            {\n              auto ${propertyName} = jsi::Object(runtime);\n              ${generateSetters(\n                propertyName,\n                eventProperty.properties,\n                propertyParts.concat([propertyName]),\n              )}\n\n              ${parentPropertyName}.setProperty(runtime, \"${propertyName}\", ${propertyName});\n            }\n          `.trim();\n        default:\n          (eventProperty: empty);\n          throw new Error('Received invalid event property type');\n      }\n    })\n    .join('\\n');\n\n  return propSetters;\n}\n\nfunction generateEvent(componentName: string, event): string {\n  // This is a gross hack necessary because native code is sending\n  // events named things like topChange to JS which is then converted back to\n  // call the onChange prop. We should be consistent throughout the system.\n  // In order to migrate to this new system we have to support the current\n  // naming scheme. We should delete this once we are able to control this name\n  // throughout the system.\n  const dispatchEventName = `${event.name[2].toLowerCase()}${event.name.slice(\n    3,\n  )}`;\n\n  if (event.typeAnnotation.argument) {\n    const implementation = `\n    auto payload = jsi::Object(runtime);\n    ${generateSetters('payload', event.typeAnnotation.argument.properties, [])}\n    return payload;\n  `.trim();\n\n    if (!event.name.startsWith('on')) {\n      throw new Error('Expected the event name to start with `on`');\n    }\n\n    return componentTemplate\n      .replace(/::_CLASSNAME_::/g, componentName)\n      .replace(/::_EVENT_NAME_::/g, event.name)\n      .replace(/::_DISPATCH_EVENT_NAME_::/g, dispatchEventName)\n      .replace('::_STRUCT_NAME_::', generateEventStructName([event.name]))\n      .replace('::_IMPLEMENTATION_::', implementation);\n  }\n\n  return basicComponentTemplate\n    .replace(/::_CLASSNAME_::/g, componentName)\n    .replace(/::_EVENT_NAME_::/g, event.name)\n    .replace(/::_DISPATCH_EVENT_NAME_::/g, dispatchEventName);\n}\n\nmodule.exports = {\n  generate(\n    libraryName: string,\n    schema: SchemaType,\n    moduleSpecName: string,\n  ): FilesOutput {\n    const moduleComponents: ComponentCollection = Object.keys(schema.modules)\n      .map(moduleName => {\n        const components = schema.modules[moduleName].components;\n        // No components in this module\n        if (components == null) {\n          return null;\n        }\n\n        return components;\n      })\n      .filter(Boolean)\n      .reduce((acc, components) => Object.assign(acc, components), {});\n\n    const fileName = 'EventEmitters.cpp';\n\n    const componentEmitters = Object.keys(moduleComponents)\n      .map(componentName => {\n        const component = moduleComponents[componentName];\n\n        return component.events\n          .map(event => {\n            return generateEvent(componentName, event);\n          })\n          .join('\\n');\n      })\n      .join('\\n');\n\n    const replacedTemplate = template\n      .replace(/::_COMPONENT_EMITTERS_::/g, componentEmitters)\n      .replace('::_LIBRARY_::', libraryName)\n      .replace('::_EVENTS_::', componentEmitters);\n\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}