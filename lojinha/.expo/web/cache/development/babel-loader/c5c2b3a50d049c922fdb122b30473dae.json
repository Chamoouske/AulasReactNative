{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { ColorValue, GenericStyleProp, LayoutEvent } from '../../types';\n\nimport type {\n  AnimationStyles,\n  BorderStyles,\n  InteractionStyles,\n  LayoutStyles,\n  ShadowStyles,\n  TransformStyles\n} from '../../types/styles';\n\ntype NumberOrString = number | string;\n\ntype OverscrollBehaviorValue = 'auto' | 'contain' | 'none';\n\nexport type ViewStyle = {\n  ...AnimationStyles,\n  ...BorderStyles,\n  ...InteractionStyles,\n  ...LayoutStyles,\n  ...ShadowStyles,\n  ...TransformStyles,\n  backdropFilter?: ?string,\n  backgroundAttachment?: ?string,\n  backgroundBlendMode?: ?string,\n  backgroundClip?: ?string,\n  backgroundColor?: ?ColorValue,\n  backgroundImage?: ?string,\n  backgroundOrigin?: 'border-box' | 'content-box' | 'padding-box',\n  backgroundPosition?: ?string,\n  backgroundRepeat?: ?string,\n  backgroundSize?: ?string,\n  boxShadow?: ?string,\n  clip?: ?string,\n  filter?: ?string,\n  opacity?: ?number,\n  outlineColor?: ?ColorValue,\n  outlineOffset?: ?NumberOrString,\n  outlineStyle?: ?string,\n  outlineWidth?: ?NumberOrString,\n  overscrollBehavior?: ?OverscrollBehaviorValue,\n  overscrollBehaviorX?: ?OverscrollBehaviorValue,\n  overscrollBehaviorY?: ?OverscrollBehaviorValue,\n  scrollbarWidth?: 'auto' | 'none' | 'thin',\n  scrollSnapAlign?: ?string,\n  scrollSnapType?: ?string,\n  WebkitMaskImage?: ?string,\n  WebkitOverflowScrolling?: 'auto' | 'touch'\n};\n\nexport type ViewProps = {\n  accessibilityLabel?: ?string,\n  accessibilityLiveRegion?: 'none' | 'polite' | 'assertive',\n  accessibilityRole?: ?string,\n  accessibilityState?: {\n    busy?: ?boolean,\n    checked?: ?boolean | 'mixed',\n    disabled?: ?boolean,\n    expanded?: ?boolean,\n    grabbed?: ?boolean,\n    hidden?: ?boolean,\n    invalid?: ?boolean,\n    modal?: ?boolean,\n    pressed?: ?boolean,\n    readonly?: ?boolean,\n    required?: ?boolean,\n    selected?: ?boolean\n  },\n  accessibilityValue?: {\n    max?: ?number,\n    min?: ?number,\n    now?: ?number,\n    text?: ?string\n  },\n  accessible?: boolean,\n  children?: ?any,\n  importantForAccessibility?: 'auto' | 'yes' | 'no' | 'no-hide-descendants',\n  nativeID?: ?string,\n  onBlur?: (e: any) => void,\n  onClick?: (e: any) => void,\n  onClickCapture?: (e: any) => void,\n  onContextMenu?: (e: any) => void,\n  onFocus?: (e: any) => void,\n  onKeyDown?: (e: any) => void,\n  onKeyUp?: (e: any) => void,\n  onLayout?: (e: LayoutEvent) => void,\n  onMoveShouldSetResponder?: (e: any) => boolean,\n  onMoveShouldSetResponderCapture?: (e: any) => boolean,\n  onResponderEnd?: (e: any) => void,\n  onResponderGrant?: (e: any) => void,\n  onResponderMove?: (e: any) => void,\n  onResponderReject?: (e: any) => void,\n  onResponderRelease?: (e: any) => void,\n  onResponderStart?: (e: any) => void,\n  onResponderTerminate?: (e: any) => void,\n  onResponderTerminationRequest?: (e: any) => boolean,\n  onScrollShouldSetResponder?: (e: any) => boolean,\n  onScrollShouldSetResponderCapture?: (e: any) => boolean,\n  onSelectionChangeShouldSetResponder?: (e: any) => boolean,\n  onSelectionChangeShouldSetResponderCapture?: (e: any) => boolean,\n  onStartShouldSetResponder?: (e: any) => boolean,\n  onStartShouldSetResponderCapture?: (e: any) => boolean,\n  pointerEvents?: 'box-none' | 'none' | 'box-only' | 'auto',\n  style?: GenericStyleProp<ViewStyle>,\n  testID?: ?string,\n  // unstable\n  dataSet?: ?Object,\n  onMouseDown?: (e: any) => void,\n  onMouseEnter?: (e: any) => void,\n  onMouseLeave?: (e: any) => void,\n  onMouseMove?: (e: any) => void,\n  onMouseOver?: (e: any) => void,\n  onMouseOut?: (e: any) => void,\n  onMouseUp?: (e: any) => void,\n  onScroll?: (e: any) => void,\n  onTouchCancel?: (e: any) => void,\n  onTouchCancelCapture?: (e: any) => void,\n  onTouchEnd?: (e: any) => void,\n  onTouchEndCapture?: (e: any) => void,\n  onTouchMove?: (e: any) => void,\n  onTouchMoveCapture?: (e: any) => void,\n  onTouchStart?: (e: any) => void,\n  onTouchStartCapture?: (e: any) => void,\n  onWheel?: (e: any) => void,\n  href?: ?string,\n  rel?: ?string,\n  target?: ?string\n};\n"]},"metadata":{},"sourceType":"script"}