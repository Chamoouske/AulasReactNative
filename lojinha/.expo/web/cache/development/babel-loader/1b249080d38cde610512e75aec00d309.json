{"ast":null,"code":"'use strict';\n\nfunction EventTarget() {\n  if (arguments.length > 0) {\n    return EventTarget;\n  }\n}\n\nmodule.exports = EventTarget;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/WebSocket/__mocks__/event-target-shim.js"],"names":["EventTarget","arguments","length","module","exports"],"mappings":"AAgBA;;AAEA,SAASA,WAAT,GAAuB;AAGrB,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,WAAOF,WAAP;AACD;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiBJ,WAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// Jest fatals for the following statement (minimal repro case)\n//\n//   exports.something = Symbol;\n//\n// Until it is fixed, mocking the entire node module makes the\n// problem go away.\n\n'use strict';\n\nfunction EventTarget() {\n  // Support both EventTarget and EventTarget(...)\n  // as a super class, just like the original module does.\n  if (arguments.length > 0) {\n    return EventTarget;\n  }\n}\n\nmodule.exports = EventTarget;\n"]},"metadata":{},"sourceType":"script"}