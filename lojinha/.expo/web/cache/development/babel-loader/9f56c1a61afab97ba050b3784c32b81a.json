{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addPodEntry;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getPodspecName = _interopRequireDefault(require(\"../config/getPodspecName\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction addPodEntry(podLines, linesToAddEntry, podspecPath, nodeModulePath) {\n  var podName = (0, _getPodspecName.default)(podspecPath);\n  var newEntry = \"pod '\" + podName + \"', :path => '../node_modules/\" + nodeModulePath + \"'\\n\";\n\n  if (!linesToAddEntry) {\n    return;\n  }\n\n  if (Array.isArray(linesToAddEntry)) {\n    linesToAddEntry.map(function (_ref, idx) {\n      var line = _ref.line,\n          indentation = _ref.indentation;\n\n      _cliTools().logger.debug(\"Adding \" + podName + \" to Pod file\\\"\");\n\n      podLines.splice(line + idx, 0, getLineToAdd(newEntry, indentation));\n    });\n  } else {\n    var line = linesToAddEntry.line,\n        indentation = linesToAddEntry.indentation;\n\n    _cliTools().logger.debug(\"Adding \" + podName + \" to Pod file\\\"\");\n\n    podLines.splice(line, 0, getLineToAdd(newEntry, indentation));\n  }\n}\n\nfunction getLineToAdd(newEntry, indentation) {\n  var spaces = Array(indentation + 1).join(' ');\n  return spaces + newEntry;\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link-pods/addPodEntry.js"],"names":["Object","defineProperty","exports","value","default","addPodEntry","_cliTools","data","require","_getPodspecName","_interopRequireDefault","obj","__esModule","podLines","linesToAddEntry","podspecPath","nodeModulePath","podName","newEntry","Array","isArray","map","idx","line","indentation","logger","debug","splice","getLineToAdd","spaces","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGC,OAAO,CAAC,mCAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIE,eAAe,GAAGC,sBAAsB,CAACF,OAAO,4BAAR,CAA5C;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAS/F,SAASN,WAAT,CAAqBQ,QAArB,EAA+BC,eAA/B,EAAgDC,WAAhD,EAA6DC,cAA7D,EAA6E;AAC3E,MAAMC,OAAO,GAAG,CAAC,GAAGR,eAAe,CAACL,OAApB,EAA6BW,WAA7B,CAAhB;AACA,MAAMG,QAAQ,aAAWD,OAAX,qCAAkDD,cAAlD,QAAd;;AAEA,MAAI,CAACF,eAAL,EAAsB;AACpB;AACD;;AAED,MAAIK,KAAK,CAACC,OAAN,CAAcN,eAAd,CAAJ,EAAoC;AAClCA,IAAAA,eAAe,CAACO,GAAhB,CAAoB,gBAGjBC,GAHiB,EAGT;AAAA,UAFTC,IAES,QAFTA,IAES;AAAA,UADTC,WACS,QADTA,WACS;;AACTlB,MAAAA,SAAS,GAAGmB,MAAZ,CAAmBC,KAAnB,aAAmCT,OAAnC;;AAEAJ,MAAAA,QAAQ,CAACc,MAAT,CAAgBJ,IAAI,GAAGD,GAAvB,EAA4B,CAA5B,EAA+BM,YAAY,CAACV,QAAD,EAAWM,WAAX,CAA3C;AACD,KAPD;AAQD,GATD,MASO;AAAA,QAEHD,IAFG,GAIDT,eAJC,CAEHS,IAFG;AAAA,QAGHC,WAHG,GAIDV,eAJC,CAGHU,WAHG;;AAMLlB,IAAAA,SAAS,GAAGmB,MAAZ,CAAmBC,KAAnB,aAAmCT,OAAnC;;AAEAJ,IAAAA,QAAQ,CAACc,MAAT,CAAgBJ,IAAhB,EAAsB,CAAtB,EAAyBK,YAAY,CAACV,QAAD,EAAWM,WAAX,CAArC;AACD;AACF;;AAED,SAASI,YAAT,CAAsBV,QAAtB,EAAgCM,WAAhC,EAA6C;AAC3C,MAAMK,MAAM,GAAGV,KAAK,CAACK,WAAW,GAAG,CAAf,CAAL,CAAuBM,IAAvB,CAA4B,GAA5B,CAAf;AACA,SAAOD,MAAM,GAAGX,QAAhB;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addPodEntry;\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getPodspecName = _interopRequireDefault(require(\"../config/getPodspecName\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction addPodEntry(podLines, linesToAddEntry, podspecPath, nodeModulePath) {\n  const podName = (0, _getPodspecName.default)(podspecPath);\n  const newEntry = `pod '${podName}', :path => '../node_modules/${nodeModulePath}'\\n`;\n\n  if (!linesToAddEntry) {\n    return;\n  }\n\n  if (Array.isArray(linesToAddEntry)) {\n    linesToAddEntry.map(({\n      line,\n      indentation\n    }, idx) => {\n      _cliTools().logger.debug(`Adding ${podName} to Pod file\"`);\n\n      podLines.splice(line + idx, 0, getLineToAdd(newEntry, indentation));\n    });\n  } else {\n    const {\n      line,\n      indentation\n    } = linesToAddEntry;\n\n    _cliTools().logger.debug(`Adding ${podName} to Pod file\"`);\n\n    podLines.splice(line, 0, getLineToAdd(newEntry, indentation));\n  }\n}\n\nfunction getLineToAdd(newEntry, indentation) {\n  const spaces = Array(indentation + 1).join(' ');\n  return spaces + newEntry;\n}\n\n//# sourceMappingURL=addPodEntry.js.map"]},"metadata":{},"sourceType":"script"}