{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findProjectRoot;\n\nfunction _findUp() {\n  var data = _interopRequireDefault(require(\"find-up\"));\n\n  _findUp = function _findUp() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction findProjectRoot() {\n  var cwd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.cwd();\n\n  var packageLocation = _findUp().default.sync('package.json', {\n    cwd: cwd\n  });\n\n  if (!packageLocation) {\n    throw new (_cliTools().CLIError)(\"\\n      We couldn't find a package.json in your project.\\n      Are you sure you are running it inside a React Native project?\\n    \");\n  }\n\n  return _path().default.dirname(packageLocation);\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/config/findProjectRoot.js"],"names":["Object","defineProperty","exports","value","default","findProjectRoot","_findUp","data","_interopRequireDefault","require","_path","_cliTools","obj","__esModule","cwd","process","packageLocation","sync","CLIError","dirname"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,eAAlB;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEAH,EAAAA,OAAO,GAAG,mBAAY;AACpB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,KAAT,GAAiB;AACf,MAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAC,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,SAAT,GAAqB;AACnB,MAAMJ,IAAI,GAAGE,OAAO,CAAC,mCAAD,CAApB;;AAEAE,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAK/F,SAASP,eAAT,GAA8C;AAAA,MAArBS,GAAqB,uEAAfC,OAAO,CAACD,GAAR,EAAe;;AAC5C,MAAME,eAAe,GAAGV,OAAO,GAAGF,OAAV,CAAkBa,IAAlB,CAAuB,cAAvB,EAAuC;AAC7DH,IAAAA,GAAG,EAAHA;AAD6D,GAAvC,CAAxB;;AAYA,MAAI,CAACE,eAAL,EAAsB;AACpB,UAAM,KAAKL,SAAS,GAAGO,QAAjB,yIAAN;AAID;;AAED,SAAOR,KAAK,GAAGN,OAAR,CAAgBe,OAAhB,CAAwBH,eAAxB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findProjectRoot;\n\nfunction _findUp() {\n  const data = _interopRequireDefault(require(\"find-up\"));\n\n  _findUp = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds project root by looking for a closest `package.json`.\n */\nfunction findProjectRoot(cwd = process.cwd()) {\n  const packageLocation = _findUp().default.sync('package.json', {\n    cwd\n  });\n  /**\n   * It is possible that `package.json` doesn't exist\n   * in the tree. In that case, we want to throw an error.\n   *\n   * When executing via `npx`, this will never happen as `npm`\n   * requires that file to be present in order to run.\n   */\n\n\n  if (!packageLocation) {\n    throw new (_cliTools().CLIError)(`\n      We couldn't find a package.json in your project.\n      Are you sure you are running it inside a React Native project?\n    `);\n  }\n\n  return _path().default.dirname(packageLocation);\n}\n\n//# sourceMappingURL=findProjectRoot.js.map"]},"metadata":{},"sourceType":"script"}