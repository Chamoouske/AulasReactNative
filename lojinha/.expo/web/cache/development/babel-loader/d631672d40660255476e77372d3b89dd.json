{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxButton-test.js\";\n\nvar React = require('react');\n\nvar LogBoxButton = require(\"../LogBoxButton\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\nimport Text from \"../../../Text/Text\";\ndescribe('LogBoxButton', function () {\n  it('should render only a view without an onPress', function () {\n    var output = render.shallowRender(React.createElement(LogBoxButton, {\n      backgroundColor: {\n        default: 'black',\n        pressed: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Press me\")));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render TouchableWithoutFeedback and pass through props', function () {\n    var output = render.shallowRender(React.createElement(LogBoxButton, {\n      backgroundColor: {\n        default: 'black',\n        pressed: 'red'\n      },\n      hitSlop: {},\n      onPress: function onPress() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Press me\")));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxButton-test.js"],"names":["React","require","LogBoxButton","default","render","Text","describe","it","output","shallowRender","pressed","expect","toMatchSnapshot"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,YAAY,GAAGD,OAAO,mBAAP,CAA2BE,OAAhD;;AACA,IAAMC,MAAM,GAAGH,OAAO,6BAAtB;;AACA,OAAOI,IAAP;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACvD,QAAMC,MAAM,GAAGJ,MAAM,CAACK,aAAP,CACb,oBAAC,YAAD;AACE,MAAA,eAAe,EAAE;AACfN,QAAAA,OAAO,EAAE,OADM;AAEfO,QAAAA,OAAO,EAAE;AAFM,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADa,CAAf;AAUAC,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,eAAf;AACD,GAZC,CAAF;AAcAL,EAAAA,EAAE,CAAC,+DAAD,EAAkE,YAAM;AACxE,QAAMC,MAAM,GAAGJ,MAAM,CAACK,aAAP,CACb,oBAAC,YAAD;AACE,MAAA,eAAe,EAAE;AACfN,QAAAA,OAAO,EAAE,OADM;AAEfO,QAAAA,OAAO,EAAE;AAFM,OADnB;AAKE,MAAA,OAAO,EAAE,EALX;AAME,MAAA,OAAO,EAAE,mBAAM,CAAE,CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADa,CAAf;AAYAC,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,eAAf;AACD,GAdC,CAAF;AAeD,CA9BO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxButton = require('../LogBoxButton').default;\nconst render = require('../../../../jest/renderer');\nimport Text from '../../../Text/Text';\n\ndescribe('LogBoxButton', () => {\n  it('should render only a view without an onPress', () => {\n    const output = render.shallowRender(\n      <LogBoxButton\n        backgroundColor={{\n          default: 'black',\n          pressed: 'red',\n        }}>\n        <Text>Press me</Text>\n      </LogBoxButton>,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render TouchableWithoutFeedback and pass through props', () => {\n    const output = render.shallowRender(\n      <LogBoxButton\n        backgroundColor={{\n          default: 'black',\n          pressed: 'red',\n        }}\n        hitSlop={{}}\n        onPress={() => {}}>\n        <Text>Press me</Text>\n      </LogBoxButton>,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"module"}