{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar EventEmitter = require(\"../../vendor/emitter/EventEmitter\");\n\nvar RCTDeviceEventEmitter = require(\"../RCTDeviceEventEmitter\");\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(NativeEventEmitter);\n\n  function NativeEventEmitter() {\n    _classCallCheck(this, NativeEventEmitter);\n\n    return _super.call(this, RCTDeviceEventEmitter.sharedSubscriber);\n  }\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nmodule.exports = NativeEventEmitter;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/EventEmitter/__mocks__/NativeEventEmitter.js"],"names":["EventEmitter","require","RCTDeviceEventEmitter","NativeEventEmitter","sharedSubscriber","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,qCAA5B;;AACA,IAAMC,qBAAqB,GAAGD,OAAO,4BAArC;;IAKME,kB;;;;;AACJ,gCAAc;AAAA;;AAAA,6BACND,qBAAqB,CAACE,gBADhB;AAEb;;;EAH8BJ,Y;;AAMjCK,MAAM,CAACC,OAAP,GAAiBH,kBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('../../vendor/emitter/EventEmitter');\nconst RCTDeviceEventEmitter = require('../RCTDeviceEventEmitter');\n\n/**\n * Mock the NativeEventEmitter as a normal JS EventEmitter.\n */\nclass NativeEventEmitter extends EventEmitter {\n  constructor() {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"]},"metadata":{},"sourceType":"script"}