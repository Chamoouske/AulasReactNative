{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["export declare type KeychainAccessibilityConstant = number;\nexport declare const AFTER_FIRST_UNLOCK: KeychainAccessibilityConstant;\nexport declare const AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY: KeychainAccessibilityConstant;\nexport declare const ALWAYS: KeychainAccessibilityConstant;\nexport declare const WHEN_PASSCODE_SET_THIS_DEVICE_ONLY: KeychainAccessibilityConstant;\nexport declare const ALWAYS_THIS_DEVICE_ONLY: KeychainAccessibilityConstant;\nexport declare const WHEN_UNLOCKED: KeychainAccessibilityConstant;\nexport declare const WHEN_UNLOCKED_THIS_DEVICE_ONLY: KeychainAccessibilityConstant;\nexport declare type SecureStoreOptions = {\n    keychainService?: string;\n    keychainAccessible?: KeychainAccessibilityConstant;\n};\n/**\n * Returns whether the SecureStore API is enabled on the current device. This does not check the app permissions.\n *\n * @returns Async `boolean`, indicating whether the SecureStore API is available on the current device. Currently this resolves `true` on iOS and Android only.\n */\nexport declare function isAvailableAsync(): Promise<boolean>;\nexport declare function deleteItemAsync(key: string, options?: SecureStoreOptions): Promise<void>;\nexport declare function getItemAsync(key: string, options?: SecureStoreOptions): Promise<string | null>;\nexport declare function setItemAsync(key: string, value: string, options?: SecureStoreOptions): Promise<void>;\n"]},"metadata":{},"sourceType":"script"}