{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/DatePicker/DatePickerAndroidExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar DatePickerAndroidExample = function (_React$Component) {\n  _inherits(DatePickerAndroidExample, _React$Component);\n\n  var _super = _createSuper(DatePickerAndroidExample);\n\n  function DatePickerAndroidExample() {\n    var _this;\n\n    _classCallCheck(this, DatePickerAndroidExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      presetDate: new Date(2020, 4, 5),\n      simpleDate: new Date(2020, 4, 5),\n      spinnerDate: new Date(2020, 4, 5),\n      calendarDate: new Date(2020, 4, 5),\n      defaultDate: new Date(2020, 4, 5),\n      allDate: new Date(2020, 4, 5),\n      simpleText: 'pick a date',\n      spinnerText: 'pick a date',\n      calendarText: 'pick a date',\n      defaultText: 'pick a date',\n      minText: 'pick a date, no earlier than today',\n      maxText: 'pick a date, no later than today',\n      presetText: 'pick a date, preset to 2020/5/5',\n      allText: 'pick a date between 2020/5/1 and 2020/5/10'\n    };\n\n    _this.showPicker = function _callee(stateKey, options) {\n      var newState, _await$DatePickerAndr, action, year, month, day, date, code, message;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              newState = {};\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(DatePickerAndroid.open(options));\n\n            case 4:\n              _await$DatePickerAndr = _context.sent;\n              action = _await$DatePickerAndr.action;\n              year = _await$DatePickerAndr.year;\n              month = _await$DatePickerAndr.month;\n              day = _await$DatePickerAndr.day;\n\n              if (action === DatePickerAndroid.dismissedAction) {\n                newState[stateKey + 'Text'] = 'dismissed';\n              } else {\n                date = new Date(year, month, day);\n                newState[stateKey + 'Text'] = date.toLocaleDateString();\n                newState[stateKey + 'Date'] = date;\n              }\n\n              _this.setState(newState);\n\n              _context.next = 18;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              code = _context.t0.code;\n              message = _context.t0.message;\n              console.warn(\"Error in example '\" + stateKey + \"': \", message);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(DatePickerAndroidExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: \"DatePickerAndroid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Simple date picker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'simple', {\n          date: this.state.simpleDate\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, this.state.simpleText))), React.createElement(RNTesterBlock, {\n        title: \"Simple spinner date picker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'spinner', {\n          date: this.state.spinnerDate,\n          mode: 'spinner'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, this.state.spinnerText))), React.createElement(RNTesterBlock, {\n        title: \"Simple calendar date picker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'calendar', {\n          date: this.state.calendarDate,\n          mode: 'calendar'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, this.state.calendarText))), React.createElement(RNTesterBlock, {\n        title: \"Simple default date picker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'default', {\n          date: this.state.defaultDate,\n          mode: 'default'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, this.state.defaultText))), React.createElement(RNTesterBlock, {\n        title: \"Date picker with pre-set date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'preset', {\n          date: this.state.presetDate\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, this.state.presetText))), React.createElement(RNTesterBlock, {\n        title: \"Date picker with minDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'min', {\n          date: this.state.minDate,\n          minDate: new Date()\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, this.state.minText))), React.createElement(RNTesterBlock, {\n        title: \"Date picker with maxDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'max', {\n          date: this.state.maxDate,\n          maxDate: new Date()\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, this.state.maxText))), React.createElement(RNTesterBlock, {\n        title: \"Date picker with all options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.showPicker.bind(this, 'all', {\n          date: this.state.allDate,\n          minDate: new Date(2020, 4, 1),\n          maxDate: new Date(2020, 4, 10)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, this.state.allText))));\n    }\n  }]);\n\n  return DatePickerAndroidExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  text: {\n    color: 'black'\n  }\n});\nexports.title = 'DatePickerAndroid';\nexports.description = 'Standard Android date picker dialog';\nexports.examples = [{\n  title: 'Simple date picker',\n  render: function render() {\n    return React.createElement(DatePickerAndroidExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/DatePicker/DatePickerAndroidExample.js"],"names":["React","require","RNTesterBlock","RNTesterPage","DatePickerAndroidExample","state","presetDate","Date","simpleDate","spinnerDate","calendarDate","defaultDate","allDate","simpleText","spinnerText","calendarText","defaultText","minText","maxText","presetText","allText","showPicker","stateKey","options","newState","DatePickerAndroid","open","action","year","month","day","dismissedAction","date","toLocaleDateString","setState","code","message","console","warn","bind","styles","text","mode","minDate","maxDate","Component","StyleSheet","create","color","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  DatePickerAndroid,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n} = require('react-native');\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  presetDate: Date,\n  simpleDate: Date,\n  spinnerDate: Date,\n  calendarDate: Date,\n  defaultDate: Date,\n  allDate: Date,\n  simpleText: string,\n  spinnerText: string,\n  calendarText: string,\n  defaultText: string,\n  minText: string,\n  maxText: string,\n  presetText: string,\n  allText: string,\n|};\n\nclass DatePickerAndroidExample extends React.Component<Props, State> {\n  state = {\n    presetDate: new Date(2020, 4, 5),\n    simpleDate: new Date(2020, 4, 5),\n    spinnerDate: new Date(2020, 4, 5),\n    calendarDate: new Date(2020, 4, 5),\n    defaultDate: new Date(2020, 4, 5),\n    allDate: new Date(2020, 4, 5),\n    simpleText: 'pick a date',\n    spinnerText: 'pick a date',\n    calendarText: 'pick a date',\n    defaultText: 'pick a date',\n    minText: 'pick a date, no earlier than today',\n    maxText: 'pick a date, no later than today',\n    presetText: 'pick a date, preset to 2020/5/5',\n    allText: 'pick a date between 2020/5/1 and 2020/5/10',\n  };\n\n  showPicker = async (stateKey, options) => {\n    try {\n      const newState = {};\n      const {action, year, month, day} = await DatePickerAndroid.open(options);\n      if (action === DatePickerAndroid.dismissedAction) {\n        newState[stateKey + 'Text'] = 'dismissed';\n      } else {\n        const date = new Date(year, month, day);\n        newState[stateKey + 'Text'] = date.toLocaleDateString();\n        newState[stateKey + 'Date'] = date;\n      }\n      this.setState(newState);\n    } catch ({code, message}) {\n      console.warn(`Error in example '${stateKey}': `, message);\n    }\n  };\n\n  render() {\n    return (\n      <RNTesterPage title=\"DatePickerAndroid\">\n        <RNTesterBlock title=\"Simple date picker\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'simple', {\n              date: this.state.simpleDate,\n            })}>\n            <Text style={styles.text}>{this.state.simpleText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Simple spinner date picker\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'spinner', {\n              date: this.state.spinnerDate,\n              mode: 'spinner',\n            })}>\n            <Text style={styles.text}>{this.state.spinnerText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Simple calendar date picker\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'calendar', {\n              date: this.state.calendarDate,\n              mode: 'calendar',\n            })}>\n            <Text style={styles.text}>{this.state.calendarText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Simple default date picker\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'default', {\n              date: this.state.defaultDate,\n              mode: 'default',\n            })}>\n            <Text style={styles.text}>{this.state.defaultText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Date picker with pre-set date\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'preset', {\n              date: this.state.presetDate,\n            })}>\n            <Text style={styles.text}>{this.state.presetText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Date picker with minDate\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'min', {\n              date: this.state.minDate,\n              minDate: new Date(),\n            })}>\n            <Text style={styles.text}>{this.state.minText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Date picker with maxDate\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'max', {\n              date: this.state.maxDate,\n              maxDate: new Date(),\n            })}>\n            <Text style={styles.text}>{this.state.maxText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n        <RNTesterBlock title=\"Date picker with all options\">\n          <TouchableWithoutFeedback\n            onPress={this.showPicker.bind(this, 'all', {\n              date: this.state.allDate,\n              minDate: new Date(2020, 4, 1),\n              maxDate: new Date(2020, 4, 10),\n            })}>\n            <Text style={styles.text}>{this.state.allText}</Text>\n          </TouchableWithoutFeedback>\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: 'black',\n  },\n});\n\nexports.title = 'DatePickerAndroid';\nexports.description = 'Standard Android date picker dialog';\nexports.examples = [\n  {\n    title: 'Simple date picker',\n    render: function(): React.Element<typeof DatePickerAndroidExample> {\n      return <DatePickerAndroidExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}