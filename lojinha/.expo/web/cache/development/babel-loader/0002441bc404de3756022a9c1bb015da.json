{"ast":null,"code":"export {};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@unimodules/react-native-adapter/build/EventEmitter.d.ts"],"names":[],"mappings":"AAoBA","sourcesContent":["import { NativeEventEmitter } from 'react-native';\ndeclare type NativeModule = {\n    startObserving?: () => void;\n    stopObserving?: () => void;\n    addListener: (eventName: string) => void;\n    removeListeners: (count: number) => void;\n};\nexport declare type Subscription = {\n    remove: () => void;\n};\nexport declare class EventEmitter {\n    _listenerCount: number;\n    _nativeModule: NativeModule;\n    _eventEmitter: NativeEventEmitter;\n    constructor(nativeModule: NativeModule);\n    addListener<T>(eventName: string, listener: (event: T) => void): Subscription;\n    removeAllListeners(eventName: string): void;\n    removeSubscription(subscription: Subscription): void;\n    emit(eventName: string, ...params: any[]): void;\n}\nexport {};\n"]},"metadata":{},"sourceType":"module"}