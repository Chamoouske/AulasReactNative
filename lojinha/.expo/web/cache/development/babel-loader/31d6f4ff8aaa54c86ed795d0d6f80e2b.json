{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/AppEventsTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar NativeAppEventEmitter = ReactNative.NativeAppEventEmitter,\n    StyleSheet = ReactNative.StyleSheet,\n    Text = ReactNative.Text,\n    View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\n\nvar deepDiffer = require('react-native/Libraries/Utilities/differ/deepDiffer');\n\nvar TEST_PAYLOAD = {\n  foo: 'bar'\n};\n\nvar AppEventsTest = function (_React$Component) {\n  _inherits(AppEventsTest, _React$Component);\n\n  var _super = _createSuper(AppEventsTest);\n\n  function AppEventsTest() {\n    var _this;\n\n    _classCallCheck(this, AppEventsTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      sent: 'none',\n      received: 'none'\n    };\n\n    _this.receiveEvent = function (event) {\n      if (deepDiffer(event.data, TEST_PAYLOAD)) {\n        throw new Error('Received wrong event: ' + JSON.stringify(event));\n      }\n\n      var elapsed = Date.now() - event.ts + 'ms';\n\n      _this.setState({\n        received: event,\n        elapsed: elapsed\n      }, function () {\n        TestModule.markTestCompleted();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppEventsTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      NativeAppEventEmitter.addListener('testEvent', this.receiveEvent);\n      var event = {\n        data: TEST_PAYLOAD,\n        ts: Date.now()\n      };\n      TestModule.sendAppEvent('testEvent', event);\n      this.setState({\n        sent: event\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, JSON.stringify(this.state, null, '  ')));\n    }\n  }]);\n\n  return AppEventsTest;\n}(React.Component);\n\nAppEventsTest.displayName = 'AppEventsTest';\nvar styles = StyleSheet.create({\n  container: {\n    margin: 40\n  }\n});\nmodule.exports = AppEventsTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/AppEventsTest.js"],"names":["React","require","NativeAppEventEmitter","ReactNative","StyleSheet","Text","View","TestModule","NativeModules","deepDiffer","TEST_PAYLOAD","foo","AppEventsTest","state","sent","received","receiveEvent","event","data","Error","JSON","stringify","elapsed","Date","now","ts","setState","markTestCompleted","addListener","sendAppEvent","styles","container","Component","displayName","create","margin","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;IAEOC,qB,GAAiDC,W,CAAjDD,qB;IAAuBE,U,GAA0BD,W,CAA1BC,U;IAAYC,I,GAAcF,W,CAAdE,I;IAAMC,I,GAAQH,W,CAARG,I;IACzCC,U,GAAcJ,WAAW,CAACK,a,CAA1BD,U;;AAEP,IAAME,UAAU,GAAGR,OAAO,CAAC,oDAAD,CAA1B;;AAEA,IAAMS,YAAY,GAAG;AAACC,EAAAA,GAAG,EAAE;AAAN,CAArB;;IAcMC,a;;;;;;;;;;;;;;;UACJC,K,GAAe;AAACC,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,QAAQ,EAAE;AAAzB,K;;UASfC,Y,GAAqC,UAACC,KAAD,EAAgB;AACnD,UAAIR,UAAU,CAACQ,KAAK,CAACC,IAAP,EAAaR,YAAb,CAAd,EAA0C;AACxC,cAAM,IAAIS,KAAJ,CAAU,2BAA2BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAArC,CAAN;AACD;;AACD,UAAMK,OAAO,GAAGC,IAAI,CAACC,GAAL,KAAaP,KAAK,CAACQ,EAAnB,GAAwB,IAAxC;;AACA,YAAKC,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAEE,KAAX;AAAkBK,QAAAA,OAAO,EAAPA;AAAlB,OAAd,EAA0C,YAAM;AAC9Cf,QAAAA,UAAU,CAACoB,iBAAX;AACD,OAFD;AAGD,K;;;;;;;WAfD,6BAAoB;AAClBzB,MAAAA,qBAAqB,CAAC0B,WAAtB,CAAkC,WAAlC,EAA+C,KAAKZ,YAApD;AACA,UAAMC,KAAK,GAAG;AAACC,QAAAA,IAAI,EAAER,YAAP;AAAqBe,QAAAA,EAAE,EAAEF,IAAI,CAACC,GAAL;AAAzB,OAAd;AACAjB,MAAAA,UAAU,CAACsB,YAAX,CAAwB,WAAxB,EAAqCZ,KAArC;AACA,WAAKS,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAAEG;AAAP,OAAd;AACD;;;WAYD,kBAAqB;AACnB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOX,IAAI,CAACC,SAAL,CAAe,KAAKR,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,CAAP,CADF,CADF;AAKD;;;;EA1ByBb,KAAK,CAACgC,S;;AA6BlCpB,aAAa,CAACqB,WAAd,GAA4B,eAA5B;AAEA,IAAMH,MAAM,GAAG1B,UAAU,CAAC8B,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAE;AADC;AADoB,CAAlB,CAAf;AAMAC,MAAM,CAACC,OAAP,GAAiBzB,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {NativeAppEventEmitter, StyleSheet, Text, View} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\nconst deepDiffer = require('react-native/Libraries/Utilities/differ/deepDiffer');\n\nconst TEST_PAYLOAD = {foo: 'bar'};\n\ntype AppEvent = {\n  data: Object,\n  ts: number,\n  ...\n};\ntype State = {\n  sent: 'none' | AppEvent,\n  received: 'none' | AppEvent,\n  elapsed?: string,\n  ...\n};\n\nclass AppEventsTest extends React.Component<{...}, State> {\n  state: State = {sent: 'none', received: 'none'};\n\n  componentDidMount() {\n    NativeAppEventEmitter.addListener('testEvent', this.receiveEvent);\n    const event = {data: TEST_PAYLOAD, ts: Date.now()};\n    TestModule.sendAppEvent('testEvent', event);\n    this.setState({sent: event});\n  }\n\n  receiveEvent: (event: any) => void = (event: any) => {\n    if (deepDiffer(event.data, TEST_PAYLOAD)) {\n      throw new Error('Received wrong event: ' + JSON.stringify(event));\n    }\n    const elapsed = Date.now() - event.ts + 'ms';\n    this.setState({received: event, elapsed}, () => {\n      TestModule.markTestCompleted();\n    });\n  };\n\n  render(): React.Node {\n    return (\n      <View style={styles.container}>\n        <Text>{JSON.stringify(this.state, null, '  ')}</Text>\n      </View>\n    );\n  }\n}\n\nAppEventsTest.displayName = 'AppEventsTest';\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 40,\n  },\n});\n\nmodule.exports = AppEventsTest;\n"]},"metadata":{},"sourceType":"script"}