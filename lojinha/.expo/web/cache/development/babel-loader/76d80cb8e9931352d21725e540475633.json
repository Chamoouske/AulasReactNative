{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorReactFrames-test.js\";\n\nvar React = require('react');\n\nvar LogBoxInspectorReactFrames = require(\"../LogBoxInspectorReactFrames\").default;\n\nvar LogBoxLog = require(\"../../Data/LogBoxLog\").default;\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('LogBoxInspectorReactFrames', function () {\n  it('should render null for no componentStack frames', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorReactFrames, {\n      log: new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: []\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render componentStack frames without full path pressable', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorReactFrames, {\n      log: new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: [{\n          content: 'MyComponent',\n          fileName: 'MyComponentFile.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render componentStack frames with full path pressable', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorReactFrames, {\n      log: new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: [{\n          content: 'MyComponent',\n          fileName: '/path/to/MyComponentFile.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render componentStack frames with parent folder of index.js', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorReactFrames, {\n      log: new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: [{\n          content: 'MyComponent',\n          fileName: '/path/to/index.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render componentStack frames with more than 3 stacks', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorReactFrames, {\n      log: new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: [{\n          content: 'MyComponent',\n          fileName: '/path/to/index.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }, {\n          content: 'MyComponent2',\n          fileName: '/path/to/index2.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }, {\n          content: 'MyComponent3',\n          fileName: '/path/to/index3.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }, {\n          content: 'MyComponent4',\n          fileName: '/path/to/index4.js',\n          location: {\n            row: 1,\n            column: -1\n          }\n        }]\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/UI/__tests__/LogBoxInspectorReactFrames-test.js"],"names":["React","require","LogBoxInspectorReactFrames","default","LogBoxLog","render","describe","it","output","shallowRender","level","isComponentError","message","content","substitutions","stack","category","componentStack","expect","toMatchSnapshot","fileName","location","row","column"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst LogBoxInspectorReactFrames = require('../LogBoxInspectorReactFrames')\n  .default;\nconst LogBoxLog = require('../../Data/LogBoxLog').default;\nconst render = require('../../../../jest/renderer');\n\ndescribe('LogBoxInspectorReactFrames', () => {\n  it('should render null for no componentStack frames', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorReactFrames\n        log={\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [],\n          })\n        }\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render componentStack frames without full path pressable', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorReactFrames\n        log={\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [\n              {\n                content: 'MyComponent',\n                fileName: 'MyComponentFile.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n            ],\n          })\n        }\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render componentStack frames with full path pressable', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorReactFrames\n        log={\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [\n              {\n                content: 'MyComponent',\n                fileName: '/path/to/MyComponentFile.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n            ],\n          })\n        }\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render componentStack frames with parent folder of index.js', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorReactFrames\n        log={\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [\n              {\n                content: 'MyComponent',\n                fileName: '/path/to/index.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n            ],\n          })\n        }\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render componentStack frames with more than 3 stacks', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorReactFrames\n        log={\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [\n              {\n                content: 'MyComponent',\n                fileName: '/path/to/index.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n              {\n                content: 'MyComponent2',\n                fileName: '/path/to/index2.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n              {\n                content: 'MyComponent3',\n                fileName: '/path/to/index3.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n              {\n                content: 'MyComponent4',\n                fileName: '/path/to/index4.js',\n                location: {\n                  row: 1,\n                  column: -1,\n                },\n              },\n            ],\n          })\n        }\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}