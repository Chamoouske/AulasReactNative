{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nfunction getQuery() {\n  return canUseDOM && window.matchMedia != null ? window.matchMedia('(prefers-color-scheme: dark)') : null;\n}\n\nvar query = getQuery();\nvar listenerMapping = new WeakMap();\nvar Appearance = {\n  getColorScheme: function getColorScheme() {\n    return query && query.matches ? 'dark' : 'light';\n  },\n  addChangeListener: function addChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (!mappedListener) {\n      mappedListener = function mappedListener(_ref) {\n        var matches = _ref.matches;\n        listener({\n          colorScheme: matches ? 'dark' : 'light'\n        });\n      };\n\n      listenerMapping.set(listener, mappedListener);\n    }\n\n    if (query) {\n      query.addListener(mappedListener);\n    }\n  },\n  removeChangeListener: function removeChangeListener(listener) {\n    var mappedListener = listenerMapping.get(listener);\n\n    if (mappedListener) {\n      if (query) {\n        query.removeListener(mappedListener);\n      }\n\n      listenerMapping.delete(listener);\n    }\n  }\n};\nexport default Appearance;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/Appearance/index.js"],"names":["canUseDOM","getQuery","window","matchMedia","query","listenerMapping","WeakMap","Appearance","getColorScheme","matches","addChangeListener","listener","mappedListener","get","colorScheme","set","addListener","removeChangeListener","removeListener","delete"],"mappings":"AAUA,SAASA,SAAT,QAA0B,+BAA1B;;AAWA,SAASC,QAAT,GAA2C;AACzC,SAAOD,SAAS,IAAIE,MAAM,CAACC,UAAP,IAAqB,IAAlC,GACHD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CADG,GAEH,IAFJ;AAGD;;AAED,IAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,IAAMI,eAAe,GAAG,IAAIC,OAAJ,EAAxB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,cADiB,4BACiB;AAChC,WAAOJ,KAAK,IAAIA,KAAK,CAACK,OAAf,GAAyB,MAAzB,GAAkC,OAAzC;AACD,GAHgB;AAKjBC,EAAAA,iBALiB,6BAKCC,QALD,EAKqC;AACpD,QAAIC,cAAc,GAAGP,eAAe,CAACQ,GAAhB,CAAoBF,QAApB,CAArB;;AACA,QAAI,CAACC,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAG,8BAAsC;AAAA,YAAnCH,OAAmC,QAAnCA,OAAmC;AACrDE,QAAAA,QAAQ,CAAC;AAAEG,UAAAA,WAAW,EAAEL,OAAO,GAAG,MAAH,GAAY;AAAlC,SAAD,CAAR;AACD,OAFD;;AAGAJ,MAAAA,eAAe,CAACU,GAAhB,CAAoBJ,QAApB,EAA8BC,cAA9B;AACD;;AACD,QAAIR,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACY,WAAN,CAAkBJ,cAAlB;AACD;AACF,GAhBgB;AAkBjBK,EAAAA,oBAlBiB,gCAkBIN,QAlBJ,EAkBwC;AACvD,QAAMC,cAAc,GAAGP,eAAe,CAACQ,GAAhB,CAAoBF,QAApB,CAAvB;;AACA,QAAIC,cAAJ,EAAoB;AAClB,UAAIR,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACc,cAAN,CAAqBN,cAArB;AACD;;AACDP,MAAAA,eAAe,CAACc,MAAhB,CAAuBR,QAAvB;AACD;AACF;AA1BgB,CAAnB;AA6BA,eAAeJ,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nexport type ColorSchemeName = 'light' | 'dark';\n\nexport type AppearancePreferences = {|\n  colorScheme: ColorSchemeName\n|};\n\ntype AppearanceListener = (preferences: AppearancePreferences) => void;\ntype DOMAppearanceListener = (ev: MediaQueryListEvent) => any;\n\nfunction getQuery(): MediaQueryList | null {\n  return canUseDOM && window.matchMedia != null\n    ? window.matchMedia('(prefers-color-scheme: dark)')\n    : null;\n}\n\nconst query = getQuery();\nconst listenerMapping = new WeakMap<AppearanceListener, DOMAppearanceListener>();\n\nconst Appearance = {\n  getColorScheme(): ColorSchemeName {\n    return query && query.matches ? 'dark' : 'light';\n  },\n\n  addChangeListener(listener: AppearanceListener): void {\n    let mappedListener = listenerMapping.get(listener);\n    if (!mappedListener) {\n      mappedListener = ({ matches }: MediaQueryListEvent) => {\n        listener({ colorScheme: matches ? 'dark' : 'light' });\n      };\n      listenerMapping.set(listener, mappedListener);\n    }\n    if (query) {\n      query.addListener(mappedListener);\n    }\n  },\n\n  removeChangeListener(listener: AppearanceListener): void {\n    const mappedListener = listenerMapping.get(listener);\n    if (mappedListener) {\n      if (query) {\n        query.removeListener(mappedListener);\n      }\n      listenerMapping.delete(listener);\n    }\n  }\n};\n\nexport default Appearance;\n"]},"metadata":{},"sourceType":"module"}