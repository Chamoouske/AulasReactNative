{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nvar _uniqueId = 1;\n\nvar AnimatedNode = function () {\n  function AnimatedNode() {\n    _classCallCheck(this, AnimatedNode);\n\n    this._listeners = {};\n  }\n\n  _createClass(AnimatedNode, [{\n    key: \"__attach\",\n    value: function __attach() {}\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this.__nativeTag != null) {\n        NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n        this.__nativeTag = undefined;\n      }\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {}\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this.__getValue();\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {}\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {}\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return [];\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        throw new Error('This node cannot be made a \"native\" animated node');\n      }\n\n      if (this.hasListeners()) {\n        this._startListeningToNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var id = String(_uniqueId++);\n      this._listeners[id] = callback;\n\n      if (this.__isNative) {\n        this._startListeningToNativeValueUpdates();\n      }\n\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      delete this._listeners[id];\n\n      if (this.__isNative && !this.hasListeners()) {\n        this._stopListeningForNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this._listeners = {};\n\n      if (this.__isNative) {\n        this._stopListeningForNativeValueUpdates();\n      }\n    }\n  }, {\n    key: \"hasListeners\",\n    value: function hasListeners() {\n      return !!Object.keys(this._listeners).length;\n    }\n  }, {\n    key: \"_startListeningToNativeValueUpdates\",\n    value: function _startListeningToNativeValueUpdates() {\n      var _this = this;\n\n      if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n        return;\n      }\n\n      if (this.__shouldUpdateListenersForNewNativeTag) {\n        this.__shouldUpdateListenersForNewNativeTag = false;\n\n        this._stopListeningForNativeValueUpdates();\n      }\n\n      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n        if (data.tag !== _this.__getNativeTag()) {\n          return;\n        }\n\n        _this._onAnimatedValueUpdateReceived(data.value);\n      });\n    }\n  }, {\n    key: \"_onAnimatedValueUpdateReceived\",\n    value: function _onAnimatedValueUpdateReceived(value) {\n      this.__callListeners(value);\n    }\n  }, {\n    key: \"__callListeners\",\n    value: function __callListeners(value) {\n      for (var _key in this._listeners) {\n        this._listeners[_key]({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"_stopListeningForNativeValueUpdates\",\n    value: function _stopListeningForNativeValueUpdates() {\n      if (!this.__nativeAnimatedValueListener) {\n        return;\n      }\n\n      this.__nativeAnimatedValueListener.remove();\n\n      this.__nativeAnimatedValueListener = null;\n      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n    }\n  }, {\n    key: \"__getNativeTag\",\n    value: function __getNativeTag() {\n      NativeAnimatedHelper.assertNativeAnimatedModule();\n      invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n\n      if (this.__nativeTag == null) {\n        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();\n        this.__nativeTag = nativeTag;\n        NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n        this.__shouldUpdateListenersForNewNativeTag = true;\n      }\n\n      return this.__nativeTag;\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      throw new Error('This JS animated node type cannot be used as native animated node');\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.__getValue();\n    }\n  }]);\n\n  return AnimatedNode;\n}();\n\nexport default AnimatedNode;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/Animated/nodes/AnimatedNode.js"],"names":["NativeAnimatedHelper","invariant","NativeAnimatedAPI","API","_uniqueId","AnimatedNode","_listeners","__isNative","__nativeTag","dropAnimatedNode","undefined","__getValue","child","Error","hasListeners","_startListeningToNativeValueUpdates","callback","id","String","_stopListeningForNativeValueUpdates","Object","keys","length","__nativeAnimatedValueListener","__shouldUpdateListenersForNewNativeTag","startListeningToAnimatedNodeValue","__getNativeTag","nativeEventEmitter","addListener","data","tag","_onAnimatedValueUpdateReceived","value","__callListeners","key","remove","stopListeningToAnimatedNodeValue","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig"],"mappings":"AASA;;;;AAEA,OAAOA,oBAAP;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,IAAMC,iBAAiB,GAAGF,oBAAoB,CAACG,GAA/C;AAIA,IAAIC,SAAS,GAAG,CAAhB;;IAIMC,Y;AAyBJ,0BAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACD;;;;WAxBD,oBAAiB,CAAE;;;WACnB,oBAAiB;AACf,UAAI,KAAKC,UAAL,IAAmB,KAAKC,WAAL,IAAoB,IAA3C,EAAiD;AAC/CR,QAAAA,oBAAoB,CAACG,GAArB,CAAyBM,gBAAzB,CAA0C,KAAKD,WAA/C;AACA,aAAKA,WAAL,GAAmBE,SAAnB;AACD;AACF;;;WACD,sBAAkB,CAAE;;;WACpB,8BAA0B;AACxB,aAAO,KAAKC,UAAL,EAAP;AACD;;;WACD,oBAAWC,KAAX,EAAgC,CAAE;;;WAClC,uBAAcA,KAAd,EAAmC,CAAE;;;WACrC,yBAAqC;AACnC,aAAO,EAAP;AACD;;;WAWD,wBAAe;AACb,UAAI,CAAC,KAAKL,UAAV,EAAsB;AACpB,cAAM,IAAIM,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,UAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,aAAKC,mCAAL;AACD;AACF;;;WASD,qBAAYC,QAAZ,EAAqD;AACnD,UAAMC,EAAE,GAAGC,MAAM,CAACd,SAAS,EAAV,CAAjB;AACA,WAAKE,UAAL,CAAgBW,EAAhB,IAAsBD,QAAtB;;AACA,UAAI,KAAKT,UAAT,EAAqB;AACnB,aAAKQ,mCAAL;AACD;;AACD,aAAOE,EAAP;AACD;;;WAQD,wBAAeA,EAAf,EAAiC;AAC/B,aAAO,KAAKX,UAAL,CAAgBW,EAAhB,CAAP;;AACA,UAAI,KAAKV,UAAL,IAAmB,CAAC,KAAKO,YAAL,EAAxB,EAA6C;AAC3C,aAAKK,mCAAL;AACD;AACF;;;WAOD,8BAA2B;AACzB,WAAKb,UAAL,GAAkB,EAAlB;;AACA,UAAI,KAAKC,UAAT,EAAqB;AACnB,aAAKY,mCAAL;AACD;AACF;;;WAED,wBAAwB;AACtB,aAAO,CAAC,CAACC,MAAM,CAACC,IAAP,CAAY,KAAKf,UAAjB,EAA6BgB,MAAtC;AACD;;;WAED,+CAAsC;AAAA;;AACpC,UACE,KAAKC,6BAAL,IACA,CAAC,KAAKC,sCAFR,EAGE;AACA;AACD;;AAED,UAAI,KAAKA,sCAAT,EAAiD;AAC/C,aAAKA,sCAAL,GAA8C,KAA9C;;AACA,aAAKL,mCAAL;AACD;;AAEDjB,MAAAA,iBAAiB,CAACuB,iCAAlB,CAAoD,KAAKC,cAAL,EAApD;AACA,WAAKH,6BAAL,GAAqCvB,oBAAoB,CAAC2B,kBAArB,CAAwCC,WAAxC,CACnC,uBADmC,EAEnC,UAAAC,IAAI,EAAI;AACN,YAAIA,IAAI,CAACC,GAAL,KAAa,KAAI,CAACJ,cAAL,EAAjB,EAAwC;AACtC;AACD;;AACD,QAAA,KAAI,CAACK,8BAAL,CAAoCF,IAAI,CAACG,KAAzC;AACD,OAPkC,CAArC;AASD;;;WAED,wCAA+BA,KAA/B,EAA8C;AAC5C,WAAKC,eAAL,CAAqBD,KAArB;AACD;;;WAED,yBAAgBA,KAAhB,EAAqC;AACnC,WAAK,IAAME,IAAX,IAAkB,KAAK5B,UAAvB,EAAmC;AACjC,aAAKA,UAAL,CAAgB4B,IAAhB,EAAqB;AAACF,UAAAA,KAAK,EAALA;AAAD,SAArB;AACD;AACF;;;WAED,+CAAsC;AACpC,UAAI,CAAC,KAAKT,6BAAV,EAAyC;AACvC;AACD;;AAED,WAAKA,6BAAL,CAAmCY,MAAnC;;AACA,WAAKZ,6BAAL,GAAqC,IAArC;AACArB,MAAAA,iBAAiB,CAACkC,gCAAlB,CAAmD,KAAKV,cAAL,EAAnD;AACD;;;WAED,0BAA0B;AACxB1B,MAAAA,oBAAoB,CAACqC,0BAArB;AACApC,MAAAA,SAAS,CACP,KAAKM,UADE,EAEP,4DAFO,CAAT;;AAIA,UAAI,KAAKC,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,YAAM8B,SAAkB,GAAGtC,oBAAoB,CAACuC,kBAArB,EAA3B;AACA,aAAK/B,WAAL,GAAmB8B,SAAnB;AACAtC,QAAAA,oBAAoB,CAACG,GAArB,CAAyBqC,kBAAzB,CACEF,SADF,EAEE,KAAKG,iBAAL,EAFF;AAIA,aAAKjB,sCAAL,GAA8C,IAA9C;AACD;;AACD,aAAO,KAAKhB,WAAZ;AACD;;;WACD,6BAA4B;AAC1B,YAAM,IAAIK,KAAJ,CACJ,mEADI,CAAN;AAGD;;;WACD,kBAAc;AACZ,aAAO,KAAKF,UAAL,EAAP;AACD;;;;;;AAGH,eAAeN,YAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nimport invariant from 'fbjs/lib/invariant';\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\ntype ValueListenerCallback = (state: {value: number}) => mixed;\n\nlet _uniqueId = 1;\n\n// Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\nclass AnimatedNode {\n  _listeners: {[key: string]: ValueListenerCallback};\n  __nativeAnimatedValueListener: ?any;\n  __attach(): void {}\n  __detach(): void {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue(): any {}\n  __getAnimatedValue(): any {\n    return this.__getValue();\n  }\n  __addChild(child: AnimatedNode) {}\n  __removeChild(child: AnimatedNode) {}\n  __getChildren(): Array<AnimatedNode> {\n    return [];\n  }\n\n  /* Methods and props used by native Animated impl */\n  __isNative: boolean;\n  __nativeTag: ?number;\n  __shouldUpdateListenersForNewNativeTag: boolean;\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\n   */\n  addListener(callback: (value: any) => mixed): string {\n    const id = String(_uniqueId++);\n    this._listeners[id] = callback;\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\n   */\n  removeListener(id: string): void {\n    delete this._listeners[id];\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\n   */\n  removeAllListeners(): void {\n    this._listeners = {};\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners(): boolean {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (\n      this.__nativeAnimatedValueListener &&\n      !this.__shouldUpdateListenersForNewNativeTag\n    ) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener(\n      'onAnimatedValueUpdate',\n      data => {\n        if (data.tag !== this.__getNativeTag()) {\n          return;\n        }\n        this._onAnimatedValueUpdateReceived(data.value);\n      },\n    );\n  }\n\n  _onAnimatedValueUpdateReceived(value: number) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value: number): void {\n    for (const key in this._listeners) {\n      this._listeners[key]({value});\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag(): ?number {\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(\n      this.__isNative,\n      'Attempt to get native tag from node not marked as \"native\"',\n    );\n    if (this.__nativeTag == null) {\n      const nativeTag: ?number = NativeAnimatedHelper.generateNewNodeTag();\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(\n        nativeTag,\n        this.__getNativeConfig(),\n      );\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n    return this.__nativeTag;\n  }\n  __getNativeConfig(): Object {\n    throw new Error(\n      'This JS animated node type cannot be used as native animated node',\n    );\n  }\n  toJSON(): any {\n    return this.__getValue();\n  }\n}\n\nexport default AnimatedNode;\n"]},"metadata":{},"sourceType":"module"}