{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/__tests__/Image-test.js\";\n\nvar React = require('react');\n\nvar Image = require(\"../Image\");\n\nvar render = require(\"../../../jest/renderer\");\n\ndescribe('<Image />', function () {\n  it('should render as <Image> when mocked', function () {\n    var instance = render.create(React.createElement(Image, {\n      source: {\n        uri: 'foo-bar.jpg'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 36\n      }\n    }));\n    expect(instance).toMatchSnapshot();\n  });\n  it('should shallow render as <Image> when mocked', function () {\n    var output = render.shallow(React.createElement(Image, {\n      source: {\n        uri: 'foo-bar.jpg'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should shallow render as <ForwardRef(Image)> when not mocked', function () {\n    jest.dontMock(\"../Image\");\n    var output = render.shallow(React.createElement(Image, {\n      source: {\n        uri: 'foo-bar.jpg'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render as <RCTImageView> when not mocked', function () {\n    jest.dontMock(\"../Image\");\n    var instance = render.create(React.createElement(Image, {\n      source: {\n        uri: 'foo-bar.jpg'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }\n    }));\n    expect(instance).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/__tests__/Image-test.js"],"names":["React","require","Image","render","describe","it","instance","create","uri","expect","toMatchSnapshot","output","shallow","jest","dontMock"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,KAAK,GAAGD,OAAO,YAArB;;AACA,IAAME,MAAM,GAAGF,OAAO,0BAAtB;;AAEAG,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1BC,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAc,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE;AAAN,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CAAjB;AACAC,IAAAA,MAAM,CAACH,QAAD,CAAN,CAAiBI,eAAjB;AACD,GAHC,CAAF;AAKAL,EAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACvD,QAAMM,MAAM,GAAGR,MAAM,CAACS,OAAP,CAAe,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACJ,QAAAA,GAAG,EAAE;AAAN,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAAf;AACAC,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeD,eAAf;AACD,GAHC,CAAF;AAKAL,EAAAA,EAAE,CAAC,8DAAD,EAAiE,YAAM;AACvEQ,IAAAA,IAAI,CAACC,QAAL;AAEA,QAAMH,MAAM,GAAGR,MAAM,CAACS,OAAP,CAAe,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACJ,QAAAA,GAAG,EAAE;AAAN,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAAf;AACAC,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeD,eAAf;AACD,GALC,CAAF;AAOAL,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AAC1DQ,IAAAA,IAAI,CAACC,QAAL;AAEA,QAAMR,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAc,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE;AAAN,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CAAjB;AACAC,IAAAA,MAAM,CAACH,QAAD,CAAN,CAAiBI,eAAjB;AACD,GALC,CAAF;AAMD,CAxBO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst Image = require('../Image');\nconst render = require('../../../jest/renderer');\n\ndescribe('<Image />', () => {\n  it('should render as <Image> when mocked', () => {\n    const instance = render.create(<Image source={{uri: 'foo-bar.jpg'}} />);\n    expect(instance).toMatchSnapshot();\n  });\n\n  it('should shallow render as <Image> when mocked', () => {\n    const output = render.shallow(<Image source={{uri: 'foo-bar.jpg'}} />);\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should shallow render as <ForwardRef(Image)> when not mocked', () => {\n    jest.dontMock('../Image');\n\n    const output = render.shallow(<Image source={{uri: 'foo-bar.jpg'}} />);\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render as <RCTImageView> when not mocked', () => {\n    jest.dontMock('../Image');\n\n    const instance = render.create(<Image source={{uri: 'foo-bar.jpg'}} />);\n    expect(instance).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}