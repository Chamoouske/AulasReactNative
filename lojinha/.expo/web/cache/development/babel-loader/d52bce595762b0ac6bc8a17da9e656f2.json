{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDevToolsMiddleware;\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _child_process() {\n  var data = require(\"child_process\");\n\n  _child_process = function _child_process() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction launchDefaultDebugger(host, port) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var hostname = host || 'localhost';\n  var debuggerURL = \"http://\" + hostname + \":\" + port + \"/debugger-ui\" + args;\n\n  _cliTools().logger.info('Launching Dev Tools...');\n\n  (0, _cliTools().launchDebugger)(debuggerURL);\n}\n\nfunction escapePath(pathname) {\n  return \"\\\"\" + pathname + \"\\\"\";\n}\n\nfunction launchDevTools(_ref, isDebuggerConnected) {\n  var host = _ref.host,\n      port = _ref.port,\n      watchFolders = _ref.watchFolders;\n  var customDebugger = process.env.REACT_DEBUGGER;\n\n  if (customDebugger) {\n    startCustomDebugger({\n      watchFolders: watchFolders,\n      customDebugger: customDebugger\n    });\n  } else if (!isDebuggerConnected()) {\n    launchDefaultDebugger(host, port);\n  }\n}\n\nfunction startCustomDebugger(_ref2) {\n  var watchFolders = _ref2.watchFolders,\n      customDebugger = _ref2.customDebugger;\n  var folders = watchFolders.map(escapePath).join(' ');\n  var command = customDebugger + \" \" + folders;\n\n  _cliTools().logger.info('Starting custom debugger by executing:', command);\n\n  (0, _child_process().exec)(command, function (error) {\n    if (error !== null) {\n      _cliTools().logger.error('Error while starting custom debugger:', error.stack || '');\n    }\n  });\n}\n\nfunction getDevToolsMiddleware(options, isDebuggerConnected) {\n  return function devToolsMiddleware(_req, res) {\n    launchDevTools(options, isDebuggerConnected);\n    res.end('OK');\n  };\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-server-api/build/devToolsMiddleware.js"],"names":["Object","defineProperty","exports","value","default","getDevToolsMiddleware","_cliTools","data","require","_child_process","launchDefaultDebugger","host","port","args","hostname","debuggerURL","logger","info","launchDebugger","escapePath","pathname","launchDevTools","isDebuggerConnected","watchFolders","customDebugger","process","env","REACT_DEBUGGER","startCustomDebugger","folders","map","join","command","exec","error","stack","options","devToolsMiddleware","_req","res","end"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qBAAlB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGC,OAAO,CAAC,mCAAD,CAApB;;AAEAF,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASE,cAAT,GAA0B;AACxB,MAAMF,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEAC,EAAAA,cAAc,GAAG,0BAAY;AAC3B,WAAOF,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAQD,SAASG,qBAAT,CAA+BC,IAA/B,EAAqCC,IAArC,EAAsD;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AACpD,MAAMC,QAAQ,GAAGH,IAAI,IAAI,WAAzB;AACA,MAAMI,WAAW,eAAaD,QAAb,SAAyBF,IAAzB,oBAA4CC,IAA7D;;AAEAP,EAAAA,SAAS,GAAGU,MAAZ,CAAmBC,IAAnB,CAAwB,wBAAxB;;AAEA,GAAC,GAAGX,SAAS,GAAGY,cAAhB,EAAgCH,WAAhC;AACD;;AAED,SAASI,UAAT,CAAoBC,QAApB,EAA8B;AAE5B,gBAAWA,QAAX;AACD;;AAED,SAASC,cAAT,OAIGC,mBAJH,EAIwB;AAAA,MAHtBX,IAGsB,QAHtBA,IAGsB;AAAA,MAFtBC,IAEsB,QAFtBA,IAEsB;AAAA,MADtBW,YACsB,QADtBA,YACsB;AAEtB,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAnC;;AAEA,MAAIH,cAAJ,EAAoB;AAClBI,IAAAA,mBAAmB,CAAC;AAClBL,MAAAA,YAAY,EAAZA,YADkB;AAElBC,MAAAA,cAAc,EAAdA;AAFkB,KAAD,CAAnB;AAID,GALD,MAKO,IAAI,CAACF,mBAAmB,EAAxB,EAA4B;AAEjCZ,IAAAA,qBAAqB,CAACC,IAAD,EAAOC,IAAP,CAArB;AACD;AACF;;AAED,SAASgB,mBAAT,QAGG;AAAA,MAFDL,YAEC,SAFDA,YAEC;AAAA,MADDC,cACC,SADDA,cACC;AACD,MAAMK,OAAO,GAAGN,YAAY,CAACO,GAAb,CAAiBX,UAAjB,EAA6BY,IAA7B,CAAkC,GAAlC,CAAhB;AACA,MAAMC,OAAO,GAAMR,cAAN,SAAwBK,OAArC;;AAEAvB,EAAAA,SAAS,GAAGU,MAAZ,CAAmBC,IAAnB,CAAwB,wCAAxB,EAAkEe,OAAlE;;AAEA,GAAC,GAAGvB,cAAc,GAAGwB,IAArB,EAA2BD,OAA3B,EAAoC,UAAUE,KAAV,EAAiB;AACnD,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB5B,MAAAA,SAAS,GAAGU,MAAZ,CAAmBkB,KAAnB,CAAyB,uCAAzB,EAAkEA,KAAK,CAACC,KAAN,IAAe,EAAjF;AACD;AACF,GAJD;AAKD;;AAED,SAAS9B,qBAAT,CAA+B+B,OAA/B,EAAwCd,mBAAxC,EAA6D;AAC3D,SAAO,SAASe,kBAAT,CAA4BC,IAA5B,EAAkCC,GAAlC,EAAuC;AAC5ClB,IAAAA,cAAc,CAACe,OAAD,EAAUd,mBAAV,CAAd;AACAiB,IAAAA,GAAG,CAACC,GAAJ,CAAQ,IAAR;AACD,GAHD;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDevToolsMiddleware;\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _child_process() {\n  const data = require(\"child_process\");\n\n  _child_process = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction launchDefaultDebugger(host, port, args = '') {\n  const hostname = host || 'localhost';\n  const debuggerURL = `http://${hostname}:${port}/debugger-ui${args}`;\n\n  _cliTools().logger.info('Launching Dev Tools...');\n\n  (0, _cliTools().launchDebugger)(debuggerURL);\n}\n\nfunction escapePath(pathname) {\n  // \" Can escape paths with spaces in OS X, Windows, and *nix\n  return `\"${pathname}\"`;\n}\n\nfunction launchDevTools({\n  host,\n  port,\n  watchFolders\n}, isDebuggerConnected) {\n  // Explicit config always wins\n  const customDebugger = process.env.REACT_DEBUGGER;\n\n  if (customDebugger) {\n    startCustomDebugger({\n      watchFolders,\n      customDebugger\n    });\n  } else if (!isDebuggerConnected()) {\n    // Debugger is not yet open; we need to open a session\n    launchDefaultDebugger(host, port);\n  }\n}\n\nfunction startCustomDebugger({\n  watchFolders,\n  customDebugger\n}) {\n  const folders = watchFolders.map(escapePath).join(' ');\n  const command = `${customDebugger} ${folders}`;\n\n  _cliTools().logger.info('Starting custom debugger by executing:', command);\n\n  (0, _child_process().exec)(command, function (error) {\n    if (error !== null) {\n      _cliTools().logger.error('Error while starting custom debugger:', error.stack || '');\n    }\n  });\n}\n\nfunction getDevToolsMiddleware(options, isDebuggerConnected) {\n  return function devToolsMiddleware(_req, res) {\n    launchDevTools(options, isDebuggerConnected);\n    res.end('OK');\n  };\n}\n\n//# sourceMappingURL=devToolsMiddleware.js.map"]},"metadata":{},"sourceType":"script"}