{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/TextInput/__tests__/InputAccessoryView-test.js\";\n\nvar React = require('react');\n\nvar View = require(\"../../View/View\");\n\nvar InputAccessoryView = require(\"../InputAccessoryView\");\n\nvar render = require(\"../../../../jest/renderer\");\n\ndescribe('<InputAccessoryView />', function () {\n  it('should render as <RCTInputAccessoryView> when mocked', function () {\n    var instance = render.create(React.createElement(InputAccessoryView, {\n      nativeID: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    })));\n    expect(instance).toMatchSnapshot();\n  });\n  it('should shallow render as <InputAccessoryView> when mocked', function () {\n    var output = render.shallow(React.createElement(InputAccessoryView, {\n      nativeID: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })));\n    expect(output).toMatchSnapshot();\n  });\n  it('should shallow render as <InputAccessoryView> when not mocked', function () {\n    jest.dontMock(\"../InputAccessoryView\");\n    var output = render.shallow(React.createElement(InputAccessoryView, {\n      nativeID: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    })));\n    expect(output).toMatchSnapshot();\n  });\n  it('should render as <RCTInputAccessoryView> when not mocked', function () {\n    jest.dontMock(\"../InputAccessoryView\");\n    var instance = render.create(React.createElement(InputAccessoryView, {\n      nativeID: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })));\n    expect(instance).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/TextInput/__tests__/InputAccessoryView-test.js"],"names":["React","require","View","InputAccessoryView","render","describe","it","instance","create","expect","toMatchSnapshot","output","shallow","jest","dontMock"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,mBAApB;;AACA,IAAME,kBAAkB,GAAGF,OAAO,yBAAlC;;AACA,IAAMG,MAAM,GAAGH,OAAO,6BAAtB;;AAEAI,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvCC,EAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAM;AAC/D,QAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CACf,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADe,CAAjB;AAKAC,IAAAA,MAAM,CAACF,QAAD,CAAN,CAAiBG,eAAjB;AACD,GAPC,CAAF;AASAJ,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AACpE,QAAMK,MAAM,GAAGP,MAAM,CAACQ,OAAP,CACb,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa,CAAf;AAKAH,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeD,eAAf;AACD,GAPC,CAAF;AASAJ,EAAAA,EAAE,CAAC,+DAAD,EAAkE,YAAM;AACxEO,IAAAA,IAAI,CAACC,QAAL;AAEA,QAAMH,MAAM,GAAGP,MAAM,CAACQ,OAAP,CACb,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa,CAAf;AAKAH,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeD,eAAf;AACD,GATC,CAAF;AAWAJ,EAAAA,EAAE,CAAC,0DAAD,EAA6D,YAAM;AACnEO,IAAAA,IAAI,CAACC,QAAL;AAEA,QAAMP,QAAQ,GAAGH,MAAM,CAACI,MAAP,CACf,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADe,CAAjB;AAKAC,IAAAA,MAAM,CAACF,QAAD,CAAN,CAAiBG,eAAjB;AACD,GATC,CAAF;AAUD,CAxCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst View = require('../../View/View');\nconst InputAccessoryView = require('../InputAccessoryView');\nconst render = require('../../../../jest/renderer');\n\ndescribe('<InputAccessoryView />', () => {\n  it('should render as <RCTInputAccessoryView> when mocked', () => {\n    const instance = render.create(\n      <InputAccessoryView nativeID=\"1\">\n        <View />\n      </InputAccessoryView>,\n    );\n    expect(instance).toMatchSnapshot();\n  });\n\n  it('should shallow render as <InputAccessoryView> when mocked', () => {\n    const output = render.shallow(\n      <InputAccessoryView nativeID=\"1\">\n        <View />\n      </InputAccessoryView>,\n    );\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should shallow render as <InputAccessoryView> when not mocked', () => {\n    jest.dontMock('../InputAccessoryView');\n\n    const output = render.shallow(\n      <InputAccessoryView nativeID=\"1\">\n        <View />\n      </InputAccessoryView>,\n    );\n    expect(output).toMatchSnapshot();\n  });\n\n  it('should render as <RCTInputAccessoryView> when not mocked', () => {\n    jest.dontMock('../InputAccessoryView');\n\n    const instance = render.create(\n      <InputAccessoryView nativeID=\"1\">\n        <View />\n      </InputAccessoryView>,\n    );\n    expect(instance).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}