{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _execa() {\n  var data = _interopRequireDefault(require(\"execa\"));\n\n  _execa = function _execa() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _inquirer() {\n  var data = _interopRequireDefault(require(\"inquirer\"));\n\n  _inquirer = function _inquirer() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _checkInstallation = require(\"../checkInstallation\");\n\nvar _packageManagers = require(\"./packageManagers\");\n\nvar _common = require(\"./common\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar label = 'ios-deploy';\nvar installationWithYarn = 'yarn global add ios-deploy';\nvar installationWithNpm = 'npm install ios-deploy --global';\n\nvar identifyInstallationCommand = function identifyInstallationCommand() {\n  if (_packageManagers.packageManager === _checkInstallation.PACKAGE_MANAGERS.YARN) {\n    return installationWithYarn;\n  }\n\n  if (_packageManagers.packageManager === _checkInstallation.PACKAGE_MANAGERS.NPM) {\n    return installationWithNpm;\n  }\n\n  return undefined;\n};\n\nvar installLibrary = function installLibrary(_ref) {\n  var installationCommand, packageManagerToUse, loader, installationCommandArgs;\n  return _regeneratorRuntime.async(function installLibrary$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          installationCommand = _ref.installationCommand, packageManagerToUse = _ref.packageManagerToUse, loader = _ref.loader;\n          _context.prev = 1;\n          loader.start(label + \" (installing with \" + packageManagerToUse + \")\");\n          installationCommandArgs = installationCommand.split(' ');\n          _context.next = 6;\n          return _regeneratorRuntime.awrap((0, _execa().default)(installationCommandArgs[0], installationCommandArgs.splice(1)));\n\n        case 6:\n          loader.succeed(label + \" (installed with \" + packageManagerToUse + \")\");\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          (0, _common.logError)({\n            healthcheck: label,\n            loader: loader,\n            error: _context.t0,\n            command: installationCommand\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\n\nvar _default = {\n  label: label,\n  isRequired: false,\n  description: 'Required for installing your app on a physical device with the CLI',\n  getDiagnostics: function getDiagnostics() {\n    return _regeneratorRuntime.async(function getDiagnostics$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap((0, _checkInstallation.isSoftwareNotInstalled)('ios-deploy'));\n\n          case 2:\n            _context2.t0 = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              needsToBeFixed: _context2.t0\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  runAutomaticFix: function runAutomaticFix(_ref2) {\n    var loader, installationCommand, promptQuestion, installWithYarn, installWithNpm, skipInstallation, _await$_inquirer$defa, chosenPackageManager, shouldInstallWithYarn;\n\n    return _regeneratorRuntime.async(function runAutomaticFix$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            loader = _ref2.loader;\n            loader.stop();\n            installationCommand = identifyInstallationCommand();\n\n            if (!(installationCommand === undefined)) {\n              _context3.next = 19;\n              break;\n            }\n\n            promptQuestion = \"ios-deploy needs to be installed either by \" + _chalk().default.bold('yarn') + \" \" + _chalk().default.reset('or') + \" \" + _chalk().default.bold('npm') + \" \" + _chalk().default.reset() + \", which one do you want to use?\";\n            installWithYarn = 'yarn';\n            installWithNpm = 'npm';\n            skipInstallation = 'Skip installation';\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(_inquirer().default.prompt([{\n              type: 'list',\n              name: 'chosenPackageManager',\n              message: promptQuestion,\n              choices: [installWithYarn, installWithNpm, skipInstallation]\n            }]));\n\n          case 10:\n            _await$_inquirer$defa = _context3.sent;\n            chosenPackageManager = _await$_inquirer$defa.chosenPackageManager;\n            (0, _common.removeMessage)(\"? \" + promptQuestion + \" \" + chosenPackageManager);\n\n            if (!(chosenPackageManager === skipInstallation)) {\n              _context3.next = 17;\n              break;\n            }\n\n            loader.fail();\n            (0, _common.logManualInstallation)({\n              healthcheck: 'ios-deploy',\n              url: 'https://github.com/ios-control/ios-deploy#readme'\n            });\n            return _context3.abrupt(\"return\");\n\n          case 17:\n            shouldInstallWithYarn = chosenPackageManager === installWithYarn;\n            return _context3.abrupt(\"return\", installLibrary({\n              installationCommand: shouldInstallWithYarn ? installationWithYarn : installationWithNpm,\n              loader: loader,\n              packageManagerToUse: chosenPackageManager\n            }));\n\n          case 19:\n            return _context3.abrupt(\"return\", installLibrary({\n              installationCommand: installationCommand,\n              packageManagerToUse: _packageManagers.packageManager.toLowerCase(),\n              loader: loader\n            }));\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/doctor/healthchecks/iosDeploy.js"],"names":["Object","defineProperty","exports","value","default","_execa","data","_interopRequireDefault","require","_chalk","_inquirer","_checkInstallation","_packageManagers","_common","obj","__esModule","label","installationWithYarn","installationWithNpm","identifyInstallationCommand","packageManager","PACKAGE_MANAGERS","YARN","NPM","undefined","installLibrary","installationCommand","packageManagerToUse","loader","start","installationCommandArgs","split","splice","succeed","logError","healthcheck","error","command","_default","isRequired","description","getDiagnostics","isSoftwareNotInstalled","needsToBeFixed","runAutomaticFix","stop","promptQuestion","bold","reset","installWithYarn","installWithNpm","skipInstallation","prompt","type","name","message","choices","chosenPackageManager","removeMessage","fail","logManualInstallation","url","shouldInstallWithYarn","toLowerCase"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _execa() {\n  const data = _interopRequireDefault(require(\"execa\"));\n\n  _execa = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _inquirer() {\n  const data = _interopRequireDefault(require(\"inquirer\"));\n\n  _inquirer = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _checkInstallation = require(\"../checkInstallation\");\n\nvar _packageManagers = require(\"./packageManagers\");\n\nvar _common = require(\"./common\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-ignore untyped\nconst label = 'ios-deploy';\nconst installationWithYarn = 'yarn global add ios-deploy';\nconst installationWithNpm = 'npm install ios-deploy --global';\n\nconst identifyInstallationCommand = () => {\n  if (_packageManagers.packageManager === _checkInstallation.PACKAGE_MANAGERS.YARN) {\n    return installationWithYarn;\n  }\n\n  if (_packageManagers.packageManager === _checkInstallation.PACKAGE_MANAGERS.NPM) {\n    return installationWithNpm;\n  }\n\n  return undefined;\n};\n\nconst installLibrary = async ({\n  installationCommand,\n  packageManagerToUse,\n  loader\n}) => {\n  try {\n    loader.start(`${label} (installing with ${packageManagerToUse})`);\n    const installationCommandArgs = installationCommand.split(' ');\n    await (0, _execa().default)(installationCommandArgs[0], installationCommandArgs.splice(1));\n    loader.succeed(`${label} (installed with ${packageManagerToUse})`);\n  } catch (error) {\n    (0, _common.logError)({\n      healthcheck: label,\n      loader,\n      error,\n      command: installationCommand\n    });\n  }\n};\n\nvar _default = {\n  label,\n  isRequired: false,\n  description: 'Required for installing your app on a physical device with the CLI',\n  getDiagnostics: async () => ({\n    needsToBeFixed: await (0, _checkInstallation.isSoftwareNotInstalled)('ios-deploy')\n  }),\n  runAutomaticFix: async ({\n    loader\n  }) => {\n    loader.stop();\n    const installationCommand = identifyInstallationCommand(); // This means that we couldn't \"guess\" the package manager\n\n    if (installationCommand === undefined) {\n      const promptQuestion = `ios-deploy needs to be installed either by ${_chalk().default.bold('yarn')} ${_chalk().default.reset('or')} ${_chalk().default.bold('npm')} ${_chalk().default.reset()}, which one do you want to use?`;\n      const installWithYarn = 'yarn';\n      const installWithNpm = 'npm';\n      const skipInstallation = 'Skip installation';\n      const {\n        chosenPackageManager\n      } = await _inquirer().default.prompt([{\n        type: 'list',\n        name: 'chosenPackageManager',\n        message: promptQuestion,\n        choices: [installWithYarn, installWithNpm, skipInstallation]\n      }]);\n      (0, _common.removeMessage)(`? ${promptQuestion} ${chosenPackageManager}`);\n\n      if (chosenPackageManager === skipInstallation) {\n        loader.fail(); // Then we just print out the URL that the user can head to download the library\n\n        (0, _common.logManualInstallation)({\n          healthcheck: 'ios-deploy',\n          url: 'https://github.com/ios-control/ios-deploy#readme'\n        });\n        return;\n      }\n\n      const shouldInstallWithYarn = chosenPackageManager === installWithYarn;\n      return installLibrary({\n        installationCommand: shouldInstallWithYarn ? installationWithYarn : installationWithNpm,\n        loader,\n        packageManagerToUse: chosenPackageManager\n      });\n    }\n\n    return installLibrary({\n      installationCommand,\n      packageManagerToUse: _packageManagers.packageManager.toLowerCase(),\n      loader\n    });\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=iosDeploy.js.map"]},"metadata":{},"sourceType":"script"}