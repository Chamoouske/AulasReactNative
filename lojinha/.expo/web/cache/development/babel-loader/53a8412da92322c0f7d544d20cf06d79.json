{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getRecoveryPropsToSave } from \"./ErroRecoveryStore\";\nimport ExpoErrorRecovery from \"./ExpoErrorRecovery\";\n\nif (Platform.OS !== 'web') {\n  var globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(function _callee(error, isFatal) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!ExpoErrorRecovery.saveRecoveryProps) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave()));\n\n          case 3:\n            globalHandler(error, isFatal);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n} else if (Platform.OS === 'web' && canUseDOM) {\n  window.addEventListener('error', function () {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/expo-error-recovery/src/ErrorRecovery.fx.ts"],"names":["canUseDOM","getRecoveryPropsToSave","ExpoErrorRecovery","Platform","OS","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","error","isFatal","saveRecoveryProps","window","addEventListener"],"mappings":";AAAA,SAASA,SAAT,QAA0B,+BAA1B;;AAGA,SAASC,sBAAT;AACA,OAAOC,iBAAP;;AAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,MAAMC,aAAa,GAAGC,UAAU,CAACC,gBAAX,EAAtB;AAGAD,EAAAA,UAAU,CAACE,gBAAX,CAA4B,iBAAOC,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtBR,iBAAiB,CAACS,iBADI;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAElBT,iBAAiB,CAACS,iBAAlB,CAAoCV,sBAAsB,EAA1D,CAFkB;;AAAA;AAI1BI,YAAAA,aAAa,CAACI,KAAD,EAAQC,OAAR,CAAb;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;AAMD,CAVD,MAUO,IAAIP,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyBJ,SAA7B,EAAwC;AAC7CY,EAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACrCX,IAAAA,iBAAiB,CAACS,iBAAlB,CAAoCV,sBAAsB,EAA1D;AACD,GAFD;AAGD","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Platform } from 'react-native';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && canUseDOM) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"]},"metadata":{},"sourceType":"module"}