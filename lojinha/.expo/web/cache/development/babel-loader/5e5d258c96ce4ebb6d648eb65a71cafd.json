{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/setAndForwardRef-test.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactTestRenderer = require('react-test-renderer');\n\nvar setAndForwardRef = require(\"../setAndForwardRef\");\n\ndescribe('setAndForwardRef', function () {\n  var innerFuncCalled = false;\n  var outerFuncCalled = false;\n\n  var ForwardedComponent = function (_React$Component) {\n    _inherits(ForwardedComponent, _React$Component);\n\n    var _super = _createSuper(ForwardedComponent);\n\n    function ForwardedComponent() {\n      _classCallCheck(this, ForwardedComponent);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(ForwardedComponent, [{\n      key: \"testFunc\",\n      value: function testFunc() {\n        innerFuncCalled = true;\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return null;\n      }\n    }]);\n\n    return ForwardedComponent;\n  }(React.Component);\n\n  var TestComponent = function (_React$Component2) {\n    _inherits(TestComponent, _React$Component2);\n\n    var _super2 = _createSuper(TestComponent);\n\n    function TestComponent() {\n      var _this2;\n\n      _classCallCheck(this, TestComponent);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2._nativeRef = null;\n      _this2._setNativeRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this2.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          _this2._nativeRef = ref;\n        }\n      });\n      return _this2;\n    }\n\n    _createClass(TestComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.props.callFunc) {\n          outerFuncCalled = this._nativeRef && this._nativeRef.testFunc();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ForwardedComponent, {\n          ref: this._setNativeRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        });\n      }\n    }]);\n\n    return TestComponent;\n  }(React.Component);\n\n  var TestComponentWithRef = React.forwardRef(function (props, ref) {\n    return React.createElement(TestComponent, _extends({}, props, {\n      forwardedRef: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }));\n  });\n  beforeEach(function () {\n    innerFuncCalled = false;\n    outerFuncCalled = false;\n  });\n  it('should forward refs (function-based)', function () {\n    var testRef = null;\n    ReactTestRenderer.create(React.createElement(TestComponentWithRef, {\n      ref: function ref(_ref) {\n        testRef = _ref;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n    var val = testRef && testRef.testFunc();\n    expect(innerFuncCalled).toBe(true);\n    expect(val).toBe(true);\n  });\n  it('should forward refs (createRef-based)', function () {\n    var createdRef = React.createRef();\n    ReactTestRenderer.create(React.createElement(TestComponentWithRef, {\n      ref: createdRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }\n    }));\n    var val = createdRef.current && createdRef.current.testFunc();\n    expect(innerFuncCalled).toBe(true);\n    expect(val).toBe(true);\n  });\n  it('should forward refs (string-based)', function () {\n    var Test = function (_React$Component3) {\n      _inherits(Test, _React$Component3);\n\n      var _super3 = _createSuper(Test);\n\n      function Test() {\n        _classCallCheck(this, Test);\n\n        return _super3.apply(this, arguments);\n      }\n\n      _createClass(Test, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.refs.stringRef && this.refs.stringRef.testFunc();\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(TestComponentWithRef, {\n            ref: \"stringRef\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 16\n            }\n          });\n        }\n      }]);\n\n      return Test;\n    }(React.Component);\n\n    ReactTestRenderer.create(React.createElement(Test, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }\n    }));\n    expect(innerFuncCalled).toBe(true);\n  });\n  it('should be able to use the ref from inside of the forwarding class', function () {\n    expect(function () {\n      return ReactTestRenderer.create(React.createElement(TestComponentWithRef, {\n        callFunc: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 32\n        }\n      }));\n    }).not.toThrow();\n    expect(innerFuncCalled).toBe(true);\n    expect(outerFuncCalled).toBe(true);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/setAndForwardRef-test.js"],"names":["React","require","ReactTestRenderer","setAndForwardRef","describe","innerFuncCalled","outerFuncCalled","ForwardedComponent","Component","TestComponent","_nativeRef","_setNativeRef","getForwardedRef","props","forwardedRef","setLocalRef","ref","callFunc","testFunc","TestComponentWithRef","forwardRef","beforeEach","it","testRef","create","val","expect","toBe","createdRef","createRef","current","Test","refs","stringRef","not","toThrow"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactTestRenderer = require('react-test-renderer');\n\nconst setAndForwardRef = require('../setAndForwardRef');\n\ndescribe('setAndForwardRef', () => {\n  let innerFuncCalled = false;\n  let outerFuncCalled = false;\n\n  class ForwardedComponent extends React.Component<{||}> {\n    testFunc() {\n      innerFuncCalled = true;\n      return true;\n    }\n\n    render() {\n      return null;\n    }\n  }\n\n  type Props = $ReadOnly<{|\n    callFunc?: ?boolean,\n    forwardedRef: React.Ref<typeof ForwardedComponent>,\n  |}>;\n\n  class TestComponent extends React.Component<Props> {\n    _nativeRef: ?React.ElementRef<typeof ForwardedComponent> = null;\n    _setNativeRef = setAndForwardRef({\n      getForwardedRef: () => this.props.forwardedRef,\n      setLocalRef: ref => {\n        this._nativeRef = ref;\n      },\n    });\n\n    componentDidMount() {\n      if (this.props.callFunc) {\n        outerFuncCalled = this._nativeRef && this._nativeRef.testFunc();\n      }\n    }\n\n    render() {\n      return <ForwardedComponent ref={this._setNativeRef} />;\n    }\n  }\n\n  const TestComponentWithRef = React.forwardRef((props, ref) => (\n    <TestComponent {...props} forwardedRef={ref} />\n  ));\n\n  beforeEach(() => {\n    innerFuncCalled = false;\n    outerFuncCalled = false;\n  });\n\n  it('should forward refs (function-based)', () => {\n    let testRef: ?React.ElementRef<typeof ForwardedComponent> = null;\n\n    ReactTestRenderer.create(\n      <TestComponentWithRef\n        ref={ref => {\n          testRef = ref;\n        }}\n      />,\n    );\n\n    const val = testRef && testRef.testFunc();\n\n    expect(innerFuncCalled).toBe(true);\n    expect(val).toBe(true);\n  });\n\n  it('should forward refs (createRef-based)', () => {\n    const createdRef = React.createRef<typeof ForwardedComponent>();\n\n    /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.89 was deployed. To see the error, delete this\n     * comment and run Flow. */\n    ReactTestRenderer.create(<TestComponentWithRef ref={createdRef} />);\n\n    /* $FlowFixMe(>=0.87.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.87 was deployed. To see the error, delete this\n     * comment and run Flow. */\n    const val = createdRef.current && createdRef.current.testFunc();\n\n    expect(innerFuncCalled).toBe(true);\n    expect(val).toBe(true);\n  });\n\n  it('should forward refs (string-based)', () => {\n    class Test extends React.Component<{||}> {\n      refs: $ReadOnly<{|\n        stringRef?: ?React.ElementRef<typeof ForwardedComponent>,\n      |}>;\n\n      componentDidMount() {\n        /* eslint-disable react/no-string-refs */\n        this.refs.stringRef && this.refs.stringRef.testFunc();\n        /* eslint-enable react/no-string-refs */\n      }\n\n      render() {\n        /**\n         * Can't directly pass the test component to `ReactTestRenderer.create`,\n         * otherwise it will throw. See:\n         * https://reactjs.org/warnings/refs-must-have-owner.html#strings-refs-outside-the-render-method\n         */\n        /* eslint-disable react/no-string-refs */\n        return <TestComponentWithRef ref=\"stringRef\" />;\n        /* eslint-enable react/no-string-refs */\n      }\n    }\n\n    ReactTestRenderer.create(<Test />);\n\n    expect(innerFuncCalled).toBe(true);\n  });\n\n  it('should be able to use the ref from inside of the forwarding class', () => {\n    expect(() =>\n      ReactTestRenderer.create(<TestComponentWithRef callFunc={true} />),\n    ).not.toThrow();\n\n    expect(innerFuncCalled).toBe(true);\n    expect(outerFuncCalled).toBe(true);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}