{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = warnAboutPodInstall;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function _chalk() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getDependenciesFromPodfileLock = _interopRequireDefault(require(\"../link-pods/getDependenciesFromPodfileLock\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction warnAboutPodInstall(config) {\n  var podLockDeps = (0, _getDependenciesFromPodfileLock.default)(config.project.ios.podfile + \".lock\");\n  var podDeps = Object.keys(config.dependencies).map(function (depName) {\n    var dependency = config.dependencies[depName].platforms.ios;\n    return dependency && dependency.podspecPath ? _path().default.basename(dependency.podspecPath).replace(/\\.podspec/, '') : '';\n  }).filter(Boolean);\n  var missingPods = podDeps.filter(function (podDep) {\n    return !podLockDeps.includes(podDep);\n  });\n\n  if (missingPods.length) {\n    _cliTools().logger.error(\"Could not find the following native modules: \" + missingPods.map(function (pod) {\n      return _chalk().default.bold(pod);\n    }).join(', ') + \". Did you forget to run \\\"\" + _chalk().default.bold('pod install') + \"\\\" ?\");\n  }\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/warnAboutPodInstall.js"],"names":["Object","defineProperty","exports","value","default","warnAboutPodInstall","_path","data","_interopRequireDefault","require","_chalk","_cliTools","_getDependenciesFromPodfileLock","obj","__esModule","config","podLockDeps","project","ios","podfile","podDeps","keys","dependencies","map","depName","dependency","platforms","podspecPath","basename","replace","filter","Boolean","missingPods","podDep","includes","length","logger","error","pod","bold","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,mBAAlB;;AAEA,SAASC,KAAT,GAAiB;AACf,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAnC;;AAEAH,EAAAA,KAAK,GAAG,iBAAY;AAClB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASG,MAAT,GAAkB;AAChB,MAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEAC,EAAAA,MAAM,GAAG,kBAAY;AACnB,WAAOH,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASI,SAAT,GAAqB;AACnB,MAAMJ,IAAI,GAAGE,OAAO,CAAC,mCAAD,CAApB;;AAEAE,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOJ,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIK,+BAA+B,GAAGJ,sBAAsB,CAACC,OAAO,+CAAR,CAA5D;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAET,IAAAA,OAAO,EAAES;AAAX,GAArC;AAAwD;;AAE/F,SAASR,mBAAT,CAA6BU,MAA7B,EAAqC;AACnC,MAAMC,WAAW,GAAG,CAAC,GAAGJ,+BAA+B,CAACR,OAApC,EAAgDW,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmBC,OAAnE,WAApB;AACA,MAAMC,OAAO,GAAGpB,MAAM,CAACqB,IAAP,CAAYN,MAAM,CAACO,YAAnB,EAAiCC,GAAjC,CAAqC,UAAAC,OAAO,EAAI;AAC9D,QAAMC,UAAU,GAAGV,MAAM,CAACO,YAAP,CAAoBE,OAApB,EAA6BE,SAA7B,CAAuCR,GAA1D;AACA,WAAOO,UAAU,IAAIA,UAAU,CAACE,WAAzB,GAAuCrB,KAAK,GAAGF,OAAR,CAAgBwB,QAAhB,CAAyBH,UAAU,CAACE,WAApC,EAAiDE,OAAjD,CAAyD,WAAzD,EAAsE,EAAtE,CAAvC,GAAmH,EAA1H;AACD,GAHe,EAGbC,MAHa,CAGNC,OAHM,CAAhB;AAIA,MAAMC,WAAW,GAAGZ,OAAO,CAACU,MAAR,CAAe,UAAAG,MAAM;AAAA,WAAI,CAACjB,WAAW,CAACkB,QAAZ,CAAqBD,MAArB,CAAL;AAAA,GAArB,CAApB;;AAEA,MAAID,WAAW,CAACG,MAAhB,EAAwB;AACtBxB,IAAAA,SAAS,GAAGyB,MAAZ,CAAmBC,KAAnB,mDAAyEL,WAAW,CAACT,GAAZ,CAAgB,UAAAe,GAAG;AAAA,aAAI5B,MAAM,GAAGN,OAAT,CAAiBmC,IAAjB,CAAsBD,GAAtB,CAAJ;AAAA,KAAnB,EAAmDE,IAAnD,CAAwD,IAAxD,CAAzE,kCAAkK9B,MAAM,GAAGN,OAAT,CAAiBmC,IAAjB,CAAsB,aAAtB,CAAlK;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = warnAboutPodInstall;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getDependenciesFromPodfileLock = _interopRequireDefault(require(\"../link-pods/getDependenciesFromPodfileLock\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction warnAboutPodInstall(config) {\n  const podLockDeps = (0, _getDependenciesFromPodfileLock.default)(`${config.project.ios.podfile}.lock`);\n  const podDeps = Object.keys(config.dependencies).map(depName => {\n    const dependency = config.dependencies[depName].platforms.ios;\n    return dependency && dependency.podspecPath ? _path().default.basename(dependency.podspecPath).replace(/\\.podspec/, '') : '';\n  }).filter(Boolean);\n  const missingPods = podDeps.filter(podDep => !podLockDeps.includes(podDep));\n\n  if (missingPods.length) {\n    _cliTools().logger.error(`Could not find the following native modules: ${missingPods.map(pod => _chalk().default.bold(pod)).join(', ')}. Did you forget to run \"${_chalk().default.bold('pod install')}\" ?`);\n  }\n}\n\n//# sourceMappingURL=warnAboutPodInstall.js.map"]},"metadata":{},"sourceType":"script"}