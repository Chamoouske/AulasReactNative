{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/Image.android.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DeprecatedImageStylePropTypes = require(\"../DeprecatedPropTypes/DeprecatedImageStylePropTypes\");\n\nvar DeprecatedStyleSheetPropType = require(\"../DeprecatedPropTypes/DeprecatedStyleSheetPropType\");\n\nvar DeprecatedViewPropTypes = require(\"../DeprecatedPropTypes/DeprecatedViewPropTypes\");\n\nimport ImageViewNativeComponent from \"./ImageViewNativeComponent\";\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar ReactNative = require(\"../Renderer/shims/ReactNative\");\n\nvar StyleSheet = require(\"../StyleSheet/StyleSheet\");\n\nvar TextAncestor = require(\"../Text/TextAncestor\");\n\nvar ImageAnalyticsTagContext = require(\"./ImageAnalyticsTagContext\").default;\n\nvar flattenStyle = require(\"../StyleSheet/flattenStyle\");\n\nvar resolveAssetSource = require(\"./resolveAssetSource\");\n\nimport NativeImageLoaderAndroid from \"./NativeImageLoaderAndroid\";\n\nvar TextInlineImageNativeComponent = require(\"./TextInlineImageNativeComponent\");\n\nvar _requestId = 1;\n\nfunction generateRequestId() {\n  return _requestId++;\n}\n\nvar ImageProps = _objectSpread(_objectSpread({}, DeprecatedViewPropTypes), {}, {\n  style: DeprecatedStyleSheetPropType(DeprecatedImageStylePropTypes),\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string,\n    headers: PropTypes.objectOf(PropTypes.string)\n  }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({\n    uri: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    headers: PropTypes.objectOf(PropTypes.string)\n  }))]),\n  blurRadius: PropTypes.number,\n  defaultSource: PropTypes.number,\n  loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  progressiveRenderingEnabled: PropTypes.bool,\n  fadeDuration: PropTypes.number,\n  internal_analyticTag: PropTypes.string,\n  onLoadStart: PropTypes.func,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLoadEnd: PropTypes.func,\n  testID: PropTypes.string,\n  resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),\n  resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'repeat', 'center'])\n});\n\nfunction getSize(url, success, failure) {\n  return NativeImageLoaderAndroid.getSize(url).then(function (sizes) {\n    success(sizes.width, sizes.height);\n  }).catch(failure || function () {\n    console.warn('Failed to get size for image: ' + url);\n  });\n}\n\nfunction getSizeWithHeaders(url, headers, success, failure) {\n  return NativeImageLoaderAndroid.getSizeWithHeaders(url, headers).then(function (sizes) {\n    success(sizes.width, sizes.height);\n  }).catch(failure || function () {\n    console.warn('Failed to get size for image: ' + url);\n  });\n}\n\nfunction prefetch(url, callback) {\n  var requestId = generateRequestId();\n  callback && callback(requestId);\n  return NativeImageLoaderAndroid.prefetchImage(url, requestId);\n}\n\nfunction abortPrefetch(requestId) {\n  NativeImageLoaderAndroid.abortRequest(requestId);\n}\n\nfunction queryCache(urls) {\n  return _regeneratorRuntime.async(function queryCache$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(NativeImageLoaderAndroid.queryCache(urls));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar Image = function Image(props, forwardedRef) {\n  var _source, _source3;\n\n  var source = resolveAssetSource(props.source);\n  var defaultSource = resolveAssetSource(props.defaultSource);\n  var loadingIndicatorSource = resolveAssetSource(props.loadingIndicatorSource);\n\n  if (source && source.uri === '') {\n    console.warn('source.uri should not be an empty string');\n  }\n\n  if (props.src) {\n    console.warn('The <Image> component requires a `source` property rather than `src`.');\n  }\n\n  if (props.children) {\n    throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.');\n  }\n\n  if (props.defaultSource && props.loadingIndicatorSource) {\n    throw new Error('The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.');\n  }\n\n  if (source && !source.uri && !Array.isArray(source)) {\n    source = null;\n  }\n\n  var style;\n  var sources;\n\n  if (((_source = source) == null ? void 0 : _source.uri) != null) {\n    var _source2 = source,\n        _width = _source2.width,\n        _height = _source2.height;\n    style = flattenStyle([{\n      width: _width,\n      height: _height\n    }, styles.base, props.style]);\n    sources = [{\n      uri: source.uri\n    }];\n  } else {\n    style = flattenStyle([styles.base, props.style]);\n    sources = source;\n  }\n\n  var onLoadStart = props.onLoadStart,\n      onLoad = props.onLoad,\n      onLoadEnd = props.onLoadEnd,\n      onError = props.onError;\n\n  var nativeProps = _objectSpread(_objectSpread({}, props), {}, {\n    style: style,\n    shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),\n    src: sources,\n    headers: (_source3 = source) == null ? void 0 : _source3.headers,\n    defaultSrc: defaultSource ? defaultSource.uri : null,\n    loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null,\n    ref: forwardedRef\n  });\n\n  return React.createElement(ImageAnalyticsTagContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, function (analyticTag) {\n    var nativePropsWithAnalytics = analyticTag !== null ? _objectSpread(_objectSpread({}, nativeProps), {}, {\n      internal_analyticTag: analyticTag\n    }) : nativeProps;\n    return React.createElement(TextAncestor.Consumer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, function (hasTextAncestor) {\n      return hasTextAncestor ? React.createElement(TextInlineImageNativeComponent, _extends({}, nativePropsWithAnalytics, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      })) : React.createElement(ImageViewNativeComponent, _extends({}, nativePropsWithAnalytics, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }));\n    });\n  });\n};\n\nImage = React.forwardRef(Image);\nImage.displayName = 'Image';\nImage.getSize = getSize;\nImage.getSizeWithHeaders = getSizeWithHeaders;\nImage.prefetch = prefetch;\nImage.abortPrefetch = abortPrefetch;\nImage.queryCache = queryCache;\nImage.resolveAssetSource = resolveAssetSource;\nImage.propTypes = ImageProps;\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nmodule.exports = Image;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/Image.android.js"],"names":["DeprecatedImageStylePropTypes","require","DeprecatedStyleSheetPropType","DeprecatedViewPropTypes","ImageViewNativeComponent","PropTypes","React","ReactNative","StyleSheet","TextAncestor","ImageAnalyticsTagContext","default","flattenStyle","resolveAssetSource","NativeImageLoaderAndroid","TextInlineImageNativeComponent","_requestId","generateRequestId","ImageProps","style","source","oneOfType","shape","uri","string","headers","objectOf","number","arrayOf","width","height","blurRadius","defaultSource","loadingIndicatorSource","progressiveRenderingEnabled","bool","fadeDuration","internal_analyticTag","onLoadStart","func","onError","onLoad","onLoadEnd","testID","resizeMethod","oneOf","resizeMode","getSize","url","success","failure","then","sizes","catch","console","warn","getSizeWithHeaders","prefetch","callback","requestId","prefetchImage","abortPrefetch","abortRequest","queryCache","urls","Image","props","forwardedRef","src","children","Error","Array","isArray","sources","styles","base","nativeProps","shouldNotifyLoadEvents","defaultSrc","loadingIndicatorSrc","ref","analyticTag","nativePropsWithAnalytics","hasTextAncestor","forwardRef","displayName","propTypes","create","overflow","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst DeprecatedImageStylePropTypes = require('../DeprecatedPropTypes/DeprecatedImageStylePropTypes');\nconst DeprecatedStyleSheetPropType = require('../DeprecatedPropTypes/DeprecatedStyleSheetPropType');\nconst DeprecatedViewPropTypes = require('../DeprecatedPropTypes/DeprecatedViewPropTypes');\nimport ImageViewNativeComponent from './ImageViewNativeComponent';\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative'); // eslint-disable-line no-unused-vars\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst TextAncestor = require('../Text/TextAncestor');\n\nconst ImageAnalyticsTagContext = require('./ImageAnalyticsTagContext').default;\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst resolveAssetSource = require('./resolveAssetSource');\n\nimport NativeImageLoaderAndroid from './NativeImageLoaderAndroid';\n\nconst TextInlineImageNativeComponent = require('./TextInlineImageNativeComponent');\n\nimport type {ImageProps as ImagePropsType} from './ImageProps';\n\nlet _requestId = 1;\nfunction generateRequestId() {\n  return _requestId++;\n}\n\nconst ImageProps = {\n  ...DeprecatedViewPropTypes,\n  style: (DeprecatedStyleSheetPropType(\n    DeprecatedImageStylePropTypes,\n  ): ReactPropsCheckType),\n  /**\n   * See https://reactnative.dev/docs/image.html#source\n   */\n  source: (PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n      headers: PropTypes.objectOf(PropTypes.string),\n    }),\n    // Opaque type returned by require('./image.jpg')\n    PropTypes.number,\n    // Multiple sources\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        uri: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        headers: PropTypes.objectOf(PropTypes.string),\n      }),\n    ),\n  ]): React$PropType$Primitive<\n    | {\n        headers?: {[string]: string, ...},\n        uri?: string,\n        ...\n      }\n    | number\n    | Array<{\n        headers?: {[string]: string, ...},\n        height?: number,\n        uri?: string,\n        width?: number,\n        ...\n      }>,\n  >),\n  /**\n   * blurRadius: the blur radius of the blur filter added to the image\n   *\n   * See https://reactnative.dev/docs/image.html#blurradius\n   */\n  blurRadius: PropTypes.number,\n  /**\n   * See https://reactnative.dev/docs/image.html#defaultsource\n   */\n  defaultSource: PropTypes.number,\n  /**\n   * See https://reactnative.dev/docs/image.html#loadingindicatorsource\n   */\n  loadingIndicatorSource: (PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./image.jpg')\n    PropTypes.number,\n  ]): React$PropType$Primitive<{uri?: string, ...} | number>),\n  progressiveRenderingEnabled: PropTypes.bool,\n  fadeDuration: PropTypes.number,\n  /**\n   * Analytics Tag used by this Image\n   */\n  internal_analyticTag: PropTypes.string,\n  /**\n   * Invoked on load start\n   */\n  onLoadStart: PropTypes.func,\n  /**\n   * Invoked on load error\n   */\n  onError: PropTypes.func,\n  /**\n   * Invoked when load completes successfully\n   */\n  onLoad: PropTypes.func,\n  /**\n   * Invoked when load either succeeds or fails\n   */\n  onLoadEnd: PropTypes.func,\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID: PropTypes.string,\n  /**\n   * The mechanism that should be used to resize the image when the image's dimensions\n   * differ from the image view's dimensions. Defaults to `auto`.\n   *\n   * See https://reactnative.dev/docs/image.html#resizemethod\n   */\n  resizeMethod: (PropTypes.oneOf([\n    'auto',\n    'resize',\n    'scale',\n  ]): React$PropType$Primitive<'auto' | 'resize' | 'scale'>),\n  /**\n   * Determines how to resize the image when the frame doesn't match the raw\n   * image dimensions.\n   *\n   * See https://reactnative.dev/docs/image.html#resizemode\n   */\n  resizeMode: (PropTypes.oneOf([\n    'cover',\n    'contain',\n    'stretch',\n    'repeat',\n    'center',\n  ]): React$PropType$Primitive<\n    'cover' | 'contain' | 'stretch' | 'repeat' | 'center',\n  >),\n};\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n *\n * See https://reactnative.dev/docs/image.html#getsize\n */\nfunction getSize(\n  url: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n): any {\n  return NativeImageLoaderAndroid.getSize(url)\n    .then(function(sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function() {\n          console.warn('Failed to get size for image: ' + url);\n        },\n    );\n}\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request\n *\n * See https://reactnative.dev/docs/image.html#getsizewithheaders\n */\nfunction getSizeWithHeaders(\n  url: string,\n  headers: {[string]: string, ...},\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n): any {\n  return NativeImageLoaderAndroid.getSizeWithHeaders(url, headers)\n    .then(function(sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function() {\n          console.warn('Failed to get size for image: ' + url);\n        },\n    );\n}\n\nfunction prefetch(url: string, callback: ?Function): any {\n  const requestId = generateRequestId();\n  callback && callback(requestId);\n  return NativeImageLoaderAndroid.prefetchImage(url, requestId);\n}\n\nfunction abortPrefetch(requestId: number) {\n  NativeImageLoaderAndroid.abortRequest(requestId);\n}\n\n/**\n * Perform cache interrogation.\n *\n * See https://reactnative.dev/docs/image.html#querycache\n */\nasync function queryCache(\n  urls: Array<string>,\n): Promise<{[string]: 'memory' | 'disk' | 'disk/memory', ...}> {\n  return await NativeImageLoaderAndroid.queryCache(urls);\n}\n\ntype ImageComponentStatics = $ReadOnly<{|\n  getSize: typeof getSize,\n  getSizeWithHeaders: typeof getSizeWithHeaders,\n  prefetch: typeof prefetch,\n  abortPrefetch: typeof abortPrefetch,\n  queryCache: typeof queryCache,\n  resolveAssetSource: typeof resolveAssetSource,\n  propTypes: typeof ImageProps,\n|}>;\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://reactnative.dev/docs/image.html\n */\nlet Image = (props: ImagePropsType, forwardedRef) => {\n  let source = resolveAssetSource(props.source);\n  const defaultSource = resolveAssetSource(props.defaultSource);\n  const loadingIndicatorSource = resolveAssetSource(\n    props.loadingIndicatorSource,\n  );\n\n  if (source && source.uri === '') {\n    console.warn('source.uri should not be an empty string');\n  }\n\n  if (props.src) {\n    console.warn(\n      'The <Image> component requires a `source` property rather than `src`.',\n    );\n  }\n\n  if (props.children) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n\n  if (props.defaultSource && props.loadingIndicatorSource) {\n    throw new Error(\n      'The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.',\n    );\n  }\n\n  if (source && !source.uri && !Array.isArray(source)) {\n    source = null;\n  }\n\n  let style;\n  let sources;\n  if (source?.uri != null) {\n    const {width, height} = source;\n    style = flattenStyle([{width, height}, styles.base, props.style]);\n    sources = [{uri: source.uri}];\n  } else {\n    style = flattenStyle([styles.base, props.style]);\n    sources = source;\n  }\n\n  const {onLoadStart, onLoad, onLoadEnd, onError} = props;\n  const nativeProps = {\n    ...props,\n    style,\n    shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),\n    src: sources,\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    headers: source?.headers,\n    defaultSrc: defaultSource ? defaultSource.uri : null,\n    loadingIndicatorSrc: loadingIndicatorSource\n      ? loadingIndicatorSource.uri\n      : null,\n    ref: forwardedRef,\n  };\n\n  return (\n    <ImageAnalyticsTagContext.Consumer>\n      {analyticTag => {\n        const nativePropsWithAnalytics =\n          analyticTag !== null\n            ? {\n                ...nativeProps,\n                internal_analyticTag: analyticTag,\n              }\n            : nativeProps;\n        return (\n          <TextAncestor.Consumer>\n            {hasTextAncestor =>\n              hasTextAncestor ? (\n                <TextInlineImageNativeComponent {...nativePropsWithAnalytics} />\n              ) : (\n                <ImageViewNativeComponent {...nativePropsWithAnalytics} />\n              )\n            }\n          </TextAncestor.Consumer>\n        );\n      }}\n    </ImageAnalyticsTagContext.Consumer>\n  );\n};\n\nImage = React.forwardRef<\n  ImagePropsType,\n  | React.ElementRef<typeof TextInlineImageNativeComponent>\n  | React.ElementRef<typeof ImageViewNativeComponent>,\n>(Image);\n\nImage.displayName = 'Image';\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n *\n * See https://reactnative.dev/docs/image.html#getsize\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.getSize = getSize;\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request\n *\n * See https://reactnative.dev/docs/image.html#getsizewithheaders\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.getSizeWithHeaders = getSizeWithHeaders;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache\n *\n * See https://reactnative.dev/docs/image.html#prefetch\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.prefetch = prefetch;\n\n/**\n * Abort prefetch request.\n *\n * See https://reactnative.dev/docs/image.html#abortprefetch\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.abortPrefetch = abortPrefetch;\n\n/**\n * Perform cache interrogation.\n *\n * See https://reactnative.dev/docs/image.html#querycache\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://reactnative.dev/docs/image.html#resolveassetsource\n */\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.resolveAssetSource = resolveAssetSource;\n\n/* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n * error found when Flow v0.89 was deployed. To see the error, delete this\n * comment and run Flow. */\nImage.propTypes = ImageProps;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = ((Image: any): React.AbstractComponent<\n  ImagePropsType,\n  | React.ElementRef<typeof TextInlineImageNativeComponent>\n  | React.ElementRef<typeof ImageViewNativeComponent>,\n> &\n  ImageComponentStatics);\n"]},"metadata":{},"sourceType":"module"}