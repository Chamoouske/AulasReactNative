{"ast":null,"code":"'use strict';\n\nfunction groupByEveryN(array, n) {\n  var result = [];\n  var temp = [];\n\n  for (var i = 0; i < array.length; ++i) {\n    if (i > 0 && i % n === 0) {\n      result.push(temp);\n      temp = [];\n    }\n\n    temp.push(array[i]);\n  }\n\n  if (temp.length > 0) {\n    while (temp.length !== n) {\n      temp.push(null);\n    }\n\n    result.push(temp);\n  }\n\n  return result;\n}\n\nmodule.exports = groupByEveryN;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/groupByEveryN.js"],"names":["groupByEveryN","array","n","result","temp","i","length","push","module","exports"],"mappings":"AA0BA;;AAEA,SAASA,aAAT,CAA0BC,KAA1B,EAA2CC,CAA3C,EAAwE;AACtE,MAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACrC,QAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGH,CAAJ,KAAU,CAAvB,EAA0B;AACxBC,MAAAA,MAAM,CAACI,IAAP,CAAYH,IAAZ;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACDA,IAAAA,IAAI,CAACG,IAAL,CAAUN,KAAK,CAACI,CAAD,CAAf;AACD;;AAED,MAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnB,WAAOF,IAAI,CAACE,MAAL,KAAgBJ,CAAvB,EAA0B;AACxBE,MAAAA,IAAI,CAACG,IAAL,CAAU,IAAV;AACD;;AACDJ,IAAAA,MAAM,CAACI,IAAP,CAAYH,IAAZ;AACD;;AAED,SAAOD,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBT,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n/**\n * Useful method to split an array into groups of the same number of elements.\n * You can use it to generate grids, rows, pages...\n *\n * If the input length is not a multiple of the count, it'll fill the last\n * array with null so you can display a placeholder.\n *\n * Example:\n *   groupByEveryN([1, 2, 3, 4, 5], 3)\n *    => [[1, 2, 3], [4, 5, null]]\n *\n *   groupByEveryN([1, 2, 3], 2).map(elems => {\n *     return <Row>{elems.map(elem => <Elem>{elem}</Elem>)}</Row>;\n *   })\n */\n\n'use strict';\n\nfunction groupByEveryN<T>(array: Array<T>, n: number): Array<Array<?T>> {\n  const result = [];\n  let temp = [];\n\n  for (let i = 0; i < array.length; ++i) {\n    if (i > 0 && i % n === 0) {\n      result.push(temp);\n      temp = [];\n    }\n    temp.push(array[i]);\n  }\n\n  if (temp.length > 0) {\n    while (temp.length !== n) {\n      temp.push(null);\n    }\n    result.push(temp);\n  }\n\n  return result;\n}\n\nmodule.exports = groupByEveryN;\n"]},"metadata":{},"sourceType":"script"}