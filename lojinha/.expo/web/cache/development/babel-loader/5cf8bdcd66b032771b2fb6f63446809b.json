{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar fs = require('fs');\n\nvar generateComponentDescriptorH = require(\"./components/GenerateComponentDescriptorH.js\");\n\nvar generateComponentHObjCpp = require(\"./components/GenerateComponentHObjCpp.js\");\n\nvar generateEventEmitterCpp = require(\"./components/GenerateEventEmitterCpp.js\");\n\nvar generateEventEmitterH = require(\"./components/GenerateEventEmitterH.js\");\n\nvar generatePropsCpp = require(\"./components/GeneratePropsCpp.js\");\n\nvar generatePropsH = require(\"./components/GeneratePropsH.js\");\n\nvar generateModuleH = require(\"./modules/GenerateModuleH.js\");\n\nvar generateModuleCpp = require(\"./modules/GenerateModuleCpp.js\");\n\nvar generateModuleHObjCpp = require(\"./modules/GenerateModuleHObjCpp.js\");\n\nvar generateModuleMm = require(\"./modules/GenerateModuleMm.js\");\n\nvar generatePropsJavaInterface = require(\"./components/GeneratePropsJavaInterface.js\");\n\nvar generatePropsJavaDelegate = require(\"./components/GeneratePropsJavaDelegate.js\");\n\nvar generateTests = require(\"./components/GenerateTests.js\");\n\nvar generateShadowNodeCpp = require(\"./components/GenerateShadowNodeCpp.js\");\n\nvar generateShadowNodeH = require(\"./components/GenerateShadowNodeH.js\");\n\nvar generateViewConfigJs = require(\"./components/GenerateViewConfigJs.js\");\n\nvar path = require('path');\n\nvar schemaValidator = require(\"../SchemaValidator.js\");\n\nvar GENERATORS = {\n  descriptors: [generateComponentDescriptorH.generate],\n  events: [generateEventEmitterCpp.generate, generateEventEmitterH.generate, generateModuleHObjCpp.generate, generateModuleMm.generate],\n  props: [generateComponentHObjCpp.generate, generatePropsCpp.generate, generatePropsH.generate, generatePropsJavaInterface.generate, generatePropsJavaDelegate.generate],\n  modules: [generateModuleCpp.generate, generateModuleH.generate],\n  tests: [generateTests.generate],\n  'shadow-nodes': [generateShadowNodeCpp.generate, generateShadowNodeH.generate]\n};\n\nfunction writeMapToFiles(map, outputDir) {\n  var success = true;\n  map.forEach(function (contents, fileName) {\n    try {\n      var location = path.join(outputDir, fileName);\n      fs.writeFileSync(location, contents);\n    } catch (error) {\n      success = false;\n      console.error(\"Failed to write \" + fileName + \" to \" + outputDir, error);\n    }\n  });\n  return success;\n}\n\nfunction checkFilesForChanges(map, outputDir) {\n  var hasChanged = false;\n  map.forEach(function (contents, fileName) {\n    var location = path.join(outputDir, fileName);\n    var currentContents = fs.readFileSync(location, 'utf8');\n\n    if (currentContents !== contents) {\n      console.error(\"- \" + fileName + \" has changed\");\n      hasChanged = true;\n    }\n  });\n  return !hasChanged;\n}\n\nmodule.exports = {\n  generate: function generate(_ref, _ref2) {\n    var libraryName = _ref.libraryName,\n        schema = _ref.schema,\n        outputDirectory = _ref.outputDirectory,\n        moduleSpecName = _ref.moduleSpecName;\n    var generators = _ref2.generators,\n        test = _ref2.test;\n    schemaValidator.validate(schema);\n    var generatedFiles = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(generators), _step; !(_step = _iterator()).done;) {\n      var name = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(GENERATORS[name]), _step2; !(_step2 = _iterator2()).done;) {\n        var generator = _step2.value;\n        generatedFiles.push.apply(generatedFiles, _toConsumableArray(generator(libraryName, schema, moduleSpecName)));\n      }\n    }\n\n    var filesToUpdate = new Map([].concat(generatedFiles));\n\n    if (test === true) {\n      return checkFilesForChanges(filesToUpdate, outputDirectory);\n    }\n\n    return writeMapToFiles(filesToUpdate, outputDirectory);\n  },\n  generateViewConfig: function generateViewConfig(_ref3) {\n    var libraryName = _ref3.libraryName,\n        schema = _ref3.schema;\n    schemaValidator.validate(schema);\n    var result = generateViewConfigJs.generate(libraryName, schema).values().next();\n\n    if (typeof result.value !== 'string') {\n      throw new Error(\"Failed to generate view config for \" + libraryName);\n    }\n\n    return result.value;\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/RNCodegen.js"],"names":["fs","require","generateComponentDescriptorH","generateComponentHObjCpp","generateEventEmitterCpp","generateEventEmitterH","generatePropsCpp","generatePropsH","generateModuleH","generateModuleCpp","generateModuleHObjCpp","generateModuleMm","generatePropsJavaInterface","generatePropsJavaDelegate","generateTests","generateShadowNodeCpp","generateShadowNodeH","generateViewConfigJs","path","schemaValidator","GENERATORS","descriptors","generate","events","props","modules","tests","writeMapToFiles","map","outputDir","success","forEach","contents","fileName","location","join","writeFileSync","error","console","checkFilesForChanges","hasChanged","currentContents","readFileSync","module","exports","libraryName","schema","outputDirectory","moduleSpecName","generators","test","validate","generatedFiles","name","generator","push","filesToUpdate","Map","generateViewConfig","result","values","next","value","Error"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\n/*\nTODO:\n\n- ViewConfigs should spread in View's valid attributes\n*/\n\nconst fs = require('fs');\nconst generateComponentDescriptorH = require('./components/GenerateComponentDescriptorH.js');\nconst generateComponentHObjCpp = require('./components/GenerateComponentHObjCpp.js');\nconst generateEventEmitterCpp = require('./components/GenerateEventEmitterCpp.js');\nconst generateEventEmitterH = require('./components/GenerateEventEmitterH.js');\nconst generatePropsCpp = require('./components/GeneratePropsCpp.js');\nconst generatePropsH = require('./components/GeneratePropsH.js');\nconst generateModuleH = require('./modules/GenerateModuleH.js');\nconst generateModuleCpp = require('./modules/GenerateModuleCpp.js');\nconst generateModuleHObjCpp = require('./modules/GenerateModuleHObjCpp.js');\nconst generateModuleMm = require('./modules/GenerateModuleMm.js');\nconst generatePropsJavaInterface = require('./components/GeneratePropsJavaInterface.js');\nconst generatePropsJavaDelegate = require('./components/GeneratePropsJavaDelegate.js');\nconst generateTests = require('./components/GenerateTests.js');\nconst generateShadowNodeCpp = require('./components/GenerateShadowNodeCpp.js');\nconst generateShadowNodeH = require('./components/GenerateShadowNodeH.js');\nconst generateViewConfigJs = require('./components/GenerateViewConfigJs.js');\nconst path = require('path');\nconst schemaValidator = require('../SchemaValidator.js');\n\nimport type {SchemaType} from '../CodegenSchema';\n\ntype Options = $ReadOnly<{|\n  libraryName: string,\n  schema: SchemaType,\n  outputDirectory: string,\n  moduleSpecName: string,\n|}>;\n\ntype Generators =\n  | 'descriptors'\n  | 'events'\n  | 'props'\n  | 'tests'\n  | 'shadow-nodes'\n  | 'modules';\n\ntype Config = $ReadOnly<{|\n  generators: Array<Generators>,\n  test?: boolean,\n|}>;\n\nconst GENERATORS = {\n  descriptors: [generateComponentDescriptorH.generate],\n  events: [\n    generateEventEmitterCpp.generate,\n    generateEventEmitterH.generate,\n    generateModuleHObjCpp.generate,\n    generateModuleMm.generate,\n  ],\n  props: [\n    generateComponentHObjCpp.generate,\n    generatePropsCpp.generate,\n    generatePropsH.generate,\n    generatePropsJavaInterface.generate,\n    generatePropsJavaDelegate.generate,\n  ],\n  modules: [generateModuleCpp.generate, generateModuleH.generate],\n  tests: [generateTests.generate],\n  'shadow-nodes': [\n    generateShadowNodeCpp.generate,\n    generateShadowNodeH.generate,\n  ],\n};\n\nfunction writeMapToFiles(map: Map<string, string>, outputDir: string) {\n  let success = true;\n  map.forEach((contents: string, fileName: string) => {\n    try {\n      const location = path.join(outputDir, fileName);\n      fs.writeFileSync(location, contents);\n    } catch (error) {\n      success = false;\n      console.error(`Failed to write ${fileName} to ${outputDir}`, error);\n    }\n  });\n\n  return success;\n}\n\nfunction checkFilesForChanges(\n  map: Map<string, string>,\n  outputDir: string,\n): boolean {\n  let hasChanged = false;\n\n  map.forEach((contents: string, fileName: string) => {\n    const location = path.join(outputDir, fileName);\n    const currentContents = fs.readFileSync(location, 'utf8');\n    if (currentContents !== contents) {\n      console.error(`- ${fileName} has changed`);\n\n      hasChanged = true;\n    }\n  });\n\n  return !hasChanged;\n}\n\nmodule.exports = {\n  generate(\n    {libraryName, schema, outputDirectory, moduleSpecName}: Options,\n    {generators, test}: Config,\n  ): boolean {\n    schemaValidator.validate(schema);\n\n    const generatedFiles = [];\n    for (const name of generators) {\n      for (const generator of GENERATORS[name]) {\n        generatedFiles.push(...generator(libraryName, schema, moduleSpecName));\n      }\n    }\n\n    const filesToUpdate = new Map([...generatedFiles]);\n\n    if (test === true) {\n      return checkFilesForChanges(filesToUpdate, outputDirectory);\n    }\n\n    return writeMapToFiles(filesToUpdate, outputDirectory);\n  },\n  generateViewConfig({libraryName, schema}: Options): string {\n    schemaValidator.validate(schema);\n\n    const result = generateViewConfigJs\n      .generate(libraryName, schema)\n      .values()\n      .next();\n\n    if (typeof result.value !== 'string') {\n      throw new Error(`Failed to generate view config for ${libraryName}`);\n    }\n\n    return result.value;\n  },\n};\n"]},"metadata":{},"sourceType":"script"}