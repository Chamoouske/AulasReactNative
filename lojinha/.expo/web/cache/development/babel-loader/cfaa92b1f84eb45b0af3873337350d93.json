{"ast":null,"code":"'use strict';\n\ndescribe('PixelRatio', function () {\n  var Dimensions = require(\"../Dimensions\");\n\n  var PixelRatio = require(\"../PixelRatio\");\n\n  beforeEach(function () {\n    Dimensions.set({\n      windowPhysicalPixels: {\n        width: 400,\n        height: 800,\n        scale: 2,\n        fontScale: 3\n      }\n    });\n  });\n  it('should give the pixel density', function () {\n    expect(PixelRatio.get()).toEqual(2);\n  });\n  it('should give the font scale when present', function () {\n    expect(PixelRatio.getFontScale()).toEqual(3);\n  });\n  it('should give the pixel density instead of the font scale when the front scale is not present', function () {\n    Dimensions.set({\n      windowPhysicalPixels: {\n        scale: 2\n      }\n    });\n    expect(PixelRatio.getFontScale()).toEqual(2);\n  });\n  it('should convert a layout size to pixel size', function () {\n    expect(PixelRatio.getPixelSizeForLayoutSize(400)).toEqual(800);\n  });\n  it('should round a layout size to pixel size', function () {\n    expect(PixelRatio.roundToNearestPixel(8.4)).toEqual(8.5);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/PixelRatio-test.js"],"names":["describe","Dimensions","require","PixelRatio","beforeEach","set","windowPhysicalPixels","width","height","scale","fontScale","it","expect","get","toEqual","getFontScale","getPixelSizeForLayoutSize","roundToNearestPixel"],"mappings":"AAUA;;AAEAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3B,MAAMC,UAAU,GAAGC,OAAO,iBAA1B;;AACA,MAAMC,UAAU,GAAGD,OAAO,iBAA1B;;AAEAE,EAAAA,UAAU,CAAC,YAAM;AACfH,IAAAA,UAAU,CAACI,GAAX,CAAe;AACbC,MAAAA,oBAAoB,EAAE;AACpBC,QAAAA,KAAK,EAAE,GADa;AAEpBC,QAAAA,MAAM,EAAE,GAFY;AAGpBC,QAAAA,KAAK,EAAE,CAHa;AAIpBC,QAAAA,SAAS,EAAE;AAJS;AADT,KAAf;AAQD,GATS,CAAV;AAWAC,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxCC,IAAAA,MAAM,CAACT,UAAU,CAACU,GAAX,EAAD,CAAN,CAAyBC,OAAzB,CAAiC,CAAjC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,yCAAD,EAA4C,YAAM;AAClDC,IAAAA,MAAM,CAACT,UAAU,CAACY,YAAX,EAAD,CAAN,CAAkCD,OAAlC,CAA0C,CAA1C;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,6FAAD,EAAgG,YAAM;AACtGV,IAAAA,UAAU,CAACI,GAAX,CAAe;AACbC,MAAAA,oBAAoB,EAAE;AACpBG,QAAAA,KAAK,EAAE;AADa;AADT,KAAf;AAKAG,IAAAA,MAAM,CAACT,UAAU,CAACY,YAAX,EAAD,CAAN,CAAkCD,OAAlC,CAA0C,CAA1C;AACD,GAPC,CAAF;AASAH,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAM;AACrDC,IAAAA,MAAM,CAACT,UAAU,CAACa,yBAAX,CAAqC,GAArC,CAAD,CAAN,CAAkDF,OAAlD,CAA0D,GAA1D;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnDC,IAAAA,MAAM,CAACT,UAAU,CAACc,mBAAX,CAA+B,GAA/B,CAAD,CAAN,CAA4CH,OAA5C,CAAoD,GAApD;AACD,GAFC,CAAF;AAGD,CAvCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\ndescribe('PixelRatio', () => {\n  const Dimensions = require('../Dimensions');\n  const PixelRatio = require('../PixelRatio');\n\n  beforeEach(() => {\n    Dimensions.set({\n      windowPhysicalPixels: {\n        width: 400,\n        height: 800,\n        scale: 2,\n        fontScale: 3,\n      },\n    });\n  });\n\n  it('should give the pixel density', () => {\n    expect(PixelRatio.get()).toEqual(2);\n  });\n\n  it('should give the font scale when present', () => {\n    expect(PixelRatio.getFontScale()).toEqual(3);\n  });\n\n  it('should give the pixel density instead of the font scale when the front scale is not present', () => {\n    Dimensions.set({\n      windowPhysicalPixels: {\n        scale: 2,\n      },\n    });\n    expect(PixelRatio.getFontScale()).toEqual(2);\n  });\n\n  it('should convert a layout size to pixel size', () => {\n    expect(PixelRatio.getPixelSizeForLayoutSize(400)).toEqual(800);\n  });\n\n  it('should round a layout size to pixel size', () => {\n    expect(PixelRatio.roundToNearestPixel(8.4)).toEqual(8.5);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}