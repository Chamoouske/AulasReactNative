{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _envinfo = _interopRequireDefault(require(\"../../tools/envinfo\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _releaseChecker = _interopRequireDefault(require(\"../../tools/releaseChecker\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar info = function getInfo(_argv, ctx) {\n  var output;\n  return _regeneratorRuntime.async(function getInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          _cliTools().logger.info('Fetching system and libraries information...');\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap((0, _envinfo.default)(false));\n\n        case 4:\n          output = _context.sent;\n\n          _cliTools().logger.log(output);\n\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n\n          _cliTools().logger.error(\"Unable to print environment info.\\n\" + _context.t0);\n\n        case 11:\n          _context.prev = 11;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap((0, _releaseChecker.default)(ctx.root));\n\n        case 14:\n          return _context.finish(11);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8, 11, 15]], Promise);\n};\n\nvar _default = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/info/info.js"],"names":["Object","defineProperty","exports","value","default","_envinfo","_interopRequireDefault","require","_cliTools","data","_releaseChecker","obj","__esModule","info","getInfo","_argv","ctx","logger","output","log","error","root","_default","name","description","func"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,uBAAR,CAArC;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,IAAI,GAAGF,OAAO,CAAC,mCAAD,CAApB;;AAEAC,EAAAA,SAAS,GAAG,qBAAY;AACtB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIC,eAAe,GAAGJ,sBAAsB,CAACC,OAAO,8BAAR,CAA5C;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAS/F,IAAME,IAAI,GAAG,SAAeC,OAAf,CAAuBC,KAAvB,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAETR,UAAAA,SAAS,GAAGS,MAAZ,CAAmBJ,IAAnB,CAAwB,8CAAxB;;AAFS;AAAA,2CAIY,CAAC,GAAGR,QAAQ,CAACD,OAAb,EAAsB,KAAtB,CAJZ;;AAAA;AAIHc,UAAAA,MAJG;;AAMTV,UAAAA,SAAS,GAAGS,MAAZ,CAAmBE,GAAnB,CAAuBD,MAAvB;;AANS;AAAA;;AAAA;AAAA;AAAA;;AAQTV,UAAAA,SAAS,GAAGS,MAAZ,CAAmBG,KAAnB;;AARS;AAAA;AAAA;AAAA,2CAUH,CAAC,GAAGV,eAAe,CAACN,OAApB,EAA6BY,GAAG,CAACK,IAAjC,CAVG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAcA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,WAAW,EAAE,6DAFA;AAGbC,EAAAA,IAAI,EAAEZ;AAHO,CAAf;AAKAX,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _envinfo = _interopRequireDefault(require(\"../../tools/envinfo\"));\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _releaseChecker = _interopRequireDefault(require(\"../../tools/releaseChecker\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @ts-ignore untyped\nconst info = async function getInfo(_argv, ctx) {\n  try {\n    _cliTools().logger.info('Fetching system and libraries information...');\n\n    const output = await (0, _envinfo.default)(false);\n\n    _cliTools().logger.log(output);\n  } catch (err) {\n    _cliTools().logger.error(`Unable to print environment info.\\n${err}`);\n  } finally {\n    await (0, _releaseChecker.default)(ctx.root);\n  }\n};\n\nvar _default = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info\n};\nexports.default = _default;\n\n//# sourceMappingURL=info.js.map"]},"metadata":{},"sourceType":"script"}