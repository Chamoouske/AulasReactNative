{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/RNTesterExampleFilter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar TextInput = require(\"react-native-web/dist/exports/TextInput\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nimport { RNTesterThemeContext } from \"./RNTesterTheme\";\n\nvar RNTesterExampleFilter = function (_React$Component) {\n  _inherits(RNTesterExampleFilter, _React$Component);\n\n  var _super = _createSuper(RNTesterExampleFilter);\n\n  function RNTesterExampleFilter() {\n    var _this;\n\n    _classCallCheck(this, RNTesterExampleFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      filter: ''\n    };\n    return _this;\n  }\n\n  _createClass(RNTesterExampleFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filterText = this.state.filter;\n      var filterRegex = /.*/;\n\n      try {\n        filterRegex = new RegExp(String(filterText), 'i');\n      } catch (error) {\n        console.warn('Failed to create RegExp: %s\\n%s', filterText, error.message);\n      }\n\n      var filter = function filter(example) {\n        return _this2.props.disableSearch || _this2.props.filter({\n          example: example,\n          filterRegex: filterRegex\n        });\n      };\n\n      var filteredSections = this.props.sections.map(function (section) {\n        return _objectSpread(_objectSpread({}, section), {}, {\n          data: section.data.filter(filter)\n        });\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, this._renderTextInput(), this.props.render({\n        filteredSections: filteredSections\n      }));\n    }\n  }, {\n    key: \"_renderTextInput\",\n    value: function _renderTextInput() {\n      var _this3 = this;\n\n      if (this.props.disableSearch) {\n        return null;\n      }\n\n      return React.createElement(RNTesterThemeContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, function (theme) {\n        return React.createElement(View, {\n          style: [styles.searchRow, {\n            backgroundColor: theme.GroupedBackgroundColor\n          }],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          clearButtonMode: \"always\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState(function () {\n              return {\n                filter: text\n              };\n            });\n          },\n          placeholder: \"Search...\",\n          placeholderTextColor: theme.PlaceholderTextColor,\n          underlineColorAndroid: \"transparent\",\n          style: [styles.searchTextInput, {\n            color: theme.LabelColor,\n            backgroundColor: theme.SecondaryGroupedBackgroundColor,\n            borderColor: theme.QuaternaryLabelColor\n          }],\n          testID: _this3.props.testID,\n          value: _this3.state.filter,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n  }]);\n\n  return RNTesterExampleFilter;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  searchRow: {\n    padding: 10\n  },\n  searchTextInput: {\n    borderRadius: 3,\n    borderWidth: 1,\n    paddingLeft: 8,\n    paddingVertical: 0,\n    height: 35\n  },\n  container: {\n    flex: 1\n  }\n});\nmodule.exports = RNTesterExampleFilter;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/RNTesterExampleFilter.js"],"names":["React","require","RNTesterThemeContext","RNTesterExampleFilter","state","filter","filterText","filterRegex","RegExp","String","error","console","warn","message","example","props","disableSearch","filteredSections","sections","map","section","data","styles","container","_renderTextInput","render","theme","searchRow","backgroundColor","GroupedBackgroundColor","text","setState","PlaceholderTextColor","searchTextInput","color","LabelColor","SecondaryGroupedBackgroundColor","borderColor","QuaternaryLabelColor","testID","Component","StyleSheet","create","padding","borderRadius","borderWidth","paddingLeft","paddingVertical","height","flex","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {StyleSheet, TextInput, View} = require('react-native');\nimport {RNTesterThemeContext} from './RNTesterTheme';\n\ntype Props = {\n  filter: Function,\n  render: Function,\n  sections: Object,\n  disableSearch?: boolean,\n  testID?: string,\n  ...\n};\n\ntype State = {filter: string, ...};\n\nclass RNTesterExampleFilter extends React.Component<Props, State> {\n  state: State = {filter: ''};\n\n  render(): React.Node {\n    const filterText = this.state.filter;\n    let filterRegex = /.*/;\n\n    try {\n      filterRegex = new RegExp(String(filterText), 'i');\n    } catch (error) {\n      console.warn(\n        'Failed to create RegExp: %s\\n%s',\n        filterText,\n        error.message,\n      );\n    }\n\n    const filter = example =>\n      this.props.disableSearch || this.props.filter({example, filterRegex});\n\n    const filteredSections = this.props.sections.map(section => ({\n      ...section,\n      data: section.data.filter(filter),\n    }));\n\n    return (\n      <View style={styles.container}>\n        {this._renderTextInput()}\n        {this.props.render({filteredSections})}\n      </View>\n    );\n  }\n\n  _renderTextInput(): ?React.Element<any> {\n    if (this.props.disableSearch) {\n      return null;\n    }\n    return (\n      <RNTesterThemeContext.Consumer>\n        {theme => {\n          return (\n            <View\n              style={[\n                styles.searchRow,\n                {backgroundColor: theme.GroupedBackgroundColor},\n              ]}>\n              <TextInput\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                clearButtonMode=\"always\"\n                onChangeText={text => {\n                  this.setState(() => ({filter: text}));\n                }}\n                placeholder=\"Search...\"\n                placeholderTextColor={theme.PlaceholderTextColor}\n                underlineColorAndroid=\"transparent\"\n                style={[\n                  styles.searchTextInput,\n                  {\n                    color: theme.LabelColor,\n                    backgroundColor: theme.SecondaryGroupedBackgroundColor,\n                    borderColor: theme.QuaternaryLabelColor,\n                  },\n                ]}\n                testID={this.props.testID}\n                value={this.state.filter}\n              />\n            </View>\n          );\n        }}\n      </RNTesterThemeContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  searchRow: {\n    padding: 10,\n  },\n  searchTextInput: {\n    borderRadius: 3,\n    borderWidth: 1,\n    paddingLeft: 8,\n    paddingVertical: 0,\n    height: 35,\n  },\n  container: {\n    flex: 1,\n  },\n});\n\nmodule.exports = RNTesterExampleFilter;\n"]},"metadata":{},"sourceType":"module"}