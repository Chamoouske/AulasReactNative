{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport findIndex from 'array-find-index';\nimport invariant from 'fbjs/lib/invariant';\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar listeners = [];\n\nvar AppState = function () {\n  function AppState() {\n    _classCallCheck(this, AppState);\n  }\n\n  _createClass(AppState, null, [{\n    key: \"currentState\",\n    get: function get() {\n      if (!AppState.isAvailable) {\n        return AppStates.ACTIVE;\n      }\n\n      switch (document[VISIBILITY_STATE_PROPERTY]) {\n        case 'hidden':\n        case 'prerender':\n        case 'unloaded':\n          return AppStates.BACKGROUND;\n\n        default:\n          return AppStates.ACTIVE;\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      if (AppState.isAvailable) {\n        invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n        if (type === 'change') {\n          var callback = function callback() {\n            return handler(AppState.currentState);\n          };\n\n          listeners.push([handler, callback]);\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, callback, false);\n        }\n      }\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, handler) {\n      if (AppState.isAvailable) {\n        invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n        if (type === 'change') {\n          var listenerIndex = findIndex(listeners, function (pair) {\n            return pair[0] === handler;\n          });\n          invariant(listenerIndex !== -1, 'Trying to remove AppState listener for unregistered handler');\n          var callback = listeners[listenerIndex][1];\n          document.removeEventListener(VISIBILITY_CHANGE_EVENT, callback, false);\n          listeners.splice(listenerIndex, 1);\n        }\n      }\n    }\n  }]);\n\n  return AppState;\n}();\n\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];\nexport { AppState as default };","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/AppState/index.js"],"names":["canUseDOM","findIndex","invariant","isPrefixed","document","hasOwnProperty","EVENT_TYPES","VISIBILITY_CHANGE_EVENT","VISIBILITY_STATE_PROPERTY","AppStates","BACKGROUND","ACTIVE","listeners","AppState","isAvailable","type","handler","indexOf","callback","currentState","push","addEventListener","listenerIndex","pair","removeEventListener","splice"],"mappings":";;AAUA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAGA,IAAMC,UAAU,GACdH,SAAS,IAAI,CAACI,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd,IAAmDD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADrD;AAGA,IAAMC,WAAW,GAAG,CAAC,QAAD,EAAW,eAAX,CAApB;AACA,IAAMC,uBAAuB,GAAGJ,UAAU,GAAG,wBAAH,GAA8B,kBAAxE;AACA,IAAMK,yBAAyB,GAAGL,UAAU,GAAG,uBAAH,GAA6B,iBAAzE;AAEA,IAAMM,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,YADI;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,IAAMC,SAAS,GAAG,EAAlB;;IAEqBC,Q;;;;;;;SAGnB,eAA0B;AACxB,UAAI,CAACA,QAAQ,CAACC,WAAd,EAA2B;AACzB,eAAOL,SAAS,CAACE,MAAjB;AACD;;AAED,cAAQP,QAAQ,CAACI,yBAAD,CAAhB;AACE,aAAK,QAAL;AACA,aAAK,WAAL;AACA,aAAK,UAAL;AACE,iBAAOC,SAAS,CAACC,UAAjB;;AACF;AACE,iBAAOD,SAAS,CAACE,MAAjB;AANJ;AAQD;;;WAED,0BAAwBI,IAAxB,EAAsCC,OAAtC,EAAyD;AACvD,UAAIH,QAAQ,CAACC,WAAb,EAA0B;AACxBZ,QAAAA,SAAS,CACPI,WAAW,CAACW,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CADxB,EAEP,4CAFO,EAGPA,IAHO,CAAT;;AAKA,YAAIA,IAAI,KAAK,QAAb,EAAuB;AACrB,cAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA,mBAAMF,OAAO,CAACH,QAAQ,CAACM,YAAV,CAAb;AAAA,WAAjB;;AACAP,UAAAA,SAAS,CAACQ,IAAV,CAAe,CAACJ,OAAD,EAAUE,QAAV,CAAf;AACAd,UAAAA,QAAQ,CAACiB,gBAAT,CAA0Bd,uBAA1B,EAAmDW,QAAnD,EAA6D,KAA7D;AACD;AACF;AACF;;;WAED,6BAA2BH,IAA3B,EAAyCC,OAAzC,EAA4D;AAC1D,UAAIH,QAAQ,CAACC,WAAb,EAA0B;AACxBZ,QAAAA,SAAS,CACPI,WAAW,CAACW,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CADxB,EAEP,mDAFO,EAGPA,IAHO,CAAT;;AAKA,YAAIA,IAAI,KAAK,QAAb,EAAuB;AACrB,cAAMO,aAAa,GAAGrB,SAAS,CAACW,SAAD,EAAY,UAAAW,IAAI;AAAA,mBAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYP,OAAhB;AAAA,WAAhB,CAA/B;AACAd,UAAAA,SAAS,CACPoB,aAAa,KAAK,CAAC,CADZ,EAEP,6DAFO,CAAT;AAIA,cAAMJ,QAAQ,GAAGN,SAAS,CAACU,aAAD,CAAT,CAAyB,CAAzB,CAAjB;AACAlB,UAAAA,QAAQ,CAACoB,mBAAT,CAA6BjB,uBAA7B,EAAsDW,QAAtD,EAAgE,KAAhE;AACAN,UAAAA,SAAS,CAACa,MAAV,CAAiBH,aAAjB,EAAgC,CAAhC;AACD;AACF;AACF;;;;;;AAnDkBT,Q,CACZC,W,GAAcd,SAAS,IAAII,QAAQ,CAACI,yBAAD,C;SADvBK,Q","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport findIndex from 'array-find-index';\nimport invariant from 'fbjs/lib/invariant';\n\n// Android 4.4 browser\nconst isPrefixed =\n  canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\n\nconst EVENT_TYPES = ['change', 'memoryWarning'];\nconst VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nconst VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\n\nconst AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\n\nconst listeners = [];\n\nexport default class AppState {\n  static isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];\n\n  static get currentState() {\n    if (!AppState.isAvailable) {\n      return AppStates.ACTIVE;\n    }\n\n    switch (document[VISIBILITY_STATE_PROPERTY]) {\n      case 'hidden':\n      case 'prerender':\n      case 'unloaded':\n        return AppStates.BACKGROUND;\n      default:\n        return AppStates.ACTIVE;\n    }\n  }\n\n  static addEventListener(type: string, handler: Function) {\n    if (AppState.isAvailable) {\n      invariant(\n        EVENT_TYPES.indexOf(type) !== -1,\n        'Trying to subscribe to unknown event: \"%s\"',\n        type\n      );\n      if (type === 'change') {\n        const callback = () => handler(AppState.currentState);\n        listeners.push([handler, callback]);\n        document.addEventListener(VISIBILITY_CHANGE_EVENT, callback, false);\n      }\n    }\n  }\n\n  static removeEventListener(type: string, handler: Function) {\n    if (AppState.isAvailable) {\n      invariant(\n        EVENT_TYPES.indexOf(type) !== -1,\n        'Trying to remove listener for unknown event: \"%s\"',\n        type\n      );\n      if (type === 'change') {\n        const listenerIndex = findIndex(listeners, pair => pair[0] === handler);\n        invariant(\n          listenerIndex !== -1,\n          'Trying to remove AppState listener for unregistered handler'\n        );\n        const callback = listeners[listenerIndex][1];\n        document.removeEventListener(VISIBILITY_CHANGE_EVENT, callback, false);\n        listeners.splice(listenerIndex, 1);\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}