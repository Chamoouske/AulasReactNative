{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nvar WebSocket = require('ws');\n\nconsole.log(\"WebSocket integration test server\\n\\nThis will send each incoming message back, with the string '_response' appended.\\nAn incoming message of 'exit' will shut down the server.\\n\\n\");\nvar server = new WebSocket.Server({\n  port: 5555\n});\nserver.on('connection', function (ws) {\n  ws.on('message', function (message) {\n    console.log('Received message:', message);\n\n    if (message === 'exit') {\n      console.log('WebSocket integration test server exit');\n      process.exit(0);\n    }\n\n    ws.send(message + '_response');\n  });\n  ws.send('hello');\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/websocket_integration_test_server.js"],"names":["WebSocket","require","console","log","server","Server","port","on","ws","message","process","exit","send"],"mappings":"AAAA;AAWA;;AAIA,IAAMA,SAAS,GAAGC,OAAO,CAAC,IAAD,CAAzB;;AAEAC,OAAO,CAACC,GAAR;AAQA,IAAMC,MAAM,GAAG,IAAIJ,SAAS,CAACK,MAAd,CAAqB;AAACC,EAAAA,IAAI,EAAE;AAAP,CAArB,CAAf;AACAF,MAAM,CAACG,EAAP,CAAU,YAAV,EAAwB,UAAAC,EAAE,EAAI;AAC5BA,EAAAA,EAAE,CAACD,EAAH,CAAM,SAAN,EAAiB,UAAAE,OAAO,EAAI;AAC1BP,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,OAAjC;;AACA,QAAIA,OAAO,KAAK,MAAhB,EAAwB;AACtBP,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAO,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;;AACDH,IAAAA,EAAE,CAACI,IAAH,CAAQH,OAAO,GAAG,WAAlB;AACD,GAPD;AASAD,EAAAA,EAAE,CAACI,IAAH,CAAQ,OAAR;AACD,CAXD","sourcesContent":["#!/usr/bin/env node\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\n/* eslint-env node */\n\nconst WebSocket = require('ws');\n\nconsole.log(`\\\nWebSocket integration test server\n\nThis will send each incoming message back, with the string '_response' appended.\nAn incoming message of 'exit' will shut down the server.\n\n`);\n\nconst server = new WebSocket.Server({port: 5555});\nserver.on('connection', ws => {\n  ws.on('message', message => {\n    console.log('Received message:', message);\n    if (message === 'exit') {\n      console.log('WebSocket integration test server exit');\n      process.exit(0);\n    }\n    ws.send(message + '_response');\n  });\n\n  ws.send('hello');\n});\n"]},"metadata":{},"sourceType":"script"}