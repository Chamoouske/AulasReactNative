{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport NativeAnimatedHelper from \"./NativeAnimatedHelper\";\nimport findNodeHandle from \"../../../exports/findNodeHandle\";\nimport invariant from 'fbjs/lib/invariant';\nvar shouldUseNativeDriver = NativeAnimatedHelper.shouldUseNativeDriver;\n\nfunction attachNativeEvent(viewRef, eventName, argMapping) {\n  var eventMappings = [];\n\n  var traverse = function traverse(value, path) {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag()\n      });\n    } else if (typeof value === 'object') {\n      for (var _key in value) {\n        traverse(value[_key], path.concat(_key));\n      }\n    }\n  };\n\n  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');\n  traverse(argMapping[0].nativeEvent, []);\n  var viewTag = findNodeHandle(viewRef);\n  eventMappings.forEach(function (mapping) {\n    NativeAnimatedHelper.API.addAnimatedEventToView(viewTag, eventName, mapping);\n  });\n  return {\n    detach: function detach() {\n      eventMappings.forEach(function (mapping) {\n        NativeAnimatedHelper.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);\n      });\n    }\n  };\n}\n\nvar AnimatedEvent = function () {\n  function AnimatedEvent(argMapping) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AnimatedEvent);\n\n    this._listeners = [];\n    this._argMapping = argMapping;\n\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._validateMapping();\n    }\n  }\n\n  _createClass(AnimatedEvent, [{\n    key: \"__addListener\",\n    value: function __addListener(callback) {\n      this._listeners.push(callback);\n    }\n  }, {\n    key: \"__removeListener\",\n    value: function __removeListener(callback) {\n      this._listeners = this._listeners.filter(function (listener) {\n        return listener !== callback;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach(viewRef, eventName) {\n      invariant(this.__isNative, 'Only native driven events need to be attached.');\n      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach(viewTag, eventName) {\n      invariant(this.__isNative, 'Only native driven events need to be detached.');\n      this._attachedEvent && this._attachedEvent.detach();\n    }\n  }, {\n    key: \"__getHandler\",\n    value: function __getHandler() {\n      var _this = this;\n\n      if (this.__isNative) {\n        return this._callListeners;\n      }\n\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var traverse = function traverse(recMapping, recEvt, key) {\n          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {\n            recMapping.setValue(recEvt);\n          } else if (typeof recMapping === 'object') {\n            for (var mappingKey in recMapping) {\n              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n            }\n          }\n        };\n\n        if (!_this.__isNative) {\n          _this._argMapping.forEach(function (mapping, idx) {\n            traverse(mapping, args[idx], 'arg' + idx);\n          });\n        }\n\n        _this._callListeners.apply(_this, args);\n      };\n    }\n  }, {\n    key: \"_callListeners\",\n    value: function _callListeners() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._listeners.forEach(function (listener) {\n        return listener.apply(void 0, args);\n      });\n    }\n  }, {\n    key: \"_validateMapping\",\n    value: function _validateMapping() {\n      var traverse = function traverse(recMapping, recEvt, key) {\n        if (typeof recEvt === 'number') {\n          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');\n          return;\n        }\n\n        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);\n        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);\n\n        for (var mappingKey in recMapping) {\n          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n        }\n      };\n    }\n  }]);\n\n  return AnimatedEvent;\n}();\n\nexport { AnimatedEvent, attachNativeEvent };\nexport default {\n  AnimatedEvent: AnimatedEvent,\n  attachNativeEvent: attachNativeEvent\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/Animated/AnimatedEvent.js"],"names":["AnimatedValue","NativeAnimatedHelper","findNodeHandle","invariant","shouldUseNativeDriver","attachNativeEvent","viewRef","eventName","argMapping","eventMappings","traverse","value","path","__makeNative","push","nativeEventPath","animatedValueTag","__getNativeTag","key","concat","nativeEvent","viewTag","forEach","mapping","API","addAnimatedEventToView","detach","removeAnimatedEventFromView","AnimatedEvent","config","_listeners","_argMapping","listener","__addListener","_callListeners","bind","_attachedEvent","__isNative","process","env","NODE_ENV","_validateMapping","callback","filter","args","recMapping","recEvt","setValue","mappingKey","idx"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n * @format\n */\n'use strict';\n\nimport AnimatedValue from './nodes/AnimatedValue';\nimport NativeAnimatedHelper from './NativeAnimatedHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nconst { shouldUseNativeDriver } = NativeAnimatedHelper;\n\nexport type Mapping = {[key: string]: Mapping} | AnimatedValue;\nexport type EventConfig = {\n  listener?: ?Function,\n  useNativeDriver?: boolean,\n};\n\nfunction attachNativeEvent(\n  viewRef: any,\n  eventName: string,\n  argMapping: Array<?Mapping>,\n) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n\n  const traverse = (value, path) => {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag(),\n      });\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.',\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  traverse(argMapping[0].nativeEvent, []);\n\n  const viewTag = findNodeHandle(viewRef);\n\n  eventMappings.forEach(mapping => {\n    NativeAnimatedHelper.API.addAnimatedEventToView(\n      viewTag,\n      eventName,\n      mapping,\n    );\n  });\n\n  return {\n    detach() {\n      eventMappings.forEach(mapping => {\n        NativeAnimatedHelper.API.removeAnimatedEventFromView(\n          viewTag,\n          eventName,\n          mapping.animatedValueTag,\n        );\n      });\n    },\n  };\n}\n\nclass AnimatedEvent {\n  _argMapping: Array<?Mapping>;\n  _listeners: Array<Function> = [];\n  _callListeners: Function;\n  _attachedEvent: ?{\n    detach: () => void,\n  };\n  __isNative: boolean;\n\n  constructor(argMapping: Array<?Mapping>, config?: EventConfig = {}) {\n    this._argMapping = argMapping;\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._validateMapping();\n    }\n  }\n\n  __addListener(callback: Function): void {\n    this._listeners.push(callback);\n  }\n\n  __removeListener(callback: Function): void {\n    this._listeners = this._listeners.filter(listener => listener !== callback);\n  }\n\n  __attach(viewRef: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be attached.',\n    );\n\n    this._attachedEvent = attachNativeEvent(\n      viewRef,\n      eventName,\n      this._argMapping,\n    );\n  }\n\n  __detach(viewTag: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be detached.',\n    );\n\n    this._attachedEvent && this._attachedEvent.detach();\n  }\n\n  __getHandler() {\n    if (this.__isNative) {\n      return this._callListeners;\n    }\n\n    return (...args: any) => {\n      const traverse = (recMapping, recEvt, key) => {\n        if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {\n          recMapping.setValue(recEvt);\n        } else if (typeof recMapping === 'object') {\n          for (const mappingKey in recMapping) {\n            /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n             * comment suppresses an error when upgrading Flow's support for\n             * React. To see the error delete this comment and run Flow. */\n            traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n          }\n        }\n      };\n\n      if (!this.__isNative) {\n        this._argMapping.forEach((mapping, idx) => {\n          traverse(mapping, args[idx], 'arg' + idx);\n        });\n      }\n      this._callListeners(...args);\n    };\n  }\n\n  _callListeners(...args: any) {\n    this._listeners.forEach(listener => listener(...args));\n  }\n\n  _validateMapping() {\n    const traverse = (recMapping, recEvt, key) => {\n      if (typeof recEvt === 'number') {\n        invariant(\n          recMapping instanceof AnimatedValue,\n          'Bad mapping of type ' +\n            typeof recMapping +\n            ' for key ' +\n            key +\n            ', event value must map to AnimatedValue',\n        );\n        return;\n      }\n      invariant(\n        typeof recMapping === 'object',\n        'Bad mapping of type ' + typeof recMapping + ' for key ' + key,\n      );\n      invariant(\n        typeof recEvt === 'object',\n        'Bad event of type ' + typeof recEvt + ' for key ' + key,\n      );\n      for (const mappingKey in recMapping) {\n        traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n      }\n    };\n  }\n}\n\nexport { AnimatedEvent, attachNativeEvent };\nexport default { AnimatedEvent, attachNativeEvent };\n"]},"metadata":{},"sourceType":"module"}