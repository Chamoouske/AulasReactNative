{"ast":null,"code":"'use strict';\n\nvar parseHermesStack = require(\"../parseHermesStack\");\n\ndescribe('parseHermesStack', function () {\n  test('bytecode location', function () {\n    expect(parseHermesStack(['TypeError: undefined is not a function', '    at global (address at unknown:1:9)', '    at foo$bar (address at /js/foo.hbc:10:1234)'].join('\\n'))).toMatchSnapshot();\n  });\n  test('source location', function () {\n    expect(parseHermesStack(['TypeError: undefined is not a function', '    at global (unknown:1:9)', '    at foo$bar (/js/foo.js:10:1234)'].join('\\n'))).toMatchSnapshot();\n  });\n  test('skipped frames', function () {\n    expect(parseHermesStack(['TypeError: undefined is not a function', '    at global (unknown:1:9)', '    ... skipping 50 frames', '    at foo$bar (/js/foo.js:10:1234)'].join('\\n'))).toMatchSnapshot();\n  });\n  test('ignore frames that are part of message', function () {\n    expect(parseHermesStack(['The next line is not a stack frame', '    at bogus (filename:1:2)', '    but the real stack trace follows below.', '    at foo$bar (/js/foo.js:10:1234)'].join('\\n'))).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Core/Devtools/__tests__/parseHermesStack-test.js"],"names":["parseHermesStack","require","describe","test","expect","join","toMatchSnapshot"],"mappings":"AAWA;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,uBAAhC;;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCC,EAAAA,IAAI,CAAC,mBAAD,EAAsB,YAAM;AAC9BC,IAAAA,MAAM,CACJJ,gBAAgB,CACd,CACE,wCADF,EAEE,wCAFF,EAGE,iDAHF,EAIEK,IAJF,CAIO,IAJP,CADc,CADZ,CAAN,CAQEC,eARF;AASD,GAVG,CAAJ;AAYAH,EAAAA,IAAI,CAAC,iBAAD,EAAoB,YAAM;AAC5BC,IAAAA,MAAM,CACJJ,gBAAgB,CACd,CACE,wCADF,EAEE,6BAFF,EAGE,qCAHF,EAIEK,IAJF,CAIO,IAJP,CADc,CADZ,CAAN,CAQEC,eARF;AASD,GAVG,CAAJ;AAYAH,EAAAA,IAAI,CAAC,gBAAD,EAAmB,YAAM;AAC3BC,IAAAA,MAAM,CACJJ,gBAAgB,CACd,CACE,wCADF,EAEE,6BAFF,EAGE,4BAHF,EAIE,qCAJF,EAKEK,IALF,CAKO,IALP,CADc,CADZ,CAAN,CASEC,eATF;AAUD,GAXG,CAAJ;AAaAH,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAM;AACnDC,IAAAA,MAAM,CACJJ,gBAAgB,CACd,CACE,oCADF,EAEE,6BAFF,EAGE,6CAHF,EAIE,qCAJF,EAKEK,IALF,CAKO,IALP,CADc,CADZ,CAAN,CASEC,eATF;AAUD,GAXG,CAAJ;AAYD,CAlDO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst parseHermesStack = require('../parseHermesStack');\n\ndescribe('parseHermesStack', () => {\n  test('bytecode location', () => {\n    expect(\n      parseHermesStack(\n        [\n          'TypeError: undefined is not a function',\n          '    at global (address at unknown:1:9)',\n          '    at foo$bar (address at /js/foo.hbc:10:1234)',\n        ].join('\\n'),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  test('source location', () => {\n    expect(\n      parseHermesStack(\n        [\n          'TypeError: undefined is not a function',\n          '    at global (unknown:1:9)',\n          '    at foo$bar (/js/foo.js:10:1234)',\n        ].join('\\n'),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  test('skipped frames', () => {\n    expect(\n      parseHermesStack(\n        [\n          'TypeError: undefined is not a function',\n          '    at global (unknown:1:9)',\n          '    ... skipping 50 frames',\n          '    at foo$bar (/js/foo.js:10:1234)',\n        ].join('\\n'),\n      ),\n    ).toMatchSnapshot();\n  });\n\n  test('ignore frames that are part of message', () => {\n    expect(\n      parseHermesStack(\n        [\n          'The next line is not a stack frame',\n          '    at bogus (filename:1:2)',\n          '    but the real stack trace follows below.',\n          '    at foo$bar (/js/foo.js:10:1234)',\n        ].join('\\n'),\n      ),\n    ).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}