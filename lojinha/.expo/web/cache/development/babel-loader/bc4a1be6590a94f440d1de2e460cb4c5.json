{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ScrollView/ScrollViewExample.js\",\n    _this5 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableOpacity = require(\"react-native-web/dist/exports/TouchableOpacity\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar nullthrows = require('nullthrows');\n\nexports.displayName = 'ScrollViewExample';\nexports.title = '<ScrollView>';\nexports.description = 'Component that enables scrolling through child components';\nexports.examples = [{\n  title: '<ScrollView>\\n',\n  description: 'To make content scrollable, wrap it within a <ScrollView> component',\n  render: function render() {\n    var _scrollView;\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, React.createElement(ScrollView, {\n      ref: function ref(scrollView) {\n        _scrollView = scrollView;\n      },\n      automaticallyAdjustContentInsets: false,\n      onScroll: function onScroll() {\n        console.log('onScroll!');\n      },\n      scrollEventThrottle: 200,\n      style: styles.scrollView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, ITEMS.map(createItemRow)), React.createElement(Button, {\n      label: \"Scroll to top\",\n      onPress: function onPress() {\n        nullthrows(_scrollView).scrollTo({\n          y: 0\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      label: \"Scroll to bottom\",\n      onPress: function onPress() {\n        nullthrows(_scrollView).scrollToEnd({\n          animated: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), React.createElement(Button, {\n      label: \"Flash scroll indicators\",\n      onPress: function onPress() {\n        nullthrows(_scrollView).flashScrollIndicators();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }));\n  }\n}, {\n  title: '<ScrollView> (horizontal = true)\\n',\n  description: \"You can display <ScrollView>'s child components horizontally rather than vertically\",\n  render: function render() {\n    function renderScrollView(title, additionalStyles) {\n      var _scrollView;\n\n      return React.createElement(View, {\n        style: additionalStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, title), React.createElement(ScrollView, {\n        ref: function ref(scrollView) {\n          _scrollView = scrollView;\n        },\n        automaticallyAdjustContentInsets: false,\n        horizontal: true,\n        style: [styles.scrollView, styles.horizontalScrollView],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, ITEMS.map(createItemRow)), React.createElement(Button, {\n        label: \"Scroll to start\",\n        onPress: function onPress() {\n          nullthrows(_scrollView).scrollTo({\n            x: 0\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        label: \"Scroll to end\",\n        onPress: function onPress() {\n          nullthrows(_scrollView).scrollToEnd({\n            animated: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        label: \"Flash scroll indicators\",\n        onPress: function onPress() {\n          nullthrows(_scrollView).flashScrollIndicators();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }));\n    }\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, renderScrollView('LTR layout', {\n      direction: 'ltr'\n    }), renderScrollView('RTL layout', {\n      direction: 'rtl'\n    }));\n  }\n}, {\n  title: '<ScrollView> enable & disable\\n',\n  description: 'ScrollView scrolling behaviour can be disabled and enabled',\n  render: function render() {\n    var EnableDisableList = function (_React$Component) {\n      _inherits(EnableDisableList, _React$Component);\n\n      var _super = _createSuper(EnableDisableList);\n\n      function EnableDisableList() {\n        var _this;\n\n        _classCallCheck(this, EnableDisableList);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          scrollEnabled: true\n        };\n        return _this;\n      }\n\n      _createClass(EnableDisableList, [{\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          return React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }\n          }, React.createElement(ScrollView, {\n            automaticallyAdjustContentInsets: false,\n            style: styles.scrollView,\n            scrollEnabled: this.state.scrollEnabled,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }\n          }, ITEMS.map(createItemRow)), React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }\n          }, 'Scrolling enabled = ' + this.state.scrollEnabled.toString()), React.createElement(Button, {\n            label: \"Disable Scrolling\",\n            onPress: function onPress() {\n              _this2.setState({\n                scrollEnabled: false\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }\n          }), React.createElement(Button, {\n            label: \"Enable Scrolling\",\n            onPress: function onPress() {\n              _this2.setState({\n                scrollEnabled: true\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }\n          }));\n        }\n      }]);\n\n      return EnableDisableList;\n    }(React.Component);\n\n    return React.createElement(EnableDisableList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 14\n      }\n    });\n  }\n}];\n\nif (Platform.OS === 'ios') {\n  exports.examples.push({\n    title: '<ScrollView> smooth bi-directional content loading\\n',\n    description: 'The `maintainVisibleContentPosition` prop allows insertions to either end of the content ' + 'without causing the visible content to jump. Re-ordering is not supported.',\n    render: function render() {\n      var itemCount = 6;\n\n      var AppendingList = function (_React$Component2) {\n        _inherits(AppendingList, _React$Component2);\n\n        var _super2 = _createSuper(AppendingList);\n\n        function AppendingList() {\n          var _this3;\n\n          _classCallCheck(this, AppendingList);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          _this3 = _super2.call.apply(_super2, [this].concat(args));\n          _this3.state = {\n            items: _toConsumableArray(Array(itemCount)).map(function (_, ii) {\n              return React.createElement(Item, {\n                msg: \"Item \" + ii,\n                __self: _assertThisInitialized(_this3),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 13\n                }\n              });\n            })\n          };\n          return _this3;\n        }\n\n        _createClass(AppendingList, [{\n          key: \"render\",\n          value: function render() {\n            var _this4 = this;\n\n            return React.createElement(View, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 13\n              }\n            }, React.createElement(ScrollView, {\n              automaticallyAdjustContentInsets: false,\n              maintainVisibleContentPosition: {\n                minIndexForVisible: 1,\n                autoscrollToTopThreshold: 10\n              },\n              style: styles.scrollView,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }\n            }, this.state.items.map(function (item) {\n              return React.cloneElement(item, {\n                key: item.props.msg\n              });\n            })), React.createElement(ScrollView, {\n              horizontal: true,\n              automaticallyAdjustContentInsets: false,\n              maintainVisibleContentPosition: {\n                minIndexForVisible: 1,\n                autoscrollToTopThreshold: 10\n              },\n              style: [styles.scrollView, styles.horizontalScrollView],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 15\n              }\n            }, this.state.items.map(function (item) {\n              return React.cloneElement(item, {\n                key: item.props.msg,\n                style: null\n              });\n            })), React.createElement(View, {\n              style: styles.row,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }\n            }, React.createElement(Button, {\n              label: \"Add to top\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  var idx = itemCount++;\n                  return {\n                    items: [React.createElement(Item, {\n                      style: {\n                        paddingTop: idx * 5\n                      },\n                      msg: \"Item \" + idx,\n                      __self: _this4,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 27\n                      }\n                    })].concat(state.items)\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }\n            }), React.createElement(Button, {\n              label: \"Remove top\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  return {\n                    items: state.items.slice(1)\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }\n            }), React.createElement(Button, {\n              label: \"Change height top\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  return {\n                    items: [React.cloneElement(state.items[0], {\n                      style: {\n                        paddingBottom: Math.random() * 40\n                      }\n                    })].concat(state.items.slice(1))\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }\n            })), React.createElement(View, {\n              style: styles.row,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }\n            }, React.createElement(Button, {\n              label: \"Add to end\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  return {\n                    items: state.items.concat(React.createElement(Item, {\n                      msg: \"Item \" + itemCount++,\n                      __self: _this4,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }\n                    }))\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }\n            }), React.createElement(Button, {\n              label: \"Remove end\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  return {\n                    items: state.items.slice(0, -1)\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }\n            }), React.createElement(Button, {\n              label: \"Change height end\",\n              onPress: function onPress() {\n                _this4.setState(function (state) {\n                  return {\n                    items: state.items.slice(0, -1).concat(React.cloneElement(state.items[state.items.length - 1], {\n                      style: {\n                        paddingBottom: Math.random() * 40\n                      }\n                    }))\n                  };\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }\n            })));\n          }\n        }]);\n\n        return AppendingList;\n      }(React.Component);\n\n      return React.createElement(AppendingList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 14\n        }\n      });\n    }\n  });\n}\n\nvar Item = function (_React$PureComponent) {\n  _inherits(Item, _React$PureComponent);\n\n  var _super3 = _createSuper(Item);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.item, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, this.props.msg));\n    }\n  }]);\n\n  return Item;\n}(React.PureComponent);\n\nvar ITEMS = _toConsumableArray(Array(12)).map(function (_, i) {\n  return \"Item \" + i;\n});\n\nvar createItemRow = function createItemRow(msg, index) {\n  return React.createElement(Item, {\n    key: index,\n    msg: msg,\n    __self: _this5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 39\n    }\n  });\n};\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onPress,\n    __self: _this5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: _this5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }, label));\n};\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: '#eeeeee',\n    height: 300\n  },\n  horizontalScrollView: {\n    height: 106\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    margin: 5\n  },\n  button: {\n    margin: 5,\n    padding: 5,\n    alignItems: 'center',\n    backgroundColor: '#cccccc',\n    borderRadius: 3\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  item: {\n    margin: 5,\n    padding: 5,\n    backgroundColor: '#cccccc',\n    borderRadius: 3,\n    minWidth: 96\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ScrollView/ScrollViewExample.js"],"names":["React","require","nullthrows","exports","displayName","title","description","examples","render","_scrollView","scrollView","console","log","styles","ITEMS","map","createItemRow","scrollTo","y","scrollToEnd","animated","flashScrollIndicators","renderScrollView","additionalStyles","text","horizontalScrollView","x","direction","EnableDisableList","state","scrollEnabled","toString","setState","Component","Platform","OS","push","itemCount","AppendingList","items","Array","_","ii","minIndexForVisible","autoscrollToTopThreshold","item","cloneElement","key","props","msg","style","row","idx","paddingTop","concat","slice","paddingBottom","Math","random","length","Item","PureComponent","i","index","Button","label","onPress","button","StyleSheet","create","backgroundColor","height","fontSize","fontWeight","margin","padding","alignItems","borderRadius","flexDirection","justifyContent","minWidth"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} = require('react-native');\n\nconst nullthrows = require('nullthrows');\n\nimport type {ViewStyleProp} from '../../../../Libraries/StyleSheet/StyleSheet';\n\nexports.displayName = 'ScrollViewExample';\nexports.title = '<ScrollView>';\nexports.description =\n  'Component that enables scrolling through child components';\nexports.examples = [\n  {\n    title: '<ScrollView>\\n',\n    description:\n      'To make content scrollable, wrap it within a <ScrollView> component',\n    render: function(): React.Node {\n      let _scrollView: ?React.ElementRef<typeof ScrollView>;\n      return (\n        <View>\n          <ScrollView\n            ref={scrollView => {\n              _scrollView = scrollView;\n            }}\n            automaticallyAdjustContentInsets={false}\n            onScroll={() => {\n              console.log('onScroll!');\n            }}\n            scrollEventThrottle={200}\n            style={styles.scrollView}>\n            {ITEMS.map(createItemRow)}\n          </ScrollView>\n          <Button\n            label=\"Scroll to top\"\n            onPress={() => {\n              nullthrows(_scrollView).scrollTo({y: 0});\n            }}\n          />\n          <Button\n            label=\"Scroll to bottom\"\n            onPress={() => {\n              nullthrows(_scrollView).scrollToEnd({animated: true});\n            }}\n          />\n          <Button\n            label=\"Flash scroll indicators\"\n            onPress={() => {\n              nullthrows(_scrollView).flashScrollIndicators();\n            }}\n          />\n        </View>\n      );\n    },\n  },\n  {\n    title: '<ScrollView> (horizontal = true)\\n',\n    description:\n      \"You can display <ScrollView>'s child components horizontally rather than vertically\",\n    render: function(): React.Node {\n      function renderScrollView(\n        title: string,\n        additionalStyles: ViewStyleProp,\n      ) {\n        let _scrollView: ?React.ElementRef<typeof ScrollView>;\n        return (\n          <View style={additionalStyles}>\n            <Text style={styles.text}>{title}</Text>\n            <ScrollView\n              ref={scrollView => {\n                _scrollView = scrollView;\n              }}\n              automaticallyAdjustContentInsets={false}\n              horizontal={true}\n              style={[styles.scrollView, styles.horizontalScrollView]}>\n              {ITEMS.map(createItemRow)}\n            </ScrollView>\n            <Button\n              label=\"Scroll to start\"\n              onPress={() => {\n                nullthrows(_scrollView).scrollTo({x: 0});\n              }}\n            />\n            <Button\n              label=\"Scroll to end\"\n              onPress={() => {\n                nullthrows(_scrollView).scrollToEnd({animated: true});\n              }}\n            />\n            <Button\n              label=\"Flash scroll indicators\"\n              onPress={() => {\n                nullthrows(_scrollView).flashScrollIndicators();\n              }}\n            />\n          </View>\n        );\n      }\n\n      return (\n        <View>\n          {renderScrollView('LTR layout', {direction: 'ltr'})}\n          {renderScrollView('RTL layout', {direction: 'rtl'})}\n        </View>\n      );\n    },\n  },\n  {\n    title: '<ScrollView> enable & disable\\n',\n    description: 'ScrollView scrolling behaviour can be disabled and enabled',\n    render: function(): React.Node {\n      class EnableDisableList extends React.Component<{...}, *> {\n        state = {\n          scrollEnabled: true,\n        };\n        render() {\n          return (\n            <View>\n              <ScrollView\n                automaticallyAdjustContentInsets={false}\n                style={styles.scrollView}\n                scrollEnabled={this.state.scrollEnabled}>\n                {ITEMS.map(createItemRow)}\n              </ScrollView>\n              <Text>\n                {'Scrolling enabled = ' + this.state.scrollEnabled.toString()}\n              </Text>\n              <Button\n                label=\"Disable Scrolling\"\n                onPress={() => {\n                  this.setState({scrollEnabled: false});\n                }}\n              />\n              <Button\n                label=\"Enable Scrolling\"\n                onPress={() => {\n                  this.setState({scrollEnabled: true});\n                }}\n              />\n            </View>\n          );\n        }\n      }\n      return <EnableDisableList />;\n    },\n  },\n];\nif (Platform.OS === 'ios') {\n  exports.examples.push({\n    title: '<ScrollView> smooth bi-directional content loading\\n',\n    description:\n      'The `maintainVisibleContentPosition` prop allows insertions to either end of the content ' +\n      'without causing the visible content to jump. Re-ordering is not supported.',\n    render: function() {\n      let itemCount = 6;\n      class AppendingList extends React.Component<{...}, *> {\n        state = {\n          /* $FlowFixMe(>=0.85.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.85 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          items: [...Array(itemCount)].map((_, ii) => (\n            <Item msg={`Item ${ii}`} />\n          )),\n        };\n        render() {\n          return (\n            <View>\n              <ScrollView\n                automaticallyAdjustContentInsets={false}\n                maintainVisibleContentPosition={{\n                  minIndexForVisible: 1,\n                  autoscrollToTopThreshold: 10,\n                }}\n                style={styles.scrollView}>\n                {this.state.items.map(item =>\n                  React.cloneElement(item, {key: item.props.msg}),\n                )}\n              </ScrollView>\n              <ScrollView\n                horizontal={true}\n                automaticallyAdjustContentInsets={false}\n                maintainVisibleContentPosition={{\n                  minIndexForVisible: 1,\n                  autoscrollToTopThreshold: 10,\n                }}\n                style={[styles.scrollView, styles.horizontalScrollView]}>\n                {this.state.items.map(item =>\n                  React.cloneElement(item, {key: item.props.msg, style: null}),\n                )}\n              </ScrollView>\n              <View style={styles.row}>\n                <Button\n                  label=\"Add to top\"\n                  onPress={() => {\n                    this.setState(state => {\n                      const idx = itemCount++;\n                      return {\n                        items: [\n                          <Item\n                            style={{paddingTop: idx * 5}}\n                            msg={`Item ${idx}`}\n                          />,\n                        ].concat(state.items),\n                      };\n                    });\n                  }}\n                />\n                <Button\n                  label=\"Remove top\"\n                  onPress={() => {\n                    this.setState(state => ({\n                      items: state.items.slice(1),\n                    }));\n                  }}\n                />\n                <Button\n                  label=\"Change height top\"\n                  onPress={() => {\n                    this.setState(state => ({\n                      items: [\n                        React.cloneElement(state.items[0], {\n                          style: {paddingBottom: Math.random() * 40},\n                        }),\n                      ].concat(state.items.slice(1)),\n                    }));\n                  }}\n                />\n              </View>\n              <View style={styles.row}>\n                <Button\n                  label=\"Add to end\"\n                  onPress={() => {\n                    this.setState(state => ({\n                      items: state.items.concat(\n                        <Item msg={`Item ${itemCount++}`} />,\n                      ),\n                    }));\n                  }}\n                />\n                <Button\n                  label=\"Remove end\"\n                  onPress={() => {\n                    this.setState(state => ({\n                      items: state.items.slice(0, -1),\n                    }));\n                  }}\n                />\n                <Button\n                  label=\"Change height end\"\n                  onPress={() => {\n                    this.setState(state => ({\n                      items: state.items.slice(0, -1).concat(\n                        React.cloneElement(\n                          state.items[state.items.length - 1],\n                          {\n                            style: {paddingBottom: Math.random() * 40},\n                          },\n                        ),\n                      ),\n                    }));\n                  }}\n                />\n              </View>\n            </View>\n          );\n        }\n      }\n      return <AppendingList />;\n    },\n  });\n}\n\nclass Item extends React.PureComponent<{|\n  msg?: string,\n  style?: ViewStyleProp,\n|}> {\n  render() {\n    return (\n      <View style={[styles.item, this.props.style]}>\n        <Text>{this.props.msg}</Text>\n      </View>\n    );\n  }\n}\n\nlet ITEMS = [...Array(12)].map((_, i) => `Item ${i}`);\n\nconst createItemRow = (msg, index) => <Item key={index} msg={msg} />;\n\nconst Button = ({label, onPress}) => (\n  <TouchableOpacity style={styles.button} onPress={onPress}>\n    <Text>{label}</Text>\n  </TouchableOpacity>\n);\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: '#eeeeee',\n    height: 300,\n  },\n  horizontalScrollView: {\n    height: 106,\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    margin: 5,\n  },\n  button: {\n    margin: 5,\n    padding: 5,\n    alignItems: 'center',\n    backgroundColor: '#cccccc',\n    borderRadius: 3,\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  item: {\n    margin: 5,\n    padding: 5,\n    backgroundColor: '#cccccc',\n    borderRadius: 3,\n    minWidth: 96,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}