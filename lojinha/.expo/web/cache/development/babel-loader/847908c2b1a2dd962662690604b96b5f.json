{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar WarningAggregator = __importStar(require(\"../../utils/warnings\"));\n\nvar core_plugins_1 = require(\"../core-plugins\");\n\nvar ios_plugins_1 = require(\"../ios-plugins\");\n\nvar static_plugins_1 = require(\"../static-plugins\");\n\nvar packageName = 'expo-document-picker';\n\nvar withICloudEntitlement = function withICloudEntitlement(config, _ref) {\n  var appleTeamId = _ref.appleTeamId;\n  return ios_plugins_1.withEntitlementsPlist(config, function (config) {\n    config.modResults = setICloudEntitlement(config, config.modResults, appleTeamId);\n    return config;\n  });\n};\n\nfunction setICloudEntitlement(config, entitlementsPlist, appleTeamId) {\n  var _a;\n\n  if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.usesIcloudStorage) {\n    WarningAggregator.addWarningIOS('ios.usesIcloudStorage', 'Enable the iCloud Storage Entitlement from the Capabilities tab in your Xcode project.');\n  }\n\n  return entitlementsPlist;\n}\n\nvar withUnversionedDocumentPicker = core_plugins_1.createRunOncePlugin(function (config) {\n  config = withICloudEntitlement(config, {\n    appleTeamId: 'TODO-GET-APPLE-TEAM-ID'\n  });\n  return config;\n}, packageName);\n\nvar withDocumentPicker = function withDocumentPicker(config) {\n  return static_plugins_1.withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    plugin: packageName,\n    fallback: withUnversionedDocumentPicker\n  });\n};\n\nexports.default = withDocumentPicker;","map":{"version":3,"sources":["../../../src/plugins/unversioned/expo-document-picker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA,IAAA,iBAAA,GAAA,YAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,aAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,qBAAA;;AAEA,IAAM,WAAW,GAAG,sBAApB;;AAEA,IAAM,qBAAqB,GAA0C,SAA/D,qBAA+D,CAAC,MAAD,QAA4B;AAAA,MAAjB,WAAiB,QAAjB,WAAiB;AAC/F,SAAO,aAAA,CAAA,qBAAA,CAAsB,MAAtB,EAA8B,UAAA,MAAM,EAAG;AAC5C,IAAA,MAAM,CAAC,UAAP,GAAoB,oBAAoB,CAAC,MAAD,EAAS,MAAM,CAAC,UAAhB,EAA4B,WAA5B,CAAxC;AACA,WAAO,MAAP;AACD,GAHM,CAAP;AAID,CALD;;AAOA,SAAS,oBAAT,CACE,MADF,EAEE,iBAFF,EAGE,WAHF,EAGqB;;;AAEnB,MAAA,CAAA,EAAA,GAAI,MAAM,CAAC,GAAX,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,iBAAhB,EAAmC;AAEjC,IAAA,iBAAiB,CAAC,aAAlB,CACE,uBADF,EAEE,wFAFF;AAKD;;AAED,SAAO,iBAAP;AACD;;AAED,IAAM,6BAA6B,GAAiB,cAAA,CAAA,mBAAA,CAAoB,UAAA,MAAM,EAAG;AAE/E,EAAA,MAAM,GAAG,qBAAqB,CAAC,MAAD,EAAS;AAAE,IAAA,WAAW,EAAE;AAAf,GAAT,CAA9B;AACA,SAAO,MAAP;AACD,CAJmD,EAIjD,WAJiD,CAApD;;AAMA,IAAM,kBAAkB,GAAiB,SAAnC,kBAAmC,CAAA,MAAM,EAAG;AAChD,SAAO,gBAAA,CAAA,gBAAA,CAAiB,MAAjB,EAAyB;AAC9B,IAAA,eAAe,EAAE,IADa;AAE9B,IAAA,MAAM,EAAE,WAFsB;AAI9B,IAAA,QAAQ,EAAE;AAJoB,GAAzB,CAAP;AAMD,CAPD;;AASA,OAAA,CAAA,OAAA,GAAe,kBAAf","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { JSONObject } from '@expo/json-file';\n\nimport { ConfigPlugin } from '../../Plugin.types';\nimport * as WarningAggregator from '../../utils/warnings';\nimport { createRunOncePlugin } from '../core-plugins';\nimport { withEntitlementsPlist } from '../ios-plugins';\nimport { withStaticPlugin } from '../static-plugins';\n\nconst packageName = 'expo-document-picker';\n\nconst withICloudEntitlement: ConfigPlugin<{ appleTeamId: string }> = (config, { appleTeamId }) => {\n  return withEntitlementsPlist(config, config => {\n    config.modResults = setICloudEntitlement(config, config.modResults, appleTeamId);\n    return config;\n  });\n};\n\nfunction setICloudEntitlement(\n  config: ExpoConfig,\n  entitlementsPlist: JSONObject,\n  appleTeamId: string\n): JSONObject {\n  if (config.ios?.usesIcloudStorage) {\n    // TODO: need access to the appleTeamId for this one!\n    WarningAggregator.addWarningIOS(\n      'ios.usesIcloudStorage',\n      'Enable the iCloud Storage Entitlement from the Capabilities tab in your Xcode project.'\n      // TODO: add a link to a docs page with more information on how to do this\n    );\n  }\n\n  return entitlementsPlist;\n}\n\nconst withUnversionedDocumentPicker: ConfigPlugin = createRunOncePlugin(config => {\n  // No mechanism to get Apple Team ID.\n  config = withICloudEntitlement(config, { appleTeamId: 'TODO-GET-APPLE-TEAM-ID' });\n  return config;\n}, packageName);\n\nconst withDocumentPicker: ConfigPlugin = config => {\n  return withStaticPlugin(config, {\n    _isLegacyPlugin: true,\n    plugin: packageName,\n    // If the static plugin isn't found, use the unversioned one.\n    fallback: withUnversionedDocumentPicker,\n  });\n};\n\nexport default withDocumentPicker;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}