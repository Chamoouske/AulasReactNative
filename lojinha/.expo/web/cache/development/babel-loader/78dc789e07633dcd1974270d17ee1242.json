{"ast":null,"code":"'use strict';\n\nvar FormData = require(\"../FormData\");\n\ndescribe('FormData', function () {\n  var formData;\n  beforeEach(function () {\n    formData = new FormData();\n  });\n  afterEach(function () {\n    formData = null;\n  });\n  it('should return non blob null', function () {\n    formData.append('null', null);\n    var expectedPart = {\n      string: 'null',\n      headers: {\n        'content-disposition': 'form-data; name=\"null\"'\n      },\n      fieldName: 'null'\n    };\n    expect(formData.getParts()[0]).toMatchObject(expectedPart);\n  });\n  it('should return blob', function () {\n    formData.append('photo', {\n      uri: 'arbitrary/path',\n      type: 'image/jpeg',\n      name: 'photo.jpg'\n    });\n    var expectedPart = {\n      uri: 'arbitrary/path',\n      type: 'image/jpeg',\n      name: 'photo.jpg',\n      headers: {\n        'content-disposition': 'form-data; name=\"photo\"; filename=\"photo.jpg\"',\n        'content-type': 'image/jpeg'\n      },\n      fieldName: 'photo'\n    };\n    expect(formData.getParts()[0]).toMatchObject(expectedPart);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Network/__tests__/FormData-test.js"],"names":["FormData","require","describe","formData","beforeEach","afterEach","it","append","expectedPart","string","headers","fieldName","expect","getParts","toMatchObject","uri","type","name"],"mappings":"AAUA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,eAAxB;;AAEAC,QAAQ,CAAC,UAAD,EAAa,YAAW;AAC9B,MAAIC,QAAJ;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACfD,IAAAA,QAAQ,GAAG,IAAIH,QAAJ,EAAX;AACD,GAFS,CAAV;AAIAK,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,QAAQ,GAAG,IAAX;AACD,GAFQ,CAAT;AAIAG,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAW;AAC3CH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwB,IAAxB;AAEA,QAAMC,YAAY,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACP,+BAAuB;AADhB,OAFU;AAKnBC,MAAAA,SAAS,EAAE;AALQ,KAArB;AAOAC,IAAAA,MAAM,CAACT,QAAQ,CAACU,QAAT,GAAoB,CAApB,CAAD,CAAN,CAA+BC,aAA/B,CAA6CN,YAA7C;AACD,GAXC,CAAF;AAaAF,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAW;AAClCH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyB;AACvBQ,MAAAA,GAAG,EAAE,gBADkB;AAEvBC,MAAAA,IAAI,EAAE,YAFiB;AAGvBC,MAAAA,IAAI,EAAE;AAHiB,KAAzB;AAMA,QAAMT,YAAY,GAAG;AACnBO,MAAAA,GAAG,EAAE,gBADc;AAEnBC,MAAAA,IAAI,EAAE,YAFa;AAGnBC,MAAAA,IAAI,EAAE,WAHa;AAInBP,MAAAA,OAAO,EAAE;AACP,+BAAuB,+CADhB;AAEP,wBAAgB;AAFT,OAJU;AAQnBC,MAAAA,SAAS,EAAE;AARQ,KAArB;AAUAC,IAAAA,MAAM,CAACT,QAAQ,CAACU,QAAT,GAAoB,CAApB,CAAD,CAAN,CAA+BC,aAA/B,CAA6CN,YAA7C;AACD,GAlBC,CAAF;AAmBD,CA3CO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst FormData = require('../FormData');\n\ndescribe('FormData', function() {\n  var formData;\n\n  beforeEach(() => {\n    formData = new FormData();\n  });\n\n  afterEach(() => {\n    formData = null;\n  });\n\n  it('should return non blob null', function() {\n    formData.append('null', null);\n\n    const expectedPart = {\n      string: 'null',\n      headers: {\n        'content-disposition': 'form-data; name=\"null\"',\n      },\n      fieldName: 'null',\n    };\n    expect(formData.getParts()[0]).toMatchObject(expectedPart);\n  });\n\n  it('should return blob', function() {\n    formData.append('photo', {\n      uri: 'arbitrary/path',\n      type: 'image/jpeg',\n      name: 'photo.jpg',\n    });\n\n    const expectedPart = {\n      uri: 'arbitrary/path',\n      type: 'image/jpeg',\n      name: 'photo.jpg',\n      headers: {\n        'content-disposition': 'form-data; name=\"photo\"; filename=\"photo.jpg\"',\n        'content-type': 'image/jpeg',\n      },\n      fieldName: 'photo',\n    };\n    expect(formData.getParts()[0]).toMatchObject(expectedPart);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}