{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar term = 13;\n\nfunction create() {\n  return prompt;\n\n  function prompt(ask, value, opts) {\n    var insert = 0;\n    opts = opts || {};\n\n    if (typeof ask === 'object') {\n      opts = ask;\n      ask = opts.ask;\n    } else if (typeof value === 'object') {\n      opts = value;\n      value = opts.value;\n    }\n\n    ask = ask || '';\n    var echo = opts.echo;\n    var masked = ('echo' in opts);\n    var fd;\n\n    if (process.platform === 'win32') {\n      fd = process.stdin.fd;\n    } else {\n      fd = _fs().default.openSync('/dev/tty', 'rs');\n    }\n\n    var wasRaw = process.stdin.isRaw;\n\n    if (!wasRaw && process.stdin.setRawMode) {\n      process.stdin.setRawMode(true);\n    }\n\n    var buf = Buffer.alloc(3);\n    var str = '';\n    var character;\n    var read;\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    while (true) {\n      read = _fs().default.readSync(fd, buf, 0, 3, null);\n\n      if (read > 1) {\n        if (buf.toString()) {\n          str += buf.toString();\n          str = str.replace(/\\0/g, '');\n          insert = str.length;\n          process.stdout.write(\"\\x1B[2K\\x1B[0G\" + ask + str);\n          process.stdout.write(\"\\x1B[\" + (insert + ask.length + 1) + \"G\");\n          buf = Buffer.alloc(3);\n        }\n\n        continue;\n      }\n\n      character = buf[read - 1];\n\n      if (character === 3) {\n        process.stdout.write('^C\\n');\n\n        _fs().default.closeSync(fd);\n\n        process.exit(130);\n\n        if (process.stdin.setRawMode) {\n          process.stdin.setRawMode(!!wasRaw);\n        }\n\n        return null;\n      }\n\n      if (character === term) {\n        _fs().default.closeSync(fd);\n\n        break;\n      }\n\n      if (character === 127 || process.platform === 'win32' && character === 8) {\n        if (!insert) {\n          continue;\n        }\n\n        str = str.slice(0, insert - 1) + str.slice(insert);\n        insert--;\n        process.stdout.write(\"\\x1B[2D\");\n      } else {\n        if (character < 32 || character > 126) {\n          continue;\n        }\n\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      }\n\n      if (masked) {\n        process.stdout.write(\"\\x1B[2K\\x1B[0G\" + ask + Array(str.length + 1).join(echo));\n      } else {\n        process.stdout.write(\"\\x1B[s\");\n\n        if (insert === str.length) {\n          process.stdout.write(\"\\x1B[2K\\x1B[0G\" + ask + str);\n        } else if (ask) {\n          process.stdout.write(\"\\x1B[2K\\x1B[0G\" + ask + str);\n        } else {\n          process.stdout.write(\"\\x1B[2K\\x1B[0G\" + str + \"\\x1B[\" + (str.length - insert) + \"D\");\n        }\n\n        process.stdout.write(\"\\x1B[u\");\n        process.stdout.write(\"\\x1B[1C\");\n      }\n    }\n\n    process.stdout.write('\\n');\n\n    if (process.stdin.setRawMode) {\n      process.stdin.setRawMode(!!wasRaw);\n    }\n\n    return str || value || '';\n  }\n}\n\nvar _default = create;\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/generator/promptSync.js"],"names":["Object","defineProperty","exports","value","default","_fs","data","_interopRequireDefault","require","obj","__esModule","term","create","prompt","ask","opts","insert","echo","masked","fd","process","platform","stdin","openSync","wasRaw","isRaw","setRawMode","buf","Buffer","alloc","str","character","read","stdout","write","readSync","toString","replace","length","closeSync","exit","slice","String","fromCharCode","Array","join","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n// Simplified version of:\n// https://github.com/0x00A/prompt-sync/blob/master/index.js\nconst term = 13; // carriage return\n\nfunction create() {\n  return prompt;\n\n  function prompt(ask, value, opts) {\n    let insert = 0;\n    opts = opts || {};\n\n    if (typeof ask === 'object') {\n      opts = ask;\n      ask = opts.ask;\n    } else if (typeof value === 'object') {\n      opts = value;\n      value = opts.value;\n    }\n\n    ask = ask || '';\n    const echo = opts.echo;\n    const masked = ('echo' in opts);\n    let fd;\n\n    if (process.platform === 'win32') {\n      // @ts-ignore\n      fd = process.stdin.fd;\n    } else {\n      fd = _fs().default.openSync('/dev/tty', 'rs');\n    }\n\n    const wasRaw = process.stdin.isRaw;\n\n    if (!wasRaw && process.stdin.setRawMode) {\n      process.stdin.setRawMode(true);\n    }\n\n    let buf = Buffer.alloc(3);\n    let str = '';\n    let character;\n    let read;\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    while (true) {\n      read = _fs().default.readSync(fd, buf, 0, 3, null);\n\n      if (read > 1) {\n        // received a control sequence\n        if (buf.toString()) {\n          str += buf.toString();\n          str = str.replace(/\\0/g, '');\n          insert = str.length;\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n          process.stdout.write(`\\u001b[${insert + ask.length + 1}G`);\n          buf = Buffer.alloc(3);\n        }\n\n        continue; // any other 3 character sequence is ignored\n      } // if it is not a control character seq, assume only one character is read\n\n\n      character = buf[read - 1]; // catch a ^C and return null\n\n      if (character === 3) {\n        process.stdout.write('^C\\n');\n\n        _fs().default.closeSync(fd);\n\n        process.exit(130);\n\n        if (process.stdin.setRawMode) {\n          process.stdin.setRawMode(!!wasRaw);\n        }\n\n        return null;\n      } // catch the terminating character\n\n\n      if (character === term) {\n        _fs().default.closeSync(fd);\n\n        break;\n      }\n\n      if (character === 127 || process.platform === 'win32' && character === 8) {\n        // backspace\n        if (!insert) {\n          continue;\n        }\n\n        str = str.slice(0, insert - 1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if (character < 32 || character > 126) {\n          continue;\n        }\n\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      }\n\n      if (masked) {\n        process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${Array(str.length + 1).join(echo)}`);\n      } else {\n        process.stdout.write('\\u001b[s');\n\n        if (insert === str.length) {\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n        } else if (ask) {\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n        } else {\n          process.stdout.write(`\\u001b[2K\\u001b[0G${str}\\u001b[${str.length - insert}D`);\n        }\n\n        process.stdout.write('\\u001b[u');\n        process.stdout.write('\\u001b[1C');\n      }\n    }\n\n    process.stdout.write('\\n');\n\n    if (process.stdin.setRawMode) {\n      process.stdin.setRawMode(!!wasRaw);\n    }\n\n    return str || value || '';\n  }\n}\n\nvar _default = create;\nexports.default = _default;\n\n//# sourceMappingURL=promptSync.js.map"]},"metadata":{},"sourceType":"script"}