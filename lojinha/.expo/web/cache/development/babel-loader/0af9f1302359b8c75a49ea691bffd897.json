{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/App.js\";\n\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styled from 'styled-components/native';\nvar Pagina = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: center;\\n\"])));\nvar Texto = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 20px;\\n  margin-top: 10px;\\n\"])));\nvar Input = styled.TextInput(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  width: 90%;\\n  height: 50px;\\n  font-size: 18px;\\n  background-color: #eee;\\n  margin-top: 20px;\\n  border-radius: 10px;\\n  padding: 10px;\\n\"])));\nvar GerarButton = styled.Button(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 10px;\\n\"])));\nvar charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!#%.,';\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      psw = _useState2[0],\n      setPsw = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      size = _useState4[0],\n      setSize = _useState4[1];\n\n  var _useState5 = useState('./src/images/unicorn.png'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      img = _useState6[0],\n      setImg = _useState6[1];\n\n  function geraPsw() {\n    var pass = '';\n    var n = charset.length;\n\n    if (size < 1 || size > 15) {\n      alert('Tamanho da senha inválido');\n    } else {\n      setImg('./src/images/unicorn2.png');\n\n      for (var i = 0; i < size; i++) {\n        pass += charset.charAt(Math.floor(Math.random() * n));\n      }\n\n      setPsw(pass);\n    }\n  }\n\n  return React.createElement(Pagina, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"\" + img),\n    style: {\n      width: 200,\n      height: 200,\n      marginTop: 10\n    },\n    resizeMode: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Texto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, size, \" Caracteres\"), React.createElement(Input, {\n    placeholder: \"Entre 1 e 15\",\n    palceholderTextColor: \"#000\",\n    keyboardType: \"numeric\",\n    value: size,\n    onChangeText: function onChangeText(n) {\n      return setSize(n);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(GerarButton, {\n    title: \"Gerar Senha\",\n    onPress: geraPsw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Texto, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, img), React.createElement(Texto, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, psw));\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/App.js"],"names":["React","useState","styled","Pagina","SafeAreaView","Texto","Text","Input","TextInput","GerarButton","Button","charset","App","psw","setPsw","size","setSize","img","setImg","geraPsw","pass","n","length","alert","i","charAt","Math","floor","random","require","width","height","marginTop","fontSize"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,YAAV,gHAAZ;AAKA,IAAMC,KAAK,GAAGH,MAAM,CAACI,IAAV,uHAAX;AAKA,IAAMC,KAAK,GAAGL,MAAM,CAACM,SAAV,4NAAX;AAUA,IAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAV,mGAAjB;AAIA,IAAIC,OAAO,GACT,sEADF;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAGNX,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,MAGrBY,GAHqB;AAAA,MAGhBC,MAHgB;;AAAA,mBAKJb,QAAQ,CAAC,EAAD,CALJ;AAAA;AAAA,MAKrBc,IALqB;AAAA,MAKfC,OALe;;AAAA,mBAONf,QAAQ,CAAC,0BAAD,CAPF;AAAA;AAAA,MAOrBgB,GAPqB;AAAA,MAOhBC,MAPgB;;AAS5B,WAASC,OAAT,GAAmB;AACjB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,CAAC,GAAGV,OAAO,CAACW,MAAhB;;AAEA,QAAIP,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;AACzBQ,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,KAFD,MAEO;AACLL,MAAAA,MAAM,CAAC,2BAAD,CAAN;;AAEA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAApB,EAA0BS,CAAC,EAA3B,EAA+B;AAC7BJ,QAAAA,IAAI,IAAIT,OAAO,CAACc,MAAR,CAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,CAA3B,CAAf,CAAR;AACD;;AAEDP,MAAAA,MAAM,CAACM,IAAD,CAAN;AACD;AACF;;AAED,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAES,OAAO,MAAIZ,GAAJ,CADjB;AAEE,IAAA,KAAK,EAAE;AAACa,MAAAA,KAAK,EAAC,GAAP;AAAYC,MAAAA,MAAM,EAAC,GAAnB;AAAwBC,MAAAA,SAAS,EAAC;AAAlC,KAFT;AAGE,IAAA,UAAU,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQjB,IAAR,gBANF,EAOE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,oBAAoB,EAAC,MAFvB;AAGE,IAAA,YAAY,EAAC,SAHf;AAIE,IAAA,KAAK,EAAEA,IAJT;AAKE,IAAA,YAAY,EAAE,sBAACM,CAAD;AAAA,aAAOL,OAAO,CAACK,CAAD,CAAd;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAEF,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACc,MAAAA,QAAQ,EAAC;AAAV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,GADH,CAfF,EAkBE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACgB,MAAAA,QAAQ,EAAC;AAAV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,GADH,CAlBF,CADF;AAwBD","sourcesContent":["import React, { useState } from 'react';\nimport { Image } from 'react-native';\nimport styled from 'styled-components/native';\n\nconst Pagina = styled.SafeAreaView`\n  flex: 1;\n  align-items: center;\n`;\n\nconst Texto = styled.Text`\n  font-size: 20px;\n  margin-top: 10px;\n`;\n\nconst Input = styled.TextInput`\n  width: 90%;\n  height: 50px;\n  font-size: 18px;\n  background-color: #eee;\n  margin-top: 20px;\n  border-radius: 10px;\n  padding: 10px;\n`;\n\nconst GerarButton = styled.Button`\n  margin-top: 10px;\n`;\n\nlet charset =\n  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!#%.,';\n\nexport default function App() {\n  // criação das states\n  // state da senha que vai ser gerada\n  const [psw, setPsw] = useState('');\n  // state do tamanho da senha\n  const [size, setSize] = useState('');\n  // require images\n  const [img, setImg] = useState('./src/images/unicorn.png')\n\n  function geraPsw() {\n    let pass = '';\n    let n = charset.length;\n\n    if (size < 1 || size > 15) {\n      alert('Tamanho da senha inválido');\n    } else {\n      setImg('./src/images/unicorn2.png');\n      // copia caracteres aleatórios para a senha\n      for (let i = 0; i < size; i++) {\n        pass += charset.charAt(Math.floor(Math.random() * n));\n      }\n      // atualiza o campo senha (psw)\n      setPsw(pass);\n    }\n  }\n\n  return (\n    <Pagina>\n      <Image\n        source={require(`${img}`)}\n        style={{width:200, height:200, marginTop:10}}\n        resizeMode='center'\n      />\n      <Texto>{size} Caracteres</Texto>\n      <Input \n        placeholder=\"Entre 1 e 15\" \n        palceholderTextColor=\"#000\"\n        keyboardType=\"numeric\"\n        value={size}\n        onChangeText={(n) => setSize(n)}\n        />\n      <GerarButton title=\"Gerar Senha\" onPress={geraPsw} />\n      <Texto style={{fontSize:15}}>\n        {img}\n      </Texto>\n      <Texto style={{fontSize:15}}>\n        {psw}\n      </Texto>\n    </Pagina>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}