{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ScrollView/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createReactClass from 'create-react-class';\nimport dismissKeyboard from \"../../modules/dismissKeyboard\";\nimport invariant from 'fbjs/lib/invariant';\nimport ScrollResponder from \"../../modules/ScrollResponder\";\nimport ScrollViewBase from \"./ScrollViewBase\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nimport React from 'react';\nvar emptyObject = {};\nvar ScrollView = createReactClass({\n  displayName: \"ScrollView\",\n  mixins: [ScrollResponder.Mixin],\n  getInitialState: function getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n  flashScrollIndicators: function flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n  setNativeProps: function setNativeProps(props) {\n    if (this._scrollNodeRef) {\n      this._scrollNodeRef.setNativeProps(props);\n    }\n  },\n  getScrollResponder: function getScrollResponder() {\n    return this;\n  },\n  getScrollableNode: function getScrollableNode() {\n    return this._scrollNodeRef;\n  },\n  getInnerViewNode: function getInnerViewNode() {\n    return this._innerViewRef;\n  },\n  scrollTo: function scrollTo(y, x, animated) {\n    if (typeof y === 'number') {\n      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n    } else {\n      var _ref = y || emptyObject;\n\n      x = _ref.x;\n      y = _ref.y;\n      animated = _ref.animated;\n    }\n\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n  scrollToEnd: function scrollToEnd(options) {\n    var animated = (options && options.animated) !== false;\n    var horizontal = this.props.horizontal;\n    var scrollResponder = this.getScrollResponder();\n    var scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({\n      x: x,\n      y: y,\n      animated: animated\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        horizontal = _this$props.horizontal,\n        onContentSizeChange = _this$props.onContentSizeChange,\n        refreshControl = _this$props.refreshControl,\n        stickyHeaderIndices = _this$props.stickyHeaderIndices,\n        pagingEnabled = _this$props.pagingEnabled,\n        keyboardDismissMode = _this$props.keyboardDismissMode,\n        onScroll = _this$props.onScroll,\n        other = _objectWithoutProperties(_this$props, [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"keyboardDismissMode\", \"onScroll\"]);\n\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {\n        return style && style[prop] !== undefined;\n      });\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n\n    var contentSizeChangeProps = {};\n\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, function (child, i) {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n\n      if (child != null && (isSticky || pagingEnabled)) {\n        return React.createElement(View, {\n          style: StyleSheet.compose(isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: StyleSheet.compose(horizontal && styles.contentContainerHorizontal, contentContainerStyle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n\n    if (refreshControl) {\n      return React.cloneElement(refreshControl, {\n        style: props.style\n      }, React.createElement(ScrollViewClass, _extends({}, props, {\n        ref: this._setScrollNodeRef,\n        style: baseStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }), contentContainer));\n    }\n\n    return React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }\n    }), contentContainer);\n  },\n  _handleContentOnLayout: function _handleContentOnLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n    this.props.onContentSizeChange(width, height);\n  },\n  _handleScroll: function _handleScroll(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n      }\n    }\n\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n\n    this.scrollResponderHandleScroll(e);\n  },\n  _setInnerViewRef: function _setInnerViewRef(component) {\n    this._innerViewRef = component;\n  },\n  _setScrollNodeRef: function _setScrollNodeRef(component) {\n    this._scrollNodeRef = component;\n  }\n});\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  transform: [{\n    translateZ: 0\n  }],\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nexport default ScrollView;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ScrollView/index.js"],"names":["createReactClass","dismissKeyboard","invariant","ScrollResponder","ScrollViewBase","StyleSheet","View","React","emptyObject","ScrollView","mixins","Mixin","getInitialState","scrollResponderMixinGetInitialState","flashScrollIndicators","scrollResponderFlashScrollIndicators","setNativeProps","props","_scrollNodeRef","getScrollResponder","getScrollableNode","getInnerViewNode","_innerViewRef","scrollTo","y","x","animated","console","warn","scrollResponderScrollTo","scrollToEnd","options","horizontal","scrollResponder","scrollResponderNode","scrollResponderGetScrollableNode","scrollWidth","scrollHeight","render","contentContainerStyle","onContentSizeChange","refreshControl","stickyHeaderIndices","pagingEnabled","keyboardDismissMode","onScroll","other","process","env","NODE_ENV","style","flatten","childLayoutProps","filter","prop","undefined","length","JSON","stringify","contentSizeChangeProps","onLayout","_handleContentOnLayout","hasStickyHeaderIndices","Array","isArray","children","Children","map","child","i","isSticky","indexOf","compose","styles","stickyHeader","pagingEnabledChild","contentContainer","_setInnerViewRef","contentContainerHorizontal","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onTouchStart","scrollResponderHandleTouchStart","onTouchMove","scrollResponderHandleTouchMove","onTouchEnd","scrollResponderHandleTouchEnd","onScrollBeginDrag","scrollResponderHandleScrollBeginDrag","onScrollEndDrag","scrollResponderHandleScrollEndDrag","onMomentumScrollBegin","scrollResponderHandleMomentumScrollBegin","onMomentumScrollEnd","scrollResponderHandleMomentumScrollEnd","onStartShouldSetResponder","scrollResponderHandleStartShouldSetResponder","onStartShouldSetResponderCapture","scrollResponderHandleStartShouldSetResponderCapture","onScrollShouldSetResponder","scrollResponderHandleScrollShouldSetResponder","_handleScroll","onResponderGrant","scrollResponderHandleResponderGrant","onResponderTerminationRequest","scrollResponderHandleTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderRelease","scrollResponderHandleResponderRelease","onResponderReject","scrollResponderHandleResponderReject","ScrollViewClass","cloneElement","_setScrollNodeRef","e","nativeEvent","layout","width","height","scrollEventThrottle","log","scrollResponderHandleScroll","component","commonStyle","flexGrow","flexShrink","transform","translateZ","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","position","top","zIndex","scrollSnapType","scrollSnapAlign"],"mappings":";;;;;;;;;AAYA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAgBA,IAAMC,WAAW,GAAG,EAApB;AAGA,IAAMC,UAAU,GAAKT,gBAAgB,CAAC;AAAA;AACpCU,EAAAA,MAAM,EAAE,CAACP,eAAe,CAACQ,KAAjB,CAD4B;AAGpCC,EAAAA,eAHoC,6BAGlB;AAChB,WAAO,KAAKC,mCAAL,EAAP;AACD,GALmC;AAOpCC,EAAAA,qBAPoC,mCAOZ;AACtB,SAAKC,oCAAL;AACD,GATmC;AAWpCC,EAAAA,cAXoC,0BAWrBC,KAXqB,EAWN;AAC5B,QAAI,KAAKC,cAAT,EAAyB;AACvB,WAAKA,cAAL,CAAoBF,cAApB,CAAmCC,KAAnC;AACD;AACF,GAfmC;AAuBpCE,EAAAA,kBAvBoC,gCAuBH;AAC/B,WAAO,IAAP;AACD,GAzBmC;AA2BpCC,EAAAA,iBA3BoC,+BA2BX;AACvB,WAAO,KAAKF,cAAZ;AACD,GA7BmC;AA+BpCG,EAAAA,gBA/BoC,8BA+BZ;AACtB,WAAO,KAAKC,aAAZ;AACD,GAjCmC;AA6CpCC,EAAAA,QA7CoC,oBA8ClCC,CA9CkC,EA+ClCC,CA/CkC,EAgDlCC,QAhDkC,EAiDlC;AACA,QAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B;AACzBG,MAAAA,OAAO,CAACC,IAAR,CACE,iGADF;AAGD,KAJD,MAIO;AAAA,iBACiBJ,CAAC,IAAIhB,WADtB;;AACFiB,MAAAA,CADE,QACFA,CADE;AACCD,MAAAA,CADD,QACCA,CADD;AACIE,MAAAA,QADJ,QACIA,QADJ;AAEN;;AAED,SAAKP,kBAAL,GAA0BU,uBAA1B,CAAkD;AAChDJ,MAAAA,CAAC,EAAEA,CAAC,IAAI,CADwC;AAEhDD,MAAAA,CAAC,EAAEA,CAAC,IAAI,CAFwC;AAGhDE,MAAAA,QAAQ,EAAEA,QAAQ,KAAK;AAHyB,KAAlD;AAKD,GA/DmC;AAyEpCI,EAAAA,WAzEoC,uBAyExBC,OAzEwB,EAyEU;AAE5C,QAAML,QAAQ,GAAG,CAACK,OAAO,IAAIA,OAAO,CAACL,QAApB,MAAkC,KAAnD;AAF4C,QAGpCM,UAHoC,GAGrB,KAAKf,KAHgB,CAGpCe,UAHoC;AAI5C,QAAMC,eAAe,GAAG,KAAKd,kBAAL,EAAxB;AACA,QAAMe,mBAAmB,GAAGD,eAAe,CAACE,gCAAhB,EAA5B;AACA,QAAMV,CAAC,GAAGO,UAAU,GAAGE,mBAAmB,CAACE,WAAvB,GAAqC,CAAzD;AACA,QAAMZ,CAAC,GAAGQ,UAAU,GAAG,CAAH,GAAOE,mBAAmB,CAACG,YAA/C;AACAJ,IAAAA,eAAe,CAACJ,uBAAhB,CAAwC;AAAEJ,MAAAA,CAAC,EAADA,CAAF;AAAKD,MAAAA,CAAC,EAADA,CAAL;AAAQE,MAAAA,QAAQ,EAARA;AAAR,KAAxC;AACD,GAlFmC;AAoFpCY,EAAAA,MApFoC,oBAoF3B;AAAA;;AAAA,sBAaH,KAAKrB,KAbF;AAAA,QAELsB,qBAFK,eAELA,qBAFK;AAAA,QAGLP,UAHK,eAGLA,UAHK;AAAA,QAILQ,mBAJK,eAILA,mBAJK;AAAA,QAKLC,cALK,eAKLA,cALK;AAAA,QAMLC,mBANK,eAMLA,mBANK;AAAA,QAOLC,aAPK,eAOLA,aAPK;AAAA,QASLC,mBATK,eASLA,mBATK;AAAA,QAULC,QAVK,eAULA,QAVK;AAAA,QAYFC,KAZE;;AAeP,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,KAAKhC,KAAL,CAAWiC,KAAxD,EAA+D;AAC7D,UAAMA,KAAK,GAAG7C,UAAU,CAAC8C,OAAX,CAAmB,KAAKlC,KAAL,CAAWiC,KAA9B,CAAd;AACA,UAAME,gBAAgB,GAAG,CAAC,YAAD,EAAe,gBAAf,EAAiCC,MAAjC,CACvB,UAAAC,IAAI;AAAA,eAAIJ,KAAK,IAAIA,KAAK,CAACI,IAAD,CAAL,KAAgBC,SAA7B;AAAA,OADmB,CAAzB;AAGArD,MAAAA,SAAS,CACPkD,gBAAgB,CAACI,MAAjB,KAA4B,CADrB,EAEP,8BAA4BC,IAAI,CAACC,SAAL,CAAeN,gBAAf,CAA5B,UACE,yDAHK,CAAT;AAKD;;AAED,QAAIO,sBAAsB,GAAG,EAA7B;;AACA,QAAInB,mBAAJ,EAAyB;AACvBmB,MAAAA,sBAAsB,GAAG;AACvBC,QAAAA,QAAQ,EAAE,KAAKC;AADQ,OAAzB;AAGD;;AAED,QAAMC,sBAAsB,GAAG,CAAC9B,UAAD,IAAe+B,KAAK,CAACC,OAAN,CAActB,mBAAd,CAA9C;AACA,QAAMuB,QAAQ,GACZH,sBAAsB,IAAInB,aAA1B,GACIpC,KAAK,CAAC2D,QAAN,CAAeC,GAAf,CAAmB,KAAKlD,KAAL,CAAWgD,QAA9B,EAAwC,UAACG,KAAD,EAAQC,CAAR,EAAc;AACpD,UAAMC,QAAQ,GAAGR,sBAAsB,IAAIpB,mBAAmB,CAAC6B,OAApB,CAA4BF,CAA5B,IAAiC,CAAC,CAA7E;;AACA,UAAID,KAAK,IAAI,IAAT,KAAkBE,QAAQ,IAAI3B,aAA9B,CAAJ,EAAkD;AAChD,eACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAEtC,UAAU,CAACmE,OAAX,CACLF,QAAQ,IAAIG,MAAM,CAACC,YADd,EAEL/B,aAAa,IAAI8B,MAAM,CAACE,kBAFnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMGP,KANH,CADF;AAUD,OAXD,MAWO;AACL,eAAOA,KAAP;AACD;AACF,KAhBD,CADJ,GAkBI,KAAKnD,KAAL,CAAWgD,QAnBjB;AAqBA,QAAMW,gBAAgB,GACpB,oBAAC,IAAD,eACMjB,sBADN;AAEE,MAAA,QAAQ,EAAEM,QAFZ;AAGE,MAAA,WAAW,EAAE,KAHf;AAIE,MAAA,GAAG,EAAE,KAAKY,gBAJZ;AAKE,MAAA,KAAK,EAAExE,UAAU,CAACmE,OAAX,CACLxC,UAAU,IAAIyC,MAAM,CAACK,0BADhB,EAELvC,qBAFK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAaA,QAAMwC,SAAS,GAAG/C,UAAU,GAAGyC,MAAM,CAACO,cAAV,GAA2BP,MAAM,CAACQ,YAA9D;AACA,QAAMC,kBAAkB,GAAGlD,UAAU,GACjCyC,MAAM,CAACU,uBAD0B,GAEjCV,MAAM,CAACW,qBAFX;;AAIA,QAAMnE,KAAK,mCACN6B,KADM;AAETI,MAAAA,KAAK,EAAE,CAAC6B,SAAD,EAAYpC,aAAa,IAAIuC,kBAA7B,EAAiD,KAAKjE,KAAL,CAAWiC,KAA5D,CAFE;AAGTmC,MAAAA,YAAY,EAAE,KAAKC,+BAHV;AAITC,MAAAA,WAAW,EAAE,KAAKC,8BAJT;AAKTC,MAAAA,UAAU,EAAE,KAAKC,6BALR;AAMTC,MAAAA,iBAAiB,EAAE,KAAKC,oCANf;AAOTC,MAAAA,eAAe,EAAE,KAAKC,kCAPb;AAQTC,MAAAA,qBAAqB,EAAE,KAAKC,wCARnB;AASTC,MAAAA,mBAAmB,EAAE,KAAKC,sCATjB;AAUTC,MAAAA,yBAAyB,EAAE,KAAKC,4CAVvB;AAWTC,MAAAA,gCAAgC,EAAE,KAAKC,mDAX9B;AAYTC,MAAAA,0BAA0B,EAAE,KAAKC,6CAZxB;AAaT3D,MAAAA,QAAQ,EAAE,KAAK4D,aAbN;AAcTC,MAAAA,gBAAgB,EAAE,KAAKC,mCAdd;AAeTC,MAAAA,6BAA6B,EAAE,KAAKC,uCAf3B;AAgBTC,MAAAA,oBAAoB,EAAE,KAAKC,8BAhBlB;AAiBTC,MAAAA,kBAAkB,EAAE,KAAKC,qCAjBhB;AAkBTC,MAAAA,iBAAiB,EAAE,KAAKC;AAlBf,MAAX;;AAqBA,QAAMC,eAAe,GAAGhH,cAAxB;AAEAF,IAAAA,SAAS,CAACkH,eAAe,KAAK7D,SAArB,EAAgC,uCAAhC,CAAT;;AAEA,QAAId,cAAJ,EAAoB;AAClB,aAAOlC,KAAK,CAAC8G,YAAN,CACL5E,cADK,EAEL;AAAES,QAAAA,KAAK,EAAEjC,KAAK,CAACiC;AAAf,OAFK,EAGL,oBAAC,eAAD,eAAqBjC,KAArB;AAA4B,QAAA,GAAG,EAAE,KAAKqG,iBAAtC;AAAyD,QAAA,KAAK,EAAEvC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGH,gBADH,CAHK,CAAP;AAOD;;AAED,WACE,oBAAC,eAAD,eAAqB3D,KAArB;AAA4B,MAAA,GAAG,EAAE,KAAKqG,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG1C,gBADH,CADF;AAKD,GAtMmC;AAwMpCf,EAAAA,sBAxMoC,kCAwMb0D,CAxMa,EAwMF;AAAA,gCACNA,CAAC,CAACC,WAAF,CAAcC,MADR;AAAA,QACxBC,KADwB,yBACxBA,KADwB;AAAA,QACjBC,MADiB,yBACjBA,MADiB;AAEhC,SAAK1G,KAAL,CAAWuB,mBAAX,CAA+BkF,KAA/B,EAAsCC,MAAtC;AACD,GA3MmC;AA6MpClB,EAAAA,aA7MoC,yBA6MtBc,CA7MsB,EA6MX;AACvB,QAAIxE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,KAAKhC,KAAL,CAAW4B,QAAX,IAAuB,KAAK5B,KAAL,CAAW2G,mBAAX,IAAkC,IAA7D,EAAmE;AACjEjG,QAAAA,OAAO,CAACkG,GAAR,CACE,wDACE,0DADF,GAEE,6DAFF,GAGE,8DAHF,GAIE,iBALJ;AAOD;AACF;;AAED,QAAI,KAAK5G,KAAL,CAAW2B,mBAAX,KAAmC,SAAvC,EAAkD;AAChD3C,MAAAA,eAAe;AAChB;;AAED,SAAK6H,2BAAL,CAAiCP,CAAjC;AACD,GA/NmC;AAiOpC1C,EAAAA,gBAjOoC,4BAiOnBkD,SAjOmB,EAiOR;AAC1B,SAAKzG,aAAL,GAAqByG,SAArB;AACD,GAnOmC;AAqOpCT,EAAAA,iBArOoC,6BAqOlBS,SArOkB,EAqOP;AAC3B,SAAK7G,cAAL,GAAsB6G,SAAtB;AACD;AAvOmC,CAAD,CAArC;AA0OA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,CADQ;AAElBC,EAAAA,UAAU,EAAE,CAFM;AAMlBC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAD,CANO;AAQlBC,EAAAA,uBAAuB,EAAE;AARP,CAApB;AAWA,IAAM5D,MAAM,GAAGpE,UAAU,CAACiI,MAAX,CAAkB;AAC/BrD,EAAAA,YAAY,kCACP+C,WADO;AAEVO,IAAAA,aAAa,EAAE,QAFL;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,SAAS,EAAE;AAJD,IADmB;AAO/BzD,EAAAA,cAAc,kCACTgD,WADS;AAEZO,IAAAA,aAAa,EAAE,KAFH;AAGZC,IAAAA,SAAS,EAAE,MAHC;AAIZC,IAAAA,SAAS,EAAE;AAJC,IAPiB;AAa/B3D,EAAAA,0BAA0B,EAAE;AAC1ByD,IAAAA,aAAa,EAAE;AADW,GAbG;AAgB/B7D,EAAAA,YAAY,EAAE;AACZgE,IAAAA,QAAQ,EAAE,QADE;AAEZC,IAAAA,GAAG,EAAE,CAFO;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAhBiB;AAqB/BzD,EAAAA,uBAAuB,EAAE;AACvB0D,IAAAA,cAAc,EAAE;AADO,GArBM;AAwB/BzD,EAAAA,qBAAqB,EAAE;AACrByD,IAAAA,cAAc,EAAE;AADK,GAxBQ;AA2B/BlE,EAAAA,kBAAkB,EAAE;AAClBmE,IAAAA,eAAe,EAAE;AADC;AA3BW,CAAlB,CAAf;AAgCA,eAAerI,UAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport type { ViewProps, ViewStyle } from '../View/types';\n\nimport createReactClass from 'create-react-class';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport ScrollResponder from '../../modules/ScrollResponder';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport React from 'react';\n\ntype ScrollViewProps = {\n  ...ViewProps,\n  contentContainerStyle?: ViewStyle,\n  horizontal?: boolean,\n  keyboardDismissMode?: 'none' | 'interactive' | 'on-drag',\n  onContentSizeChange?: (e: any) => void,\n  onScroll?: (e: any) => void,\n  pagingEnabled?: boolean,\n  refreshControl?: any,\n  scrollEnabled?: boolean,\n  scrollEventThrottle?: number,\n  stickyHeaderIndices?: Array<number>\n};\n\nconst emptyObject = {};\n\n/* eslint-disable react/prefer-es6-class */\nconst ScrollView = ((createReactClass({\n  mixins: [ScrollResponder.Mixin],\n\n  getInitialState() {\n    return this.scrollResponderMixinGetInitialState();\n  },\n\n  flashScrollIndicators() {\n    this.scrollResponderFlashScrollIndicators();\n  },\n\n  setNativeProps(props: Object) {\n    if (this._scrollNodeRef) {\n      this._scrollNodeRef.setNativeProps(props);\n    }\n  },\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n  getScrollResponder(): ScrollView {\n    return this;\n  },\n\n  getScrollableNode(): any {\n    return this._scrollNodeRef;\n  },\n\n  getInnerViewNode(): any {\n    return this._innerViewRef;\n  },\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollTo(\n    y?: number | { x?: number, y?: number, animated?: boolean },\n    x?: number,\n    animated?: boolean\n  ) {\n    if (typeof y === 'number') {\n      console.warn(\n        '`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.'\n      );\n    } else {\n      ({ x, y, animated } = y || emptyObject);\n    }\n\n    this.getScrollResponder().scrollResponderScrollTo({\n      x: x || 0,\n      y: y || 0,\n      animated: animated !== false\n    });\n  },\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n  scrollToEnd(options?: { animated?: boolean }) {\n    // Default to true\n    const animated = (options && options.animated) !== false;\n    const { horizontal } = this.props;\n    const scrollResponder = this.getScrollResponder();\n    const scrollResponderNode = scrollResponder.scrollResponderGetScrollableNode();\n    const x = horizontal ? scrollResponderNode.scrollWidth : 0;\n    const y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n    scrollResponder.scrollResponderScrollTo({ x, y, animated });\n  },\n\n  render() {\n    const {\n      contentContainerStyle,\n      horizontal,\n      onContentSizeChange,\n      refreshControl,\n      stickyHeaderIndices,\n      pagingEnabled,\n      /* eslint-disable */\n      keyboardDismissMode,\n      onScroll,\n      /* eslint-enable */\n      ...other\n    } = this.props;\n\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      const style = StyleSheet.flatten(this.props.style);\n      const childLayoutProps = ['alignItems', 'justifyContent'].filter(\n        prop => style && style[prop] !== undefined\n      );\n      invariant(\n        childLayoutProps.length === 0,\n        `ScrollView child layout (${JSON.stringify(childLayoutProps)}) ` +\n          'must be applied through the contentContainerStyle prop.'\n      );\n    }\n\n    let contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n\n    const hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    const children =\n      hasStickyHeaderIndices || pagingEnabled\n        ? React.Children.map(this.props.children, (child, i) => {\n            const isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n            if (child != null && (isSticky || pagingEnabled)) {\n              return (\n                <View\n                  style={StyleSheet.compose(\n                    isSticky && styles.stickyHeader,\n                    pagingEnabled && styles.pagingEnabledChild\n                  )}\n                >\n                  {child}\n                </View>\n              );\n            } else {\n              return child;\n            }\n          })\n        : this.props.children;\n\n    const contentContainer = (\n      <View\n        {...contentSizeChangeProps}\n        children={children}\n        collapsable={false}\n        ref={this._setInnerViewRef}\n        style={StyleSheet.compose(\n          horizontal && styles.contentContainerHorizontal,\n          contentContainerStyle\n        )}\n      />\n    );\n\n    const baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    const pagingEnabledStyle = horizontal\n      ? styles.pagingEnabledHorizontal\n      : styles.pagingEnabledVertical;\n\n    const props = {\n      ...other,\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    };\n\n    const ScrollViewClass = ScrollViewBase;\n\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n\n    if (refreshControl) {\n      return React.cloneElement(\n        refreshControl,\n        { style: props.style },\n        <ScrollViewClass {...props} ref={this._setScrollNodeRef} style={baseStyle}>\n          {contentContainer}\n        </ScrollViewClass>\n      );\n    }\n\n    return (\n      <ScrollViewClass {...props} ref={this._setScrollNodeRef}>\n        {contentContainer}\n      </ScrollViewClass>\n    );\n  },\n\n  _handleContentOnLayout(e: Object) {\n    const { width, height } = e.nativeEvent.layout;\n    this.props.onContentSizeChange(width, height);\n  },\n\n  _handleScroll(e: Object) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n        console.log(\n          'You specified `onScroll` on a <ScrollView> but not ' +\n            '`scrollEventThrottle`. You will only receive one event. ' +\n            'Using `16` you get all the events but be aware that it may ' +\n            \"cause frame drops, use a bigger number if you don't need as \" +\n            'much precision.'\n        );\n      }\n    }\n\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n\n    this.scrollResponderHandleScroll(e);\n  },\n\n  _setInnerViewRef(component) {\n    this._innerViewRef = component;\n  },\n\n  _setScrollNodeRef(component) {\n    this._scrollNodeRef = component;\n  }\n}): any): React.ComponentType<ScrollViewProps>);\n\nconst commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: [{ translateZ: 0 }],\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\n\nconst styles = StyleSheet.create({\n  baseVertical: {\n    ...commonStyle,\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  baseHorizontal: {\n    ...commonStyle,\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  },\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\n\nexport default ScrollView;\n"]},"metadata":{},"sourceType":"module"}