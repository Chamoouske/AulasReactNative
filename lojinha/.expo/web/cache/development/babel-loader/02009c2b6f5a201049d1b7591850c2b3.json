{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/__tests__/LogBoxNotificationContainer-test.js\";\n\nvar React = require('react');\n\nvar _require = require(\"../LogBoxInspectorContainer\"),\n    LogBoxInspectorContainer = _require._LogBoxInspectorContainer;\n\nvar LogBoxLog = require(\"../Data/LogBoxLog\").default;\n\nvar render = require(\"../../../jest/renderer\");\n\ndescribe('LogBoxNotificationContainer', function () {\n  it('should render inspector with logs, even when disabled', function () {\n    var output = render.shallowRender(React.createElement(LogBoxInspectorContainer, {\n      isDisabled: true,\n      selectedLogIndex: -1,\n      logs: [new LogBoxLog({\n        level: 'warn',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message',\n        componentStack: []\n      }), new LogBoxLog({\n        level: 'error',\n        isComponentError: false,\n        message: {\n          content: 'Some kind of message (latest)',\n          substitutions: []\n        },\n        stack: [],\n        category: 'Some kind of message (latest)',\n        componentStack: []\n      })],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }));\n    expect(output).toMatchSnapshot();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/LogBox/__tests__/LogBoxNotificationContainer-test.js"],"names":["React","require","LogBoxInspectorContainer","_LogBoxInspectorContainer","LogBoxLog","default","render","describe","it","output","shallowRender","level","isComponentError","message","content","substitutions","stack","category","componentStack","expect","toMatchSnapshot"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;eAGIA,OAAO,+B;IADkBC,wB,YAA3BC,yB;;AAEF,IAAMC,SAAS,GAAGH,OAAO,qBAAP,CAA6BI,OAA/C;;AACA,IAAMC,MAAM,GAAGL,OAAO,0BAAtB;;AAEAM,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5CC,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAM;AAChE,QAAMC,MAAM,GAAGH,MAAM,CAACI,aAAP,CACb,oBAAC,wBAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,gBAAgB,EAAE,CAAC,CAFrB;AAGE,MAAA,IAAI,EAAE,CACJ,IAAIN,SAAJ,CAAc;AACZO,QAAAA,KAAK,EAAE,MADK;AAEZC,QAAAA,gBAAgB,EAAE,KAFN;AAGZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,sBADF;AAEPC,UAAAA,aAAa,EAAE;AAFR,SAHG;AAOZC,QAAAA,KAAK,EAAE,EAPK;AAQZC,QAAAA,QAAQ,EAAE,sBARE;AASZC,QAAAA,cAAc,EAAE;AATJ,OAAd,CADI,EAYJ,IAAId,SAAJ,CAAc;AACZO,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,gBAAgB,EAAE,KAFN;AAGZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,+BADF;AAEPC,UAAAA,aAAa,EAAE;AAFR,SAHG;AAOZC,QAAAA,KAAK,EAAE,EAPK;AAQZC,QAAAA,QAAQ,EAAE,+BARE;AASZC,QAAAA,cAAc,EAAE;AATJ,OAAd,CAZI,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,CAAf;AA+BAC,IAAAA,MAAM,CAACV,MAAD,CAAN,CAAeW,eAAf;AACD,GAjCC,CAAF;AAkCD,CAnCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  _LogBoxInspectorContainer: LogBoxInspectorContainer,\n} = require('../LogBoxInspectorContainer');\nconst LogBoxLog = require('../Data/LogBoxLog').default;\nconst render = require('../../../jest/renderer');\n\ndescribe('LogBoxNotificationContainer', () => {\n  it('should render inspector with logs, even when disabled', () => {\n    const output = render.shallowRender(\n      <LogBoxInspectorContainer\n        isDisabled\n        selectedLogIndex={-1}\n        logs={[\n          new LogBoxLog({\n            level: 'warn',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message',\n            componentStack: [],\n          }),\n          new LogBoxLog({\n            level: 'error',\n            isComponentError: false,\n            message: {\n              content: 'Some kind of message (latest)',\n              substitutions: [],\n            },\n            stack: [],\n            category: 'Some kind of message (latest)',\n            componentStack: [],\n          }),\n        ]}\n      />,\n    );\n\n    expect(output).toMatchSnapshot();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}