{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/KeyboardAvoidingView/KeyboardAvoidingViewExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar KeyboardAvoidingView = require(\"react-native-web/dist/exports/KeyboardAvoidingView\").default;\n\nvar Modal = require(\"react-native-web/dist/exports/Modal\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TextInput = require(\"react-native-web/dist/exports/TextInput\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar KeyboardAvoidingViewExample = function (_React$Component) {\n  _inherits(KeyboardAvoidingViewExample, _React$Component);\n\n  var _super = _createSuper(KeyboardAvoidingViewExample);\n\n  function KeyboardAvoidingViewExample() {\n    var _this;\n\n    _classCallCheck(this, KeyboardAvoidingViewExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      behavior: 'padding',\n      modalOpen: false\n    };\n\n    _this.onSegmentChange = function (segment) {\n      _this.setState({\n        behavior: segment.toLowerCase()\n      });\n    };\n\n    _this.renderExample = function () {\n      return React.createElement(View, {\n        style: styles.outerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        visible: _this.state.modalOpen,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        behavior: _this.state.behavior,\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, React.createElement(SegmentedControlIOS, {\n        onValueChange: _this.onSegmentChange,\n        selectedIndex: _this.state.behavior === 'padding' ? 0 : 1,\n        style: styles.segment,\n        values: ['Padding', 'Position'],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"<TextInput />\",\n        style: styles.textInput,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this.setState({\n            modalOpen: false\n          });\n        },\n        style: styles.closeButton,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Close\"))), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this.setState({\n            modalOpen: true\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, \"Open Example\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(KeyboardAvoidingViewExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: \"Keyboard Avoiding View\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Keyboard-avoiding views move out of the way of the keyboard.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, this.renderExample()));\n    }\n  }]);\n\n  return KeyboardAvoidingViewExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  textInput: {\n    borderRadius: 5,\n    borderWidth: 1,\n    height: 44,\n    paddingHorizontal: 10\n  },\n  segment: {\n    marginBottom: 10\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 40,\n    left: 10,\n    padding: 10\n  }\n});\nexports.title = '<KeyboardAvoidingView>';\nexports.description = 'Base component for views that automatically adjust their height or position to move out of the way of the keyboard.';\nexports.examples = [{\n  title: 'Simple keyboard view',\n  render: function render() {\n    return React.createElement(KeyboardAvoidingViewExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/KeyboardAvoidingView/KeyboardAvoidingViewExample.js"],"names":["React","require","RNTesterBlock","RNTesterPage","KeyboardAvoidingViewExample","state","behavior","modalOpen","onSegmentChange","segment","setState","toLowerCase","renderExample","styles","outerContainer","container","textInput","closeButton","Component","StyleSheet","create","flex","justifyContent","paddingHorizontal","paddingTop","borderRadius","borderWidth","height","marginBottom","position","top","left","padding","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  KeyboardAvoidingView,\n  Modal,\n  SegmentedControlIOS,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} = require('react-native');\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  behavior: string,\n  modalOpen: boolean,\n|};\n\nclass KeyboardAvoidingViewExample extends React.Component<Props, State> {\n  state = {\n    behavior: 'padding',\n    modalOpen: false,\n  };\n\n  onSegmentChange = (segment: String) => {\n    this.setState({behavior: segment.toLowerCase()});\n  };\n\n  renderExample = () => {\n    return (\n      <View style={styles.outerContainer}>\n        <Modal animationType=\"fade\" visible={this.state.modalOpen}>\n          <KeyboardAvoidingView\n            behavior={this.state.behavior}\n            style={styles.container}>\n            <SegmentedControlIOS\n              onValueChange={this.onSegmentChange}\n              selectedIndex={this.state.behavior === 'padding' ? 0 : 1}\n              style={styles.segment}\n              values={['Padding', 'Position']}\n            />\n            <TextInput placeholder=\"<TextInput />\" style={styles.textInput} />\n          </KeyboardAvoidingView>\n          <TouchableHighlight\n            onPress={() => this.setState({modalOpen: false})}\n            style={styles.closeButton}>\n            <Text>Close</Text>\n          </TouchableHighlight>\n        </Modal>\n\n        <TouchableHighlight onPress={() => this.setState({modalOpen: true})}>\n          <Text>Open Example</Text>\n        </TouchableHighlight>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <RNTesterPage title=\"Keyboard Avoiding View\">\n        <RNTesterBlock title=\"Keyboard-avoiding views move out of the way of the keyboard.\">\n          {this.renderExample()}\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  textInput: {\n    borderRadius: 5,\n    borderWidth: 1,\n    height: 44,\n    paddingHorizontal: 10,\n  },\n  segment: {\n    marginBottom: 10,\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 40,\n    left: 10,\n    padding: 10,\n  },\n});\n\nexports.title = '<KeyboardAvoidingView>';\nexports.description =\n  'Base component for views that automatically adjust their height or position to move out of the way of the keyboard.';\nexports.examples = [\n  {\n    title: 'Simple keyboard view',\n    render: function(): React.Element<typeof KeyboardAvoidingViewExample> {\n      return <KeyboardAvoidingViewExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}