{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar android_plugins_1 = require(\"../plugins/android-plugins\");\n\nvar Manifest_1 = require(\"./Manifest\");\n\nvar META_API_KEY = 'com.google.android.geo.API_KEY';\nvar LIB_HTTP = 'org.apache.http.legacy';\nexports.withGoogleMapsApiKey = android_plugins_1.createAndroidManifestPlugin(setGoogleMapsApiKey, 'withGoogleMapsApiKey');\n\nfunction getGoogleMapsApiKey(config) {\n  var _a, _b, _c, _d;\n\n  return (_d = (_c = (_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.googleMaps) === null || _c === void 0 ? void 0 : _c.apiKey) !== null && _d !== void 0 ? _d : null;\n}\n\nexports.getGoogleMapsApiKey = getGoogleMapsApiKey;\n\nfunction setGoogleMapsApiKey(config, androidManifest) {\n  var apiKey = getGoogleMapsApiKey(config);\n  var mainApplication = Manifest_1.getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    Manifest_1.addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    Manifest_1.addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false\n    });\n  } else {\n    Manifest_1.removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    Manifest_1.removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n\nexports.setGoogleMapsApiKey = setGoogleMapsApiKey;","map":{"version":3,"sources":["../../src/android/GoogleMapsApiKey.ts"],"names":[],"mappings":";;;;;;AAEA,IAAA,iBAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,UAAA,GAAA,OAAA,cAAA;;AASA,IAAM,YAAY,GAAG,gCAArB;AACA,IAAM,QAAQ,GAAG,wBAAjB;AAEa,OAAA,CAAA,oBAAA,GAAuB,iBAAA,CAAA,2BAAA,CAClC,mBADkC,EAElC,sBAFkC,CAAvB;;AAKb,SAAgB,mBAAhB,CAAoC,MAApC,EAAuE;;;AACrE,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAO,MAAM,CAAC,OAAd,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,MAAvB,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,KAAA,CAA7B,GAA6B,EAAA,CAAE,UAA/B,MAAyC,IAAzC,IAAyC,EAAA,KAAA,KAAA,CAAzC,GAAyC,KAAA,CAAzC,GAAyC,EAAA,CAAE,MAA3C,MAAiD,IAAjD,IAAiD,EAAA,KAAA,KAAA,CAAjD,GAAiD,EAAjD,GAAqD,IAArD;AACD;;AAFD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAIA,SAAgB,mBAAhB,CACE,MADF,EAEE,eAFF,EAEkC;AAEhC,MAAM,MAAM,GAAG,mBAAmB,CAAC,MAAD,CAAlC;AACA,MAAM,eAAe,GAAG,UAAA,CAAA,yBAAA,CAA0B,eAA1B,CAAxB;;AAEA,MAAI,MAAJ,EAAY;AAEV,IAAA,UAAA,CAAA,gCAAA,CAAiC,eAAjC,EAAkD,YAAlD,EAAgE,MAAhE;AACA,IAAA,UAAA,CAAA,mCAAA,CAAoC,eAApC,EAAqD;AACnD,MAAA,IAAI,EAAE,QAD6C;AAEnD,MAAA,QAAQ,EAAE;AAFyC,KAArD;AAID,GAPD,MAOO;AAEL,IAAA,UAAA,CAAA,qCAAA,CAAsC,eAAtC,EAAuD,YAAvD;AACA,IAAA,UAAA,CAAA,wCAAA,CAAyC,eAAzC,EAA0D,QAA1D;AACD;;AAED,SAAO,eAAP;AACD;;AArBD,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport {\n  addMetaDataItemToMainApplication,\n  addUsesLibraryItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n  removeUsesLibraryItemFromMainApplication,\n} from './Manifest';\n\nconst META_API_KEY = 'com.google.android.geo.API_KEY';\nconst LIB_HTTP = 'org.apache.http.legacy';\n\nexport const withGoogleMapsApiKey = createAndroidManifestPlugin(\n  setGoogleMapsApiKey,\n  'withGoogleMapsApiKey'\n);\n\nexport function getGoogleMapsApiKey(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport function setGoogleMapsApiKey(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const apiKey = getGoogleMapsApiKey(config);\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false,\n    });\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}