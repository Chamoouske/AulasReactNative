{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Appearance from \"../Appearance\";\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      colorScheme = _React$useState2[0],\n      setColorScheme = _React$useState2[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/useColorScheme/index.js"],"names":["React","Appearance","useColorScheme","useState","getColorScheme","colorScheme","setColorScheme","useEffect","listener","appearance","addChangeListener","removeChangeListener"],"mappings":";AAUA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,UAAP;AAEA,eAAe,SAASC,cAAT,GAA2C;AAAA,wBAClBF,KAAK,CAACG,QAAN,CAAeF,UAAU,CAACG,cAAX,EAAf,CADkB;AAAA;AAAA,MACjDC,WADiD;AAAA,MACpCC,cADoC;;AAGxDN,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AACpB,aAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAC5BH,MAAAA,cAAc,CAACG,UAAU,CAACJ,WAAZ,CAAd;AACD;;AACDJ,IAAAA,UAAU,CAACS,iBAAX,CAA6BF,QAA7B;AACA,WAAO;AAAA,aAAMP,UAAU,CAACU,oBAAX,CAAgCH,QAAhC,CAAN;AAAA,KAAP;AACD,GAND;AAQA,SAAOH,WAAP;AACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\nimport type { ColorSchemeName } from '../Appearance';\nimport Appearance from '../Appearance';\n\nexport default function useColorScheme(): ColorSchemeName {\n  const [colorScheme, setColorScheme] = React.useState(Appearance.getColorScheme());\n\n  React.useEffect(() => {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n    Appearance.addChangeListener(listener);\n    return () => Appearance.removeChangeListener(listener);\n  });\n\n  return colorScheme;\n}\n"]},"metadata":{},"sourceType":"module"}