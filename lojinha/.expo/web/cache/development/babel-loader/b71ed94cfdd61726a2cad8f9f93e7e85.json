{"ast":null,"code":"'use strict';\n\nimport stringifySafe, { createStringifySafeWithLimits } from \"../stringifySafe\";\ndescribe('stringifySafe', function () {\n  it('stringifySafe stringifies undefined values', function () {\n    expect(stringifySafe(undefined)).toEqual('undefined');\n  });\n  it('stringifySafe stringifies null values', function () {\n    expect(stringifySafe(null)).toEqual('null');\n  });\n  it('stringifySafe stringifies string values', function () {\n    expect(stringifySafe('abc')).toEqual('\"abc\"');\n  });\n  it('stringifySafe stringifies function values', function () {\n    expect(stringifySafe(function () {})).toEqual('function () {}');\n  });\n  it('stringifySafe stringifies non-circular objects', function () {\n    expect(stringifySafe({\n      a: 1\n    })).toEqual('{\"a\":1}');\n  });\n  it('stringifySafe stringifies circular objects with toString', function () {\n    var arg = {};\n    arg.arg = arg;\n    var result = stringifySafe(arg);\n    expect(result).toEqual('[object Object]');\n  });\n  it('stringifySafe stringifies circular objects without toString', function () {\n    var arg = {\n      x: {},\n      toString: undefined\n    };\n    arg.x = arg;\n    var result = stringifySafe(arg);\n    expect(result).toEqual('[\"object\" failed to stringify]');\n  });\n  it('stringifySafe stringifies error messages', function () {\n    var error = new Error('error');\n    var result = stringifySafe(error);\n    expect(result).toEqual('Error: error');\n  });\n  it('stringifySafe truncates long strings', function () {\n    var stringify = createStringifySafeWithLimits({\n      maxStringLimit: 3\n    });\n    expect(stringify('abcdefghijklmnopqrstuvwxyz')).toEqual('\"abc...(truncated)...\"');\n    expect(stringify({\n      a: 'abcdefghijklmnopqrstuvwxyz'\n    })).toEqual('{\"a\":\"abc...(truncated)...\"}');\n  });\n  it('stringifySafe truncates large arrays', function () {\n    var stringify = createStringifySafeWithLimits({\n      maxArrayLimit: 3\n    });\n    expect(stringify([1, 2, 3, 4, 5])).toEqual('[1,2,3,\"... extra 2 values truncated ...\"]');\n    expect(stringify({\n      a: [1, 2, 3, 4, 5]\n    })).toEqual('{\"a\":[1,2,3,\"... extra 2 values truncated ...\"]}');\n  });\n  it('stringifySafe truncates large objects', function () {\n    var stringify = createStringifySafeWithLimits({\n      maxObjectKeysLimit: 3\n    });\n    expect(stringify({\n      a: 1,\n      b: 2,\n      c: 3,\n      d: 4,\n      e: 5\n    })).toEqual('{\"a\":1,\"b\":2,\"c\":3,\"...(truncated keys)...\":2}');\n  });\n  it('stringifySafe truncates deep objects', function () {\n    var stringify = createStringifySafeWithLimits({\n      maxDepth: 3\n    });\n    expect(stringify({\n      a: {\n        a: {\n          a: {\n            x: 0,\n            y: 1,\n            z: 2\n          }\n        }\n      }\n    })).toEqual('{\"a\":{\"a\":{\"a\":\"{ ... object with 3 keys ... }\"}}}');\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/stringifySafe-test.js"],"names":["stringifySafe","createStringifySafeWithLimits","describe","it","expect","undefined","toEqual","a","arg","result","x","toString","error","Error","stringify","maxStringLimit","maxArrayLimit","maxObjectKeysLimit","b","c","d","e","maxDepth","y","z"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n * @emails oncall+react_native\n */\n\n'use strict';\n\nimport stringifySafe, {createStringifySafeWithLimits} from '../stringifySafe';\n\ndescribe('stringifySafe', () => {\n  it('stringifySafe stringifies undefined values', () => {\n    expect(stringifySafe(undefined)).toEqual('undefined');\n  });\n\n  it('stringifySafe stringifies null values', () => {\n    expect(stringifySafe(null)).toEqual('null');\n  });\n\n  it('stringifySafe stringifies string values', () => {\n    expect(stringifySafe('abc')).toEqual('\"abc\"');\n  });\n\n  it('stringifySafe stringifies function values', () => {\n    expect(stringifySafe(function() {})).toEqual('function () {}');\n  });\n\n  it('stringifySafe stringifies non-circular objects', () => {\n    expect(stringifySafe({a: 1})).toEqual('{\"a\":1}');\n  });\n\n  it('stringifySafe stringifies circular objects with toString', () => {\n    const arg = {};\n    arg.arg = arg;\n    const result = stringifySafe(arg);\n    expect(result).toEqual('[object Object]');\n  });\n\n  it('stringifySafe stringifies circular objects without toString', () => {\n    const arg = {x: {}, toString: undefined};\n    arg.x = arg;\n    const result = stringifySafe(arg);\n    expect(result).toEqual('[\"object\" failed to stringify]');\n  });\n\n  it('stringifySafe stringifies error messages', () => {\n    const error = new Error('error');\n    const result = stringifySafe(error);\n    expect(result).toEqual('Error: error');\n  });\n\n  it('stringifySafe truncates long strings', () => {\n    const stringify = createStringifySafeWithLimits({maxStringLimit: 3});\n    expect(stringify('abcdefghijklmnopqrstuvwxyz')).toEqual(\n      '\"abc...(truncated)...\"',\n    );\n    expect(stringify({a: 'abcdefghijklmnopqrstuvwxyz'})).toEqual(\n      '{\"a\":\"abc...(truncated)...\"}',\n    );\n  });\n\n  it('stringifySafe truncates large arrays', () => {\n    const stringify = createStringifySafeWithLimits({maxArrayLimit: 3});\n    expect(stringify([1, 2, 3, 4, 5])).toEqual(\n      '[1,2,3,\"... extra 2 values truncated ...\"]',\n    );\n    expect(stringify({a: [1, 2, 3, 4, 5]})).toEqual(\n      '{\"a\":[1,2,3,\"... extra 2 values truncated ...\"]}',\n    );\n  });\n\n  it('stringifySafe truncates large objects', () => {\n    const stringify = createStringifySafeWithLimits({maxObjectKeysLimit: 3});\n    expect(stringify({a: 1, b: 2, c: 3, d: 4, e: 5})).toEqual(\n      '{\"a\":1,\"b\":2,\"c\":3,\"...(truncated keys)...\":2}',\n    );\n  });\n\n  it('stringifySafe truncates deep objects', () => {\n    const stringify = createStringifySafeWithLimits({maxDepth: 3});\n    expect(stringify({a: {a: {a: {x: 0, y: 1, z: 2}}}})).toEqual(\n      '{\"a\":{\"a\":{\"a\":\"{ ... object with 3 keys ... }\"}}}',\n    );\n  });\n});\n"]},"metadata":{},"sourceType":"module"}