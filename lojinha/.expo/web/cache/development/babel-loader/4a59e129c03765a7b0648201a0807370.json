{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/ScrollViewTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar React = require('react');\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar ScrollListener = NativeModules.ScrollListener;\nvar NUM_ITEMS = 100;\nvar scrollViewApp;\n\nvar Item = function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  var _super = _createSuper(Item);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.item_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.item_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, this.props.text)));\n    }\n  }]);\n\n  return Item;\n}(React.Component);\n\nvar getInitialState = function getInitialState() {\n  var data = [];\n\n  for (var i = 0; i < NUM_ITEMS; i++) {\n    data[i] = {\n      text: 'Item ' + i + '!'\n    };\n  }\n\n  return {\n    data: data\n  };\n};\n\nvar onScroll = function onScroll(e) {\n  ScrollListener.onScroll(e.nativeEvent.contentOffset.x, e.nativeEvent.contentOffset.y);\n};\n\nvar onScrollBeginDrag = function onScrollBeginDrag(e) {\n  ScrollListener.onScrollBeginDrag(e.nativeEvent.contentOffset.x, e.nativeEvent.contentOffset.y);\n};\n\nvar onScrollEndDrag = function onScrollEndDrag(e) {\n  ScrollListener.onScrollEndDrag(e.nativeEvent.contentOffset.x, e.nativeEvent.contentOffset.y);\n};\n\nvar onItemPress = function onItemPress(itemNumber) {\n  ScrollListener.onItemPress(itemNumber);\n};\n\nvar ScrollViewTestApp = function (_React$Component2) {\n  _inherits(ScrollViewTestApp, _React$Component2);\n\n  var _super2 = _createSuper(ScrollViewTestApp);\n\n  function ScrollViewTestApp() {\n    var _this;\n\n    _classCallCheck(this, ScrollViewTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.scrollView = React.createRef();\n    _this.state = getInitialState();\n    return _this;\n  }\n\n  _createClass(ScrollViewTestApp, [{\n    key: \"scrollTo\",\n    value: function scrollTo(destX, destY) {\n      var scrollView = this.scrollView.current;\n\n      if (scrollView == null) {\n        return;\n      }\n\n      scrollView.scrollTo(destY, destX);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      scrollViewApp = this;\n      var children = this.state.data.map(function (item, index) {\n        return React.createElement(Item, {\n          key: index,\n          text: item.text,\n          onPress: onItemPress.bind(_this2, index),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }\n        });\n      });\n      return React.createElement(ScrollView, {\n        onScroll: onScroll,\n        onScrollBeginDrag: onScrollBeginDrag,\n        onScrollEndDrag: onScrollEndDrag,\n        ref: this.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return ScrollViewTestApp;\n}(React.Component);\n\nvar HorizontalScrollViewTestApp = function (_React$Component3) {\n  _inherits(HorizontalScrollViewTestApp, _React$Component3);\n\n  var _super3 = _createSuper(HorizontalScrollViewTestApp);\n\n  function HorizontalScrollViewTestApp() {\n    var _this3;\n\n    _classCallCheck(this, HorizontalScrollViewTestApp);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    _this3.scrollView = React.createRef();\n    _this3.state = getInitialState();\n    return _this3;\n  }\n\n  _createClass(HorizontalScrollViewTestApp, [{\n    key: \"scrollTo\",\n    value: function scrollTo(destX, destY) {\n      var scrollView = this.scrollView.current;\n\n      if (scrollView == null) {\n        return;\n      }\n\n      scrollView.scrollTo(destY, destX);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      scrollViewApp = this;\n      var children = this.state.data.map(function (item, index) {\n        return React.createElement(Item, {\n          key: index,\n          text: item.text,\n          onPress: onItemPress.bind(_this4, index),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }\n        });\n      });\n      return React.createElement(ScrollView, {\n        horizontal: true,\n        onScroll: onScroll,\n        ref: this.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return HorizontalScrollViewTestApp;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  item_container: {\n    padding: 30,\n    backgroundColor: '#ffffff'\n  },\n  item_text: {\n    flex: 1,\n    fontSize: 18,\n    alignSelf: 'center'\n  }\n});\nvar ScrollViewTestModule = {\n  ScrollViewTestApp: ScrollViewTestApp,\n  HorizontalScrollViewTestApp: HorizontalScrollViewTestApp,\n  scrollTo: function scrollTo(destX, destY) {\n    scrollViewApp.scrollTo(destX, destY);\n  }\n};\nBatchedBridge.registerCallableModule('ScrollViewTestModule', ScrollViewTestModule);\nmodule.exports = ScrollViewTestModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/ScrollViewTestModule.js"],"names":["BatchedBridge","require","React","ScrollListener","NativeModules","NUM_ITEMS","scrollViewApp","Item","props","onPress","styles","item_container","item_text","text","Component","getInitialState","data","i","onScroll","e","nativeEvent","contentOffset","x","y","onScrollBeginDrag","onScrollEndDrag","onItemPress","itemNumber","ScrollViewTestApp","scrollView","createRef","state","destX","destY","current","scrollTo","children","map","item","index","bind","HorizontalScrollViewTestApp","StyleSheet","create","padding","backgroundColor","flex","fontSize","alignSelf","ScrollViewTestModule","registerCallableModule","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\nconst React = require('react');\n\nconst {\n  NativeModules,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} = require('react-native');\n\nconst {ScrollListener} = NativeModules;\n\nconst NUM_ITEMS = 100;\n\nimport type {PressEvent} from 'react-native/Libraries/Types/CoreEventTypes';\n\n// Shared by integration tests for ScrollView and HorizontalScrollView\n\nlet scrollViewApp;\n\ntype ItemProps = $ReadOnly<{|\n  onPress: (event: PressEvent) => void,\n  text: string,\n|}>;\n\ntype ItemState = {||};\n\nclass Item extends React.Component<ItemProps, ItemState> {\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this.props.onPress}>\n        <View style={styles.item_container}>\n          <Text style={styles.item_text}>{this.props.text}</Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst getInitialState = function() {\n  const data = [];\n  for (let i = 0; i < NUM_ITEMS; i++) {\n    data[i] = {text: 'Item ' + i + '!'};\n  }\n  return {\n    data: data,\n  };\n};\n\nconst onScroll = function(e) {\n  ScrollListener.onScroll(\n    e.nativeEvent.contentOffset.x,\n    e.nativeEvent.contentOffset.y,\n  );\n};\n\nconst onScrollBeginDrag = function(e) {\n  ScrollListener.onScrollBeginDrag(\n    e.nativeEvent.contentOffset.x,\n    e.nativeEvent.contentOffset.y,\n  );\n};\n\nconst onScrollEndDrag = function(e) {\n  ScrollListener.onScrollEndDrag(\n    e.nativeEvent.contentOffset.x,\n    e.nativeEvent.contentOffset.y,\n  );\n};\n\nconst onItemPress = function(itemNumber) {\n  ScrollListener.onItemPress(itemNumber);\n};\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  data: $ReadOnlyArray<{|text: string|}>,\n|};\n\nclass ScrollViewTestApp extends React.Component<Props, State> {\n  scrollView: {|current: any | null|} = React.createRef();\n  state: State = getInitialState();\n\n  scrollTo(destX: number, destY: number) {\n    const scrollView = this.scrollView.current;\n    if (scrollView == null) {\n      return;\n    }\n\n    scrollView.scrollTo(destY, destX);\n  }\n\n  render(): React.Node {\n    scrollViewApp = this;\n    const children = this.state.data.map((item, index) => (\n      <Item\n        key={index}\n        text={item.text}\n        onPress={onItemPress.bind(this, index)}\n      />\n    ));\n    return (\n      <ScrollView\n        onScroll={onScroll}\n        onScrollBeginDrag={onScrollBeginDrag}\n        onScrollEndDrag={onScrollEndDrag}\n        ref={this.scrollView}>\n        {children}\n      </ScrollView>\n    );\n  }\n}\n\nclass HorizontalScrollViewTestApp extends React.Component<Props, State> {\n  scrollView: {|current: any | null|} = React.createRef();\n  state: State = getInitialState();\n\n  scrollTo(destX: number, destY: number) {\n    const scrollView = this.scrollView.current;\n    if (scrollView == null) {\n      return;\n    }\n\n    scrollView.scrollTo(destY, destX);\n  }\n\n  render(): React.Node {\n    scrollViewApp = this;\n    const children = this.state.data.map((item, index) => (\n      <Item\n        key={index}\n        text={item.text}\n        onPress={onItemPress.bind(this, index)}\n      />\n    ));\n    return (\n      <ScrollView horizontal={true} onScroll={onScroll} ref={this.scrollView}>\n        {children}\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item_container: {\n    padding: 30,\n    backgroundColor: '#ffffff',\n  },\n  item_text: {\n    flex: 1,\n    fontSize: 18,\n    alignSelf: 'center',\n  },\n});\n\nconst ScrollViewTestModule = {\n  ScrollViewTestApp: ScrollViewTestApp,\n  HorizontalScrollViewTestApp: HorizontalScrollViewTestApp,\n  scrollTo(destX: number, destY: number) {\n    scrollViewApp.scrollTo(destX, destY);\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'ScrollViewTestModule',\n  ScrollViewTestModule,\n);\n\nmodule.exports = ScrollViewTestModule;\n"]},"metadata":{},"sourceType":"script"}