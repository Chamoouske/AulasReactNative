{"ast":null,"code":"'use strict';\n\nvar binaryToBase64 = require(\"../Utilities/binaryToBase64\");\n\nvar Blob = require(\"../Blob/Blob\");\n\nvar FormData = require(\"./FormData\");\n\nfunction convertRequestBody(body) {\n  if (typeof body === 'string') {\n    return {\n      string: body\n    };\n  }\n\n  if (body instanceof Blob) {\n    return {\n      blob: body.data\n    };\n  }\n\n  if (body instanceof FormData) {\n    return {\n      formData: body.getParts()\n    };\n  }\n\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    return {\n      base64: binaryToBase64(body)\n    };\n  }\n\n  return body;\n}\n\nmodule.exports = convertRequestBody;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Network/convertRequestBody.js"],"names":["binaryToBase64","require","Blob","FormData","convertRequestBody","body","string","blob","data","formData","getParts","ArrayBuffer","isView","base64","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,cAAc,GAAGC,OAAO,+BAA9B;;AAEA,IAAMC,IAAI,GAAGD,OAAO,gBAApB;;AACA,IAAME,QAAQ,GAAGF,OAAO,cAAxB;;AAUA,SAASG,kBAAT,CAA4BC,IAA5B,EAAuD;AACrD,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AAACC,MAAAA,MAAM,EAAED;AAAT,KAAP;AACD;;AACD,MAAIA,IAAI,YAAYH,IAApB,EAA0B;AACxB,WAAO;AAACK,MAAAA,IAAI,EAAEF,IAAI,CAACG;AAAZ,KAAP;AACD;;AACD,MAAIH,IAAI,YAAYF,QAApB,EAA8B;AAC5B,WAAO;AAACM,MAAAA,QAAQ,EAAEJ,IAAI,CAACK,QAAL;AAAX,KAAP;AACD;;AACD,MAAIL,IAAI,YAAYM,WAAhB,IAA+BA,WAAW,CAACC,MAAZ,CAAmBP,IAAnB,CAAnC,EAA6D;AAE3D,WAAO;AAACQ,MAAAA,MAAM,EAAEb,cAAc,CAACK,IAAD;AAAvB,KAAP;AACD;;AACD,SAAOA,IAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiBX,kBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\n\nconst Blob = require('../Blob/Blob');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    // $FlowFixMe: no way to assert that 'body' is indeed an ArrayBufferView\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n"]},"metadata":{},"sourceType":"script"}