{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = applyParams;\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction applyParams(str, params, prefix) {\n  return str.replace(/\\$\\{(\\w+)\\}/g, function (_pattern, param) {\n    var name = (0, _lodash().camelCase)(prefix) + \"_\" + param;\n    return params[param] ? \"getResources().getString(R.string.\" + name + \")\" : 'null';\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-android/build/link/patches/applyParams.js"],"names":["Object","defineProperty","exports","value","default","applyParams","_lodash","data","require","str","params","prefix","replace","_pattern","param","name","camelCase"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAMC,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAF,EAAAA,OAAO,GAAG,mBAAY;AACpB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AASD,SAASF,WAAT,CAAqBI,GAArB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AACxC,SAAOF,GAAG,CAACG,OAAJ,CAAY,cAAZ,EAA4B,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACtD,QAAMC,IAAI,GAAM,CAAC,GAAGT,OAAO,GAAGU,SAAd,EAAyBL,MAAzB,CAAN,SAA0CG,KAApD;AAEA,WAAOJ,MAAM,CAACI,KAAD,CAAN,0CAAqDC,IAArD,SAA+D,MAAtE;AACD,GAJM,CAAP;AAKD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = applyParams;\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction applyParams(str, params, prefix) {\n  return str.replace(/\\$\\{(\\w+)\\}/g, (_pattern, param) => {\n    const name = `${(0, _lodash().camelCase)(prefix)}_${param}`; // @ts-ignore\n\n    return params[param] ? `getResources().getString(R.string.${name})` : 'null';\n  });\n}\n\n//# sourceMappingURL=applyParams.js.map"]},"metadata":{},"sourceType":"script"}