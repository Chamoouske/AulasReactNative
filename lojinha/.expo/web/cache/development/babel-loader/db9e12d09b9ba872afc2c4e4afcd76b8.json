{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/SwipeRefreshLayoutTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar RefreshControl = require(\"react-native-web/dist/exports/RefreshControl\").default;\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar RecordingModule = NativeModules.SwipeRefreshLayoutRecordingModule;\n\nvar Row = function (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  var _super = _createSuper(Row);\n\n  function Row() {\n    var _this;\n\n    _classCallCheck(this, Row);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      clicks: 0\n    };\n\n    _this._onPress = function () {\n      _this.setState({\n        clicks: _this.state.clicks + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: this._onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, this.state.clicks + ' clicks')));\n    }\n  }]);\n\n  return Row;\n}(React.Component);\n\nvar app = null;\n\nvar SwipeRefreshLayoutTestApp = function (_React$Component2) {\n  _inherits(SwipeRefreshLayoutTestApp, _React$Component2);\n\n  var _super2 = _createSuper(SwipeRefreshLayoutTestApp);\n\n  function SwipeRefreshLayoutTestApp() {\n    var _this2;\n\n    _classCallCheck(this, SwipeRefreshLayoutTestApp);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _this2.state = {\n      rows: 2\n    };\n    return _this2;\n  }\n\n  _createClass(SwipeRefreshLayoutTestApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      app = this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n\n      for (var i = 0; i < this.state.rows; i++) {\n        rows.push(React.createElement(Row, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        refreshControl: React.createElement(RefreshControl, {\n          style: styles.content,\n          refreshing: false,\n          onRefresh: function onRefresh() {\n            return RecordingModule.onRefresh();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, rows);\n    }\n  }]);\n\n  return SwipeRefreshLayoutTestApp;\n}(React.Component);\n\nvar SwipeRefreshLayoutTestModule = {\n  SwipeRefreshLayoutTestApp: SwipeRefreshLayoutTestApp,\n  setRows: function setRows(rows) {\n    if (app != null) {\n      app.setState({\n        rows: rows\n      });\n    }\n  }\n};\nBatchedBridge.registerCallableModule('SwipeRefreshLayoutTestModule', SwipeRefreshLayoutTestModule);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  content: {\n    flex: 1\n  }\n});\nmodule.exports = SwipeRefreshLayoutTestModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/SwipeRefreshLayoutTestModule.js"],"names":["React","require","BatchedBridge","RecordingModule","NativeModules","SwipeRefreshLayoutRecordingModule","Row","state","clicks","_onPress","setState","Component","app","SwipeRefreshLayoutTestApp","rows","i","push","styles","container","content","onRefresh","SwipeRefreshLayoutTestModule","setRows","registerCallableModule","StyleSheet","create","flex","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;;;;;;;AAUA,IAAMC,aAAa,GAAGD,OAAO,CAAC,oDAAD,CAA7B;;IAE0CE,e,GAAmBC,a,CAAtDC,iC;;IAEDC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAcRC,Q,GAAW,YAAM;AACf,YAAKC,QAAL,CAAc;AAACF,QAAAA,MAAM,EAAE,MAAKD,KAAL,CAAWC,MAAX,GAAoB;AAA7B,OAAd;AACD,K;;;;;;;WAZD,kBAAS;AACP,aACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE,KAAKC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKF,KAAL,CAAWC,MAAX,GAAoB,SAA3B,CADF,CADF,CADF;AAOD;;;;EAbeR,KAAK,CAACW,S;;AAoBxB,IAAIC,GAAG,GAAG,IAAV;;IAEMC,yB;;;;;;;;;;;;;;;WACJN,K,GAAQ;AACNO,MAAAA,IAAI,EAAE;AADA,K;;;;;;WAIR,6BAAoB;AAClBF,MAAAA,GAAG,GAAG,IAAN;AACD;;;WAED,kBAAS;AACP,UAAME,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,KAAL,CAAWO,IAA/B,EAAqCC,CAAC,EAAtC,EAA0C;AACxCD,QAAAA,IAAI,CAACE,IAAL,CAAU,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAED,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACD;;AACD,aACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEE,MAAM,CAACC,SADhB;AAEE,QAAA,cAAc,EACZ,oBAAC,cAAD;AACE,UAAA,KAAK,EAAED,MAAM,CAACE,OADhB;AAEE,UAAA,UAAU,EAAE,KAFd;AAGE,UAAA,SAAS,EAAE;AAAA,mBAAMhB,eAAe,CAACiB,SAAhB,EAAN;AAAA,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGN,IATH,CADF;AAaD;;;;EA3BqCd,KAAK,CAACW,S;;AA8B9C,IAAMU,4BAA4B,GAAG;AACnCR,EAAAA,yBAAyB,EAAzBA,yBADmC;AAEnCS,EAAAA,OAAO,EAAE,iBAASR,IAAT,EAAe;AACtB,QAAIF,GAAG,IAAI,IAAX,EAAiB;AACfA,MAAAA,GAAG,CAACF,QAAJ,CAAa;AAACI,QAAAA,IAAI,EAAJA;AAAD,OAAb;AACD;AACF;AANkC,CAArC;AASAZ,aAAa,CAACqB,sBAAd,CACE,8BADF,EAEEF,4BAFF;AAKA,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BP,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EAAE;AADC;AAJsB,CAAlB,CAAf;AASAC,MAAM,CAACC,OAAP,GAAiBP,4BAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  NativeModules,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nconst {SwipeRefreshLayoutRecordingModule: RecordingModule} = NativeModules;\n\nclass Row extends React.Component {\n  state = {\n    clicks: 0,\n  };\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this._onPress}>\n        <View>\n          <Text>{this.state.clicks + ' clicks'}</Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _onPress = () => {\n    this.setState({clicks: this.state.clicks + 1});\n  };\n}\n\nlet app = null;\n\nclass SwipeRefreshLayoutTestApp extends React.Component {\n  state = {\n    rows: 2,\n  };\n\n  componentDidMount() {\n    app = this;\n  }\n\n  render() {\n    const rows = [];\n    for (let i = 0; i < this.state.rows; i++) {\n      rows.push(<Row key={i} />);\n    }\n    return (\n      <ScrollView\n        style={styles.container}\n        refreshControl={\n          <RefreshControl\n            style={styles.content}\n            refreshing={false}\n            onRefresh={() => RecordingModule.onRefresh()}\n          />\n        }>\n        {rows}\n      </ScrollView>\n    );\n  }\n}\n\nconst SwipeRefreshLayoutTestModule = {\n  SwipeRefreshLayoutTestApp,\n  setRows: function(rows) {\n    if (app != null) {\n      app.setState({rows});\n    }\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'SwipeRefreshLayoutTestModule',\n  SwipeRefreshLayoutTestModule,\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n  },\n});\n\nmodule.exports = SwipeRefreshLayoutTestModule;\n"]},"metadata":{},"sourceType":"script"}