{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["export declare type ContentsJsonImageIdiom = 'iphone' | 'ipad' | 'ios-marketing' | 'universal';\nexport declare type ContentsJsonImageAppearance = {\n    appearance: 'luminosity';\n    value: 'dark';\n};\nexport declare type ContentsJsonImageScale = '1x' | '2x' | '3x';\nexport interface ContentsJsonImage {\n    appearances?: ContentsJsonImageAppearance[];\n    idiom: ContentsJsonImageIdiom;\n    size?: string;\n    scale: ContentsJsonImageScale;\n    filename?: string;\n}\nexport interface ContentsJson {\n    images: ContentsJsonImage[];\n    info: {\n        version: number;\n        author: string;\n    };\n}\n/**\n * Writes the Config.json which is used to assign images to their respective platform, dpi, and idiom.\n *\n * @param directory path to add the Contents.json to.\n * @param contents image json data\n */\nexport declare function writeContentsJsonAsync(directory: string, { images }: Pick<ContentsJson, 'images'>): Promise<void>;\n"]},"metadata":{},"sourceType":"script"}