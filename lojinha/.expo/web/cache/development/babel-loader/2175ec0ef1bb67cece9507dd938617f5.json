{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSourceMap;\n\nfunction _sourceMap() {\n  var data = _interopRequireDefault(require(\"source-map\"));\n\n  _sourceMap = function _sourceMap() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction mergeSourceMap(inputMap, map) {\n  var input = buildMappingData(inputMap);\n  var output = buildMappingData(map);\n  var mergedGenerator = new (_sourceMap().default.SourceMapGenerator)();\n\n  for (var _iterator = _createForOfIteratorHelperLoose(input.sources), _step; !(_step = _iterator()).done;) {\n    var _ref = _step.value;\n    var source = _ref.source;\n\n    if (typeof source.content === \"string\") {\n      mergedGenerator.setSourceContent(source.path, source.content);\n    }\n  }\n\n  if (output.sources.length === 1) {\n    var defaultSource = output.sources[0];\n    var insertedMappings = new Map();\n    eachInputGeneratedRange(input, function (generated, original, source) {\n      eachOverlappingGeneratedOutputRange(defaultSource, generated, function (item) {\n        var key = makeMappingKey(item);\n        if (insertedMappings.has(key)) return;\n        insertedMappings.set(key, item);\n        mergedGenerator.addMapping({\n          source: source.path,\n          original: {\n            line: original.line,\n            column: original.columnStart\n          },\n          generated: {\n            line: item.line,\n            column: item.columnStart\n          },\n          name: original.name\n        });\n      });\n    });\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(insertedMappings.values()), _step2; !(_step2 = _iterator2()).done;) {\n      var item = _step2.value;\n\n      if (item.columnEnd === Infinity) {\n        continue;\n      }\n\n      var clearItem = {\n        line: item.line,\n        columnStart: item.columnEnd\n      };\n      var key = makeMappingKey(clearItem);\n\n      if (insertedMappings.has(key)) {\n        continue;\n      }\n\n      mergedGenerator.addMapping({\n        generated: {\n          line: clearItem.line,\n          column: clearItem.columnStart\n        }\n      });\n    }\n  }\n\n  var result = mergedGenerator.toJSON();\n\n  if (typeof input.sourceRoot === \"string\") {\n    result.sourceRoot = input.sourceRoot;\n  }\n\n  return result;\n}\n\nfunction makeMappingKey(item) {\n  return item.line + \"/\" + item.columnStart;\n}\n\nfunction eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {\n  var overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);\n\n  for (var _iterator3 = _createForOfIteratorHelperLoose(overlappingOriginal), _step3; !(_step3 = _iterator3()).done;) {\n    var _ref2 = _step3.value;\n    var generated = _ref2.generated;\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(generated), _step4; !(_step4 = _iterator4()).done;) {\n      var item = _step4.value;\n      callback(item);\n    }\n  }\n}\n\nfunction filterApplicableOriginalRanges(_ref3, _ref4) {\n  var mappings = _ref3.mappings;\n  var line = _ref4.line,\n      columnStart = _ref4.columnStart,\n      columnEnd = _ref4.columnEnd;\n  return filterSortedArray(mappings, function (_ref5) {\n    var outOriginal = _ref5.original;\n    if (line > outOriginal.line) return -1;\n    if (line < outOriginal.line) return 1;\n    if (columnStart >= outOriginal.columnEnd) return -1;\n    if (columnEnd <= outOriginal.columnStart) return 1;\n    return 0;\n  });\n}\n\nfunction eachInputGeneratedRange(map, callback) {\n  for (var _iterator5 = _createForOfIteratorHelperLoose(map.sources), _step5; !(_step5 = _iterator5()).done;) {\n    var _ref6 = _step5.value;\n    var source = _ref6.source;\n    var mappings = _ref6.mappings;\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose(mappings), _step6; !(_step6 = _iterator6()).done;) {\n      var _ref7 = _step6.value;\n      var original = _ref7.original;\n      var generated = _ref7.generated;\n\n      for (var _iterator7 = _createForOfIteratorHelperLoose(generated), _step7; !(_step7 = _iterator7()).done;) {\n        var item = _step7.value;\n        callback(item, original, source);\n      }\n    }\n  }\n}\n\nfunction buildMappingData(map) {\n  var consumer = new (_sourceMap().default.SourceMapConsumer)(_extends({}, map, {\n    sourceRoot: null\n  }));\n  var sources = new Map();\n  var mappings = new Map();\n  var last = null;\n  consumer.computeColumnSpans();\n  consumer.eachMapping(function (m) {\n    if (m.originalLine === null) return;\n    var source = sources.get(m.source);\n\n    if (!source) {\n      source = {\n        path: m.source,\n        content: consumer.sourceContentFor(m.source, true)\n      };\n      sources.set(m.source, source);\n    }\n\n    var sourceData = mappings.get(source);\n\n    if (!sourceData) {\n      sourceData = {\n        source: source,\n        mappings: []\n      };\n      mappings.set(source, sourceData);\n    }\n\n    var obj = {\n      line: m.originalLine,\n      columnStart: m.originalColumn,\n      columnEnd: Infinity,\n      name: m.name\n    };\n\n    if (last && last.source === source && last.mapping.line === m.originalLine) {\n      last.mapping.columnEnd = m.originalColumn;\n    }\n\n    last = {\n      source: source,\n      mapping: obj\n    };\n    sourceData.mappings.push({\n      original: obj,\n      generated: consumer.allGeneratedPositionsFor({\n        source: m.source,\n        line: m.originalLine,\n        column: m.originalColumn\n      }).map(function (item) {\n        return {\n          line: item.line,\n          columnStart: item.column,\n          columnEnd: item.lastColumn + 1\n        };\n      })\n    });\n  }, null, _sourceMap().default.SourceMapConsumer.ORIGINAL_ORDER);\n  return {\n    file: map.file,\n    sourceRoot: map.sourceRoot,\n    sources: Array.from(mappings.values())\n  };\n}\n\nfunction findInsertionLocation(array, callback) {\n  var left = 0;\n  var right = array.length;\n\n  while (left < right) {\n    var mid = Math.floor((left + right) / 2);\n    var item = array[mid];\n    var result = callback(item);\n\n    if (result === 0) {\n      left = mid;\n      break;\n    }\n\n    if (result >= 0) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  var i = left;\n\n  if (i < array.length) {\n    while (i >= 0 && callback(array[i]) >= 0) {\n      i--;\n    }\n\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction filterSortedArray(array, callback) {\n  var start = findInsertionLocation(array, callback);\n  var results = [];\n\n  for (var i = start; i < array.length && callback(array[i]) === 0; i++) {\n    results.push(array[i]);\n  }\n\n  return results;\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/config/node_modules/@babel/core/lib/transformation/file/merge-map.js"],"names":["Object","defineProperty","exports","value","default","mergeSourceMap","_sourceMap","data","_interopRequireDefault","require","obj","__esModule","inputMap","map","input","buildMappingData","output","mergedGenerator","SourceMapGenerator","sources","source","content","setSourceContent","path","length","defaultSource","insertedMappings","Map","eachInputGeneratedRange","generated","original","eachOverlappingGeneratedOutputRange","item","key","makeMappingKey","has","set","addMapping","line","column","columnStart","name","values","columnEnd","Infinity","clearItem","result","toJSON","sourceRoot","outputFile","inputGeneratedRange","callback","overlappingOriginal","filterApplicableOriginalRanges","mappings","filterSortedArray","outOriginal","consumer","SourceMapConsumer","last","computeColumnSpans","eachMapping","m","originalLine","get","sourceContentFor","sourceData","originalColumn","mapping","push","allGeneratedPositionsFor","lastColumn","ORIGINAL_ORDER","file","Array","from","findInsertionLocation","array","left","right","mid","Math","floor","i","start","results"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSourceMap;\n\nfunction _sourceMap() {\n  const data = _interopRequireDefault(require(\"source-map\"));\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeSourceMap(inputMap, map) {\n  const input = buildMappingData(inputMap);\n  const output = buildMappingData(map);\n  const mergedGenerator = new (_sourceMap().default.SourceMapGenerator)();\n\n  for (const {\n    source\n  } of input.sources) {\n    if (typeof source.content === \"string\") {\n      mergedGenerator.setSourceContent(source.path, source.content);\n    }\n  }\n\n  if (output.sources.length === 1) {\n    const defaultSource = output.sources[0];\n    const insertedMappings = new Map();\n    eachInputGeneratedRange(input, (generated, original, source) => {\n      eachOverlappingGeneratedOutputRange(defaultSource, generated, item => {\n        const key = makeMappingKey(item);\n        if (insertedMappings.has(key)) return;\n        insertedMappings.set(key, item);\n        mergedGenerator.addMapping({\n          source: source.path,\n          original: {\n            line: original.line,\n            column: original.columnStart\n          },\n          generated: {\n            line: item.line,\n            column: item.columnStart\n          },\n          name: original.name\n        });\n      });\n    });\n\n    for (const item of insertedMappings.values()) {\n      if (item.columnEnd === Infinity) {\n        continue;\n      }\n\n      const clearItem = {\n        line: item.line,\n        columnStart: item.columnEnd\n      };\n      const key = makeMappingKey(clearItem);\n\n      if (insertedMappings.has(key)) {\n        continue;\n      }\n\n      mergedGenerator.addMapping({\n        generated: {\n          line: clearItem.line,\n          column: clearItem.columnStart\n        }\n      });\n    }\n  }\n\n  const result = mergedGenerator.toJSON();\n\n  if (typeof input.sourceRoot === \"string\") {\n    result.sourceRoot = input.sourceRoot;\n  }\n\n  return result;\n}\n\nfunction makeMappingKey(item) {\n  return `${item.line}/${item.columnStart}`;\n}\n\nfunction eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {\n  const overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);\n\n  for (const {\n    generated\n  } of overlappingOriginal) {\n    for (const item of generated) {\n      callback(item);\n    }\n  }\n}\n\nfunction filterApplicableOriginalRanges({\n  mappings\n}, {\n  line,\n  columnStart,\n  columnEnd\n}) {\n  return filterSortedArray(mappings, ({\n    original: outOriginal\n  }) => {\n    if (line > outOriginal.line) return -1;\n    if (line < outOriginal.line) return 1;\n    if (columnStart >= outOriginal.columnEnd) return -1;\n    if (columnEnd <= outOriginal.columnStart) return 1;\n    return 0;\n  });\n}\n\nfunction eachInputGeneratedRange(map, callback) {\n  for (const {\n    source,\n    mappings\n  } of map.sources) {\n    for (const {\n      original,\n      generated\n    } of mappings) {\n      for (const item of generated) {\n        callback(item, original, source);\n      }\n    }\n  }\n}\n\nfunction buildMappingData(map) {\n  const consumer = new (_sourceMap().default.SourceMapConsumer)(Object.assign({}, map, {\n    sourceRoot: null\n  }));\n  const sources = new Map();\n  const mappings = new Map();\n  let last = null;\n  consumer.computeColumnSpans();\n  consumer.eachMapping(m => {\n    if (m.originalLine === null) return;\n    let source = sources.get(m.source);\n\n    if (!source) {\n      source = {\n        path: m.source,\n        content: consumer.sourceContentFor(m.source, true)\n      };\n      sources.set(m.source, source);\n    }\n\n    let sourceData = mappings.get(source);\n\n    if (!sourceData) {\n      sourceData = {\n        source,\n        mappings: []\n      };\n      mappings.set(source, sourceData);\n    }\n\n    const obj = {\n      line: m.originalLine,\n      columnStart: m.originalColumn,\n      columnEnd: Infinity,\n      name: m.name\n    };\n\n    if (last && last.source === source && last.mapping.line === m.originalLine) {\n      last.mapping.columnEnd = m.originalColumn;\n    }\n\n    last = {\n      source,\n      mapping: obj\n    };\n    sourceData.mappings.push({\n      original: obj,\n      generated: consumer.allGeneratedPositionsFor({\n        source: m.source,\n        line: m.originalLine,\n        column: m.originalColumn\n      }).map(item => ({\n        line: item.line,\n        columnStart: item.column,\n        columnEnd: item.lastColumn + 1\n      }))\n    });\n  }, null, _sourceMap().default.SourceMapConsumer.ORIGINAL_ORDER);\n  return {\n    file: map.file,\n    sourceRoot: map.sourceRoot,\n    sources: Array.from(mappings.values())\n  };\n}\n\nfunction findInsertionLocation(array, callback) {\n  let left = 0;\n  let right = array.length;\n\n  while (left < right) {\n    const mid = Math.floor((left + right) / 2);\n    const item = array[mid];\n    const result = callback(item);\n\n    if (result === 0) {\n      left = mid;\n      break;\n    }\n\n    if (result >= 0) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  let i = left;\n\n  if (i < array.length) {\n    while (i >= 0 && callback(array[i]) >= 0) {\n      i--;\n    }\n\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction filterSortedArray(array, callback) {\n  const start = findInsertionLocation(array, callback);\n  const results = [];\n\n  for (let i = start; i < array.length && callback(array[i]) === 0; i++) {\n    results.push(array[i]);\n  }\n\n  return results;\n}"]},"metadata":{},"sourceType":"script"}