{"ast":null,"code":"import devToolsMiddleware from \"./devToolsMiddleware\";\nimport indexPageMiddleware from \"./indexPageMiddleware\";\nimport openStackFrameInEditorMiddleware from \"./openStackFrameInEditorMiddleware\";\nimport openURLMiddleware from \"./openURLMiddleware\";\nimport rawBodyMiddleware from \"./rawBodyMiddleware\";\nimport securityHeadersMiddleware from \"./securityHeadersMiddleware\";\nimport statusPageMiddleware from \"./statusPageMiddleware\";\nimport systraceProfileMiddleware from \"./systraceProfileMiddleware\";\nimport debuggerProxyServer from \"./websocket/debuggerProxyServer\";\nimport eventsSocketServer from \"./websocket/eventsSocketServer\";\nimport messageSocketServer from \"./websocket/messageSocketServer\";\nexport { devToolsMiddleware };\nexport { indexPageMiddleware };\nexport { openStackFrameInEditorMiddleware };\nexport { openURLMiddleware };\nexport { rawBodyMiddleware };\nexport { securityHeadersMiddleware };\nexport { statusPageMiddleware };\nexport { systraceProfileMiddleware };\nexport { debuggerProxyServer };\nexport { eventsSocketServer };\nexport { messageSocketServer };","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-server-api/build/index.d.ts"],"names":["devToolsMiddleware","indexPageMiddleware","openStackFrameInEditorMiddleware","openURLMiddleware","rawBodyMiddleware","securityHeadersMiddleware","statusPageMiddleware","systraceProfileMiddleware","debuggerProxyServer","eventsSocketServer","messageSocketServer"],"mappings":"AAIA,OAAOA,kBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,gCAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,yBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,yBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,mBAAP;AACA,SAASV,kBAAT;AACA,SAASC,mBAAT;AACA,SAASC,gCAAT;AACA,SAASC,iBAAT;AACA,SAASC,iBAAT;AACA,SAASC,yBAAT;AACA,SAASC,oBAAT;AACA,SAASC,yBAAT;AACA,SAASC,mBAAT;AACA,SAASC,kBAAT;AACA,SAASC,mBAAT","sourcesContent":["/// <reference types=\"node\" />\n/// <reference types=\"ws\" />\nimport http from 'http';\nimport { Server as HttpsServer } from 'https';\nimport devToolsMiddleware from './devToolsMiddleware';\nimport indexPageMiddleware from './indexPageMiddleware';\nimport openStackFrameInEditorMiddleware from './openStackFrameInEditorMiddleware';\nimport openURLMiddleware from './openURLMiddleware';\nimport rawBodyMiddleware from './rawBodyMiddleware';\nimport securityHeadersMiddleware from './securityHeadersMiddleware';\nimport statusPageMiddleware from './statusPageMiddleware';\nimport systraceProfileMiddleware from './systraceProfileMiddleware';\nimport debuggerProxyServer from './websocket/debuggerProxyServer';\nimport eventsSocketServer from './websocket/eventsSocketServer';\nimport messageSocketServer from './websocket/messageSocketServer';\nexport { devToolsMiddleware };\nexport { indexPageMiddleware };\nexport { openStackFrameInEditorMiddleware };\nexport { openURLMiddleware };\nexport { rawBodyMiddleware };\nexport { securityHeadersMiddleware };\nexport { statusPageMiddleware };\nexport { systraceProfileMiddleware };\nexport { debuggerProxyServer };\nexport { eventsSocketServer };\nexport { messageSocketServer };\ndeclare type MiddlewareOptions = {\n    host?: string;\n    watchFolders: ReadonlyArray<string>;\n    port: number;\n};\nexport declare function createDevServerMiddleware(options: MiddlewareOptions): {\n    attachToServer(server: http.Server | HttpsServer): {\n        debuggerProxy: {\n            server: import(\"ws\").Server;\n            isDebuggerConnected(): boolean;\n        };\n        eventsSocket: {\n            reportEvent: (event: any) => void;\n        };\n        messageSocket: {\n            broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n        };\n    };\n    middleware: any;\n};\n//# sourceMappingURL=index.d.ts.map"]},"metadata":{},"sourceType":"module"}