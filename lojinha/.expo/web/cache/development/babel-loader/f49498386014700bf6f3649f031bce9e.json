{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Slider/SliderExample.js\";\n\nvar React = require('react');\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nfunction SliderExample(props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, value.toFixed(3)), React.createElement(Slider, _extends({}, props, {\n    onValueChange: function onValueChange(newValue) {\n      return setValue(newValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction SlidingCompleteExample(props) {\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      slideCompletionValue = _React$useState4[0],\n      setSlideCompletionValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      slideCompletionCount = _React$useState6[0],\n      setSlideCompletionCount = _React$useState6[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(SliderExample, _extends({}, props, {\n    onSlidingComplete: function onSlidingComplete(value) {\n      setSlideCompletionValue(value);\n      setSlideCompletionCount(function (count) {\n        return count + 1;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Completions: \", slideCompletionCount, \" Value: \", slideCompletionValue));\n}\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n    textAlign: 'center',\n    fontWeight: '500',\n    margin: 10\n  }\n});\nexports.title = '<Slider>';\nexports.displayName = 'SliderExample';\nexports.description = 'Slider input for numeric values';\nexports.examples = [{\n  title: 'Default settings',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Initial value: 0.5',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      value: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'minimumValue: -1, maximumValue: 2',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      minimumValue: -1,\n      maximumValue: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'step: 0.25',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      step: 0.25,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'onSlidingComplete',\n  render: function render() {\n    return React.createElement(SlidingCompleteExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Custom min/max track tint color',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      minimumTrackTintColor: 'blue',\n      maximumTrackTintColor: 'red',\n      value: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: 'Custom thumb tint color',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      thumbTintColor: 'blue',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Custom thumb image',\n  platform: 'ios',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      thumbImage: require(\"../../assets/uie_thumb_big.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    });\n  }\n}, {\n  title: 'Custom track image',\n  platform: 'ios',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      trackImage: require(\"../../assets/slider.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Custom min/max track image',\n  platform: 'ios',\n  render: function render() {\n    return React.createElement(SliderExample, {\n      minimumTrackImage: require(\"../../assets/slider-left.png\"),\n      maximumTrackImage: require(\"../../assets/slider-right.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Slider/SliderExample.js"],"names":["React","require","SliderExample","props","useState","value","setValue","styles","text","toFixed","newValue","SlidingCompleteExample","slideCompletionValue","setSlideCompletionValue","slideCompletionCount","setSlideCompletionCount","count","StyleSheet","create","fontSize","textAlign","fontWeight","margin","exports","title","displayName","description","examples","render","platform"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst {Slider, Text, StyleSheet, View} = require('react-native');\n\nfunction SliderExample(props: React.ElementConfig<typeof Slider>) {\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <View>\n      <Text style={styles.text}>{value.toFixed(3)}</Text>\n      <Slider {...props} onValueChange={newValue => setValue(newValue)} />\n    </View>\n  );\n}\n\nfunction SlidingCompleteExample(props: React.ElementConfig<typeof Slider>) {\n  const [slideCompletionValue, setSlideCompletionValue] = React.useState(0);\n  const [slideCompletionCount, setSlideCompletionCount] = React.useState(0);\n\n  return (\n    <View>\n      <SliderExample\n        {...props}\n        onSlidingComplete={value => {\n          setSlideCompletionValue(value);\n          setSlideCompletionCount(count => count + 1);\n        }}\n      />\n      <Text>\n        Completions: {slideCompletionCount} Value: {slideCompletionValue}\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n    textAlign: 'center',\n    fontWeight: '500',\n    margin: 10,\n  },\n});\n\nexports.title = '<Slider>';\nexports.displayName = 'SliderExample';\nexports.description = 'Slider input for numeric values';\nexports.examples = [\n  {\n    title: 'Default settings',\n    render(): React.Element<any> {\n      return <SliderExample />;\n    },\n  },\n  {\n    title: 'Initial value: 0.5',\n    render(): React.Element<any> {\n      return <SliderExample value={0.5} />;\n    },\n  },\n  {\n    title: 'minimumValue: -1, maximumValue: 2',\n    render(): React.Element<any> {\n      return <SliderExample minimumValue={-1} maximumValue={2} />;\n    },\n  },\n  {\n    title: 'step: 0.25',\n    render(): React.Element<any> {\n      return <SliderExample step={0.25} />;\n    },\n  },\n  {\n    title: 'onSlidingComplete',\n    render(): React.Element<any> {\n      return <SlidingCompleteExample />;\n    },\n  },\n  {\n    title: 'Custom min/max track tint color',\n    render(): React.Element<any> {\n      return (\n        <SliderExample\n          minimumTrackTintColor={'blue'}\n          maximumTrackTintColor={'red'}\n          value={0.5}\n        />\n      );\n    },\n  },\n  {\n    title: 'Custom thumb tint color',\n    render(): React.Element<any> {\n      return <SliderExample thumbTintColor={'blue'} />;\n    },\n  },\n  {\n    title: 'Custom thumb image',\n    platform: 'ios',\n    render(): React.Element<any> {\n      return (\n        <SliderExample thumbImage={require('../../assets/uie_thumb_big.png')} />\n      );\n    },\n  },\n  {\n    title: 'Custom track image',\n    platform: 'ios',\n    render(): React.Element<any> {\n      return <SliderExample trackImage={require('../../assets/slider.png')} />;\n    },\n  },\n  {\n    title: 'Custom min/max track image',\n    platform: 'ios',\n    render(): React.Element<any> {\n      return (\n        <SliderExample\n          minimumTrackImage={require('../../assets/slider-left.png')}\n          maximumTrackImage={require('../../assets/slider-right.png')}\n        />\n      );\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}