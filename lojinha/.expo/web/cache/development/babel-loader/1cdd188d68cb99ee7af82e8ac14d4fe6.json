{"ast":null,"code":"'use strict';\n\nvar NOT_A_NATIVE_COMPONENT = \"\\nconst requireNativeComponent = require('requireNativeComponent');\\n\\nexport default 'Not a view config'\\n\";\nvar FULL_NATIVE_COMPONENT = \"\\n// @flow\\n\\nconst codegenNativeCommands = require('codegenNativeCommands');\\nconst codegenNativeComponent = require('codegenNativeComponent');\\n\\nimport type {\\n  Int32,\\n  BubblingEventHandler,\\n  DirectEventHandler,\\n  WithDefault,\\n} from 'CodegenFlowtypes';\\nimport type {NativeComponentType} from 'codegenNativeComponent';\\n\\nimport type {ViewProps} from 'ViewPropTypes';\\n\\ntype ModuleProps = $ReadOnly<{|\\n  ...ViewProps,\\n\\n  // Props\\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\\n\\n  // Events\\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\\n|}>;\\n\\ntype NativeType = NativeComponentType<ModuleProps>;\\n\\ninterface NativeCommands {\\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\\n  +scrollTo: (viewRef: React.ElementRef<NativeType>, y: Int32, animated: boolean) => void;\\n}\\n\\nexport const Commands = codegenNativeCommands<NativeCommands>({\\n  supportedCommands: ['hotspotUpdate', 'scrollTo'],\\n});\\n\\nexport default codegenNativeComponent<ModuleProps>('Module', {\\n  interfaceOnly: true,\\n  paperComponentName: 'RCTModule',\\n});\\n\";\nvar FULL_NATIVE_COMPONENT_WITH_TYPE_EXPORT = \"\\n// @flow\\n\\nconst codegenNativeCommands = require('codegenNativeCommands');\\nconst codegenNativeComponent = require('codegenNativeComponent');\\nimport type {NativeComponentType} from 'codegenNativeComponent';\\n\\nimport type {\\n  Int32,\\n  BubblingEventHandler,\\n  DirectEventHandler,\\n  WithDefault,\\n} from 'CodegenFlowtypes';\\n\\nimport type {ViewProps} from 'ViewPropTypes';\\n\\ntype ModuleProps = $ReadOnly<{|\\n  ...ViewProps,\\n\\n  // Props\\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\\n\\n  // Events\\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\\n|}>;\\n\\ntype NativeType = NativeComponentType<ModuleProps>;\\n\\ninterface NativeCommands {\\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\\n  +scrollTo: (viewRef: React.ElementRef<NativeType>, y: Int32, animated: boolean) => void;\\n}\\n\\nexport const Commands = codegenNativeCommands<NativeCommands>({\\n  supportedCommands: ['hotspotUpdate', 'scrollTo'],\\n});\\n\\nexport default (codegenNativeComponent<ModuleProps>('Module', {\\n  interfaceOnly: true,\\n  paperComponentName: 'RCTModule',\\n}): NativeType);\\n\";\nmodule.exports = {\n  'NotANativeComponent.js': NOT_A_NATIVE_COMPONENT,\n  'FullNativeComponent.js': FULL_NATIVE_COMPONENT,\n  'FullTypedNativeComponent.js': FULL_NATIVE_COMPONENT_WITH_TYPE_EXPORT\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/babel-plugin-inline-view-configs/__test_fixtures__/fixtures.js"],"names":["NOT_A_NATIVE_COMPONENT","FULL_NATIVE_COMPONENT","FULL_NATIVE_COMPONENT_WITH_TYPE_EXPORT","module","exports"],"mappings":"AAUA;;AACA,IAAMA,sBAAsB,gHAA5B;AAMA,IAAMC,qBAAqB,sqCAA3B;AA4CA,IAAMC,sCAAsC,orCAA5C;AA4CAC,MAAM,CAACC,OAAP,GAAiB;AACf,4BAA0BJ,sBADX;AAEf,4BAA0BC,qBAFX;AAGf,iCAA+BC;AAHhB,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\nconst NOT_A_NATIVE_COMPONENT = `\nconst requireNativeComponent = require('requireNativeComponent');\n\nexport default 'Not a view config'\n`;\n\nconst FULL_NATIVE_COMPONENT = `\n// @flow\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  Int32,\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenFlowtypes';\nimport type {NativeComponentType} from 'codegenNativeComponent';\n\nimport type {ViewProps} from 'ViewPropTypes';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\ntype NativeType = NativeComponentType<ModuleProps>;\n\ninterface NativeCommands {\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\n  +scrollTo: (viewRef: React.ElementRef<NativeType>, y: Int32, animated: boolean) => void;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['hotspotUpdate', 'scrollTo'],\n});\n\nexport default codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModule',\n});\n`;\n\nconst FULL_NATIVE_COMPONENT_WITH_TYPE_EXPORT = `\n// @flow\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\nimport type {NativeComponentType} from 'codegenNativeComponent';\n\nimport type {\n  Int32,\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenFlowtypes';\n\nimport type {ViewProps} from 'ViewPropTypes';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\ntype NativeType = NativeComponentType<ModuleProps>;\n\ninterface NativeCommands {\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\n  +scrollTo: (viewRef: React.ElementRef<NativeType>, y: Int32, animated: boolean) => void;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['hotspotUpdate', 'scrollTo'],\n});\n\nexport default (codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModule',\n}): NativeType);\n`;\n\nmodule.exports = {\n  'NotANativeComponent.js': NOT_A_NATIVE_COMPONENT,\n  'FullNativeComponent.js': FULL_NATIVE_COMPONENT,\n  'FullTypedNativeComponent.js': FULL_NATIVE_COMPONENT_WITH_TYPE_EXPORT,\n};\n"]},"metadata":{},"sourceType":"script"}