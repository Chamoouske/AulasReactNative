{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport EventEmitter from \"../emitter/EventEmitter\";\nimport RCTDeviceEventEmitter from \"./RCTDeviceEventEmitter\";\nimport invariant from 'fbjs/lib/invariant';\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(NativeEventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    _classCallCheck(this, NativeEventEmitter);\n\n    return _super.call(this, RCTDeviceEventEmitter.sharedSubscriber);\n  }\n\n  _createClass(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (this._nativeModule != null) {\n        this._nativeModule.addListener(eventType);\n      }\n\n      return _get(_getPrototypeOf(NativeEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      invariant(eventType, 'eventType argument is required.');\n      var count = this.listeners(eventType).length;\n\n      if (this._nativeModule != null) {\n        this._nativeModule.removeListeners(count);\n      }\n\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (this._nativeModule != null) {\n        this._nativeModule.removeListeners(1);\n      }\n\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n    }\n  }]);\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport default NativeEventEmitter;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/NativeEventEmitter/index.js"],"names":["EventEmitter","RCTDeviceEventEmitter","invariant","NativeEventEmitter","nativeModule","sharedSubscriber","eventType","listener","context","_nativeModule","addListener","count","listeners","length","removeListeners","subscription"],"mappings":"AAUA;;;;;;;;;;;;;AAEA,OAAOA,YAAP;AACA,OAAOC,qBAAP;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;;IAaMC,kB;;;;;AAGJ,8BAAYC,YAAZ,EAAyC;AAAA;;AAAA,6BACjCH,qBAAqB,CAACI,gBADW;AAExC;;;;WAED,qBACEC,SADF,EAEEC,QAFF,EAGEC,OAHF,EAIuB;AACrB,UAAI,KAAKC,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,aAAKA,aAAL,CAAmBC,WAAnB,CAA+BJ,SAA/B;AACD;;AACD,iGAAyBA,SAAzB,EAAoCC,QAApC,EAA8CC,OAA9C;AACD;;;WAED,4BAAmBF,SAAnB,EAAsC;AACpCJ,MAAAA,SAAS,CAACI,SAAD,EAAY,iCAAZ,CAAT;AACA,UAAMK,KAAK,GAAG,KAAKC,SAAL,CAAeN,SAAf,EAA0BO,MAAxC;;AACA,UAAI,KAAKJ,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,aAAKA,aAAL,CAAmBK,eAAnB,CAAmCH,KAAnC;AACD;;AACD,iGAAyBL,SAAzB;AACD;;;WAED,4BAAmBS,YAAnB,EAAsD;AACpD,UAAI,KAAKN,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,aAAKA,aAAL,CAAmBK,eAAnB,CAAmC,CAAnC;AACD;;AACD,iGAAyBC,YAAzB;AACD;;;;EAhC8Bf,Y;;AAmCjC,eAAeG,kBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\nimport invariant from 'fbjs/lib/invariant';\n\nimport type EmitterSubscription from '../emitter/EmitterSubscription';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nexport default NativeEventEmitter;\n"]},"metadata":{},"sourceType":"module"}