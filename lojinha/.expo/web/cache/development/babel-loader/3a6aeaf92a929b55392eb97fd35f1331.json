{"ast":null,"code":"#!/usr/bin/env node\n\nvar fs = require('fs');\n\nvar yargs = require('yargs');\n\nvar _yargs$usage$help = yargs.usage('Usage: $0 [icons...]').help(),\n    argv = _yargs$usage$help.argv;\n\nvar icons = argv._;\n\nfor (var i = 0; i < icons.length; i += 1) {\n  var icon = icons[i];\n  var mapFile = icon;\n\n  if (mapFile === 'FontAwesome5') {\n    mapFile = 'FontAwesome5Free';\n  }\n\n  var glyphmap = JSON.parse(fs.readFileSync(\"glyphmaps/\" + mapFile + \".json\", {\n    encoding: 'utf8'\n  }));\n  var names = Object.keys(glyphmap).join(\"' | '\");\n  var iconClass = \"/**\\n * @flow strict\\n */\\n\\nimport type { Icon } from './index';\\n\\nexport type \" + icon + \"Glyphs = '\" + names + \"';\\n\\ndeclare export default Class<Icon<\" + icon + \"Glyphs>>;\\n\";\n  fs.writeFileSync(icon + \".js.flow\", iconClass);\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/bin/generate-flow.js"],"names":["fs","require","yargs","usage","help","argv","icons","_","i","length","icon","mapFile","glyphmap","JSON","parse","readFileSync","encoding","names","Object","keys","join","iconClass","writeFileSync"],"mappings":"AAAA;;AAGA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;wBAEiBC,KAAK,CAACC,KAAN,CAAY,sBAAZ,EAAoCC,IAApC,E;IAATC,I,qBAAAA,I;;AAER,IAAMC,KAAK,GAAGD,IAAI,CAACE,CAAnB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,MAAME,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAlB;AACA,MAAIG,OAAO,GAAGD,IAAd;;AACA,MAAIC,OAAO,KAAK,cAAhB,EAAgC;AAC9BA,IAAAA,OAAO,GAAG,kBAAV;AACD;;AAED,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CACfd,EAAE,CAACe,YAAH,gBAA6BJ,OAA7B,YAA6C;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAA7C,CADe,CAAjB;AAGA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYP,QAAZ,EAAsBQ,IAAtB,CAA2B,OAA3B,CAAd;AAEA,MAAMC,SAAS,yFAMHX,IANG,kBAMcO,KANd,gDAQmBP,IARnB,gBAAf;AAUAV,EAAAA,EAAE,CAACsB,aAAH,CAAoBZ,IAApB,eAAoCW,SAApC;AACD","sourcesContent":["#!/usr/bin/env node\n/* eslint-disable no-console */\n\nconst fs = require('fs');\nconst yargs = require('yargs');\n\nconst { argv } = yargs.usage('Usage: $0 [icons...]').help();\n\nconst icons = argv._;\nfor (let i = 0; i < icons.length; i += 1) {\n  const icon = icons[i];\n  let mapFile = icon;\n  if (mapFile === 'FontAwesome5') {\n    mapFile = 'FontAwesome5Free';\n  }\n\n  const glyphmap = JSON.parse(\n    fs.readFileSync(`glyphmaps/${mapFile}.json`, { encoding: 'utf8' })\n  );\n  const names = Object.keys(glyphmap).join(\"' | '\");\n\n  const iconClass = `/**\n * @flow strict\n */\n\nimport type { Icon } from './index';\n\nexport type ${icon}Glyphs = '${names}';\n\ndeclare export default Class<Icon<${icon}Glyphs>>;\n`;\n  fs.writeFileSync(`${icon}.js.flow`, iconClass);\n}\n"]},"metadata":{},"sourceType":"script"}