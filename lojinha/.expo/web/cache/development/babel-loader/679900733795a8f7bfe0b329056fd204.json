{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nvar validators_1 = require(\"../validators\");\n\nvar BackgroundAsset_1 = __importDefault(require(\"./BackgroundAsset\"));\n\nvar ImageAsset_1 = __importDefault(require(\"./ImageAsset\"));\n\nvar Info_plist_1 = __importDefault(require(\"./Info.plist\"));\n\nvar Storyboard_1 = __importDefault(require(\"./Storyboard\"));\n\nvar pbxproj_1 = __importDefault(require(\"./pbxproj\"));\n\nfunction configureIos(projectRootPath, config) {\n  var validatedConfig, iosProject;\n  return _regeneratorRuntime.async(function configureIos$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(validators_1.validateIosConfig(config));\n\n        case 2:\n          validatedConfig = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(pbxproj_1.default(projectRootPath));\n\n        case 5:\n          iosProject = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(Promise.all([Info_plist_1.default(iosProject.projectPath, validatedConfig), ImageAsset_1.default(iosProject.projectPath, validatedConfig), BackgroundAsset_1.default(iosProject.projectPath, validatedConfig), Storyboard_1.default(iosProject, validatedConfig)]));\n\n        case 8:\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.writeFile(iosProject.pbxProject.filepath, iosProject.pbxProject.writeSync()));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.default = configureIos;","map":{"version":3,"sources":["../../src/ios/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,iBAAA;;AACA,IAAA,iBAAA,GAAA,eAAA,CAAA,OAAA,qBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,eAAA,CAAA,OAAA,aAAA,CAAA;;AAEe,SAAe,YAAf,CACb,eADa,EAEb,MAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIiB,YAAA,CAAA,iBAAA,CAAkB,MAAlB,CAJjB;;AAAA;AAIP,UAAA,eAJO;AAAA;AAAA,2CAMY,SAAA,CAAA,OAAA,CAAe,eAAf,CANZ;;AAAA;AAMP,UAAA,UANO;AAAA;AAAA,2CAQP,OAAO,CAAC,GAAR,CAAY,CAChB,YAAA,CAAA,OAAA,CAAmB,UAAU,CAAC,WAA9B,EAA2C,eAA3C,CADgB,EAEhB,YAAA,CAAA,OAAA,CAAoB,UAAU,CAAC,WAA/B,EAA4C,eAA5C,CAFgB,EAGhB,iBAAA,CAAA,OAAA,CAAyB,UAAU,CAAC,WAApC,EAAiD,eAAjD,CAHgB,EAIhB,YAAA,CAAA,OAAA,CAAoB,UAApB,EAAgC,eAAhC,CAJgB,CAAZ,CARO;;AAAA;AAAA;AAAA,2CAeP,UAAA,CAAA,OAAA,CAAG,SAAH,CAAa,UAAU,CAAC,UAAX,CAAsB,QAAnC,EAA6C,UAAU,CAAC,UAAX,CAAsB,SAAtB,EAA7C,CAfO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAf,OAAA,CAAA,OAAA,GAAA,YAAA","sourcesContent":["import fs from 'fs-extra';\n\nimport { IosSplashScreenConfigJSON } from '../SplashScreenConfig';\nimport { validateIosConfig } from '../validators';\nimport configureBackgroundAsset from './BackgroundAsset';\nimport configureImageAsset from './ImageAsset';\nimport configureInfoPlist from './Info.plist';\nimport configureStoryboard from './Storyboard';\nimport readPbxProject from './pbxproj';\n\nexport default async function configureIos(\n  projectRootPath: string,\n  config: IosSplashScreenConfigJSON\n) {\n  const validatedConfig = await validateIosConfig(config);\n\n  const iosProject = await readPbxProject(projectRootPath);\n\n  await Promise.all([\n    configureInfoPlist(iosProject.projectPath, validatedConfig),\n    configureImageAsset(iosProject.projectPath, validatedConfig),\n    configureBackgroundAsset(iosProject.projectPath, validatedConfig),\n    configureStoryboard(iosProject, validatedConfig),\n  ]);\n\n  await fs.writeFile(iosProject.pbxProject.filepath, iosProject.pbxProject.writeSync());\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}