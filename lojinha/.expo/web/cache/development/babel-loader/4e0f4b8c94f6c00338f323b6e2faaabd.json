{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js\";\n\nvar FlatList = require(\"../FlatList\");\n\nvar React = require('react');\n\nfunction renderMyListItem(info) {\n  return React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  });\n}\n\nmodule.exports = {\n  testEverythingIsFine: function testEverythingIsFine() {\n    var data = [{\n      title: 'Title Text',\n      key: 1\n    }];\n    return React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    });\n  },\n  testBadDataWithTypicalItem: function testBadDataWithTypicalItem() {\n    var data = [{\n      title: 6,\n      key: 1\n    }];\n    return React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  },\n  testMissingFieldWithTypicalItem: function testMissingFieldWithTypicalItem() {\n    var data = [{\n      key: 1\n    }];\n    return React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  },\n  testGoodDataWithBadCustomRenderItemFunction: function testGoodDataWithBadCustomRenderItemFunction() {\n    var _this = this;\n\n    var data = [{\n      widget: 6,\n      key: 1\n    }];\n    return React.createElement(FlatList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }, info.item.widget.missingProp);\n      },\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    });\n  },\n  testBadRenderItemFunction: function testBadRenderItemFunction() {\n    var _this2 = this;\n\n    var data = [{\n      title: 'foo',\n      key: 1\n    }];\n    return [React.createElement(FlatList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 56\n          }\n        });\n      },\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }), React.createElement(FlatList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 59\n          }\n        });\n      },\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }), React.createElement(FlatList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 56\n          }\n        });\n      },\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }), React.createElement(FlatList, {\n      renderItem: function renderItem(info) {\n        return React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 66\n          }\n        });\n      },\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    })];\n  },\n  testOtherBadProps: function testOtherBadProps() {\n    return [React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      data: [],\n      numColumns: \"lots\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      data: [],\n      windowSize: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }), React.createElement(FlatList, {\n      renderItem: renderMyListItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    })];\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js"],"names":["FlatList","require","React","renderMyListItem","info","module","exports","testEverythingIsFine","data","title","key","testBadDataWithTypicalItem","testMissingFieldWithTypicalItem","testGoodDataWithBadCustomRenderItemFunction","widget","item","missingProp","testBadRenderItemFunction","testOtherBadProps"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst FlatList = require('../FlatList');\nconst React = require('react');\n\nfunction renderMyListItem(info: {\n  item: {title: string, ...},\n  index: number,\n  ...\n}) {\n  return <span />;\n}\n\nmodule.exports = {\n  testEverythingIsFine(): React.Node {\n    const data = [\n      {\n        title: 'Title Text',\n        key: 1,\n      },\n    ];\n    return <FlatList renderItem={renderMyListItem} data={data} />;\n  },\n\n  testBadDataWithTypicalItem(): React.Node {\n    const data = [\n      {\n        title: 6,\n        key: 1,\n      },\n    ];\n    // $FlowExpectedError - bad title type 6, should be string\n    return <FlatList renderItem={renderMyListItem} data={data} />;\n  },\n\n  testMissingFieldWithTypicalItem(): React.Node {\n    const data = [\n      {\n        key: 1,\n      },\n    ];\n    // $FlowExpectedError - missing title\n    return <FlatList renderItem={renderMyListItem} data={data} />;\n  },\n\n  testGoodDataWithBadCustomRenderItemFunction(): React.Node {\n    const data = [\n      {\n        widget: 6,\n        key: 1,\n      },\n    ];\n    return (\n      <FlatList\n        renderItem={info => (\n          <span>\n            {\n              // $FlowExpectedError - bad widgetCount type 6, should be Object\n              info.item.widget.missingProp\n            }\n          </span>\n        )}\n        data={data}\n      />\n    );\n  },\n\n  testBadRenderItemFunction(): $TEMPORARY$array<React.Node> {\n    const data = [\n      {\n        title: 'foo',\n        key: 1,\n      },\n    ];\n    return [\n      // $FlowExpectedError - title should be inside `item`\n      <FlatList renderItem={(info: {title: string}) => <span />} data={data} />,\n      <FlatList\n        // $FlowExpectedError - bad index type string, should be number\n        renderItem={(info: {item: any, index: string}) => <span />}\n        data={data}\n      />,\n      <FlatList\n        // $FlowExpectedError - bad title type number, should be string\n        renderItem={(info: {item: {title: number}}) => <span />}\n        data={data}\n      />,\n      // EverythingIsFine\n      <FlatList\n        // $FlowExpectedError - bad title type number, should be string\n        renderItem={(info: {item: {title: string, ...}, ...}) => <span />}\n        data={data}\n      />,\n    ];\n  },\n\n  testOtherBadProps(): $TEMPORARY$array<React.Node> {\n    return [\n      // $FlowExpectedError - bad numColumns type \"lots\"\n      <FlatList renderItem={renderMyListItem} data={[]} numColumns=\"lots\" />,\n      // $FlowExpectedError - bad windowSize type \"big\"\n      <FlatList renderItem={renderMyListItem} data={[]} windowSize=\"big\" />,\n      // $FlowExpectedError - missing `data` prop\n      <FlatList renderItem={renderMyListItem} />,\n    ];\n  },\n};\n"]},"metadata":{},"sourceType":"script"}