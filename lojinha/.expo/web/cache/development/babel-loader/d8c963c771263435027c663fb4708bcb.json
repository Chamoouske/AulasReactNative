{"ast":null,"code":"'use strict';","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/ImageSource.js"],"names":[],"mappings":"AAUA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\n// This is to sync with ImageSourcePropTypes.js.\n// We explicitly don't want this to be strict so that we can pass in objects\n// that might have more keys. This also has to be inexact to support taking\n// instances of classes like FBIcon.\n// https://fburl.com/8lynhvtw\nexport type ImageURISource = $ReadOnly<{\n  /**\n   * `uri` is a string representing the resource identifier for the image, which\n   * could be an http address, a local file path, or the name of a static image\n   * resource (which should be wrapped in the `require('./path/to/image.png')`\n   * function).\n   */\n  uri?: ?string,\n  /**\n   * `bundle` is the iOS asset bundle which the image is included in. This\n   * will default to [NSBundle mainBundle] if not set.\n   * @platform ios\n   */\n  bundle?: ?string,\n  /**\n   * `method` is the HTTP Method to use. Defaults to GET if not specified.\n   */\n  method?: ?string,\n  /**\n   * `headers` is an object representing the HTTP headers to send along with the\n   * request for a remote image.\n   */\n  headers?: ?Object,\n  /**\n   * `body` is the HTTP body to send with the request. This must be a valid\n   * UTF-8 string, and will be sent exactly as specified, with no\n   * additional encoding (e.g. URL-escaping or base64) applied.\n   */\n  body?: ?string,\n  /**\n   * `cache` determines how the requests handles potentially cached\n   * responses.\n   *\n   * - `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS.\n   *\n   * - `reload`: The data for the URL will be loaded from the originating source.\n   * No existing cache data should be used to satisfy a URL load request.\n   *\n   * - `force-cache`: The existing cached data will be used to satisfy the request,\n   * regardless of its age or expiration date. If there is no existing data in the cache\n   * corresponding the request, the data is loaded from the originating source.\n   *\n   * - `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of\n   * its age or expiration date. If there is no existing data in the cache corresponding\n   * to a URL load request, no attempt is made to load the data from the originating source,\n   * and the load is considered to have failed.\n   *\n   * @platform ios\n   */\n  cache?: ?('default' | 'reload' | 'force-cache' | 'only-if-cached'),\n  /**\n   * `width` and `height` can be specified if known at build time, in which case\n   * these will be used to set the default `<Image/>` component dimensions.\n   */\n  width?: ?number,\n  height?: ?number,\n  /**\n   * `scale` is used to indicate the scale factor of the image. Defaults to 1.0 if\n   * unspecified, meaning that one image pixel equates to one display point / DIP.\n   */\n  scale?: ?number,\n  ...\n}>;\n\n// We have to export any because of an issue in Flow with objects that come from Relay:\n// https://fburl.com/8ljo5tmr\n// https://fb.facebook.com/groups/flow/permalink/1824103160971624/\nexport type ImageSource = ImageURISource | number | Array<ImageURISource>;\n"]},"metadata":{},"sourceType":"script"}