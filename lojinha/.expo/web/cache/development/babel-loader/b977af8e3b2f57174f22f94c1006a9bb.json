{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/ScrollView/__tests__/ScrollView-test.js\";\n\nvar React = require('react');\n\nvar ScrollView = require(\"../ScrollView\");\n\nvar ReactNativeTestTools = require(\"../../../Utilities/ReactNativeTestTools\");\n\nvar ReactTestRenderer = require('react-test-renderer');\n\nvar View = require(\"../../View/View\");\n\nvar Text = require(\"../../../Text/Text\");\n\ndescribe('<ScrollView />', function () {\n  it('should render as expected', function () {\n    ReactNativeTestTools.expectRendersMatchingSnapshot('ScrollView', function () {\n      return React.createElement(ScrollView, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \"Hello World!\")));\n    }, function () {\n      jest.dontMock(\"../ScrollView\");\n    });\n  });\n  it('should mock native methods and instance methods when mocked', function () {\n    jest.resetModules();\n    jest.mock(\"../ScrollView\");\n    var ref = React.createRef();\n    ReactTestRenderer.create(React.createElement(ScrollView, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }\n    }));\n    expect(ref.current != null && ref.current.measure).toBeInstanceOf(jest.fn().constructor);\n    expect(ref.current != null && ref.current.scrollTo).toBeInstanceOf(jest.fn().constructor);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Components/ScrollView/__tests__/ScrollView-test.js"],"names":["React","require","ScrollView","ReactNativeTestTools","ReactTestRenderer","View","Text","describe","it","expectRendersMatchingSnapshot","jest","dontMock","resetModules","mock","ref","createRef","create","expect","current","measure","toBeInstanceOf","fn","constructor","scrollTo"],"mappings":"AAWA;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,iBAA1B;;AACA,IAAME,oBAAoB,GAAGF,OAAO,2CAApC;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAMI,IAAI,GAAGJ,OAAO,mBAApB;;AACA,IAAMK,IAAI,GAAGL,OAAO,sBAApB;;AAEAM,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpCL,IAAAA,oBAAoB,CAACM,6BAArB,CACE,YADF,EAEE;AAAA,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF;AAAA,KAFF,EASE,YAAM;AACJC,MAAAA,IAAI,CAACC,QAAL;AACD,KAXH;AAaD,GAdC,CAAF;AAeAH,EAAAA,EAAE,CAAC,6DAAD,EAAgE,YAAM;AACtEE,IAAAA,IAAI,CAACE,YAAL;AACAF,IAAAA,IAAI,CAACG,IAAL;AACA,QAAMC,GAAG,GAAGd,KAAK,CAACe,SAAN,EAAZ;AAEAX,IAAAA,iBAAiB,CAACY,MAAlB,CAAyB,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEF,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB;AAEAG,IAAAA,MAAM,CAACH,GAAG,CAACI,OAAJ,IAAe,IAAf,IAAuBJ,GAAG,CAACI,OAAJ,CAAYC,OAApC,CAAN,CAAmDC,cAAnD,CACEV,IAAI,CAACW,EAAL,GAAUC,WADZ;AAGAL,IAAAA,MAAM,CAACH,GAAG,CAACI,OAAJ,IAAe,IAAf,IAAuBJ,GAAG,CAACI,OAAJ,CAAYK,QAApC,CAAN,CAAoDH,cAApD,CACEV,IAAI,CAACW,EAAL,GAAUC,WADZ;AAGD,GAbC,CAAF;AAcD,CA9BO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n * @flow-strict\n */\n\n'use strict';\n\nconst React = require('react');\nconst ScrollView = require('../ScrollView');\nconst ReactNativeTestTools = require('../../../Utilities/ReactNativeTestTools');\nconst ReactTestRenderer = require('react-test-renderer');\nconst View = require('../../View/View');\nconst Text = require('../../../Text/Text');\n\ndescribe('<ScrollView />', () => {\n  it('should render as expected', () => {\n    ReactNativeTestTools.expectRendersMatchingSnapshot(\n      'ScrollView',\n      () => (\n        <ScrollView>\n          <View>\n            <Text>Hello World!</Text>\n          </View>\n        </ScrollView>\n      ),\n      () => {\n        jest.dontMock('../ScrollView');\n      },\n    );\n  });\n  it('should mock native methods and instance methods when mocked', () => {\n    jest.resetModules();\n    jest.mock('../ScrollView');\n    const ref = React.createRef();\n\n    ReactTestRenderer.create(<ScrollView ref={ref} />);\n\n    expect(ref.current != null && ref.current.measure).toBeInstanceOf(\n      jest.fn().constructor,\n    );\n    expect(ref.current != null && ref.current.scrollTo).toBeInstanceOf(\n      jest.fn().constructor,\n    );\n  });\n});\n"]},"metadata":{},"sourceType":"script"}