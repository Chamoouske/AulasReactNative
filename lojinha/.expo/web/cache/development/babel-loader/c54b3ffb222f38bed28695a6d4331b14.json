{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/PromiseTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\n\nvar PromiseTest = function (_React$Component) {\n  _inherits(PromiseTest, _React$Component);\n\n  var _super = _createSuper(PromiseTest);\n\n  function PromiseTest() {\n    var _this;\n\n    _classCallCheck(this, PromiseTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shouldResolve = false;\n    _this.shouldReject = false;\n    _this.shouldSucceedAsync = false;\n    _this.shouldThrowAsync = false;\n\n    _this.testShouldResolve = function () {\n      return TestModule.shouldResolve().then(function () {\n        return _this.shouldResolve = true;\n      }).catch(function () {\n        return _this.shouldResolve = false;\n      });\n    };\n\n    _this.testShouldReject = function () {\n      return TestModule.shouldReject().then(function () {\n        return _this.shouldReject = false;\n      }).catch(function () {\n        return _this.shouldReject = true;\n      });\n    };\n\n    _this.testShouldSucceedAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(TestModule.shouldResolve());\n\n            case 3:\n              _this.shouldSucceedAsync = true;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              _this.shouldSucceedAsync = false;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    _this.testShouldThrowAsync = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(TestModule.shouldReject());\n\n            case 3:\n              _this.shouldThrowAsync = false;\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this.shouldThrowAsync = true;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(PromiseTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Promise.all([this.testShouldResolve(), this.testShouldReject(), this.testShouldSucceedAsync(), this.testShouldThrowAsync()]).then(function () {\n        return TestModule.markTestPassed(_this2.shouldResolve && _this2.shouldReject && _this2.shouldSucceedAsync && _this2.shouldThrowAsync);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return PromiseTest;\n}(React.Component);\n\nPromiseTest.displayName = 'PromiseTest';\nmodule.exports = PromiseTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/PromiseTest.js"],"names":["React","require","View","ReactNative","TestModule","NativeModules","PromiseTest","shouldResolve","shouldReject","shouldSucceedAsync","shouldThrowAsync","testShouldResolve","then","catch","testShouldReject","testShouldSucceedAsync","testShouldThrowAsync","Promise","all","markTestPassed","Component","displayName","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;IAEOC,I,GAAQC,W,CAARD,I;IACAE,U,GAAcD,WAAW,CAACE,a,CAA1BD,U;;IAEDE,W;;;;;;;;;;;;;;;UACJC,a,GAAyB,K;UACzBC,Y,GAAwB,K;UACxBC,kB,GAA8B,K;UAC9BC,gB,GAA4B,K;;UAkB5BC,iB,GAA+B,YAAM;AACnC,aAAOP,UAAU,CAACG,aAAX,GACJK,IADI,CACC;AAAA,eAAO,MAAKL,aAAL,GAAqB,IAA5B;AAAA,OADD,EAEJM,KAFI,CAEE;AAAA,eAAO,MAAKN,aAAL,GAAqB,KAA5B;AAAA,OAFF,CAAP;AAGD,K;;UAEDO,gB,GAA8B,YAAM;AAClC,aAAOV,UAAU,CAACI,YAAX,GACJI,IADI,CACC;AAAA,eAAO,MAAKJ,YAAL,GAAoB,KAA3B;AAAA,OADD,EAEJK,KAFI,CAEE;AAAA,eAAO,MAAKL,YAAL,GAAoB,IAA3B;AAAA,OAFF,CAAP;AAGD,K;;UAEDO,sB,GAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEnCX,UAAU,CAACG,aAAX,EAFmC;;AAAA;AAGzC,oBAAKE,kBAAL,GAA0B,IAA1B;AAHyC;AAAA;;AAAA;AAAA;AAAA;AAKzC,oBAAKA,kBAAL,GAA0B,KAA1B;;AALyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAS7CO,oB,GAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEjCZ,UAAU,CAACI,YAAX,EAFiC;;AAAA;AAGvC,oBAAKE,gBAAL,GAAwB,KAAxB;AAHuC;AAAA;;AAAA;AAAA;AAAA;AAKvC,oBAAKA,gBAAL,GAAwB,IAAxB;;AALuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WArC3C,6BAAoB;AAAA;;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAY,CACV,KAAKP,iBAAL,EADU,EAEV,KAAKG,gBAAL,EAFU,EAGV,KAAKC,sBAAL,EAHU,EAIV,KAAKC,oBAAL,EAJU,CAAZ,EAKGJ,IALH,CAKQ;AAAA,eACNR,UAAU,CAACe,cAAX,CACE,MAAI,CAACZ,aAAL,IACE,MAAI,CAACC,YADP,IAEE,MAAI,CAACC,kBAFP,IAGE,MAAI,CAACC,gBAJT,CADM;AAAA,OALR;AAaD;;;WAgCD,kBAAqB;AACnB,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAtDuBV,KAAK,CAACoB,S;;AAyDhCd,WAAW,CAACe,WAAZ,GAA0B,aAA1B;AAEAC,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {View} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\nclass PromiseTest extends React.Component<{...}> {\n  shouldResolve: boolean = false;\n  shouldReject: boolean = false;\n  shouldSucceedAsync: boolean = false;\n  shouldThrowAsync: boolean = false;\n\n  componentDidMount() {\n    Promise.all([\n      this.testShouldResolve(),\n      this.testShouldReject(),\n      this.testShouldSucceedAsync(),\n      this.testShouldThrowAsync(),\n    ]).then(() =>\n      TestModule.markTestPassed(\n        this.shouldResolve &&\n          this.shouldReject &&\n          this.shouldSucceedAsync &&\n          this.shouldThrowAsync,\n      ),\n    );\n  }\n\n  testShouldResolve: () => any = () => {\n    return TestModule.shouldResolve()\n      .then(() => (this.shouldResolve = true))\n      .catch(() => (this.shouldResolve = false));\n  };\n\n  testShouldReject: () => any = () => {\n    return TestModule.shouldReject()\n      .then(() => (this.shouldReject = false))\n      .catch(() => (this.shouldReject = true));\n  };\n\n  testShouldSucceedAsync: () => Promise<any> = async (): Promise<any> => {\n    try {\n      await TestModule.shouldResolve();\n      this.shouldSucceedAsync = true;\n    } catch (e) {\n      this.shouldSucceedAsync = false;\n    }\n  };\n\n  testShouldThrowAsync: () => Promise<any> = async (): Promise<any> => {\n    try {\n      await TestModule.shouldReject();\n      this.shouldThrowAsync = false;\n    } catch (e) {\n      this.shouldThrowAsync = true;\n    }\n  };\n\n  render(): React.Node {\n    return <View />;\n  }\n}\n\nPromiseTest.displayName = 'PromiseTest';\n\nmodule.exports = PromiseTest;\n"]},"metadata":{},"sourceType":"script"}