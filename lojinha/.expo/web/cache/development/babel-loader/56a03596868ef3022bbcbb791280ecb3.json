{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/CatalystRootViewTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar NativeModules = require(\"react-native-web/dist/exports/NativeModules\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar Recording = NativeModules.Recording;\nvar that;\n\nvar CatalystRootViewTestApp = function (_React$Component) {\n  _inherits(CatalystRootViewTestApp, _React$Component);\n\n  var _super = _createSuper(CatalystRootViewTestApp);\n\n  function CatalystRootViewTestApp() {\n    var _this;\n\n    _classCallCheck(this, CatalystRootViewTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      height: 300\n    };\n    return _this;\n  }\n\n  _createClass(CatalystRootViewTestApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      that = this;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Recording.record('RootComponentWillUnmount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        collapsable: false,\n        style: [styles.container, {\n          height: this.state.height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CatalystRootViewTestApp;\n}(React.Component);\n\nvar ReactRootViewTestModule = {\n  setHeight: function setHeight(height) {\n    that.setState({\n      height: height\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch'\n  }\n});\nBatchedBridge.registerCallableModule('ReactRootViewTestModule', ReactRootViewTestModule);\nmodule.exports = {\n  CatalystRootViewTestApp: CatalystRootViewTestApp\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/CatalystRootViewTestModule.js"],"names":["React","require","BatchedBridge","Recording","NativeModules","that","CatalystRootViewTestApp","state","height","record","styles","container","Component","ReactRootViewTestModule","setHeight","setState","StyleSheet","create","alignSelf","registerCallableModule","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;AAEA,IAAMC,aAAa,GAAGD,OAAO,CAAC,oDAAD,CAA7B;;IAEOE,S,GAAaC,a,CAAbD,S;AAEP,IAAIE,IAAJ;;IAEMC,uB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;;;;;WAIR,6BAAoB;AAClBH,MAAAA,IAAI,GAAG,IAAP;AACD;;;WAED,gCAAuB;AACrBF,MAAAA,SAAS,CAACM,MAAV,CAAiB,0BAAjB;AACD;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AACE,QAAA,WAAW,EAAE,KADf;AAEE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;AAACH,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAApB,SAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EApBmCR,KAAK,CAACY,S;;AAuB5C,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,SAAS,EAAE,mBAASN,MAAT,EAAiB;AAC1BH,IAAAA,IAAI,CAACU,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACD;AAH6B,CAAhC;AAMA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,SAAS,EAAE;AADF;AADoB,CAAlB,CAAf;AAMAhB,aAAa,CAACiB,sBAAd,CACE,yBADF,EAEEN,uBAFF;AAKAO,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,uBAAuB,EAAEA;AADV,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {NativeModules, StyleSheet, View} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nconst {Recording} = NativeModules;\n\nlet that;\n\nclass CatalystRootViewTestApp extends React.Component {\n  state = {\n    height: 300,\n  };\n\n  componentDidMount() {\n    that = this;\n  }\n\n  componentWillUnmount() {\n    Recording.record('RootComponentWillUnmount');\n  }\n\n  render() {\n    return (\n      <View\n        collapsable={false}\n        style={[styles.container, {height: this.state.height}]}\n      />\n    );\n  }\n}\n\nconst ReactRootViewTestModule = {\n  setHeight: function(height) {\n    that.setState({height: height});\n  },\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n  },\n});\n\nBatchedBridge.registerCallableModule(\n  'ReactRootViewTestModule',\n  ReactRootViewTestModule,\n);\n\nmodule.exports = {\n  CatalystRootViewTestApp: CatalystRootViewTestApp,\n};\n"]},"metadata":{},"sourceType":"script"}