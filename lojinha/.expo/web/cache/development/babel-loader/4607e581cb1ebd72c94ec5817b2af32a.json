{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.projectConfig = projectConfig;\nexports.dependencyConfig = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _findProject = _interopRequireDefault(require(\"./findProject\"));\n\nvar _findPodfilePath = _interopRequireDefault(require(\"./findPodfilePath\"));\n\nvar _findPodspec = _interopRequireDefault(require(\"./findPodspec\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar memoizedFindProject = (0, _lodash().memoize)(_findProject.default);\n\nvar mapSharedLibaries = function mapSharedLibaries(libraries) {\n  return libraries.map(function (name) {\n    if (_path().default.extname(name)) {\n      return name;\n    }\n\n    return name + (name.indexOf('lib') === 0 ? '.tbd' : '.framework');\n  });\n};\n\nfunction projectConfig(folder, userConfig) {\n  if (!userConfig) {\n    return;\n  }\n\n  var project = userConfig.project || memoizedFindProject(folder);\n\n  if (!project) {\n    return null;\n  }\n\n  var projectPath = _path().default.join(folder, project);\n\n  var sourceDir = _path().default.dirname(projectPath);\n\n  return {\n    sourceDir: sourceDir,\n    folder: folder,\n    pbxprojPath: _path().default.join(projectPath, 'project.pbxproj'),\n    podfile: (0, _findPodfilePath.default)(projectPath),\n    podspecPath: userConfig.podspecPath || (0, _findPodspec.default)(folder) || (0, _findPodspec.default)(sourceDir),\n    projectPath: projectPath,\n    projectName: _path().default.basename(projectPath),\n    libraryFolder: userConfig.libraryFolder || 'Libraries',\n    sharedLibraries: mapSharedLibaries(userConfig.sharedLibraries || []),\n    plist: userConfig.plist || [],\n    scriptPhases: userConfig.scriptPhases || []\n  };\n}\n\nvar dependencyConfig = projectConfig;\nexports.dependencyConfig = dependencyConfig;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/config/index.js"],"names":["Object","defineProperty","exports","value","projectConfig","dependencyConfig","_path","data","_interopRequireDefault","require","_lodash","_findProject","_findPodfilePath","_findPodspec","obj","__esModule","default","memoizedFindProject","memoize","mapSharedLibaries","libraries","map","name","extname","indexOf","folder","userConfig","project","projectPath","join","sourceDir","dirname","pbxprojPath","podfile","podspecPath","projectName","basename","libraryFolder","sharedLibraries","plist","scriptPhases"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.projectConfig = projectConfig;\nexports.dependencyConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _findProject = _interopRequireDefault(require(\"./findProject\"));\n\nvar _findPodfilePath = _interopRequireDefault(require(\"./findPodfilePath\"));\n\nvar _findPodspec = _interopRequireDefault(require(\"./findPodspec\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst memoizedFindProject = (0, _lodash().memoize)(_findProject.default);\n/**\n * For libraries specified without an extension, add '.tbd' for those that\n * start with 'lib' and '.framework' to the rest.\n */\n\nconst mapSharedLibaries = libraries => libraries.map(name => {\n  if (_path().default.extname(name)) {\n    return name;\n  }\n\n  return name + (name.indexOf('lib') === 0 ? '.tbd' : '.framework');\n});\n/**\n * Returns project config by analyzing given folder and applying some user defaults\n * when constructing final object\n */\n\n\nfunction projectConfig(folder, userConfig) {\n  if (!userConfig) {\n    return;\n  }\n\n  const project = userConfig.project || memoizedFindProject(folder);\n  /**\n   * No iOS config found here\n   */\n\n  if (!project) {\n    return null;\n  }\n\n  const projectPath = _path().default.join(folder, project);\n\n  const sourceDir = _path().default.dirname(projectPath);\n\n  return {\n    sourceDir,\n    folder,\n    pbxprojPath: _path().default.join(projectPath, 'project.pbxproj'),\n    podfile: (0, _findPodfilePath.default)(projectPath),\n    podspecPath: userConfig.podspecPath || // podspecs are usually placed in the root dir of the library or in the\n    // iOS project path\n    (0, _findPodspec.default)(folder) || (0, _findPodspec.default)(sourceDir),\n    projectPath,\n    projectName: _path().default.basename(projectPath),\n    libraryFolder: userConfig.libraryFolder || 'Libraries',\n    sharedLibraries: mapSharedLibaries(userConfig.sharedLibraries || []),\n    plist: userConfig.plist || [],\n    scriptPhases: userConfig.scriptPhases || []\n  };\n}\n\nconst dependencyConfig = projectConfig;\nexports.dependencyConfig = dependencyConfig;\n\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}