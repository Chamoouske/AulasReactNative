{"ast":null,"code":"var inspect = function () {\n  function inspect(obj, opts) {\n    var ctx = {\n      seen: [],\n      formatValueCalls: 0,\n      stylize: stylizeNoColor\n    };\n    return formatValue(ctx, obj, opts.depth);\n  }\n\n  function stylizeNoColor(str, styleType) {\n    return str;\n  }\n\n  function arrayToHash(array) {\n    var hash = {};\n    array.forEach(function (val, idx) {\n      hash[val] = true;\n    });\n    return hash;\n  }\n\n  function formatValue(ctx, value, recurseTimes) {\n    ctx.formatValueCalls++;\n\n    if (ctx.formatValueCalls > 200) {\n      return \"[TOO BIG formatValueCalls \" + ctx.formatValueCalls + \" exceeded limit of 200]\";\n    }\n\n    var primitive = formatPrimitive(ctx, value);\n\n    if (primitive) {\n      return primitive;\n    }\n\n    var keys = Object.keys(value);\n    var visibleKeys = arrayToHash(keys);\n\n    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n      return formatError(value);\n    }\n\n    if (keys.length === 0) {\n      if (isFunction(value)) {\n        var name = value.name ? ': ' + value.name : '';\n        return ctx.stylize('[Function' + name + ']', 'special');\n      }\n\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      }\n\n      if (isDate(value)) {\n        return ctx.stylize(Date.prototype.toString.call(value), 'date');\n      }\n\n      if (isError(value)) {\n        return formatError(value);\n      }\n    }\n\n    var base = '',\n        array = false,\n        braces = ['{', '}'];\n\n    if (isArray(value)) {\n      array = true;\n      braces = ['[', ']'];\n    }\n\n    if (isFunction(value)) {\n      var n = value.name ? ': ' + value.name : '';\n      base = ' [Function' + n + ']';\n    }\n\n    if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value);\n    }\n\n    if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value);\n    }\n\n    if (isError(value)) {\n      base = ' ' + formatError(value);\n    }\n\n    if (keys.length === 0 && (!array || value.length == 0)) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      } else {\n        return ctx.stylize('[Object]', 'special');\n      }\n    }\n\n    ctx.seen.push(value);\n    var output;\n\n    if (array) {\n      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    } else {\n      output = keys.map(function (key) {\n        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n      });\n    }\n\n    ctx.seen.pop();\n    return reduceToSingleString(output, base, braces);\n  }\n\n  function formatPrimitive(ctx, value) {\n    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n    if (isString(value)) {\n      var simple = \"'\" + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";\n      return ctx.stylize(simple, 'string');\n    }\n\n    if (isNumber(value)) return ctx.stylize('' + value, 'number');\n    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n    if (isNull(value)) return ctx.stylize('null', 'null');\n  }\n\n  function formatError(value) {\n    return '[' + Error.prototype.toString.call(value) + ']';\n  }\n\n  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    var output = [];\n\n    for (var i = 0, l = value.length; i < l; ++i) {\n      if (hasOwnProperty(value, String(i))) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n      } else {\n        output.push('');\n      }\n    }\n\n    keys.forEach(function (key) {\n      if (!key.match(/^\\d+$/)) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n      }\n    });\n    return output;\n  }\n\n  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    var name, str, desc;\n    desc = Object.getOwnPropertyDescriptor(value, key) || {\n      value: value[key]\n    };\n\n    if (desc.get) {\n      if (desc.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (desc.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n\n    if (!hasOwnProperty(visibleKeys, key)) {\n      name = '[' + key + ']';\n    }\n\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        if (isNull(recurseTimes)) {\n          str = formatValue(ctx, desc.value, null);\n        } else {\n          str = formatValue(ctx, desc.value, recurseTimes - 1);\n        }\n\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str.split('\\n').map(function (line) {\n              return '  ' + line;\n            }).join('\\n').substr(2);\n          } else {\n            str = '\\n' + str.split('\\n').map(function (line) {\n              return '   ' + line;\n            }).join('\\n');\n          }\n        }\n      } else {\n        str = ctx.stylize('[Circular]', 'special');\n      }\n    }\n\n    if (isUndefined(name)) {\n      if (array && key.match(/^\\d+$/)) {\n        return str;\n      }\n\n      name = JSON.stringify('' + key);\n\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n        name = ctx.stylize(name, 'name');\n      } else {\n        name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n        name = ctx.stylize(name, 'string');\n      }\n    }\n\n    return name + ': ' + str;\n  }\n\n  function reduceToSingleString(output, base, braces) {\n    var numLinesEst = 0;\n    var length = output.reduce(function (prev, cur) {\n      numLinesEst++;\n      if (cur.indexOf('\\n') >= 0) numLinesEst++;\n      return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n    }, 0);\n\n    if (length > 60) {\n      return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n    }\n\n    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n  }\n\n  function isArray(ar) {\n    return Array.isArray(ar);\n  }\n\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n\n  function isNull(arg) {\n    return arg === null;\n  }\n\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n\n  function isString(arg) {\n    return typeof arg === 'string';\n  }\n\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n\n  function isRegExp(re) {\n    return isObject(re) && objectToString(re) === '[object RegExp]';\n  }\n\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  function isDate(d) {\n    return isObject(d) && objectToString(d) === '[object Date]';\n  }\n\n  function isError(e) {\n    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n  }\n\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  }\n\n  return inspect;\n}();\n\nvar OBJECT_COLUMN_NAME = '(index)';\nvar LOG_LEVELS = {\n  trace: 0,\n  info: 1,\n  warn: 2,\n  error: 3\n};\nvar INSPECTOR_LEVELS = [];\nINSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';\nINSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';\nINSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';\nINSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';\nvar INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;\n\nfunction getNativeLogFunction(level) {\n  return function () {\n    var str;\n\n    if (arguments.length === 1 && typeof arguments[0] === 'string') {\n      str = arguments[0];\n    } else {\n      str = Array.prototype.map.call(arguments, function (arg) {\n        return inspect(arg, {\n          depth: 2\n        });\n      }).join(', ');\n    }\n\n    var firstArg = arguments[0];\n    var logLevel = level;\n\n    if (typeof firstArg === 'string' && firstArg.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {\n      logLevel = LOG_LEVELS.warn;\n    }\n\n    if (global.__inspectorLog) {\n      global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);\n    }\n\n    if (groupStack.length) {\n      str = groupFormat('', str);\n    }\n\n    global.nativeLoggingHook(str, logLevel);\n  };\n}\n\nfunction repeat(element, n) {\n  return Array.apply(null, Array(n)).map(function () {\n    return element;\n  });\n}\n\nfunction consoleTablePolyfill(rows) {\n  if (!Array.isArray(rows)) {\n    var data = rows;\n    rows = [];\n\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        var row = data[key];\n        row[OBJECT_COLUMN_NAME] = key;\n        rows.push(row);\n      }\n    }\n  }\n\n  if (rows.length === 0) {\n    global.nativeLoggingHook('', LOG_LEVELS.info);\n    return;\n  }\n\n  var columns = Object.keys(rows[0]).sort();\n  var stringRows = [];\n  var columnWidths = [];\n  columns.forEach(function (k, i) {\n    columnWidths[i] = k.length;\n\n    for (var j = 0; j < rows.length; j++) {\n      var cellStr = (rows[j][k] || '?').toString();\n      stringRows[j] = stringRows[j] || [];\n      stringRows[j][i] = cellStr;\n      columnWidths[i] = Math.max(columnWidths[i], cellStr.length);\n    }\n  });\n\n  function joinRow(row, space) {\n    var cells = row.map(function (cell, i) {\n      var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');\n      return cell + extraSpaces;\n    });\n    space = space || ' ';\n    return cells.join(space + '|' + space);\n  }\n\n  var separators = columnWidths.map(function (columnWidth) {\n    return repeat('-', columnWidth).join('');\n  });\n  var separatorRow = joinRow(separators, '-');\n  var header = joinRow(columns);\n  var table = [header, separatorRow];\n\n  for (var i = 0; i < rows.length; i++) {\n    table.push(joinRow(stringRows[i]));\n  }\n\n  global.nativeLoggingHook('\\n' + table.join('\\n'), LOG_LEVELS.info);\n}\n\nvar GROUP_PAD = \"\\u2502\";\nvar GROUP_OPEN = \"\\u2510\";\nvar GROUP_CLOSE = \"\\u2518\";\nvar groupStack = [];\n\nfunction groupFormat(prefix, msg) {\n  return groupStack.join('') + prefix + ' ' + (msg || '');\n}\n\nfunction consoleGroupPolyfill(label) {\n  global.nativeLoggingHook(groupFormat(GROUP_OPEN, label), LOG_LEVELS.info);\n  groupStack.push(GROUP_PAD);\n}\n\nfunction consoleGroupCollapsedPolyfill(label) {\n  global.nativeLoggingHook(groupFormat(GROUP_CLOSE, label), LOG_LEVELS.info);\n  groupStack.push(GROUP_PAD);\n}\n\nfunction consoleGroupEndPolyfill() {\n  groupStack.pop();\n  global.nativeLoggingHook(groupFormat(GROUP_CLOSE), LOG_LEVELS.info);\n}\n\nfunction consoleAssertPolyfill(expression, label) {\n  if (!expression) {\n    global.nativeLoggingHook('Assertion failed: ' + label, LOG_LEVELS.error);\n  }\n}\n\nif (global.nativeLoggingHook) {\n  var originalConsole = global.console;\n\n  if (__DEV__ && originalConsole) {\n    var descriptor = Object.getOwnPropertyDescriptor(global, 'console');\n\n    if (descriptor) {\n      Object.defineProperty(global, 'originalConsole', descriptor);\n    }\n  }\n\n  global.console = {\n    error: getNativeLogFunction(LOG_LEVELS.error),\n    info: getNativeLogFunction(LOG_LEVELS.info),\n    log: getNativeLogFunction(LOG_LEVELS.info),\n    warn: getNativeLogFunction(LOG_LEVELS.warn),\n    trace: getNativeLogFunction(LOG_LEVELS.trace),\n    debug: getNativeLogFunction(LOG_LEVELS.trace),\n    table: consoleTablePolyfill,\n    group: consoleGroupPolyfill,\n    groupEnd: consoleGroupEndPolyfill,\n    groupCollapsed: consoleGroupCollapsedPolyfill,\n    assert: consoleAssertPolyfill\n  };\n  Object.defineProperty(console, '_isPolyfilled', {\n    value: true,\n    enumerable: false\n  });\n\n  if (__DEV__ && originalConsole) {\n    Object.keys(console).forEach(function (methodName) {\n      var reactNativeMethod = console[methodName];\n\n      if (originalConsole[methodName]) {\n        console[methodName] = function () {\n          if (methodName === 'assert') {\n            if (!arguments[0]) {\n              originalConsole.assert.apply(originalConsole, arguments);\n            }\n          } else {\n            originalConsole[methodName].apply(originalConsole, arguments);\n          }\n\n          reactNativeMethod.apply(console, arguments);\n        };\n      }\n    });\n    ['clear', 'dir', 'dirxml', 'profile', 'profileEnd'].forEach(function (methodName) {\n      if (typeof originalConsole[methodName] === 'function') {\n        console[methodName] = function () {\n          originalConsole[methodName].apply(originalConsole, arguments);\n        };\n      }\n    });\n  }\n} else if (!global.console) {\n  function stub() {}\n\n  var log = global.print || stub;\n  global.console = {\n    debug: log,\n    error: log,\n    info: log,\n    log: log,\n    trace: log,\n    warn: log,\n    assert: function assert(expression, label) {\n      if (!expression) {\n        log('Assertion failed: ' + label);\n      }\n    },\n    clear: stub,\n    dir: stub,\n    dirxml: stub,\n    group: stub,\n    groupCollapsed: stub,\n    groupEnd: stub,\n    profile: stub,\n    profileEnd: stub,\n    table: stub\n  };\n  Object.defineProperty(console, '_isPolyfilled', {\n    value: true,\n    enumerable: false\n  });\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/polyfills/console.js"],"names":["inspect","obj","opts","ctx","seen","formatValueCalls","stylize","stylizeNoColor","formatValue","depth","str","styleType","arrayToHash","array","hash","forEach","val","idx","value","recurseTimes","primitive","formatPrimitive","keys","Object","visibleKeys","isError","indexOf","formatError","length","isFunction","name","isRegExp","RegExp","prototype","toString","call","isDate","Date","base","braces","isArray","n","toUTCString","push","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","isUndefined","isString","simple","JSON","stringify","replace","isNumber","isBoolean","isNull","Error","i","l","hasOwnProperty","String","match","desc","getOwnPropertyDescriptor","get","set","split","line","join","substr","numLinesEst","reduce","prev","cur","ar","Array","arg","isNullOrUndefined","isSymbol","re","isObject","objectToString","d","e","o","prop","OBJECT_COLUMN_NAME","LOG_LEVELS","trace","info","warn","error","INSPECTOR_LEVELS","INSPECTOR_FRAMES_TO_SKIP","__DEV__","getNativeLogFunction","level","arguments","firstArg","logLevel","slice","global","__inspectorLog","groupStack","groupFormat","nativeLoggingHook","repeat","element","apply","consoleTablePolyfill","rows","data","row","columns","sort","stringRows","columnWidths","k","j","cellStr","Math","max","joinRow","space","cells","cell","extraSpaces","separators","columnWidth","separatorRow","header","table","GROUP_PAD","GROUP_OPEN","GROUP_CLOSE","prefix","msg","consoleGroupPolyfill","label","consoleGroupCollapsedPolyfill","consoleGroupEndPolyfill","consoleAssertPolyfill","expression","originalConsole","console","descriptor","defineProperty","log","debug","group","groupEnd","groupCollapsed","assert","enumerable","methodName","reactNativeMethod","stub","print","clear","dir","dirxml","profile","profileEnd"],"mappings":"AAiBA,IAAMA,OAAO,GAAI,YAAW;AAwB1B,WAASA,OAAT,CAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC1B,QAAIC,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAE,EADE;AAERC,MAAAA,gBAAgB,EAAE,CAFV;AAGRC,MAAAA,OAAO,EAAEC;AAHD,KAAV;AAKA,WAAOC,WAAW,CAACL,GAAD,EAAMF,GAAN,EAAWC,IAAI,CAACO,KAAhB,CAAlB;AACD;;AAED,WAASF,cAAT,CAAwBG,GAAxB,EAA6BC,SAA7B,EAAwC;AACtC,WAAOD,GAAP;AACD;;AAED,WAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIC,IAAI,GAAG,EAAX;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAc,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC/BH,MAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,IAAZ;AACD,KAFD;AAIA,WAAOF,IAAP;AACD;;AAED,WAASN,WAAT,CAAqBL,GAArB,EAA0Be,KAA1B,EAAiCC,YAAjC,EAA+C;AAC7ChB,IAAAA,GAAG,CAACE,gBAAJ;;AACA,QAAIF,GAAG,CAACE,gBAAJ,GAAuB,GAA3B,EAAgC;AAC9B,4CACEF,GAAG,CAACE,gBADN;AAGD;;AAGD,QAAIe,SAAS,GAAGC,eAAe,CAAClB,GAAD,EAAMe,KAAN,CAA/B;;AACA,QAAIE,SAAJ,EAAe;AACb,aAAOA,SAAP;AACD;;AAGD,QAAIE,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,KAAZ,CAAX;AACA,QAAIM,WAAW,GAAGZ,WAAW,CAACU,IAAD,CAA7B;;AAIA,QACEG,OAAO,CAACP,KAAD,CAAP,KACCI,IAAI,CAACI,OAAL,CAAa,SAAb,KAA2B,CAA3B,IAAgCJ,IAAI,CAACI,OAAL,CAAa,aAAb,KAA+B,CADhE,CADF,EAGE;AACA,aAAOC,WAAW,CAACT,KAAD,CAAlB;AACD;;AAGD,QAAII,IAAI,CAACM,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAIC,UAAU,CAACX,KAAD,CAAd,EAAuB;AACrB,YAAIY,IAAI,GAAGZ,KAAK,CAACY,IAAN,GAAa,OAAOZ,KAAK,CAACY,IAA1B,GAAiC,EAA5C;AACA,eAAO3B,GAAG,CAACG,OAAJ,CAAY,cAAcwB,IAAd,GAAqB,GAAjC,EAAsC,SAAtC,CAAP;AACD;;AACD,UAAIC,QAAQ,CAACb,KAAD,CAAZ,EAAqB;AACnB,eAAOf,GAAG,CAACG,OAAJ,CAAY0B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,KAA/B,CAAZ,EAAmD,QAAnD,CAAP;AACD;;AACD,UAAIkB,MAAM,CAAClB,KAAD,CAAV,EAAmB;AACjB,eAAOf,GAAG,CAACG,OAAJ,CAAY+B,IAAI,CAACJ,SAAL,CAAeC,QAAf,CAAwBC,IAAxB,CAA6BjB,KAA7B,CAAZ,EAAiD,MAAjD,CAAP;AACD;;AACD,UAAIO,OAAO,CAACP,KAAD,CAAX,EAAoB;AAClB,eAAOS,WAAW,CAACT,KAAD,CAAlB;AACD;AACF;;AAED,QAAIoB,IAAI,GAAG,EAAX;AAAA,QACEzB,KAAK,GAAG,KADV;AAAA,QAEE0B,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,CAFX;;AAKA,QAAIC,OAAO,CAACtB,KAAD,CAAX,EAAoB;AAClBL,MAAAA,KAAK,GAAG,IAAR;AACA0B,MAAAA,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,CAAT;AACD;;AAGD,QAAIV,UAAU,CAACX,KAAD,CAAd,EAAuB;AACrB,UAAIuB,CAAC,GAAGvB,KAAK,CAACY,IAAN,GAAa,OAAOZ,KAAK,CAACY,IAA1B,GAAiC,EAAzC;AACAQ,MAAAA,IAAI,GAAG,eAAeG,CAAf,GAAmB,GAA1B;AACD;;AAGD,QAAIV,QAAQ,CAACb,KAAD,CAAZ,EAAqB;AACnBoB,MAAAA,IAAI,GAAG,MAAMN,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,KAA/B,CAAb;AACD;;AAGD,QAAIkB,MAAM,CAAClB,KAAD,CAAV,EAAmB;AACjBoB,MAAAA,IAAI,GAAG,MAAMD,IAAI,CAACJ,SAAL,CAAeS,WAAf,CAA2BP,IAA3B,CAAgCjB,KAAhC,CAAb;AACD;;AAGD,QAAIO,OAAO,CAACP,KAAD,CAAX,EAAoB;AAClBoB,MAAAA,IAAI,GAAG,MAAMX,WAAW,CAACT,KAAD,CAAxB;AACD;;AAED,QAAII,IAAI,CAACM,MAAL,KAAgB,CAAhB,KAAsB,CAACf,KAAD,IAAUK,KAAK,CAACU,MAAN,IAAgB,CAAhD,CAAJ,EAAwD;AACtD,aAAOW,MAAM,CAAC,CAAD,CAAN,GAAYD,IAAZ,GAAmBC,MAAM,CAAC,CAAD,CAAhC;AACD;;AAED,QAAIpB,YAAY,GAAG,CAAnB,EAAsB;AACpB,UAAIY,QAAQ,CAACb,KAAD,CAAZ,EAAqB;AACnB,eAAOf,GAAG,CAACG,OAAJ,CAAY0B,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,KAA/B,CAAZ,EAAmD,QAAnD,CAAP;AACD,OAFD,MAEO;AACL,eAAOf,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAP;AACD;AACF;;AAEDH,IAAAA,GAAG,CAACC,IAAJ,CAASuC,IAAT,CAAczB,KAAd;AAEA,QAAI0B,MAAJ;;AACA,QAAI/B,KAAJ,EAAW;AACT+B,MAAAA,MAAM,GAAGC,WAAW,CAAC1C,GAAD,EAAMe,KAAN,EAAaC,YAAb,EAA2BK,WAA3B,EAAwCF,IAAxC,CAApB;AACD,KAFD,MAEO;AACLsB,MAAAA,MAAM,GAAGtB,IAAI,CAACwB,GAAL,CAAS,UAASC,GAAT,EAAc;AAC9B,eAAOC,cAAc,CACnB7C,GADmB,EAEnBe,KAFmB,EAGnBC,YAHmB,EAInBK,WAJmB,EAKnBuB,GALmB,EAMnBlC,KANmB,CAArB;AAQD,OATQ,CAAT;AAUD;;AAEDV,IAAAA,GAAG,CAACC,IAAJ,CAAS6C,GAAT;AAEA,WAAOC,oBAAoB,CAACN,MAAD,EAASN,IAAT,EAAeC,MAAf,CAA3B;AACD;;AAED,WAASlB,eAAT,CAAyBlB,GAAzB,EAA8Be,KAA9B,EAAqC;AACnC,QAAIiC,WAAW,CAACjC,KAAD,CAAf,EAAwB,OAAOf,GAAG,CAACG,OAAJ,CAAY,WAAZ,EAAyB,WAAzB,CAAP;;AACxB,QAAI8C,QAAQ,CAAClC,KAAD,CAAZ,EAAqB;AACnB,UAAImC,MAAM,GACR,MACAC,IAAI,CAACC,SAAL,CAAerC,KAAf,EACGsC,OADH,CACW,QADX,EACqB,EADrB,EAEGA,OAFH,CAEW,IAFX,EAEiB,KAFjB,EAGGA,OAHH,CAGW,MAHX,EAGmB,GAHnB,CADA,GAKA,GANF;AAOA,aAAOrD,GAAG,CAACG,OAAJ,CAAY+C,MAAZ,EAAoB,QAApB,CAAP;AACD;;AACD,QAAII,QAAQ,CAACvC,KAAD,CAAZ,EAAqB,OAAOf,GAAG,CAACG,OAAJ,CAAY,KAAKY,KAAjB,EAAwB,QAAxB,CAAP;AACrB,QAAIwC,SAAS,CAACxC,KAAD,CAAb,EAAsB,OAAOf,GAAG,CAACG,OAAJ,CAAY,KAAKY,KAAjB,EAAwB,SAAxB,CAAP;AAEtB,QAAIyC,MAAM,CAACzC,KAAD,CAAV,EAAmB,OAAOf,GAAG,CAACG,OAAJ,CAAY,MAAZ,EAAoB,MAApB,CAAP;AACpB;;AAED,WAASqB,WAAT,CAAqBT,KAArB,EAA4B;AAC1B,WAAO,MAAM0C,KAAK,CAAC3B,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BjB,KAA9B,CAAN,GAA6C,GAApD;AACD;;AAED,WAAS2B,WAAT,CAAqB1C,GAArB,EAA0Be,KAA1B,EAAiCC,YAAjC,EAA+CK,WAA/C,EAA4DF,IAA5D,EAAkE;AAChE,QAAIsB,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIiB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG5C,KAAK,CAACU,MAA1B,EAAkCiC,CAAC,GAAGC,CAAtC,EAAyC,EAAED,CAA3C,EAA8C;AAC5C,UAAIE,cAAc,CAAC7C,KAAD,EAAQ8C,MAAM,CAACH,CAAD,CAAd,CAAlB,EAAsC;AACpCjB,QAAAA,MAAM,CAACD,IAAP,CACEK,cAAc,CACZ7C,GADY,EAEZe,KAFY,EAGZC,YAHY,EAIZK,WAJY,EAKZwC,MAAM,CAACH,CAAD,CALM,EAMZ,IANY,CADhB;AAUD,OAXD,MAWO;AACLjB,QAAAA,MAAM,CAACD,IAAP,CAAY,EAAZ;AACD;AACF;;AACDrB,IAAAA,IAAI,CAACP,OAAL,CAAa,UAASgC,GAAT,EAAc;AACzB,UAAI,CAACA,GAAG,CAACkB,KAAJ,CAAU,OAAV,CAAL,EAAyB;AACvBrB,QAAAA,MAAM,CAACD,IAAP,CACEK,cAAc,CAAC7C,GAAD,EAAMe,KAAN,EAAaC,YAAb,EAA2BK,WAA3B,EAAwCuB,GAAxC,EAA6C,IAA7C,CADhB;AAGD;AACF,KAND;AAOA,WAAOH,MAAP;AACD;;AAED,WAASI,cAAT,CAAwB7C,GAAxB,EAA6Be,KAA7B,EAAoCC,YAApC,EAAkDK,WAAlD,EAA+DuB,GAA/D,EAAoElC,KAApE,EAA2E;AACzE,QAAIiB,IAAJ,EAAUpB,GAAV,EAAewD,IAAf;AACAA,IAAAA,IAAI,GAAG3C,MAAM,CAAC4C,wBAAP,CAAgCjD,KAAhC,EAAuC6B,GAAvC,KAA+C;AAAC7B,MAAAA,KAAK,EAAEA,KAAK,CAAC6B,GAAD;AAAb,KAAtD;;AACA,QAAImB,IAAI,CAACE,GAAT,EAAc;AACZ,UAAIF,IAAI,CAACG,GAAT,EAAc;AACZ3D,QAAAA,GAAG,GAAGP,GAAG,CAACG,OAAJ,CAAY,iBAAZ,EAA+B,SAA/B,CAAN;AACD,OAFD,MAEO;AACLI,QAAAA,GAAG,GAAGP,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAN;AACD;AACF,KAND,MAMO;AACL,UAAI4D,IAAI,CAACG,GAAT,EAAc;AACZ3D,QAAAA,GAAG,GAAGP,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,SAAxB,CAAN;AACD;AACF;;AACD,QAAI,CAACyD,cAAc,CAACvC,WAAD,EAAcuB,GAAd,CAAnB,EAAuC;AACrCjB,MAAAA,IAAI,GAAG,MAAMiB,GAAN,GAAY,GAAnB;AACD;;AACD,QAAI,CAACrC,GAAL,EAAU;AACR,UAAIP,GAAG,CAACC,IAAJ,CAASsB,OAAT,CAAiBwC,IAAI,CAAChD,KAAtB,IAA+B,CAAnC,EAAsC;AACpC,YAAIyC,MAAM,CAACxC,YAAD,CAAV,EAA0B;AACxBT,UAAAA,GAAG,GAAGF,WAAW,CAACL,GAAD,EAAM+D,IAAI,CAAChD,KAAX,EAAkB,IAAlB,CAAjB;AACD,SAFD,MAEO;AACLR,UAAAA,GAAG,GAAGF,WAAW,CAACL,GAAD,EAAM+D,IAAI,CAAChD,KAAX,EAAkBC,YAAY,GAAG,CAAjC,CAAjB;AACD;;AACD,YAAIT,GAAG,CAACgB,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAAzB,EAA4B;AAC1B,cAAIb,KAAJ,EAAW;AACTH,YAAAA,GAAG,GAAGA,GAAG,CACN4D,KADG,CACG,IADH,EAEHxB,GAFG,CAEC,UAASyB,IAAT,EAAe;AAClB,qBAAO,OAAOA,IAAd;AACD,aAJG,EAKHC,IALG,CAKE,IALF,EAMHC,MANG,CAMI,CANJ,CAAN;AAOD,WARD,MAQO;AACL/D,YAAAA,GAAG,GACD,OACAA,GAAG,CACA4D,KADH,CACS,IADT,EAEGxB,GAFH,CAEO,UAASyB,IAAT,EAAe;AAClB,qBAAO,QAAQA,IAAf;AACD,aAJH,EAKGC,IALH,CAKQ,IALR,CAFF;AAQD;AACF;AACF,OA1BD,MA0BO;AACL9D,QAAAA,GAAG,GAAGP,GAAG,CAACG,OAAJ,CAAY,YAAZ,EAA0B,SAA1B,CAAN;AACD;AACF;;AACD,QAAI6C,WAAW,CAACrB,IAAD,CAAf,EAAuB;AACrB,UAAIjB,KAAK,IAAIkC,GAAG,CAACkB,KAAJ,CAAU,OAAV,CAAb,EAAiC;AAC/B,eAAOvD,GAAP;AACD;;AACDoB,MAAAA,IAAI,GAAGwB,IAAI,CAACC,SAAL,CAAe,KAAKR,GAApB,CAAP;;AACA,UAAIjB,IAAI,CAACmC,KAAL,CAAW,8BAAX,CAAJ,EAAgD;AAC9CnC,QAAAA,IAAI,GAAGA,IAAI,CAAC2C,MAAL,CAAY,CAAZ,EAAe3C,IAAI,CAACF,MAAL,GAAc,CAA7B,CAAP;AACAE,QAAAA,IAAI,GAAG3B,GAAG,CAACG,OAAJ,CAAYwB,IAAZ,EAAkB,MAAlB,CAAP;AACD,OAHD,MAGO;AACLA,QAAAA,IAAI,GAAGA,IAAI,CACR0B,OADI,CACI,IADJ,EACU,KADV,EAEJA,OAFI,CAEI,MAFJ,EAEY,GAFZ,EAGJA,OAHI,CAGI,UAHJ,EAGgB,GAHhB,CAAP;AAIA1B,QAAAA,IAAI,GAAG3B,GAAG,CAACG,OAAJ,CAAYwB,IAAZ,EAAkB,QAAlB,CAAP;AACD;AACF;;AAED,WAAOA,IAAI,GAAG,IAAP,GAAcpB,GAArB;AACD;;AAED,WAASwC,oBAAT,CAA8BN,MAA9B,EAAsCN,IAAtC,EAA4CC,MAA5C,EAAoD;AAClD,QAAImC,WAAW,GAAG,CAAlB;AACA,QAAI9C,MAAM,GAAGgB,MAAM,CAAC+B,MAAP,CAAc,UAASC,IAAT,EAAeC,GAAf,EAAoB;AAC7CH,MAAAA,WAAW;AACX,UAAIG,GAAG,CAACnD,OAAJ,CAAY,IAAZ,KAAqB,CAAzB,EAA4BgD,WAAW;AACvC,aAAOE,IAAI,GAAGC,GAAG,CAACrB,OAAJ,CAAY,iBAAZ,EAA+B,EAA/B,EAAmC5B,MAA1C,GAAmD,CAA1D;AACD,KAJY,EAIV,CAJU,CAAb;;AAMA,QAAIA,MAAM,GAAG,EAAb,EAAiB;AACf,aACEW,MAAM,CAAC,CAAD,CAAN,IACCD,IAAI,KAAK,EAAT,GAAc,EAAd,GAAmBA,IAAI,GAAG,KAD3B,IAEA,GAFA,GAGAM,MAAM,CAAC4B,IAAP,CAAY,OAAZ,CAHA,GAIA,GAJA,GAKAjC,MAAM,CAAC,CAAD,CANR;AAQD;;AAED,WAAOA,MAAM,CAAC,CAAD,CAAN,GAAYD,IAAZ,GAAmB,GAAnB,GAAyBM,MAAM,CAAC4B,IAAP,CAAY,IAAZ,CAAzB,GAA6C,GAA7C,GAAmDjC,MAAM,CAAC,CAAD,CAAhE;AACD;;AAID,WAASC,OAAT,CAAiBsC,EAAjB,EAAqB;AACnB,WAAOC,KAAK,CAACvC,OAAN,CAAcsC,EAAd,CAAP;AACD;;AAED,WAASpB,SAAT,CAAmBsB,GAAnB,EAAwB;AACtB,WAAO,OAAOA,GAAP,KAAe,SAAtB;AACD;;AAED,WAASrB,MAAT,CAAgBqB,GAAhB,EAAqB;AACnB,WAAOA,GAAG,KAAK,IAAf;AACD;;AAED,WAASC,iBAAT,CAA2BD,GAA3B,EAAgC;AAC9B,WAAOA,GAAG,IAAI,IAAd;AACD;;AAED,WAASvB,QAAT,CAAkBuB,GAAlB,EAAuB;AACrB,WAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,WAAS5B,QAAT,CAAkB4B,GAAlB,EAAuB;AACrB,WAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,WAASE,QAAT,CAAkBF,GAAlB,EAAuB;AACrB,WAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAED,WAAS7B,WAAT,CAAqB6B,GAArB,EAA0B;AACxB,WAAOA,GAAG,KAAK,KAAK,CAApB;AACD;;AAED,WAASjD,QAAT,CAAkBoD,EAAlB,EAAsB;AACpB,WAAOC,QAAQ,CAACD,EAAD,CAAR,IAAgBE,cAAc,CAACF,EAAD,CAAd,KAAuB,iBAA9C;AACD;;AAED,WAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACrB,WAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;AACD;;AAED,WAAS5C,MAAT,CAAgBkD,CAAhB,EAAmB;AACjB,WAAOF,QAAQ,CAACE,CAAD,CAAR,IAAeD,cAAc,CAACC,CAAD,CAAd,KAAsB,eAA5C;AACD;;AAED,WAAS7D,OAAT,CAAiB8D,CAAjB,EAAoB;AAClB,WACEH,QAAQ,CAACG,CAAD,CAAR,KACCF,cAAc,CAACE,CAAD,CAAd,KAAsB,gBAAtB,IAA0CA,CAAC,YAAY3B,KADxD,CADF;AAID;;AAED,WAAS/B,UAAT,CAAoBmD,GAApB,EAAyB;AACvB,WAAO,OAAOA,GAAP,KAAe,UAAtB;AACD;;AAED,WAASK,cAAT,CAAwBG,CAAxB,EAA2B;AACzB,WAAOjE,MAAM,CAACU,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BqD,CAA/B,CAAP;AACD;;AAED,WAASzB,cAAT,CAAwB9D,GAAxB,EAA6BwF,IAA7B,EAAmC;AACjC,WAAOlE,MAAM,CAACU,SAAP,CAAiB8B,cAAjB,CAAgC5B,IAAhC,CAAqClC,GAArC,EAA0CwF,IAA1C,CAAP;AACD;;AAED,SAAOzF,OAAP;AACD,CA3We,EAAhB;;AA6WA,IAAM0F,kBAAkB,GAAG,SAA3B;AACA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,IAAI,EAAE,CAFW;AAGjBC,EAAAA,IAAI,EAAE,CAHW;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAAnB;AAMA,IAAMC,gBAAgB,GAAG,EAAzB;AACAA,gBAAgB,CAACL,UAAU,CAACC,KAAZ,CAAhB,GAAqC,OAArC;AACAI,gBAAgB,CAACL,UAAU,CAACE,IAAZ,CAAhB,GAAoC,KAApC;AACAG,gBAAgB,CAACL,UAAU,CAACG,IAAZ,CAAhB,GAAoC,SAApC;AACAE,gBAAgB,CAACL,UAAU,CAACI,KAAZ,CAAhB,GAAqC,OAArC;AAIA,IAAME,wBAAwB,GAAGC,OAAO,GAAG,CAAH,GAAO,CAA/C;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,SAAO,YAAW;AAChB,QAAI1F,GAAJ;;AACA,QAAI2F,SAAS,CAACzE,MAAV,KAAqB,CAArB,IAA0B,OAAOyE,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAAtD,EAAgE;AAC9D3F,MAAAA,GAAG,GAAG2F,SAAS,CAAC,CAAD,CAAf;AACD,KAFD,MAEO;AACL3F,MAAAA,GAAG,GAAGqE,KAAK,CAAC9C,SAAN,CAAgBa,GAAhB,CACHX,IADG,CACEkE,SADF,EACa,UAASrB,GAAT,EAAc;AAC7B,eAAOhF,OAAO,CAACgF,GAAD,EAAM;AAACvE,UAAAA,KAAK,EAAE;AAAR,SAAN,CAAd;AACD,OAHG,EAIH+D,IAJG,CAIE,IAJF,CAAN;AAKD;;AAQD,QAAM8B,QAAQ,GAAGD,SAAS,CAAC,CAAD,CAA1B;AAEA,QAAIE,QAAQ,GAAGH,KAAf;;AACA,QACE,OAAOE,QAAP,KAAoB,QAApB,IACAA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,CAAlB,MAAyB,WADzB,IAEAD,QAAQ,IAAIZ,UAAU,CAACI,KAHzB,EAIE;AAIAQ,MAAAA,QAAQ,GAAGZ,UAAU,CAACG,IAAtB;AACD;;AACD,QAAIW,MAAM,CAACC,cAAX,EAA2B;AACzBD,MAAAA,MAAM,CAACC,cAAP,CACEV,gBAAgB,CAACO,QAAD,CADlB,EAEE7F,GAFF,EAGE,GAAG8F,KAAH,CAASrE,IAAT,CAAckE,SAAd,CAHF,EAIEJ,wBAJF;AAMD;;AACD,QAAIU,UAAU,CAAC/E,MAAf,EAAuB;AACrBlB,MAAAA,GAAG,GAAGkG,WAAW,CAAC,EAAD,EAAKlG,GAAL,CAAjB;AACD;;AACD+F,IAAAA,MAAM,CAACI,iBAAP,CAAyBnG,GAAzB,EAA8B6F,QAA9B;AACD,GA3CD;AA4CD;;AAED,SAASO,MAAT,CAAgBC,OAAhB,EAAyBtE,CAAzB,EAA4B;AAC1B,SAAOsC,KAAK,CAACiC,KAAN,CAAY,IAAZ,EAAkBjC,KAAK,CAACtC,CAAD,CAAvB,EAA4BK,GAA5B,CAAgC,YAAW;AAChD,WAAOiE,OAAP;AACD,GAFM,CAAP;AAGD;;AAED,SAASE,oBAAT,CAA8BC,IAA9B,EAAoC;AAElC,MAAI,CAACnC,KAAK,CAACvC,OAAN,CAAc0E,IAAd,CAAL,EAA0B;AACxB,QAAIC,IAAI,GAAGD,IAAX;AACAA,IAAAA,IAAI,GAAG,EAAP;;AACA,SAAK,IAAInE,GAAT,IAAgBoE,IAAhB,EAAsB;AACpB,UAAIA,IAAI,CAACpD,cAAL,CAAoBhB,GAApB,CAAJ,EAA8B;AAC5B,YAAIqE,GAAG,GAAGD,IAAI,CAACpE,GAAD,CAAd;AACAqE,QAAAA,GAAG,CAAC1B,kBAAD,CAAH,GAA0B3C,GAA1B;AACAmE,QAAAA,IAAI,CAACvE,IAAL,CAAUyE,GAAV;AACD;AACF;AACF;;AACD,MAAIF,IAAI,CAACtF,MAAL,KAAgB,CAApB,EAAuB;AACrB6E,IAAAA,MAAM,CAACI,iBAAP,CAAyB,EAAzB,EAA6BlB,UAAU,CAACE,IAAxC;AACA;AACD;;AAED,MAAIwB,OAAO,GAAG9F,MAAM,CAACD,IAAP,CAAY4F,IAAI,CAAC,CAAD,CAAhB,EAAqBI,IAArB,EAAd;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,YAAY,GAAG,EAAnB;AAIAH,EAAAA,OAAO,CAACtG,OAAR,CAAgB,UAAS0G,CAAT,EAAY5D,CAAZ,EAAe;AAC7B2D,IAAAA,YAAY,CAAC3D,CAAD,CAAZ,GAAkB4D,CAAC,CAAC7F,MAApB;;AACA,SAAK,IAAI8F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACtF,MAAzB,EAAiC8F,CAAC,EAAlC,EAAsC;AACpC,UAAIC,OAAO,GAAG,CAACT,IAAI,CAACQ,CAAD,CAAJ,CAAQD,CAAR,KAAc,GAAf,EAAoBvF,QAApB,EAAd;AACAqF,MAAAA,UAAU,CAACG,CAAD,CAAV,GAAgBH,UAAU,CAACG,CAAD,CAAV,IAAiB,EAAjC;AACAH,MAAAA,UAAU,CAACG,CAAD,CAAV,CAAc7D,CAAd,IAAmB8D,OAAnB;AACAH,MAAAA,YAAY,CAAC3D,CAAD,CAAZ,GAAkB+D,IAAI,CAACC,GAAL,CAASL,YAAY,CAAC3D,CAAD,CAArB,EAA0B8D,OAAO,CAAC/F,MAAlC,CAAlB;AACD;AACF,GARD;;AAYA,WAASkG,OAAT,CAAiBV,GAAjB,EAAsBW,KAAtB,EAA6B;AAC3B,QAAIC,KAAK,GAAGZ,GAAG,CAACtE,GAAJ,CAAQ,UAASmF,IAAT,EAAepE,CAAf,EAAkB;AACpC,UAAIqE,WAAW,GAAGpB,MAAM,CAAC,GAAD,EAAMU,YAAY,CAAC3D,CAAD,CAAZ,GAAkBoE,IAAI,CAACrG,MAA7B,CAAN,CAA2C4C,IAA3C,CAAgD,EAAhD,CAAlB;AACA,aAAOyD,IAAI,GAAGC,WAAd;AACD,KAHW,CAAZ;AAIAH,IAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;AACA,WAAOC,KAAK,CAACxD,IAAN,CAAWuD,KAAK,GAAG,GAAR,GAAcA,KAAzB,CAAP;AACD;;AAED,MAAII,UAAU,GAAGX,YAAY,CAAC1E,GAAb,CAAiB,UAASsF,WAAT,EAAsB;AACtD,WAAOtB,MAAM,CAAC,GAAD,EAAMsB,WAAN,CAAN,CAAyB5D,IAAzB,CAA8B,EAA9B,CAAP;AACD,GAFgB,CAAjB;AAGA,MAAI6D,YAAY,GAAGP,OAAO,CAACK,UAAD,EAAa,GAAb,CAA1B;AACA,MAAIG,MAAM,GAAGR,OAAO,CAACT,OAAD,CAApB;AACA,MAAIkB,KAAK,GAAG,CAACD,MAAD,EAASD,YAAT,CAAZ;;AAEA,OAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,IAAI,CAACtF,MAAzB,EAAiCiC,CAAC,EAAlC,EAAsC;AACpC0E,IAAAA,KAAK,CAAC5F,IAAN,CAAWmF,OAAO,CAACP,UAAU,CAAC1D,CAAD,CAAX,CAAlB;AACD;;AAMD4C,EAAAA,MAAM,CAACI,iBAAP,CAAyB,OAAO0B,KAAK,CAAC/D,IAAN,CAAW,IAAX,CAAhC,EAAkDmB,UAAU,CAACE,IAA7D;AACD;;AAED,IAAM2C,SAAS,GAAG,QAAlB;AACA,IAAMC,UAAU,GAAG,QAAnB;AACA,IAAMC,WAAW,GAAG,QAApB;AAEA,IAAM/B,UAAU,GAAG,EAAnB;;AAEA,SAASC,WAAT,CAAqB+B,MAArB,EAA6BC,GAA7B,EAAkC;AAEhC,SAAOjC,UAAU,CAACnC,IAAX,CAAgB,EAAhB,IAAsBmE,MAAtB,GAA+B,GAA/B,IAAsCC,GAAG,IAAI,EAA7C,CAAP;AACD;;AAED,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnCrC,EAAAA,MAAM,CAACI,iBAAP,CAAyBD,WAAW,CAAC6B,UAAD,EAAaK,KAAb,CAApC,EAAyDnD,UAAU,CAACE,IAApE;AACAc,EAAAA,UAAU,CAAChE,IAAX,CAAgB6F,SAAhB;AACD;;AAED,SAASO,6BAAT,CAAuCD,KAAvC,EAA8C;AAC5CrC,EAAAA,MAAM,CAACI,iBAAP,CAAyBD,WAAW,CAAC8B,WAAD,EAAcI,KAAd,CAApC,EAA0DnD,UAAU,CAACE,IAArE;AACAc,EAAAA,UAAU,CAAChE,IAAX,CAAgB6F,SAAhB;AACD;;AAED,SAASQ,uBAAT,GAAmC;AACjCrC,EAAAA,UAAU,CAAC1D,GAAX;AACAwD,EAAAA,MAAM,CAACI,iBAAP,CAAyBD,WAAW,CAAC8B,WAAD,CAApC,EAAmD/C,UAAU,CAACE,IAA9D;AACD;;AAED,SAASoD,qBAAT,CAA+BC,UAA/B,EAA2CJ,KAA3C,EAAkD;AAChD,MAAI,CAACI,UAAL,EAAiB;AACfzC,IAAAA,MAAM,CAACI,iBAAP,CAAyB,uBAAuBiC,KAAhD,EAAuDnD,UAAU,CAACI,KAAlE;AACD;AACF;;AAED,IAAIU,MAAM,CAACI,iBAAX,EAA8B;AAC5B,MAAMsC,eAAe,GAAG1C,MAAM,CAAC2C,OAA/B;;AAEA,MAAIlD,OAAO,IAAIiD,eAAf,EAAgC;AAC9B,QAAME,UAAU,GAAG9H,MAAM,CAAC4C,wBAAP,CAAgCsC,MAAhC,EAAwC,SAAxC,CAAnB;;AACA,QAAI4C,UAAJ,EAAgB;AACd9H,MAAAA,MAAM,CAAC+H,cAAP,CAAsB7C,MAAtB,EAA8B,iBAA9B,EAAiD4C,UAAjD;AACD;AACF;;AAED5C,EAAAA,MAAM,CAAC2C,OAAP,GAAiB;AACfrD,IAAAA,KAAK,EAAEI,oBAAoB,CAACR,UAAU,CAACI,KAAZ,CADZ;AAEfF,IAAAA,IAAI,EAAEM,oBAAoB,CAACR,UAAU,CAACE,IAAZ,CAFX;AAGf0D,IAAAA,GAAG,EAAEpD,oBAAoB,CAACR,UAAU,CAACE,IAAZ,CAHV;AAIfC,IAAAA,IAAI,EAAEK,oBAAoB,CAACR,UAAU,CAACG,IAAZ,CAJX;AAKfF,IAAAA,KAAK,EAAEO,oBAAoB,CAACR,UAAU,CAACC,KAAZ,CALZ;AAMf4D,IAAAA,KAAK,EAAErD,oBAAoB,CAACR,UAAU,CAACC,KAAZ,CANZ;AAOf2C,IAAAA,KAAK,EAAEtB,oBAPQ;AAQfwC,IAAAA,KAAK,EAAEZ,oBARQ;AASfa,IAAAA,QAAQ,EAAEV,uBATK;AAUfW,IAAAA,cAAc,EAAEZ,6BAVD;AAWfa,IAAAA,MAAM,EAAEX;AAXO,GAAjB;AAcA1H,EAAAA,MAAM,CAAC+H,cAAP,CAAsBF,OAAtB,EAA+B,eAA/B,EAAgD;AAC9ClI,IAAAA,KAAK,EAAE,IADuC;AAE9C2I,IAAAA,UAAU,EAAE;AAFkC,GAAhD;;AAQA,MAAI3D,OAAO,IAAIiD,eAAf,EAAgC;AAC9B5H,IAAAA,MAAM,CAACD,IAAP,CAAY8H,OAAZ,EAAqBrI,OAArB,CAA6B,UAAA+I,UAAU,EAAI;AACzC,UAAMC,iBAAiB,GAAGX,OAAO,CAACU,UAAD,CAAjC;;AACA,UAAIX,eAAe,CAACW,UAAD,CAAnB,EAAiC;AAC/BV,QAAAA,OAAO,CAACU,UAAD,CAAP,GAAsB,YAAW;AAG/B,cAAIA,UAAU,KAAK,QAAnB,EAA6B;AAC3B,gBAAI,CAACzD,SAAS,CAAC,CAAD,CAAd,EAAmB;AACjB8C,cAAAA,eAAe,CAACS,MAAhB,OAAAT,eAAe,EAAW9C,SAAX,CAAf;AACD;AACF,WAJD,MAIO;AACL8C,YAAAA,eAAe,CAACW,UAAD,CAAf,OAAAX,eAAe,EAAgB9C,SAAhB,CAAf;AACD;;AACD0D,UAAAA,iBAAiB,CAAC/C,KAAlB,CAAwBoC,OAAxB,EAAiC/C,SAAjC;AACD,SAXD;AAYD;AACF,KAhBD;AAqBA,KAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,SAA3B,EAAsC,YAAtC,EAAoDtF,OAApD,CAA4D,UAAA+I,UAAU,EAAI;AACxE,UAAI,OAAOX,eAAe,CAACW,UAAD,CAAtB,KAAuC,UAA3C,EAAuD;AACrDV,QAAAA,OAAO,CAACU,UAAD,CAAP,GAAsB,YAAW;AAC/BX,UAAAA,eAAe,CAACW,UAAD,CAAf,OAAAX,eAAe,EAAgB9C,SAAhB,CAAf;AACD,SAFD;AAGD;AACF,KAND;AAOD;AACF,CA9DD,MA8DO,IAAI,CAACI,MAAM,CAAC2C,OAAZ,EAAqB;AAC1B,WAASY,IAAT,GAAgB,CAAE;;AAClB,MAAMT,GAAG,GAAG9C,MAAM,CAACwD,KAAP,IAAgBD,IAA5B;AAEAvD,EAAAA,MAAM,CAAC2C,OAAP,GAAiB;AACfI,IAAAA,KAAK,EAAED,GADQ;AAEfxD,IAAAA,KAAK,EAAEwD,GAFQ;AAGf1D,IAAAA,IAAI,EAAE0D,GAHS;AAIfA,IAAAA,GAAG,EAAEA,GAJU;AAKf3D,IAAAA,KAAK,EAAE2D,GALQ;AAMfzD,IAAAA,IAAI,EAAEyD,GANS;AAOfK,IAAAA,MAPe,kBAORV,UAPQ,EAOIJ,KAPJ,EAOW;AACxB,UAAI,CAACI,UAAL,EAAiB;AACfK,QAAAA,GAAG,CAAC,uBAAuBT,KAAxB,CAAH;AACD;AACF,KAXc;AAYfoB,IAAAA,KAAK,EAAEF,IAZQ;AAafG,IAAAA,GAAG,EAAEH,IAbU;AAcfI,IAAAA,MAAM,EAAEJ,IAdO;AAefP,IAAAA,KAAK,EAAEO,IAfQ;AAgBfL,IAAAA,cAAc,EAAEK,IAhBD;AAiBfN,IAAAA,QAAQ,EAAEM,IAjBK;AAkBfK,IAAAA,OAAO,EAAEL,IAlBM;AAmBfM,IAAAA,UAAU,EAAEN,IAnBG;AAoBfzB,IAAAA,KAAK,EAAEyB;AApBQ,GAAjB;AAuBAzI,EAAAA,MAAM,CAAC+H,cAAP,CAAsBF,OAAtB,EAA+B,eAA/B,EAAgD;AAC9ClI,IAAAA,KAAK,EAAE,IADuC;AAE9C2I,IAAAA,UAAU,EAAE;AAFkC,GAAhD;AAID","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @polyfill\n * @nolint\n * @format\n */\n\n/* eslint-disable no-shadow, eqeqeq, curly, no-unused-vars, no-void, no-control-regex  */\n\n/**\n * This pipes all of our console logging functions to native logging so that\n * JavaScript errors in required modules show up in Xcode via NSLog.\n */\nconst inspect = (function() {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n  //\n  // https://github.com/joyent/node/blob/master/lib/util.js\n\n  function inspect(obj, opts) {\n    var ctx = {\n      seen: [],\n      formatValueCalls: 0,\n      stylize: stylizeNoColor,\n    };\n    return formatValue(ctx, obj, opts.depth);\n  }\n\n  function stylizeNoColor(str, styleType) {\n    return str;\n  }\n\n  function arrayToHash(array) {\n    var hash = {};\n\n    array.forEach(function(val, idx) {\n      hash[val] = true;\n    });\n\n    return hash;\n  }\n\n  function formatValue(ctx, value, recurseTimes) {\n    ctx.formatValueCalls++;\n    if (ctx.formatValueCalls > 200) {\n      return `[TOO BIG formatValueCalls ${\n        ctx.formatValueCalls\n      } exceeded limit of 200]`;\n    }\n\n    // Primitive types cannot have properties\n    var primitive = formatPrimitive(ctx, value);\n    if (primitive) {\n      return primitive;\n    }\n\n    // Look up the keys of the object.\n    var keys = Object.keys(value);\n    var visibleKeys = arrayToHash(keys);\n\n    // IE doesn't make error fields non-enumerable\n    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n    if (\n      isError(value) &&\n      (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)\n    ) {\n      return formatError(value);\n    }\n\n    // Some type of object without properties can be shortcutted.\n    if (keys.length === 0) {\n      if (isFunction(value)) {\n        var name = value.name ? ': ' + value.name : '';\n        return ctx.stylize('[Function' + name + ']', 'special');\n      }\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      }\n      if (isDate(value)) {\n        return ctx.stylize(Date.prototype.toString.call(value), 'date');\n      }\n      if (isError(value)) {\n        return formatError(value);\n      }\n    }\n\n    var base = '',\n      array = false,\n      braces = ['{', '}'];\n\n    // Make Array say that they are Array\n    if (isArray(value)) {\n      array = true;\n      braces = ['[', ']'];\n    }\n\n    // Make functions say that they are functions\n    if (isFunction(value)) {\n      var n = value.name ? ': ' + value.name : '';\n      base = ' [Function' + n + ']';\n    }\n\n    // Make RegExps say that they are RegExps\n    if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value);\n    }\n\n    // Make dates with properties first say the date\n    if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value);\n    }\n\n    // Make error with message first say the error\n    if (isError(value)) {\n      base = ' ' + formatError(value);\n    }\n\n    if (keys.length === 0 && (!array || value.length == 0)) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      } else {\n        return ctx.stylize('[Object]', 'special');\n      }\n    }\n\n    ctx.seen.push(value);\n\n    var output;\n    if (array) {\n      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    } else {\n      output = keys.map(function(key) {\n        return formatProperty(\n          ctx,\n          value,\n          recurseTimes,\n          visibleKeys,\n          key,\n          array,\n        );\n      });\n    }\n\n    ctx.seen.pop();\n\n    return reduceToSingleString(output, base, braces);\n  }\n\n  function formatPrimitive(ctx, value) {\n    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n    if (isString(value)) {\n      var simple =\n        \"'\" +\n        JSON.stringify(value)\n          .replace(/^\"|\"$/g, '')\n          .replace(/'/g, \"\\\\'\")\n          .replace(/\\\\\"/g, '\"') +\n        \"'\";\n      return ctx.stylize(simple, 'string');\n    }\n    if (isNumber(value)) return ctx.stylize('' + value, 'number');\n    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n    // For some reason typeof null is \"object\", so special case here.\n    if (isNull(value)) return ctx.stylize('null', 'null');\n  }\n\n  function formatError(value) {\n    return '[' + Error.prototype.toString.call(value) + ']';\n  }\n\n  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    var output = [];\n    for (var i = 0, l = value.length; i < l; ++i) {\n      if (hasOwnProperty(value, String(i))) {\n        output.push(\n          formatProperty(\n            ctx,\n            value,\n            recurseTimes,\n            visibleKeys,\n            String(i),\n            true,\n          ),\n        );\n      } else {\n        output.push('');\n      }\n    }\n    keys.forEach(function(key) {\n      if (!key.match(/^\\d+$/)) {\n        output.push(\n          formatProperty(ctx, value, recurseTimes, visibleKeys, key, true),\n        );\n      }\n    });\n    return output;\n  }\n\n  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    var name, str, desc;\n    desc = Object.getOwnPropertyDescriptor(value, key) || {value: value[key]};\n    if (desc.get) {\n      if (desc.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (desc.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n    if (!hasOwnProperty(visibleKeys, key)) {\n      name = '[' + key + ']';\n    }\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        if (isNull(recurseTimes)) {\n          str = formatValue(ctx, desc.value, null);\n        } else {\n          str = formatValue(ctx, desc.value, recurseTimes - 1);\n        }\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str\n              .split('\\n')\n              .map(function(line) {\n                return '  ' + line;\n              })\n              .join('\\n')\n              .substr(2);\n          } else {\n            str =\n              '\\n' +\n              str\n                .split('\\n')\n                .map(function(line) {\n                  return '   ' + line;\n                })\n                .join('\\n');\n          }\n        }\n      } else {\n        str = ctx.stylize('[Circular]', 'special');\n      }\n    }\n    if (isUndefined(name)) {\n      if (array && key.match(/^\\d+$/)) {\n        return str;\n      }\n      name = JSON.stringify('' + key);\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n        name = ctx.stylize(name, 'name');\n      } else {\n        name = name\n          .replace(/'/g, \"\\\\'\")\n          .replace(/\\\\\"/g, '\"')\n          .replace(/(^\"|\"$)/g, \"'\");\n        name = ctx.stylize(name, 'string');\n      }\n    }\n\n    return name + ': ' + str;\n  }\n\n  function reduceToSingleString(output, base, braces) {\n    var numLinesEst = 0;\n    var length = output.reduce(function(prev, cur) {\n      numLinesEst++;\n      if (cur.indexOf('\\n') >= 0) numLinesEst++;\n      return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n    }, 0);\n\n    if (length > 60) {\n      return (\n        braces[0] +\n        (base === '' ? '' : base + '\\n ') +\n        ' ' +\n        output.join(',\\n  ') +\n        ' ' +\n        braces[1]\n      );\n    }\n\n    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n  }\n\n  // NOTE: These type checking functions intentionally don't use `instanceof`\n  // because it is fragile and can be easily faked with `Object.create()`.\n  function isArray(ar) {\n    return Array.isArray(ar);\n  }\n\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n\n  function isNull(arg) {\n    return arg === null;\n  }\n\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n\n  function isString(arg) {\n    return typeof arg === 'string';\n  }\n\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n\n  function isRegExp(re) {\n    return isObject(re) && objectToString(re) === '[object RegExp]';\n  }\n\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  function isDate(d) {\n    return isObject(d) && objectToString(d) === '[object Date]';\n  }\n\n  function isError(e) {\n    return (\n      isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error)\n    );\n  }\n\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  }\n\n  return inspect;\n})();\n\nconst OBJECT_COLUMN_NAME = '(index)';\nconst LOG_LEVELS = {\n  trace: 0,\n  info: 1,\n  warn: 2,\n  error: 3,\n};\nconst INSPECTOR_LEVELS = [];\nINSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';\nINSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';\nINSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';\nINSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';\n\n// Strip the inner function in getNativeLogFunction(), if in dev also\n// strip method printing to originalConsole.\nconst INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;\n\nfunction getNativeLogFunction(level) {\n  return function() {\n    let str;\n    if (arguments.length === 1 && typeof arguments[0] === 'string') {\n      str = arguments[0];\n    } else {\n      str = Array.prototype.map\n        .call(arguments, function(arg) {\n          return inspect(arg, {depth: 2});\n        })\n        .join(', ');\n    }\n\n    // TRICKY\n    // If more than one argument is provided, the code above collapses them all\n    // into a single formatted string. This transform wraps string arguments in\n    // single quotes (e.g. \"foo\" -> \"'foo'\") which then breaks the \"Warning:\"\n    // check below. So it's important that we look at the first argument, rather\n    // than the formatted argument string.\n    const firstArg = arguments[0];\n\n    let logLevel = level;\n    if (\n      typeof firstArg === 'string' &&\n      firstArg.slice(0, 9) === 'Warning: ' &&\n      logLevel >= LOG_LEVELS.error\n    ) {\n      // React warnings use console.error so that a stack trace is shown,\n      // but we don't (currently) want these to show a redbox\n      // (Note: Logic duplicated in ExceptionsManager.js.)\n      logLevel = LOG_LEVELS.warn;\n    }\n    if (global.__inspectorLog) {\n      global.__inspectorLog(\n        INSPECTOR_LEVELS[logLevel],\n        str,\n        [].slice.call(arguments),\n        INSPECTOR_FRAMES_TO_SKIP,\n      );\n    }\n    if (groupStack.length) {\n      str = groupFormat('', str);\n    }\n    global.nativeLoggingHook(str, logLevel);\n  };\n}\n\nfunction repeat(element, n) {\n  return Array.apply(null, Array(n)).map(function() {\n    return element;\n  });\n}\n\nfunction consoleTablePolyfill(rows) {\n  // convert object -> array\n  if (!Array.isArray(rows)) {\n    var data = rows;\n    rows = [];\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        var row = data[key];\n        row[OBJECT_COLUMN_NAME] = key;\n        rows.push(row);\n      }\n    }\n  }\n  if (rows.length === 0) {\n    global.nativeLoggingHook('', LOG_LEVELS.info);\n    return;\n  }\n\n  var columns = Object.keys(rows[0]).sort();\n  var stringRows = [];\n  var columnWidths = [];\n\n  // Convert each cell to a string. Also\n  // figure out max cell width for each column\n  columns.forEach(function(k, i) {\n    columnWidths[i] = k.length;\n    for (var j = 0; j < rows.length; j++) {\n      var cellStr = (rows[j][k] || '?').toString();\n      stringRows[j] = stringRows[j] || [];\n      stringRows[j][i] = cellStr;\n      columnWidths[i] = Math.max(columnWidths[i], cellStr.length);\n    }\n  });\n\n  // Join all elements in the row into a single string with | separators\n  // (appends extra spaces to each cell to make separators  | aligned)\n  function joinRow(row, space) {\n    var cells = row.map(function(cell, i) {\n      var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');\n      return cell + extraSpaces;\n    });\n    space = space || ' ';\n    return cells.join(space + '|' + space);\n  }\n\n  var separators = columnWidths.map(function(columnWidth) {\n    return repeat('-', columnWidth).join('');\n  });\n  var separatorRow = joinRow(separators, '-');\n  var header = joinRow(columns);\n  var table = [header, separatorRow];\n\n  for (var i = 0; i < rows.length; i++) {\n    table.push(joinRow(stringRows[i]));\n  }\n\n  // Notice extra empty line at the beginning.\n  // Native logging hook adds \"RCTLog >\" at the front of every\n  // logged string, which would shift the header and screw up\n  // the table\n  global.nativeLoggingHook('\\n' + table.join('\\n'), LOG_LEVELS.info);\n}\n\nconst GROUP_PAD = '\\u2502'; // Box light vertical\nconst GROUP_OPEN = '\\u2510'; // Box light down+left\nconst GROUP_CLOSE = '\\u2518'; // Box light up+left\n\nconst groupStack = [];\n\nfunction groupFormat(prefix, msg) {\n  // Insert group formatting before the console message\n  return groupStack.join('') + prefix + ' ' + (msg || '');\n}\n\nfunction consoleGroupPolyfill(label) {\n  global.nativeLoggingHook(groupFormat(GROUP_OPEN, label), LOG_LEVELS.info);\n  groupStack.push(GROUP_PAD);\n}\n\nfunction consoleGroupCollapsedPolyfill(label) {\n  global.nativeLoggingHook(groupFormat(GROUP_CLOSE, label), LOG_LEVELS.info);\n  groupStack.push(GROUP_PAD);\n}\n\nfunction consoleGroupEndPolyfill() {\n  groupStack.pop();\n  global.nativeLoggingHook(groupFormat(GROUP_CLOSE), LOG_LEVELS.info);\n}\n\nfunction consoleAssertPolyfill(expression, label) {\n  if (!expression) {\n    global.nativeLoggingHook('Assertion failed: ' + label, LOG_LEVELS.error);\n  }\n}\n\nif (global.nativeLoggingHook) {\n  const originalConsole = global.console;\n  // Preserve the original `console` as `originalConsole`\n  if (__DEV__ && originalConsole) {\n    const descriptor = Object.getOwnPropertyDescriptor(global, 'console');\n    if (descriptor) {\n      Object.defineProperty(global, 'originalConsole', descriptor);\n    }\n  }\n\n  global.console = {\n    error: getNativeLogFunction(LOG_LEVELS.error),\n    info: getNativeLogFunction(LOG_LEVELS.info),\n    log: getNativeLogFunction(LOG_LEVELS.info),\n    warn: getNativeLogFunction(LOG_LEVELS.warn),\n    trace: getNativeLogFunction(LOG_LEVELS.trace),\n    debug: getNativeLogFunction(LOG_LEVELS.trace),\n    table: consoleTablePolyfill,\n    group: consoleGroupPolyfill,\n    groupEnd: consoleGroupEndPolyfill,\n    groupCollapsed: consoleGroupCollapsedPolyfill,\n    assert: consoleAssertPolyfill,\n  };\n\n  Object.defineProperty(console, '_isPolyfilled', {\n    value: true,\n    enumerable: false,\n  });\n\n  // If available, also call the original `console` method since that is\n  // sometimes useful. Ex: on OS X, this will let you see rich output in\n  // the Safari Web Inspector console.\n  if (__DEV__ && originalConsole) {\n    Object.keys(console).forEach(methodName => {\n      const reactNativeMethod = console[methodName];\n      if (originalConsole[methodName]) {\n        console[methodName] = function() {\n          // TODO(T43930203): remove this special case once originalConsole.assert properly checks\n          // the condition\n          if (methodName === 'assert') {\n            if (!arguments[0]) {\n              originalConsole.assert(...arguments);\n            }\n          } else {\n            originalConsole[methodName](...arguments);\n          }\n          reactNativeMethod.apply(console, arguments);\n        };\n      }\n    });\n\n    // The following methods are not supported by this polyfill but\n    // we still should pass them to original console if they are\n    // supported by it.\n    ['clear', 'dir', 'dirxml', 'profile', 'profileEnd'].forEach(methodName => {\n      if (typeof originalConsole[methodName] === 'function') {\n        console[methodName] = function() {\n          originalConsole[methodName](...arguments);\n        };\n      }\n    });\n  }\n} else if (!global.console) {\n  function stub() {}\n  const log = global.print || stub;\n\n  global.console = {\n    debug: log,\n    error: log,\n    info: log,\n    log: log,\n    trace: log,\n    warn: log,\n    assert(expression, label) {\n      if (!expression) {\n        log('Assertion failed: ' + label);\n      }\n    },\n    clear: stub,\n    dir: stub,\n    dirxml: stub,\n    group: stub,\n    groupCollapsed: stub,\n    groupEnd: stub,\n    profile: stub,\n    profileEnd: stub,\n    table: stub,\n  };\n\n  Object.defineProperty(console, '_isPolyfilled', {\n    value: true,\n    enumerable: false,\n  });\n}\n"]},"metadata":{},"sourceType":"script"}