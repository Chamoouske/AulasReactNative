{"ast":null,"code":"'use strict';\n\nimport Platform from \"../Utilities/Platform\";\n\nfunction nativeImageSource(spec) {\n  var uri = Platform.select({\n    android: spec.android,\n    default: spec.default,\n    ios: spec.ios\n  });\n\n  if (uri == null) {\n    console.warn('nativeImageSource(...): No image name supplied for `%s`:\\n%s', Platform.OS, JSON.stringify(spec, null, 2));\n    uri = '';\n  }\n\n  return {\n    deprecated: true,\n    height: spec.height,\n    uri: uri,\n    width: spec.width\n  };\n}\n\nmodule.exports = nativeImageSource;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Image/nativeImageSource.js"],"names":["Platform","nativeImageSource","spec","uri","select","android","default","ios","console","warn","OS","JSON","stringify","deprecated","height","width","module","exports"],"mappings":"AAUA;;AAEA,OAAOA,QAAP;;AA+BA,SAASC,iBAAT,CAA2BC,IAA3B,EAAwE;AACtE,MAAIC,GAAG,GAAGH,QAAQ,CAACI,MAAT,CAAgB;AACxBC,IAAAA,OAAO,EAAEH,IAAI,CAACG,OADU;AAExBC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAFU;AAGxBC,IAAAA,GAAG,EAAEL,IAAI,CAACK;AAHc,GAAhB,CAAV;;AAKA,MAAIJ,GAAG,IAAI,IAAX,EAAiB;AACfK,IAAAA,OAAO,CAACC,IAAR,CACE,8DADF,EAEET,QAAQ,CAACU,EAFX,EAGEC,IAAI,CAACC,SAAL,CAAeV,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAHF;AAKAC,IAAAA,GAAG,GAAG,EAAN;AACD;;AACD,SAAO;AACLU,IAAAA,UAAU,EAAE,IADP;AAELC,IAAAA,MAAM,EAAEZ,IAAI,CAACY,MAFR;AAGLX,IAAAA,GAAG,EAAHA,GAHK;AAILY,IAAAA,KAAK,EAAEb,IAAI,CAACa;AAJP,GAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBhB,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Platform from '../Utilities/Platform';\n\nimport type {ImageURISource} from './ImageSource';\n\ntype NativeImageSourceSpec = $ReadOnly<{|\n  android?: string,\n  ios?: string,\n  default?: string,\n\n  // For more details on width and height, see\n  // https://reactnative.dev/docs/images.html#why-not-automatically-size-everything\n  height: number,\n  width: number,\n|}>;\n\n/**\n * In hybrid apps, use `nativeImageSource` to access images that are already\n * available on the native side, for example in Xcode Asset Catalogs or\n * Android's drawable folder.\n *\n * However, keep in mind that React Native Packager does not guarantee that the\n * image exists. If the image is missing you'll get an empty box. When adding\n * new images your app needs to be recompiled.\n *\n * Prefer Static Image Resources system which provides more guarantees,\n * automates measurements and allows adding new images without rebuilding the\n * native app. For more details visit:\n *\n *   https://reactnative.dev/docs/images.html\n *\n */\nfunction nativeImageSource(spec: NativeImageSourceSpec): ImageURISource {\n  let uri = Platform.select({\n    android: spec.android,\n    default: spec.default,\n    ios: spec.ios,\n  });\n  if (uri == null) {\n    console.warn(\n      'nativeImageSource(...): No image name supplied for `%s`:\\n%s',\n      Platform.OS,\n      JSON.stringify(spec, null, 2),\n    );\n    uri = '';\n  }\n  return {\n    deprecated: true,\n    height: spec.height,\n    uri,\n    width: spec.width,\n  };\n}\n\nmodule.exports = nativeImageSource;\n"]},"metadata":{},"sourceType":"module"}