{"ast":null,"code":"var deepFreezeAndThrowOnMutationInDev = require(\"../deepFreezeAndThrowOnMutationInDev\");\n\ndescribe('deepFreezeAndThrowOnMutationInDev', function () {\n  it('should be a noop on non object values', function () {\n    __DEV__ = true;\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev('');\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(null);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(false);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(5);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev();\n    }).not.toThrow();\n    __DEV__ = false;\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev('');\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(null);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(false);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(5);\n    }).not.toThrow();\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev();\n    }).not.toThrow();\n  });\n  it('should not throw on object without prototype', function () {\n    __DEV__ = true;\n    var o = Object.create(null);\n    o.key = 'Value';\n    expect(function () {\n      return deepFreezeAndThrowOnMutationInDev(o);\n    }).not.toThrow();\n  });\n  it('should throw on mutation in dev with strict', function () {\n    'use strict';\n\n    __DEV__ = true;\n    var o = {\n      key: 'oldValue'\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key = 'newValue';\n    }).toThrowError('You attempted to set the key `key` with the value `\"newValue\"` ' + 'on an object that is meant to be immutable and has been frozen.');\n    expect(o.key).toBe('oldValue');\n  });\n  it('should throw on mutation in dev without strict', function () {\n    __DEV__ = true;\n    var o = {\n      key: 'oldValue'\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key = 'newValue';\n    }).toThrowError('You attempted to set the key `key` with the value `\"newValue\"` ' + 'on an object that is meant to be immutable and has been frozen.');\n    expect(o.key).toBe('oldValue');\n  });\n  it('should throw on nested mutation in dev with strict', function () {\n    'use strict';\n\n    __DEV__ = true;\n    var o = {\n      key1: {\n        key2: {\n          key3: 'oldValue'\n        }\n      }\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key1.key2.key3 = 'newValue';\n    }).toThrowError('You attempted to set the key `key3` with the value `\"newValue\"` ' + 'on an object that is meant to be immutable and has been frozen.');\n    expect(o.key1.key2.key3).toBe('oldValue');\n  });\n  it('should throw on nested mutation in dev without strict', function () {\n    __DEV__ = true;\n    var o = {\n      key1: {\n        key2: {\n          key3: 'oldValue'\n        }\n      }\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key1.key2.key3 = 'newValue';\n    }).toThrowError('You attempted to set the key `key3` with the value `\"newValue\"` ' + 'on an object that is meant to be immutable and has been frozen.');\n    expect(o.key1.key2.key3).toBe('oldValue');\n  });\n  it('should throw on insertion in dev with strict', function () {\n    'use strict';\n\n    __DEV__ = true;\n    var o = {\n      oldKey: 'value'\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.newKey = 'value';\n    }).toThrowError(/(Cannot|Can't) add property newKey, object is not extensible/);\n    expect(o.newKey).toBe(undefined);\n  });\n  it('should not throw on insertion in dev without strict', function () {\n    __DEV__ = true;\n    var o = {\n      oldKey: 'value'\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.newKey = 'value';\n    }).not.toThrow();\n    expect(o.newKey).toBe(undefined);\n  });\n  it('should mutate and not throw on mutation in prod', function () {\n    'use strict';\n\n    __DEV__ = false;\n    var o = {\n      key: 'oldValue'\n    };\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key = 'newValue';\n    }).not.toThrow();\n    expect(o.key).toBe('newValue');\n  });\n  it('should not deep freeze already frozen objects', function () {\n    'use strict';\n\n    __DEV__ = true;\n    var o = {\n      key1: {\n        key2: 'oldValue'\n      }\n    };\n    Object.freeze(o);\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(function () {\n      o.key1.key2 = 'newValue';\n    }).not.toThrow();\n    expect(o.key1.key2).toBe('newValue');\n  });\n  it(\"shouldn't recurse infinitely\", function () {\n    __DEV__ = true;\n    var o = {};\n    o.circular = o;\n    deepFreezeAndThrowOnMutationInDev(o);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Utilities/__tests__/deepFreezeAndThrowOnMutationInDev-test.js"],"names":["deepFreezeAndThrowOnMutationInDev","require","describe","it","__DEV__","expect","not","toThrow","o","Object","create","key","toThrowError","toBe","key1","key2","key3","oldKey","newKey","undefined","freeze","circular"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\nconst deepFreezeAndThrowOnMutationInDev = require('../deepFreezeAndThrowOnMutationInDev');\n\ndescribe('deepFreezeAndThrowOnMutationInDev', function() {\n  it('should be a noop on non object values', () => {\n    __DEV__ = true;\n    expect(() => deepFreezeAndThrowOnMutationInDev('')).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(null)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(false)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(5)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev()).not.toThrow();\n    __DEV__ = false;\n    expect(() => deepFreezeAndThrowOnMutationInDev('')).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(null)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(false)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev(5)).not.toThrow();\n    expect(() => deepFreezeAndThrowOnMutationInDev()).not.toThrow();\n  });\n\n  it('should not throw on object without prototype', () => {\n    __DEV__ = true;\n    const o = Object.create(null);\n    o.key = 'Value';\n    expect(() => deepFreezeAndThrowOnMutationInDev(o)).not.toThrow();\n  });\n\n  it('should throw on mutation in dev with strict', () => {\n    'use strict';\n    __DEV__ = true;\n    const o = {key: 'oldValue'};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key = 'newValue';\n    }).toThrowError(\n      'You attempted to set the key `key` with the value `\"newValue\"` ' +\n        'on an object that is meant to be immutable and has been frozen.',\n    );\n    expect(o.key).toBe('oldValue');\n  });\n\n  it('should throw on mutation in dev without strict', () => {\n    __DEV__ = true;\n    const o = {key: 'oldValue'};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key = 'newValue';\n    }).toThrowError(\n      'You attempted to set the key `key` with the value `\"newValue\"` ' +\n        'on an object that is meant to be immutable and has been frozen.',\n    );\n    expect(o.key).toBe('oldValue');\n  });\n\n  it('should throw on nested mutation in dev with strict', () => {\n    'use strict';\n    __DEV__ = true;\n    const o = {key1: {key2: {key3: 'oldValue'}}};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key1.key2.key3 = 'newValue';\n    }).toThrowError(\n      'You attempted to set the key `key3` with the value `\"newValue\"` ' +\n        'on an object that is meant to be immutable and has been frozen.',\n    );\n    expect(o.key1.key2.key3).toBe('oldValue');\n  });\n\n  it('should throw on nested mutation in dev without strict', () => {\n    __DEV__ = true;\n    const o = {key1: {key2: {key3: 'oldValue'}}};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key1.key2.key3 = 'newValue';\n    }).toThrowError(\n      'You attempted to set the key `key3` with the value `\"newValue\"` ' +\n        'on an object that is meant to be immutable and has been frozen.',\n    );\n    expect(o.key1.key2.key3).toBe('oldValue');\n  });\n\n  it('should throw on insertion in dev with strict', () => {\n    'use strict';\n    __DEV__ = true;\n    const o = {oldKey: 'value'};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.newKey = 'value';\n    }).toThrowError(\n      /(Cannot|Can't) add property newKey, object is not extensible/,\n    );\n    expect(o.newKey).toBe(undefined);\n  });\n\n  it('should not throw on insertion in dev without strict', () => {\n    __DEV__ = true;\n    const o = {oldKey: 'value'};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.newKey = 'value';\n    }).not.toThrow();\n    expect(o.newKey).toBe(undefined);\n  });\n\n  it('should mutate and not throw on mutation in prod', () => {\n    'use strict';\n    __DEV__ = false;\n    const o = {key: 'oldValue'};\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key = 'newValue';\n    }).not.toThrow();\n    expect(o.key).toBe('newValue');\n  });\n\n  // This is a limitation of the technique unfortunately\n  it('should not deep freeze already frozen objects', () => {\n    'use strict';\n    __DEV__ = true;\n    const o = {key1: {key2: 'oldValue'}};\n    Object.freeze(o);\n    deepFreezeAndThrowOnMutationInDev(o);\n    expect(() => {\n      o.key1.key2 = 'newValue';\n    }).not.toThrow();\n    expect(o.key1.key2).toBe('newValue');\n  });\n\n  it(\"shouldn't recurse infinitely\", () => {\n    __DEV__ = true;\n    const o = {};\n    o.circular = o;\n    deepFreezeAndThrowOnMutationInDev(o);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}