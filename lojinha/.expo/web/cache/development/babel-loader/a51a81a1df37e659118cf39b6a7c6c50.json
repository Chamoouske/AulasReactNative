{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getHistoryItem(config, name) {\n  var _a, _b, _c;\n\n  return (_c = (_b = (_a = config._internal) === null || _a === void 0 ? void 0 : _a.pluginHistory) === null || _b === void 0 ? void 0 : _b[name]) !== null && _c !== void 0 ? _c : null;\n}\n\nexports.getHistoryItem = getHistoryItem;\n\nfunction addHistoryItem(config, item) {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n\n  config._internal.pluginHistory[item.name] = item;\n  return config;\n}\n\nexports.addHistoryItem = addHistoryItem;","map":{"version":3,"sources":["../../src/utils/history.ts"],"names":[],"mappings":";;;;;;AAUA,SAAgB,cAAhB,CACE,MADF,EAEE,IAFF,EAEc;;;AAEZ,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAO,MAAM,CAAC,SAAd,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAuB,EAAA,CAAE,aAAzB,MAAsC,IAAtC,IAAsC,EAAA,KAAA,KAAA,CAAtC,GAAsC,KAAA,CAAtC,GAAsC,EAAA,CAAG,IAAH,CAAtC,MAA6C,IAA7C,IAA6C,EAAA,KAAA,KAAA,CAA7C,GAA6C,EAA7C,GAAkD,IAAlD;AACD;;AALD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAOA,SAAgB,cAAhB,CACE,MADF,EAEE,IAFF,EAEiE;AAE/D,MAAI,CAAC,MAAM,CAAC,SAAZ,EAAuB;AACrB,IAAA,MAAM,CAAC,SAAP,GAAmB,EAAnB;AACD;;AACD,MAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,aAAtB,EAAqC;AACnC,IAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,GAAiC,EAAjC;AACD;;AAED,MAAI,CAAC,IAAI,CAAC,OAAV,EAAmB;AACjB,IAAA,IAAI,CAAC,OAAL,GAAe,aAAf;AACD;;AAED,EAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,CAA+B,IAAI,CAAC,IAApC,IAA4C,IAA5C;AAEA,SAAO,MAAP;AACD;;AAlBD,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ModPlatform } from '../Plugin.types';\n\nexport type PluginHistoryItem = {\n  name: string;\n  version: string;\n  platform?: ModPlatform;\n};\n\nexport function getHistoryItem(\n  config: Pick<ExpoConfig, '_internal'>,\n  name: string\n): PluginHistoryItem | null {\n  return config._internal?.pluginHistory?.[name] ?? null;\n}\n\nexport function addHistoryItem(\n  config: ExpoConfig,\n  item: Omit<PluginHistoryItem, 'version'> & { version?: string }\n): ExpoConfig {\n  if (!config._internal) {\n    config._internal = {};\n  }\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n\n  config._internal.pluginHistory[item.name] = item;\n\n  return config;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}