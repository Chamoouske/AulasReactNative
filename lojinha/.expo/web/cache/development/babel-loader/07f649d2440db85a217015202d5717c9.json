{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unregisterNativeModule;\n\nfunction _xcode() {\n  var data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function _xcode() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getGroup = _interopRequireDefault(require(\"./getGroup\"));\n\nvar _getTargets = _interopRequireDefault(require(\"./getTargets\"));\n\nvar _getHeadersInFolder = _interopRequireDefault(require(\"./getHeadersInFolder\"));\n\nvar _getHeaderSearchPath = _interopRequireDefault(require(\"./getHeaderSearchPath\"));\n\nvar _removeProjectFromProject = _interopRequireDefault(require(\"./removeProjectFromProject\"));\n\nvar _removeProjectFromLibraries = _interopRequireDefault(require(\"./removeProjectFromLibraries\"));\n\nvar _removeFromStaticLibraries = _interopRequireDefault(require(\"./removeFromStaticLibraries\"));\n\nvar _removeFromHeaderSearchPaths = _interopRequireDefault(require(\"./removeFromHeaderSearchPaths\"));\n\nvar _removeSharedLibraries = _interopRequireDefault(require(\"./removeSharedLibraries\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction unregisterNativeModule(dependencyConfig, projectConfig, iOSDependencies) {\n  _cliTools().logger.debug(\"Reading \" + projectConfig.pbxprojPath);\n\n  var project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n\n  var dependencyProject = _xcode().default.project(dependencyConfig.pbxprojPath).parseSync();\n\n  var libraries = (0, _getGroup.default)(project, projectConfig.libraryFolder);\n  var file = (0, _removeProjectFromProject.default)(project, _path().default.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n  (0, _removeProjectFromLibraries.default)(libraries, file);\n  (0, _getTargets.default)(dependencyProject).forEach(function (target) {\n    _cliTools().logger.debug(\"Removing \" + target.name + \" from \" + project.getFirstTarget().firstTarget.name);\n\n    (0, _removeFromStaticLibraries.default)(project, target.name, {\n      target: project.getFirstTarget().uuid\n    });\n  });\n  var sharedLibraries = (0, _lodash().difference)(dependencyConfig.sharedLibraries, iOSDependencies.reduce(function (libs, dependency) {\n    return libs.concat(dependency.sharedLibraries);\n  }, projectConfig.sharedLibraries));\n  (0, _removeSharedLibraries.default)(project, sharedLibraries);\n  var headers = (0, _getHeadersInFolder.default)(dependencyConfig.folder);\n\n  if (!(0, _lodash().isEmpty)(headers)) {\n    (0, _removeFromHeaderSearchPaths.default)(project, (0, _getHeaderSearchPath.default)(projectConfig.sourceDir, headers));\n  }\n\n  _cliTools().logger.debug(\"Writing changes to \" + projectConfig.pbxprojPath);\n\n  _fs().default.writeFileSync(projectConfig.pbxprojPath, project.writeSync());\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/unregisterNativeModule.js"],"names":["Object","defineProperty","exports","value","default","unregisterNativeModule","_xcode","data","_interopRequireDefault","require","_path","_fs","_lodash","_getGroup","_getTargets","_getHeadersInFolder","_getHeaderSearchPath","_removeProjectFromProject","_removeProjectFromLibraries","_removeFromStaticLibraries","_removeFromHeaderSearchPaths","_removeSharedLibraries","_cliTools","obj","__esModule","dependencyConfig","projectConfig","iOSDependencies","logger","debug","pbxprojPath","project","parseSync","dependencyProject","libraries","libraryFolder","file","relative","sourceDir","projectPath","forEach","target","name","getFirstTarget","firstTarget","uuid","sharedLibraries","difference","reduce","libs","dependency","concat","headers","folder","isEmpty","writeFileSync","writeSync"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unregisterNativeModule;\n\nfunction _xcode() {\n  const data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _getGroup = _interopRequireDefault(require(\"./getGroup\"));\n\nvar _getTargets = _interopRequireDefault(require(\"./getTargets\"));\n\nvar _getHeadersInFolder = _interopRequireDefault(require(\"./getHeadersInFolder\"));\n\nvar _getHeaderSearchPath = _interopRequireDefault(require(\"./getHeaderSearchPath\"));\n\nvar _removeProjectFromProject = _interopRequireDefault(require(\"./removeProjectFromProject\"));\n\nvar _removeProjectFromLibraries = _interopRequireDefault(require(\"./removeProjectFromLibraries\"));\n\nvar _removeFromStaticLibraries = _interopRequireDefault(require(\"./removeFromStaticLibraries\"));\n\nvar _removeFromHeaderSearchPaths = _interopRequireDefault(require(\"./removeFromHeaderSearchPaths\"));\n\nvar _removeSharedLibraries = _interopRequireDefault(require(\"./removeSharedLibraries\"));\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Unregister native module IOS\n *\n * If library is already unlinked, this action is a no-op.\n */\nfunction unregisterNativeModule(dependencyConfig, projectConfig, iOSDependencies) {\n  _cliTools().logger.debug(`Reading ${projectConfig.pbxprojPath}`);\n\n  const project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n\n  const dependencyProject = _xcode().default.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = (0, _getGroup.default)(project, projectConfig.libraryFolder);\n  const file = (0, _removeProjectFromProject.default)(project, _path().default.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n  (0, _removeProjectFromLibraries.default)(libraries, file);\n  (0, _getTargets.default)(dependencyProject).forEach(target => {\n    _cliTools().logger.debug(`Removing ${target.name} from ${project.getFirstTarget().firstTarget.name}`);\n\n    (0, _removeFromStaticLibraries.default)(project, target.name, {\n      target: project.getFirstTarget().uuid\n    });\n  });\n  const sharedLibraries = (0, _lodash().difference)(dependencyConfig.sharedLibraries, iOSDependencies.reduce((libs, dependency) => libs.concat(dependency.sharedLibraries), projectConfig.sharedLibraries));\n  (0, _removeSharedLibraries.default)(project, sharedLibraries);\n  const headers = (0, _getHeadersInFolder.default)(dependencyConfig.folder);\n\n  if (!(0, _lodash().isEmpty)(headers)) {\n    (0, _removeFromHeaderSearchPaths.default)(project, (0, _getHeaderSearchPath.default)(projectConfig.sourceDir, headers));\n  }\n\n  _cliTools().logger.debug(`Writing changes to ${projectConfig.pbxprojPath}`);\n\n  _fs().default.writeFileSync(projectConfig.pbxprojPath, project.writeSync());\n}\n\n//# sourceMappingURL=unregisterNativeModule.js.map"]},"metadata":{},"sourceType":"script"}