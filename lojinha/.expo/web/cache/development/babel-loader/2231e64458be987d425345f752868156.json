{"ast":null,"code":"'use strict';\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__tests__/FlatList-test.js\";\n\nvar React = require('react');\n\nvar ReactTestRenderer = require('react-test-renderer');\n\nvar FlatList = require(\"../FlatList\");\n\ndescribe('FlatList', function () {\n  it('renders simple list', function () {\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'i1'\n      }, {\n        key: 'i2'\n      }, {\n        key: 'i3'\n      }],\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(\"item\", {\n          value: item.key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list (multiple columns)', function () {\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'i1'\n      }, {\n        key: 'i2'\n      }, {\n        key: 'i3'\n      }],\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(\"item\", {\n          value: item.key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }\n        });\n      },\n      numColumns: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list using ListItemComponent', function () {\n    function ListItemComponent(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(\"item\", {\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'i1'\n      }, {\n        key: 'i2'\n      }, {\n        key: 'i3'\n      }],\n      ListItemComponent: ListItemComponent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list using ListItemComponent (multiple columns)', function () {\n    function ListItemComponent(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(\"item\", {\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'i1'\n      }, {\n        key: 'i2'\n      }, {\n        key: 'i3'\n      }],\n      ListItemComponent: ListItemComponent,\n      numColumns: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders empty list', function () {\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [],\n      renderItem: function renderItem(_ref5) {\n        var item = _ref5.item;\n        return React.createElement(\"item\", {\n          value: item.key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 51\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders null list', function () {\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      data: undefined,\n      renderItem: function renderItem(_ref6) {\n        var item = _ref6.item;\n        return React.createElement(\"item\", {\n          value: item.key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('renders all the bells and whistles', function () {\n    var component = ReactTestRenderer.create(React.createElement(FlatList, {\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return React.createElement(\"separator\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 39\n          }\n        });\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return React.createElement(\"empty\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 35\n          }\n        });\n      },\n      ListFooterComponent: function ListFooterComponent() {\n        return React.createElement(\"footer\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 36\n          }\n        });\n      },\n      ListHeaderComponent: function ListHeaderComponent() {\n        return React.createElement(\"header\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 36\n          }\n        });\n      },\n      data: new Array(5).fill().map(function (_, ii) {\n        return {\n          id: String(ii)\n        };\n      }),\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id;\n      },\n      getItemLayout: function getItemLayout(_ref7) {\n        var index = _ref7.index;\n        return {\n          length: 50,\n          offset: index * 50\n        };\n      },\n      numColumns: 2,\n      refreshing: false,\n      onRefresh: jest.fn(),\n      renderItem: function renderItem(_ref8) {\n        var item = _ref8.item;\n        return React.createElement(\"item\", {\n          value: item.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }));\n    expect(component).toMatchSnapshot();\n  });\n  it('getNativeScrollRef for case where it returns a native view', function () {\n    jest.resetModules();\n    jest.unmock(\"../../Components/ScrollView/ScrollView\");\n    var listRef = React.createRef(null);\n    ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'outer0'\n      }, {\n        key: 'outer1'\n      }],\n      renderItem: function renderItem(outerInfo) {\n        return React.createElement(FlatList, {\n          data: [{\n            key: outerInfo.item.key + ':inner0'\n          }, {\n            key: outerInfo.item.key + ':inner1'\n          }],\n          renderItem: function renderItem(innerInfo) {\n            return React.createElement(\"item\", {\n              title: innerInfo.item.key,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 22\n              }\n            });\n          },\n          ref: listRef,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }));\n    var scrollRef = listRef.current.getNativeScrollRef();\n    expect(scrollRef.measure).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureLayout).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureInWindow).toBeInstanceOf(jest.fn().constructor);\n  });\n  it('getNativeScrollRef for case where it returns a native scroll view', function () {\n    jest.resetModules();\n    jest.unmock(\"../../Components/ScrollView/ScrollView\");\n\n    function ListItemComponent(_ref9) {\n      var item = _ref9.item;\n      return React.createElement(\"item\", {\n        value: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var listRef = React.createRef(null);\n    ReactTestRenderer.create(React.createElement(FlatList, {\n      data: [{\n        key: 'i4'\n      }, {\n        key: 'i2'\n      }, {\n        key: 'i3'\n      }],\n      ListItemComponent: ListItemComponent,\n      numColumns: 2,\n      ref: listRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }));\n    var scrollRef = listRef.current.getNativeScrollRef();\n    expect(scrollRef.measure).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureLayout).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureInWindow).toBeInstanceOf(jest.fn().constructor);\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Lists/__tests__/FlatList-test.js"],"names":["React","require","ReactTestRenderer","FlatList","describe","it","component","create","key","item","expect","toMatchSnapshot","ListItemComponent","undefined","Array","fill","map","_","ii","id","String","index","length","offset","jest","fn","resetModules","unmock","listRef","createRef","outerInfo","innerInfo","scrollRef","current","getNativeScrollRef","measure","toBeInstanceOf","constructor","measureLayout","measureInWindow"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactTestRenderer = require('react-test-renderer');\n\nconst FlatList = require('../FlatList');\n\ndescribe('FlatList', () => {\n  it('renders simple list', () => {\n    const component = ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'i1'}, {key: 'i2'}, {key: 'i3'}]}\n        renderItem={({item}) => <item value={item.key} />}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list (multiple columns)', () => {\n    const component = ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'i1'}, {key: 'i2'}, {key: 'i3'}]}\n        renderItem={({item}) => <item value={item.key} />}\n        numColumns={2}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list using ListItemComponent', () => {\n    function ListItemComponent({item}) {\n      return <item value={item.key} />;\n    }\n    const component = ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'i1'}, {key: 'i2'}, {key: 'i3'}]}\n        ListItemComponent={ListItemComponent}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders simple list using ListItemComponent (multiple columns)', () => {\n    function ListItemComponent({item}) {\n      return <item value={item.key} />;\n    }\n    const component = ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'i1'}, {key: 'i2'}, {key: 'i3'}]}\n        ListItemComponent={ListItemComponent}\n        numColumns={2}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders empty list', () => {\n    const component = ReactTestRenderer.create(\n      <FlatList data={[]} renderItem={({item}) => <item value={item.key} />} />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders null list', () => {\n    const component = ReactTestRenderer.create(\n      <FlatList\n        data={undefined}\n        renderItem={({item}) => <item value={item.key} />}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('renders all the bells and whistles', () => {\n    const component = ReactTestRenderer.create(\n      <FlatList\n        ItemSeparatorComponent={() => <separator />}\n        ListEmptyComponent={() => <empty />}\n        ListFooterComponent={() => <footer />}\n        ListHeaderComponent={() => <header />}\n        data={new Array(5).fill().map((_, ii) => ({id: String(ii)}))}\n        keyExtractor={(item, index) => item.id}\n        getItemLayout={({index}) => ({length: 50, offset: index * 50})}\n        numColumns={2}\n        refreshing={false}\n        onRefresh={jest.fn()}\n        renderItem={({item}) => <item value={item.id} />}\n      />,\n    );\n    expect(component).toMatchSnapshot();\n  });\n  it('getNativeScrollRef for case where it returns a native view', () => {\n    jest.resetModules();\n    jest.unmock('../../Components/ScrollView/ScrollView');\n\n    const listRef = React.createRef(null);\n\n    ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'outer0'}, {key: 'outer1'}]}\n        renderItem={outerInfo => (\n          <FlatList\n            data={[\n              {key: outerInfo.item.key + ':inner0'},\n              {key: outerInfo.item.key + ':inner1'},\n            ]}\n            renderItem={innerInfo => {\n              return <item title={innerInfo.item.key} />;\n            }}\n            ref={listRef}\n          />\n        )}\n      />,\n    );\n\n    const scrollRef = listRef.current.getNativeScrollRef();\n\n    // This is checking if the ref acts like a host component. If we had an\n    // `isHostComponent(ref)` method, that would be preferred.\n    expect(scrollRef.measure).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureLayout).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureInWindow).toBeInstanceOf(jest.fn().constructor);\n  });\n\n  it('getNativeScrollRef for case where it returns a native scroll view', () => {\n    jest.resetModules();\n    jest.unmock('../../Components/ScrollView/ScrollView');\n\n    function ListItemComponent({item}) {\n      return <item value={item.key} />;\n    }\n    const listRef = React.createRef(null);\n\n    ReactTestRenderer.create(\n      <FlatList\n        data={[{key: 'i4'}, {key: 'i2'}, {key: 'i3'}]}\n        ListItemComponent={ListItemComponent}\n        numColumns={2}\n        ref={listRef}\n      />,\n    );\n\n    const scrollRef = listRef.current.getNativeScrollRef();\n\n    // This is checking if the ref acts like a host component. If we had an\n    // `isHostComponent(ref)` method, that would be preferred.\n    expect(scrollRef.measure).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureLayout).toBeInstanceOf(jest.fn().constructor);\n    expect(scrollRef.measureInWindow).toBeInstanceOf(jest.fn().constructor);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}