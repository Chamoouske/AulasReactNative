{"ast":null,"code":"var consoleError = console.error;\nvar suppressedErrors = ['Error: Could not parse CSS stylesheet', 'Warning: Use the `defaultValue` or `value` props instead of setting children on <textarea>'];\nbeforeEach(function () {\n  console.error = function (message) {\n    if (!suppressedErrors.some(function (suppressedError) {\n      return message.includes(suppressedError);\n    })) {\n      consoleError(message);\n    }\n  };\n});\nafterEach(function () {\n  console.error = consoleError;\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/styled-components/test-utils/setupTestFramework.js"],"names":["consoleError","console","error","suppressedErrors","beforeEach","message","some","suppressedError","includes","afterEach"],"mappings":"AACA,IAAMA,YAAY,GAAGC,OAAO,CAACC,KAA7B;AAEA,IAAMC,gBAAgB,GAAG,CACvB,uCADuB,EAEvB,4FAFuB,CAAzB;AAKAC,UAAU,CAAC,YAAM;AAIdH,EAAAA,OAAD,CAAeC,KAAf,GAAuB,UAAAG,OAAO,EAAI;AAChC,QAAI,CAACF,gBAAgB,CAACG,IAAjB,CAAsB,UAAAC,eAAe;AAAA,aAAIF,OAAO,CAACG,QAAR,CAAiBD,eAAjB,CAAJ;AAAA,KAArC,CAAL,EAAkF;AAChFP,MAAAA,YAAY,CAACK,OAAD,CAAZ;AACD;AACF,GAJD;AAKD,CATS,CAAV;AAWAI,SAAS,CAAC,YAAM;AAEbR,EAAAA,OAAD,CAAeC,KAAf,GAAuBF,YAAvB;AACD,CAHQ,CAAT","sourcesContent":["// @flow\nconst consoleError = console.error;\n\nconst suppressedErrors = [\n  'Error: Could not parse CSS stylesheet',\n  'Warning: Use the `defaultValue` or `value` props instead of setting children on <textarea>',\n];\n\nbeforeEach(() => {\n  // Suppress errors from JSDOM CSS parser\n  // See: https://github.com/jsdom/jsdom/issues/2177\n  // eslint-disable-next-line flowtype-errors/show-errors\n  (console: any).error = message => {\n    if (!suppressedErrors.some(suppressedError => message.includes(suppressedError))) {\n      consoleError(message);\n    }\n  };\n});\n\nafterEach(() => {\n  // eslint-disable-next-line flowtype-errors/show-errors\n  (console: any).error = consoleError;\n});\n"]},"metadata":{},"sourceType":"script"}