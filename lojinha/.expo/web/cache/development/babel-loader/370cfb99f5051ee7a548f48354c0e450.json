{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"./index.css\");\n\nvar _blueIcon = _interopRequireDefault(require(\"./assets/blue-icon.png\"));\n\nvar _grayIcon = _interopRequireDefault(require(\"./assets/gray-icon.png\"));\n\nvar _orangeIcon = _interopRequireDefault(require(\"./assets/orange-icon.png\"));\n\nvar isMacLike = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar refreshShortcut = isMacLike ? '⌘R' : 'Ctrl R';\n\nwindow.onload = function () {\n  if (!isMacLike) {\n    document.getElementById('shortcut').innerHTML = 'Ctrl⇧J';\n  }\n\n  Page.render();\n};\n\nwindow.onReloadClicked = function () {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', window.location.origin + \"/reload\", true);\n  xhr.send();\n};\n\nvar Page = window.Page = {\n  state: {\n    isDark: localStorage.getItem('darkTheme') === null ? window.matchMedia('(prefers-color-scheme: dark)').matches : localStorage.getItem('darkTheme') === 'on',\n    isPriorityMaintained: localStorage.getItem('maintainPriority') === 'on',\n    status: {\n      type: 'disconnected'\n    },\n    visibilityState: document.visibilityState\n  },\n  setState: function setState(partialState) {\n    Page.state = _extends({}, Page.state, partialState);\n    Page.render();\n  },\n  render: function render() {\n    var _Page$state = Page.state,\n        isDark = _Page$state.isDark,\n        isPriorityMaintained = _Page$state.isPriorityMaintained,\n        status = _Page$state.status,\n        visibilityState = _Page$state.visibilityState;\n    var statusNode = document.getElementById('status');\n\n    switch (status.type) {\n      case 'connected':\n        statusNode.innerHTML = 'Debugger session #' + status.id + ' active.';\n        break;\n\n      case 'error':\n        statusNode.innerHTML = status.error.reason || 'Disconnected from proxy. Attempting reconnection. Is node server running?';\n        break;\n\n      case 'connecting':\n      case 'disconnected':\n      default:\n        statusNode.innerHTML = 'Waiting, press <span class=\"shortcut\">' + refreshShortcut + '</span> in simulator to reload and connect.';\n        break;\n    }\n\n    var linkNode = document.querySelector('link[rel=icon]');\n\n    if (status.type === 'disconnected' || status.type === 'error') {\n      linkNode.href = _grayIcon.default;\n    } else {\n      if (visibilityState === 'visible' || isPriorityMaintained) {\n        linkNode.href = _blueIcon.default;\n      } else {\n        linkNode.href = _orangeIcon.default;\n      }\n    }\n\n    var darkCheckbox = document.getElementById('dark');\n    document.body.classList.toggle('dark', isDark);\n    darkCheckbox.checked = isDark;\n    localStorage.setItem('darkTheme', isDark ? 'on' : '');\n    var maintainPriorityCheckbox = document.getElementById('maintain-priority');\n    var silence = document.getElementById('silence');\n    silence.volume = 0.1;\n\n    if (isPriorityMaintained) {\n      silence.play();\n    } else {\n      silence.pause();\n    }\n\n    maintainPriorityCheckbox.checked = isPriorityMaintained;\n    localStorage.setItem('maintainPriority', isPriorityMaintained ? 'on' : '');\n  },\n  toggleDarkTheme: function toggleDarkTheme() {\n    Page.setState({\n      isDark: !Page.state.isDark\n    });\n  },\n  togglePriorityMaintenance: function togglePriorityMaintenance() {\n    Page.setState({\n      isPriorityMaintained: !Page.state.isPriorityMaintained\n    });\n  }\n};\n\nfunction connectToDebuggerProxy() {\n  var ws = new WebSocket('ws://' + window.location.host + '/debugger-proxy?role=debugger&name=Chrome');\n  var worker;\n\n  function createJSRuntime() {\n    worker = new Worker('./debuggerWorker.js');\n\n    worker.onmessage = function (message) {\n      ws.send(JSON.stringify(message.data));\n    };\n\n    window.onbeforeunload = function () {\n      return 'If you reload this page, it is going to break the debugging session. ' + 'Press ' + refreshShortcut + ' on the device to reload.';\n    };\n\n    updateVisibility();\n  }\n\n  function shutdownJSRuntime() {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      window.onbeforeunload = null;\n    }\n  }\n\n  function updateVisibility() {\n    if (worker && !Page.state.isPriorityMaintained) {\n      worker.postMessage({\n        method: 'setDebuggerVisibility',\n        visibilityState: document.visibilityState\n      });\n    }\n\n    Page.setState({\n      visibilityState: document.visibilityState\n    });\n  }\n\n  ws.onopen = function () {\n    Page.setState({\n      status: {\n        type: 'connecting'\n      }\n    });\n  };\n\n  ws.onmessage = function _callee(message) {\n    var object;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (message.data) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            object = JSON.parse(message.data);\n\n            if (!(object.$event === 'client-disconnected')) {\n              _context.next = 7;\n              break;\n            }\n\n            shutdownJSRuntime();\n            Page.setState({\n              status: {\n                type: 'disconnected'\n              }\n            });\n            return _context.abrupt(\"return\");\n\n          case 7:\n            if (object.method) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 9:\n            if (object.method === 'prepareJSRuntime') {\n              shutdownJSRuntime();\n              console.clear();\n              createJSRuntime();\n              ws.send(JSON.stringify({\n                replyID: object.id\n              }));\n              Page.setState({\n                status: {\n                  type: 'connected',\n                  id: object.id\n                }\n              });\n            } else if (object.method === '$disconnected') {\n              shutdownJSRuntime();\n              Page.setState({\n                status: {\n                  type: 'disconnected'\n                }\n              });\n            } else {\n              worker.postMessage(object);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  ws.onclose = function (error) {\n    shutdownJSRuntime();\n    Page.setState({\n      status: {\n        type: 'error',\n        error: error\n      }\n    });\n\n    if (error.reason) {\n      console.warn(error.reason);\n    }\n\n    setTimeout(connectToDebuggerProxy, 500);\n  };\n\n  document.addEventListener('visibilitychange', updateVisibility, false);\n}\n\nconnectToDebuggerProxy();","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-debugger-ui/build/ui/index.js"],"names":["_interopRequireDefault","require","_blueIcon","_grayIcon","_orangeIcon","isMacLike","test","navigator","platform","refreshShortcut","window","onload","document","getElementById","innerHTML","Page","render","onReloadClicked","xhr","XMLHttpRequest","open","location","origin","send","state","isDark","localStorage","getItem","matchMedia","matches","isPriorityMaintained","status","type","visibilityState","setState","partialState","statusNode","id","error","reason","linkNode","querySelector","href","default","darkCheckbox","body","classList","toggle","checked","setItem","maintainPriorityCheckbox","silence","volume","play","pause","toggleDarkTheme","togglePriorityMaintenance","connectToDebuggerProxy","ws","WebSocket","host","worker","createJSRuntime","Worker","onmessage","message","JSON","stringify","data","onbeforeunload","updateVisibility","shutdownJSRuntime","terminate","postMessage","method","onopen","object","parse","$event","console","clear","replyID","onclose","warn","setTimeout","addEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"./index.css\");\n\nvar _blueIcon = _interopRequireDefault(require(\"./assets/blue-icon.png\"));\n\nvar _grayIcon = _interopRequireDefault(require(\"./assets/gray-icon.png\"));\n\nvar _orangeIcon = _interopRequireDefault(require(\"./assets/orange-icon.png\"));\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-env browser */\nconst isMacLike = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nconst refreshShortcut = isMacLike ? '⌘R' : 'Ctrl R';\n\nwindow.onload = function () {\n  if (!isMacLike) {\n    document.getElementById('shortcut').innerHTML = 'Ctrl⇧J';\n  }\n\n  Page.render();\n};\n\nwindow.onReloadClicked = function () {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', `${window.location.origin}/reload`, true);\n  xhr.send();\n};\n\nconst Page = window.Page = {\n  state: {\n    isDark: localStorage.getItem('darkTheme') === null ? window.matchMedia('(prefers-color-scheme: dark)').matches : localStorage.getItem('darkTheme') === 'on',\n    isPriorityMaintained: localStorage.getItem('maintainPriority') === 'on',\n    status: {\n      type: 'disconnected'\n    },\n    visibilityState: document.visibilityState\n  },\n\n  setState(partialState) {\n    Page.state = Object.assign({}, Page.state, partialState);\n    Page.render();\n  },\n\n  render() {\n    const {\n      isDark,\n      isPriorityMaintained,\n      status,\n      visibilityState\n    } = Page.state;\n    const statusNode = document.getElementById('status');\n\n    switch (status.type) {\n      case 'connected':\n        statusNode.innerHTML = 'Debugger session #' + status.id + ' active.';\n        break;\n\n      case 'error':\n        statusNode.innerHTML = status.error.reason || 'Disconnected from proxy. Attempting reconnection. Is node server running?';\n        break;\n\n      case 'connecting':\n      case 'disconnected': // Fall through.\n\n      default:\n        statusNode.innerHTML = 'Waiting, press <span class=\"shortcut\">' + refreshShortcut + '</span> in simulator to reload and connect.';\n        break;\n    }\n\n    const linkNode = document.querySelector('link[rel=icon]');\n\n    if (status.type === 'disconnected' || status.type === 'error') {\n      linkNode.href = _grayIcon.default;\n    } else {\n      if (visibilityState === 'visible' || isPriorityMaintained) {\n        linkNode.href = _blueIcon.default;\n      } else {\n        linkNode.href = _orangeIcon.default;\n      }\n    }\n\n    const darkCheckbox = document.getElementById('dark');\n    document.body.classList.toggle('dark', isDark);\n    darkCheckbox.checked = isDark;\n    localStorage.setItem('darkTheme', isDark ? 'on' : '');\n    const maintainPriorityCheckbox = document.getElementById('maintain-priority');\n    const silence = document.getElementById('silence');\n    silence.volume = 0.1;\n\n    if (isPriorityMaintained) {\n      silence.play();\n    } else {\n      silence.pause();\n    }\n\n    maintainPriorityCheckbox.checked = isPriorityMaintained;\n    localStorage.setItem('maintainPriority', isPriorityMaintained ? 'on' : '');\n  },\n\n  toggleDarkTheme() {\n    Page.setState({\n      isDark: !Page.state.isDark\n    });\n  },\n\n  togglePriorityMaintenance() {\n    Page.setState({\n      isPriorityMaintained: !Page.state.isPriorityMaintained\n    });\n  }\n\n};\n\nfunction connectToDebuggerProxy() {\n  const ws = new WebSocket('ws://' + window.location.host + '/debugger-proxy?role=debugger&name=Chrome');\n  let worker;\n\n  function createJSRuntime() {\n    // This worker will run the application JavaScript code,\n    // making sure that it's run in an environment without a global\n    // document, to make it consistent with the JSC executor environment.\n    worker = new Worker('./debuggerWorker.js');\n\n    worker.onmessage = function (message) {\n      ws.send(JSON.stringify(message.data));\n    };\n\n    window.onbeforeunload = function () {\n      return 'If you reload this page, it is going to break the debugging session. ' + 'Press ' + refreshShortcut + ' on the device to reload.';\n    };\n\n    updateVisibility();\n  }\n\n  function shutdownJSRuntime() {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      window.onbeforeunload = null;\n    }\n  }\n\n  function updateVisibility() {\n    if (worker && !Page.state.isPriorityMaintained) {\n      worker.postMessage({\n        method: 'setDebuggerVisibility',\n        visibilityState: document.visibilityState\n      });\n    }\n\n    Page.setState({\n      visibilityState: document.visibilityState\n    });\n  }\n\n  ws.onopen = function () {\n    Page.setState({\n      status: {\n        type: 'connecting'\n      }\n    });\n  };\n\n  ws.onmessage = async function (message) {\n    if (!message.data) {\n      return;\n    }\n\n    const object = JSON.parse(message.data);\n\n    if (object.$event === 'client-disconnected') {\n      shutdownJSRuntime();\n      Page.setState({\n        status: {\n          type: 'disconnected'\n        }\n      });\n      return;\n    }\n\n    if (!object.method) {\n      return;\n    } // Special message that asks for a new JS runtime\n\n\n    if (object.method === 'prepareJSRuntime') {\n      shutdownJSRuntime();\n      console.clear();\n      createJSRuntime();\n      ws.send(JSON.stringify({\n        replyID: object.id\n      }));\n      Page.setState({\n        status: {\n          type: 'connected',\n          id: object.id\n        }\n      });\n    } else if (object.method === '$disconnected') {\n      shutdownJSRuntime();\n      Page.setState({\n        status: {\n          type: 'disconnected'\n        }\n      });\n    } else {\n      worker.postMessage(object);\n    }\n  };\n\n  ws.onclose = function (error) {\n    shutdownJSRuntime();\n    Page.setState({\n      status: {\n        type: 'error',\n        error\n      }\n    });\n\n    if (error.reason) {\n      console.warn(error.reason);\n    }\n\n    setTimeout(connectToDebuggerProxy, 500);\n  }; // Let debuggerWorker.js know when we're not visible so that we can warn about\n  // poor performance when using remote debugging.\n\n\n  document.addEventListener('visibilitychange', updateVisibility, false);\n}\n\nconnectToDebuggerProxy();\n\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}