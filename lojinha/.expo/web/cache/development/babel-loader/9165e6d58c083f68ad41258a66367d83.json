{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/LayoutEventsTest.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar Image = ReactNative.Image,\n    LayoutAnimation = ReactNative.LayoutAnimation,\n    StyleSheet = ReactNative.StyleSheet,\n    Text = ReactNative.Text,\n    View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\n\nvar deepDiffer = require('react-native/Libraries/Utilities/differ/deepDiffer');\n\nfunction debug() {}\n\nvar LayoutEventsTest = function (_React$Component) {\n  _inherits(LayoutEventsTest, _React$Component);\n\n  var _super = _createSuper(LayoutEventsTest);\n\n  function LayoutEventsTest() {\n    var _this;\n\n    _classCallCheck(this, LayoutEventsTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      didAnimation: false\n    };\n\n    _this.addWrapText = function () {\n      debug('addWrapText invoked');\n\n      _this.setState({\n        extraText: '  And a bunch more text to wrap around a few lines.'\n      }, function () {\n        return _this.checkLayout(_this.changeContainer);\n      });\n    };\n\n    _this.changeContainer = function () {\n      debug('changeContainer invoked');\n\n      _this.setState({\n        containerStyle: {\n          width: 280\n        }\n      }, function () {\n        return _this.checkLayout(TestModule.markTestCompleted);\n      });\n    };\n\n    _this.checkLayout = function (next) {\n      var view = _this._view;\n      var txt = _this._txt;\n      var img = _this._img;\n\n      if (view == null || txt == null || img == null) {\n        return;\n      }\n\n      view.measure(function (x, y, width, height) {\n        _this.compare('view', {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }, _this.state.viewLayout || null);\n\n        if (typeof next === 'function') {\n          next();\n        } else if (!_this.state.didAnimation) {\n          _this.animateViewLayout();\n\n          _this.state.didAnimation = true;\n        }\n      });\n      txt.measure(function (x, y, width, height) {\n        _this.compare('txt', {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }, _this.state.textLayout);\n      });\n      img.measure(function (x, y, width, height) {\n        _this.compare('img', {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }, _this.state.imageLayout);\n      });\n    };\n\n    _this.onViewLayout = function (e) {\n      debug('received view layout event\\n', e.nativeEvent);\n\n      _this.setState({\n        viewLayout: e.nativeEvent.layout\n      }, _this.checkLayout);\n    };\n\n    _this.onTextLayout = function (e) {\n      debug('received text layout event\\n', e.nativeEvent);\n\n      _this.setState({\n        textLayout: e.nativeEvent.layout\n      }, _this.checkLayout);\n    };\n\n    _this.onImageLayout = function (e) {\n      debug('received image layout event\\n', e.nativeEvent);\n\n      _this.setState({\n        imageLayout: e.nativeEvent.layout\n      }, _this.checkLayout);\n    };\n\n    return _this;\n  }\n\n  _createClass(LayoutEventsTest, [{\n    key: \"animateViewLayout\",\n    value: function animateViewLayout() {\n      var _this2 = this;\n\n      debug('animateViewLayout invoked');\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.spring, function () {\n        debug('animateViewLayout done');\n\n        _this2.checkLayout(_this2.addWrapText);\n      });\n      this.setState({\n        viewStyle: {\n          margin: 60\n        }\n      });\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(node, measured, onLayout) {\n      if (deepDiffer(measured, onLayout)) {\n        var data = {\n          measured: measured,\n          onLayout: onLayout\n        };\n        throw new Error(node + ' onLayout mismatch with measure ' + JSON.stringify(data, null, '  '));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var viewStyle = [styles.view, this.state.viewStyle];\n      var textLayout = this.state.textLayout || {\n        width: '?',\n        height: '?'\n      };\n      var imageLayout = this.state.imageLayout || {\n        x: '?',\n        y: '?'\n      };\n      debug('viewLayout', this.state.viewLayout);\n      return React.createElement(View, {\n        style: [styles.container, this.state.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        ref: function ref(_ref3) {\n          _this3._view = _ref3;\n        },\n        onLayout: this.onViewLayout,\n        style: viewStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        ref: function ref(_ref) {\n          _this3._img = _ref;\n        },\n        onLayout: this.onImageLayout,\n        style: styles.image,\n        source: {\n          uri: 'uie_thumb_big.png'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        ref: function ref(_ref2) {\n          _this3._txt = _ref2;\n        },\n        onLayout: this.onTextLayout,\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, \"A simple piece of text.\", this.state.extraText), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, '\\n', \"Text w/h: \", textLayout.width, \"/\", textLayout.height + '\\n', \"Image x/y: \", imageLayout.x, \"/\", imageLayout.y)));\n    }\n  }]);\n\n  return LayoutEventsTest;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 40\n  },\n  view: {\n    margin: 20,\n    padding: 12,\n    borderColor: 'black',\n    borderWidth: 0.5,\n    backgroundColor: 'transparent'\n  },\n  text: {\n    alignSelf: 'flex-start',\n    borderColor: 'rgba(0, 0, 255, 0.2)',\n    borderWidth: 0.5\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginBottom: 10,\n    alignSelf: 'center'\n  }\n});\nmodule.exports = LayoutEventsTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/LayoutEventsTest.js"],"names":["React","require","Image","ReactNative","LayoutAnimation","StyleSheet","Text","View","TestModule","NativeModules","deepDiffer","debug","LayoutEventsTest","state","didAnimation","addWrapText","setState","extraText","checkLayout","changeContainer","containerStyle","width","markTestCompleted","next","view","_view","txt","_txt","img","_img","measure","x","y","height","compare","viewLayout","animateViewLayout","textLayout","imageLayout","onViewLayout","e","nativeEvent","layout","onTextLayout","onImageLayout","configureNext","Presets","spring","viewStyle","margin","node","measured","onLayout","data","Error","JSON","stringify","styles","container","ref","image","uri","text","Component","create","padding","borderColor","borderWidth","backgroundColor","alignSelf","marginBottom","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {Image, LayoutAnimation, StyleSheet, Text, View} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst deepDiffer = require('react-native/Libraries/Utilities/differ/deepDiffer');\n\nfunction debug(...args) {\n  // console.log.apply(null, arguments);\n}\n\nimport type {\n  Layout,\n  LayoutEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\ntype Props = $ReadOnly<{||}>;\n\ntype State = {\n  didAnimation: boolean,\n  extraText?: string,\n  imageLayout?: Layout,\n  textLayout?: Layout,\n  viewLayout?: Layout,\n  viewStyle?: ViewStyleProp,\n  containerStyle?: ViewStyleProp,\n  ...\n};\n\nclass LayoutEventsTest extends React.Component<Props, State> {\n  _view: ?React.ElementRef<typeof View>;\n  _img: ?React.ElementRef<typeof Image>;\n  _txt: ?React.ElementRef<typeof Text>;\n\n  state: State = {\n    didAnimation: false,\n  };\n\n  animateViewLayout() {\n    debug('animateViewLayout invoked');\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring, () => {\n      debug('animateViewLayout done');\n      this.checkLayout(this.addWrapText);\n    });\n    this.setState({viewStyle: {margin: 60}});\n  }\n\n  addWrapText: () => void = () => {\n    debug('addWrapText invoked');\n    this.setState(\n      {extraText: '  And a bunch more text to wrap around a few lines.'},\n      () => this.checkLayout(this.changeContainer),\n    );\n  };\n\n  changeContainer: () => void = () => {\n    debug('changeContainer invoked');\n    this.setState({containerStyle: {width: 280}}, () =>\n      this.checkLayout(TestModule.markTestCompleted),\n    );\n  };\n\n  checkLayout: (next?: ?() => void) => void = (next?: ?() => void) => {\n    const view = this._view;\n    const txt = this._txt;\n    const img = this._img;\n\n    if (view == null || txt == null || img == null) {\n      return;\n    }\n\n    view.measure((x, y, width, height) => {\n      this.compare(\n        'view',\n        {x, y, width, height},\n        this.state.viewLayout || null,\n      );\n      if (typeof next === 'function') {\n        next();\n      } else if (!this.state.didAnimation) {\n        // Trigger first state change after onLayout fires\n        this.animateViewLayout();\n        this.state.didAnimation = true;\n      }\n    });\n\n    txt.measure((x, y, width, height) => {\n      this.compare('txt', {x, y, width, height}, this.state.textLayout);\n    });\n\n    img.measure((x, y, width, height) => {\n      this.compare('img', {x, y, width, height}, this.state.imageLayout);\n    });\n  };\n\n  compare(node: string, measured: Layout, onLayout?: ?Layout): void {\n    if (deepDiffer(measured, onLayout)) {\n      const data = {measured, onLayout};\n      throw new Error(\n        node +\n          ' onLayout mismatch with measure ' +\n          JSON.stringify(data, null, '  '),\n      );\n    }\n  }\n\n  onViewLayout: (e: LayoutEvent) => void = (e: LayoutEvent) => {\n    debug('received view layout event\\n', e.nativeEvent);\n    this.setState({viewLayout: e.nativeEvent.layout}, this.checkLayout);\n  };\n\n  onTextLayout: (e: LayoutEvent) => void = (e: LayoutEvent) => {\n    debug('received text layout event\\n', e.nativeEvent);\n    this.setState({textLayout: e.nativeEvent.layout}, this.checkLayout);\n  };\n\n  onImageLayout: (e: LayoutEvent) => void = (e: LayoutEvent) => {\n    debug('received image layout event\\n', e.nativeEvent);\n    this.setState({imageLayout: e.nativeEvent.layout}, this.checkLayout);\n  };\n\n  render(): React.Node {\n    const viewStyle = [styles.view, this.state.viewStyle];\n    const textLayout = this.state.textLayout || {width: '?', height: '?'};\n    const imageLayout = this.state.imageLayout || {x: '?', y: '?'};\n    debug('viewLayout', this.state.viewLayout);\n    return (\n      <View style={[styles.container, this.state.containerStyle]}>\n        <View\n          ref={ref => {\n            this._view = ref;\n          }}\n          onLayout={this.onViewLayout}\n          style={viewStyle}>\n          <Image\n            ref={ref => {\n              this._img = ref;\n            }}\n            onLayout={this.onImageLayout}\n            style={styles.image}\n            source={{uri: 'uie_thumb_big.png'}}\n          />\n          <Text\n            ref={ref => {\n              this._txt = ref;\n            }}\n            onLayout={this.onTextLayout}\n            style={styles.text}>\n            A simple piece of text.{this.state.extraText}\n          </Text>\n          <Text>\n            {'\\n'}\n            Text w/h: {textLayout.width}/{textLayout.height + '\\n'}\n            Image x/y: {imageLayout.x}/{imageLayout.y}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 40,\n  },\n  view: {\n    margin: 20,\n    padding: 12,\n    borderColor: 'black',\n    borderWidth: 0.5,\n    backgroundColor: 'transparent',\n  },\n  text: {\n    alignSelf: 'flex-start',\n    borderColor: 'rgba(0, 0, 255, 0.2)',\n    borderWidth: 0.5,\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginBottom: 10,\n    alignSelf: 'center',\n  },\n});\n\nmodule.exports = LayoutEventsTest;\n"]},"metadata":{},"sourceType":"script"}