{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Cache = __importStar(require(\"./Cache\"));\n\nexports.Cache = Cache;\n\nvar Image_1 = require(\"./Image\");\n\nexports.compositeImagesAsync = Image_1.compositeImagesAsync;\nexports.generateFaviconAsync = Image_1.generateFaviconAsync;\nexports.generateImageAsync = Image_1.generateImageAsync;\n\nvar jimp_1 = require(\"./jimp\");\n\nexports.jimpAsync = jimp_1.jimpAsync;\n\nvar sharp_1 = require(\"./sharp\");\n\nexports.findSharpInstanceAsync = sharp_1.findSharpInstanceAsync;\nexports.isAvailableAsync = sharp_1.isAvailableAsync;\nexports.sharpAsync = sharp_1.sharpAsync;\n\nfunction imageAsync(options) {\n  var commands,\n      _args = arguments;\n  return _regeneratorRuntime.async(function imageAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          commands = _args.length > 1 && _args[1] !== undefined ? _args[1] : [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(sharp_1.isAvailableAsync());\n\n        case 3:\n          if (!_context.sent) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", sharp_1.sharpAsync(options, commands));\n\n        case 5:\n          return _context.abrupt(\"return\", jimp_1.jimpAsync(_extends(_extends({}, options), {\n            format: jimp_1.convertFormat(options.format),\n            originalInput: options.input\n          }), commands));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.imageAsync = imageAsync;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,WAAA,CAAA;;AA2BE,OAAA,CAAA,KAAA,GAAA,KAAA;;AA1BF,IAAA,OAAA,GAAA,OAAA,WAAA;;AA2BE,OAAA,CAAA,oBAAA,GA3BO,OAAA,CAAA,oBA2BP;AAFA,OAAA,CAAA,oBAAA,GAzB6B,OAAA,CAAA,oBAyB7B;AADA,OAAA,CAAA,kBAAA,GAxBmD,OAAA,CAAA,kBAwBnD;;AAtBF,IAAA,MAAA,GAAA,OAAA,UAAA;;AAkBE,OAAA,CAAA,SAAA,GAlBsB,MAAA,CAAA,SAkBtB;;AAjBF,IAAA,OAAA,GAAA,OAAA,WAAA;;AAkBE,OAAA,CAAA,sBAAA,GAlBO,OAAA,CAAA,sBAkBP;AACA,OAAA,CAAA,gBAAA,GAnB+B,OAAA,CAAA,gBAmB/B;AACA,OAAA,CAAA,UAAA,GApBiD,OAAA,CAAA,UAoBjD;;AAjBK,SAAe,UAAf,CACL,OADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEL,UAAA,QAFK,2DAE6B,EAF7B;AAAA;AAAA,2CAIK,OAAA,CAAA,gBAAA,EAJL;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,2CAKI,OAAA,CAAA,UAAA,CAAW,OAAX,EAAoB,QAApB,CALJ;;AAAA;AAAA,2CAOE,MAAA,CAAA,SAAA,CAAS,SAAA,SAAA,EAAA,EACT,OADS,CAAA,EACF;AAAE,YAAA,MAAM,EAAE,MAAA,CAAA,aAAA,CAAc,OAAO,CAAC,MAAtB,CAAV;AAAyC,YAAA,aAAa,EAAE,OAAO,CAAC;AAAhE,WADE,CAAT,EAEL,QAFK,CAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import * as Cache from './Cache';\nimport { compositeImagesAsync, generateFaviconAsync, generateImageAsync } from './Image';\nimport { ImageFormat, ImageOptions, ResizeMode } from './Image.types';\nimport { convertFormat, jimpAsync } from './jimp';\nimport { findSharpInstanceAsync, isAvailableAsync, sharpAsync } from './sharp';\nimport { SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\n\nexport async function imageAsync(\n  options: SharpGlobalOptions,\n  commands: SharpCommandOptions[] = []\n) {\n  if (await isAvailableAsync()) {\n    return sharpAsync(options, commands);\n  }\n  return jimpAsync(\n    { ...options, format: convertFormat(options.format), originalInput: options.input },\n    commands\n  );\n}\n\nexport {\n  jimpAsync,\n  findSharpInstanceAsync,\n  isAvailableAsync,\n  sharpAsync,\n  generateImageAsync,\n  generateFaviconAsync,\n  Cache,\n  compositeImagesAsync,\n};\n\nexport { SharpGlobalOptions, SharpCommandOptions, ResizeMode, ImageFormat, ImageOptions };\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}