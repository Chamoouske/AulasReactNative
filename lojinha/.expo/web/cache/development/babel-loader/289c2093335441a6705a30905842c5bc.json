{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ImageBackground/index.js\";\n\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport Image from \"../Image\";\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nvar emptyObject = {};\nvar ImageBackground = forwardRef(function (props, forwardedRef) {\n  var children = props.children,\n      _props$style = props.style,\n      style = _props$style === void 0 ? emptyObject : _props$style,\n      imageStyle = props.imageStyle,\n      imageRef = props.imageRef,\n      rest = _objectWithoutProperties(props, [\"children\", \"style\", \"imageStyle\", \"imageRef\"]);\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n      height = _StyleSheet$flatten.height,\n      width = _StyleSheet$flatten.width;\n\n  return React.createElement(View, {\n    ref: forwardedRef,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, _extends({}, rest, {\n    ref: imageRef,\n    style: [StyleSheet.absoluteFill, {\n      width: width,\n      height: height,\n      zIndex: -1\n    }, imageStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), children);\n});\nImageBackground.displayName = 'ImageBackground';\nexport default ImageBackground;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/ImageBackground/index.js"],"names":["React","forwardRef","Image","StyleSheet","View","emptyObject","ImageBackground","props","forwardedRef","children","style","imageStyle","imageRef","rest","flatten","height","width","absoluteFill","zIndex","displayName"],"mappings":";;;;;;AAYA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AASA,IAAMC,WAAW,GAAG,EAApB;AAKA,IAAMC,eAAe,GAAGL,UAAU,CAA0B,UAACM,KAAD,EAAQC,YAAR,EAAyB;AAAA,MAC3EC,QAD2E,GACVF,KADU,CAC3EE,QAD2E;AAAA,qBACVF,KADU,CACjEG,KADiE;AAAA,MACjEA,KADiE,6BACzDL,WADyD;AAAA,MAC5CM,UAD4C,GACVJ,KADU,CAC5CI,UAD4C;AAAA,MAChCC,QADgC,GACVL,KADU,CAChCK,QADgC;AAAA,MACnBC,IADmB,4BACVN,KADU;;AAAA,4BAEzDJ,UAAU,CAACW,OAAX,CAAmBJ,KAAnB,CAFyD;AAAA,MAE3EK,MAF2E,uBAE3EA,MAF2E;AAAA,MAEnEC,KAFmE,uBAEnEA,KAFmE;;AAInF,SACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAER,YAAX;AAAyB,IAAA,KAAK,EAAEE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,eACMG,IADN;AAEE,IAAA,GAAG,EAAED,QAFP;AAGE,IAAA,KAAK,EAAE,CACLT,UAAU,CAACc,YADN,EAEL;AAQED,MAAAA,KAAK,EAALA,KARF;AASED,MAAAA,MAAM,EAANA,MATF;AAUEG,MAAAA,MAAM,EAAE,CAAC;AAVX,KAFK,EAcLP,UAdK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAqBGF,QArBH,CADF;AAyBD,CA7BiC,CAAlC;AA+BAH,eAAe,CAACa,WAAhB,GAA8B,iBAA9B;AAEA,eAAeb,eAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { ImageProps } from '../Image';\nimport type { ViewProps } from '../View';\n\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport Image from '../Image';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\ntype ImageBackgroundProps = {\n  ...ImageProps,\n  imageRef?: any,\n  imageStyle?: $PropertyType<ImageProps, 'style'>,\n  style?: $PropertyType<ViewProps, 'style'>\n};\n\nconst emptyObject = {};\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n */\nconst ImageBackground = forwardRef<ImageBackgroundProps, *>((props, forwardedRef) => {\n  const { children, style = emptyObject, imageStyle, imageRef, ...rest } = props;\n  const { height, width } = StyleSheet.flatten(style);\n\n  return (\n    <View ref={forwardedRef} style={style}>\n      <Image\n        {...rest}\n        ref={imageRef}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            // Temporary Workaround:\n            // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n            // (which is not quite correct), and these styles conflict with explicitly set styles\n            // of <ImageBackground> and with our internal layout model here.\n            // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n            // This workaround should be removed after implementing proper support of\n            // intrinsic content size of the <Image>.\n            width,\n            height,\n            zIndex: -1\n          },\n          imageStyle\n        ]}\n      />\n      {children}\n    </View>\n  );\n});\n\nImageBackground.displayName = 'ImageBackground';\n\nexport default ImageBackground;\n"]},"metadata":{},"sourceType":"module"}