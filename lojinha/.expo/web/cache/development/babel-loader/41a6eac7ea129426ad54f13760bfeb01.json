{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar md = fs.readFileSync(path.join(__dirname, '../src/utils/errors.md'), 'utf8');\nvar errorMap = md.split(/^#/gm).slice(1).reduce(function (errors, str) {\n  var _str$split = str.split(/^.*?(\\d+)\\s*\\n/),\n      _str$split2 = _slicedToArray(_str$split, 3),\n      code = _str$split2[1],\n      message = _str$split2[2];\n\n  errors[code] = message;\n  return errors;\n}, {});\nfs.writeFileSync(path.join(__dirname, '../src/utils/errors.js'), \"export default \" + JSON.stringify(errorMap) + \";\", 'utf8');","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/styled-components/scripts/generateErrorMap.js"],"names":["fs","require","path","md","readFileSync","join","__dirname","errorMap","split","slice","reduce","errors","str","code","message","writeFileSync","JSON","stringify"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAME,EAAE,GAAGH,EAAE,CAACI,YAAH,CAAgBF,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAhB,EAAgE,MAAhE,CAAX;AAEA,IAAMC,QAAQ,GAAGJ,EAAE,CAChBK,KADc,CACR,MADQ,EAEdC,KAFc,CAER,CAFQ,EAGdC,MAHc,CAGP,UAACC,MAAD,EAASC,GAAT,EAAiB;AAAA,mBACGA,GAAG,CAACJ,KAAJ,CAAU,gBAAV,CADH;AAAA;AAAA,MACdK,IADc;AAAA,MACRC,OADQ;;AAIvBH,EAAAA,MAAM,CAACE,IAAD,CAAN,GAAeC,OAAf;AAEA,SAAOH,MAAP;AACD,CAVc,EAUZ,EAVY,CAAjB;AAYAX,EAAE,CAACe,aAAH,CACEb,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CADF,sBAEoBU,IAAI,CAACC,SAAL,CAAeV,QAAf,CAFpB,QAGE,MAHF","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst md = fs.readFileSync(path.join(__dirname, '../src/utils/errors.md'), 'utf8');\n\nconst errorMap = md\n  .split(/^#/gm)\n  .slice(1)\n  .reduce((errors, str) => {\n    const [, code, message] = str.split(/^.*?(\\d+)\\s*\\n/);\n\n    // eslint-disable-next-line no-param-reassign\n    errors[code] = message;\n\n    return errors;\n  }, {});\n\nfs.writeFileSync(\n  path.join(__dirname, '../src/utils/errors.js'),\n  `export default ${JSON.stringify(errorMap)};`,\n  'utf8'\n);\n"]},"metadata":{},"sourceType":"script"}