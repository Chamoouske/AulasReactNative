{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/PlatformColor/PlatformColorExample.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nimport Platform from \"../../../../Libraries/Utilities/Platform\";\nvar ColorAndroid = ReactNative.ColorAndroid,\n    DynamicColorIOS = ReactNative.DynamicColorIOS,\n    PlatformColor = ReactNative.PlatformColor,\n    StyleSheet = ReactNative.StyleSheet,\n    Text = ReactNative.Text,\n    View = ReactNative.View;\n\nfunction PlatformColorsExample() {\n  function createTable() {\n    var colors = [];\n\n    if (Platform.OS === 'ios') {\n      colors = [{\n        label: 'label',\n        color: PlatformColor('label')\n      }, {\n        label: 'secondaryLabel',\n        color: PlatformColor('secondaryLabel')\n      }, {\n        label: 'tertiaryLabel',\n        color: PlatformColor('tertiaryLabel')\n      }, {\n        label: 'quaternaryLabel',\n        color: PlatformColor('quaternaryLabel')\n      }, {\n        label: 'systemFill',\n        color: PlatformColor('systemFill')\n      }, {\n        label: 'secondarySystemFill',\n        color: PlatformColor('secondarySystemFill')\n      }, {\n        label: 'tertiarySystemFill',\n        color: PlatformColor('tertiarySystemFill')\n      }, {\n        label: 'quaternarySystemFill',\n        color: PlatformColor('quaternarySystemFill')\n      }, {\n        label: 'placeholderText',\n        color: PlatformColor('placeholderText')\n      }, {\n        label: 'systemBackground',\n        color: PlatformColor('systemBackground')\n      }, {\n        label: 'secondarySystemBackground',\n        color: PlatformColor('secondarySystemBackground')\n      }, {\n        label: 'tertiarySystemBackground',\n        color: PlatformColor('tertiarySystemBackground')\n      }, {\n        label: 'systemGroupedBackground',\n        color: PlatformColor('systemGroupedBackground')\n      }, {\n        label: 'secondarySystemGroupedBackground',\n        color: PlatformColor('secondarySystemGroupedBackground')\n      }, {\n        label: 'tertiarySystemGroupedBackground',\n        color: PlatformColor('tertiarySystemGroupedBackground')\n      }, {\n        label: 'separator',\n        color: PlatformColor('separator')\n      }, {\n        label: 'opaqueSeparator',\n        color: PlatformColor('opaqueSeparator')\n      }, {\n        label: 'link',\n        color: PlatformColor('link')\n      }, {\n        label: 'darkText',\n        color: PlatformColor('darkText')\n      }, {\n        label: 'lightText',\n        color: PlatformColor('lightText')\n      }, {\n        label: 'systemBlue',\n        color: PlatformColor('systemBlue')\n      }, {\n        label: 'systemBrown',\n        color: PlatformColor('systemBrown')\n      }, {\n        label: 'systemGreen',\n        color: PlatformColor('systemGreen')\n      }, {\n        label: 'systemIndigo',\n        color: PlatformColor('systemIndigo')\n      }, {\n        label: 'systemOrange',\n        color: PlatformColor('systemOrange')\n      }, {\n        label: 'systemPink',\n        color: PlatformColor('systemPink')\n      }, {\n        label: 'systemPurple',\n        color: PlatformColor('systemPurple')\n      }, {\n        label: 'systemRed',\n        color: PlatformColor('systemRed')\n      }, {\n        label: 'systemTeal',\n        color: PlatformColor('systemTeal')\n      }, {\n        label: 'systemYellow',\n        color: PlatformColor('systemYellow')\n      }, {\n        label: 'systemGray',\n        color: PlatformColor('systemGray')\n      }, {\n        label: 'systemGray2',\n        color: PlatformColor('systemGray2')\n      }, {\n        label: 'systemGray3',\n        color: PlatformColor('systemGray3')\n      }, {\n        label: 'systemGray4',\n        color: PlatformColor('systemGray4')\n      }, {\n        label: 'systemGray5',\n        color: PlatformColor('systemGray5')\n      }, {\n        label: 'systemGray6',\n        color: PlatformColor('systemGray6')\n      }];\n    } else if (Platform.OS === 'android') {\n      colors = [{\n        label: '?attr/colorAccent',\n        color: PlatformColor('?attr/colorAccent')\n      }, {\n        label: '?attr/colorBackgroundFloating',\n        color: PlatformColor('?attr/colorBackgroundFloating')\n      }, {\n        label: '?attr/colorButtonNormal',\n        color: PlatformColor('?attr/colorButtonNormal')\n      }, {\n        label: '?attr/colorControlActivated',\n        color: PlatformColor('?attr/colorControlActivated')\n      }, {\n        label: '?attr/colorControlHighlight',\n        color: PlatformColor('?attr/colorControlHighlight')\n      }, {\n        label: '?attr/colorControlNormal',\n        color: PlatformColor('?attr/colorControlNormal')\n      }, {\n        label: '?android:colorError',\n        color: PlatformColor('?android:colorError')\n      }, {\n        label: '?android:attr/colorError',\n        color: PlatformColor('?android:attr/colorError')\n      }, {\n        label: '?attr/colorPrimary',\n        color: PlatformColor('?attr/colorPrimary')\n      }, {\n        label: '?colorPrimaryDark',\n        color: PlatformColor('?colorPrimaryDark')\n      }, {\n        label: '@android:color/holo_purple',\n        color: PlatformColor('@android:color/holo_purple')\n      }, {\n        label: '@android:color/holo_green_light',\n        color: PlatformColor('@android:color/holo_green_light')\n      }, {\n        label: '@color/catalyst_redbox_background',\n        color: PlatformColor('@color/catalyst_redbox_background')\n      }, {\n        label: '@color/catalyst_logbox_background',\n        color: PlatformColor('@color/catalyst_logbox_background')\n      }];\n    }\n\n    var table = [];\n\n    for (var _i = 0, _colors = colors; _i < _colors.length; _i++) {\n      var color = _colors[_i];\n      table.push(React.createElement(View, {\n        style: styles.row,\n        key: color.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.labelCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, color.label), React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n          backgroundColor: color.color\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return table;\n  }\n\n  return React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 10\n    }\n  }, createTable());\n}\n\nfunction FallbackColorsExample() {\n  var color = {};\n\n  if (Platform.OS === 'ios') {\n    color = {\n      label: \"PlatformColor('bogus', 'systemGreenColor')\",\n      color: PlatformColor('bogus', 'systemGreenColor')\n    };\n  } else if (Platform.OS === 'android') {\n    color = {\n      label: \"PlatformColor('bogus', '@color/catalyst_redbox_background')\",\n      color: PlatformColor('bogus', '@color/catalyst_redbox_background')\n    };\n  } else {\n    throw 'Unexpected Platform.OS: ' + Platform.OS;\n  }\n\n  return React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, color.label), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n      backgroundColor: color.color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction DynamicColorsExample() {\n  return Platform.OS === 'ios' ? React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, \"DynamicColorIOS(\", '{\\n', '  ', \"light: 'red', dark: 'blue'\", '\\n', '}', \")\"), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n      backgroundColor: DynamicColorIOS({\n        light: 'red',\n        dark: 'blue'\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"DynamicColorIOS(\", '{\\n', '  ', \"light: PlatformColor('systemBlueColor'),\", '\\n', '  ', \"dark: PlatformColor('systemRedColor'),\", '\\n', '}', \")\"), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n      backgroundColor: DynamicColorIOS({\n        light: PlatformColor('systemBlueColor'),\n        dark: PlatformColor('systemRedColor')\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }))) : React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, \"Not applicable on this platform\");\n}\n\nfunction AndroidColorsExample() {\n  return Platform.OS === 'android' ? React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, \"ColorAndroid('?attr/colorAccent')\"), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n      backgroundColor: ColorAndroid('?attr/colorAccent')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }))) : React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, \"Not applicable on this platform\");\n}\n\nfunction VariantColorsExample() {\n  return React.createElement(View, {\n    style: styles.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, Platform.OS === 'ios' ? \"DynamicColorIOS({light: 'red', dark: 'blue'})\" : \"ColorAndroid('?attr/colorAccent')\"), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.colorCell), {}, {\n      backgroundColor: Platform.OS === 'ios' ? DynamicColorIOS({\n        light: 'red',\n        dark: 'blue'\n      }) : ColorAndroid('?attr/colorAccent')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  column: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  row: {\n    flex: 0.75,\n    flexDirection: 'row'\n  },\n  labelCell: _objectSpread({\n    flex: 1,\n    alignItems: 'stretch'\n  }, Platform.select({\n    ios: {\n      color: PlatformColor('labelColor')\n    },\n    default: {\n      color: 'black'\n    }\n  })),\n  colorCell: {\n    flex: 0.25,\n    alignItems: 'stretch'\n  }\n});\nexports.title = 'PlatformColor';\nexports.description = 'Examples that show how PlatformColors may be used in an app.';\nexports.examples = [{\n  title: 'Platform Colors',\n  render: function render() {\n    return React.createElement(PlatformColorsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Fallback Colors',\n  render: function render() {\n    return React.createElement(FallbackColorsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'iOS Dynamic Colors',\n  render: function render() {\n    return React.createElement(DynamicColorsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Android Colors',\n  render: function render() {\n    return React.createElement(AndroidColorsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Variant Colors',\n  render: function render() {\n    return React.createElement(VariantColorsExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/PlatformColor/PlatformColorExample.js"],"names":["React","require","Platform","ColorAndroid","ReactNative","DynamicColorIOS","PlatformColor","StyleSheet","Text","View","PlatformColorsExample","createTable","colors","OS","label","color","table","push","styles","row","labelCell","colorCell","backgroundColor","column","FallbackColorsExample","DynamicColorsExample","light","dark","AndroidColorsExample","VariantColorsExample","create","flex","flexDirection","alignItems","select","ios","default","exports","title","description","examples","render"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nimport Platform from '../../../../Libraries/Utilities/Platform';\nconst {\n  ColorAndroid,\n  DynamicColorIOS,\n  PlatformColor,\n  StyleSheet,\n  Text,\n  View,\n} = ReactNative;\n\nfunction PlatformColorsExample() {\n  function createTable() {\n    let colors = [];\n    if (Platform.OS === 'ios') {\n      colors = [\n        // https://developer.apple.com/documentation/uikit/uicolor/ui_element_colors\n        // Label Colors\n        {label: 'label', color: PlatformColor('label')},\n        {\n          label: 'secondaryLabel',\n          color: PlatformColor('secondaryLabel'),\n        },\n        {\n          label: 'tertiaryLabel',\n          color: PlatformColor('tertiaryLabel'),\n        },\n        {\n          label: 'quaternaryLabel',\n          color: PlatformColor('quaternaryLabel'),\n        },\n        // Fill Colors\n        {label: 'systemFill', color: PlatformColor('systemFill')},\n        {\n          label: 'secondarySystemFill',\n          color: PlatformColor('secondarySystemFill'),\n        },\n        {\n          label: 'tertiarySystemFill',\n          color: PlatformColor('tertiarySystemFill'),\n        },\n        {\n          label: 'quaternarySystemFill',\n          color: PlatformColor('quaternarySystemFill'),\n        },\n        // Text Colors\n        {\n          label: 'placeholderText',\n          color: PlatformColor('placeholderText'),\n        },\n        // Standard Content Background Colors\n        {\n          label: 'systemBackground',\n          color: PlatformColor('systemBackground'),\n        },\n        {\n          label: 'secondarySystemBackground',\n          color: PlatformColor('secondarySystemBackground'),\n        },\n        {\n          label: 'tertiarySystemBackground',\n          color: PlatformColor('tertiarySystemBackground'),\n        },\n        // Grouped Content Background Colors\n        {\n          label: 'systemGroupedBackground',\n          color: PlatformColor('systemGroupedBackground'),\n        },\n        {\n          label: 'secondarySystemGroupedBackground',\n          color: PlatformColor('secondarySystemGroupedBackground'),\n        },\n        {\n          label: 'tertiarySystemGroupedBackground',\n          color: PlatformColor('tertiarySystemGroupedBackground'),\n        },\n        // Separator Colors\n        {label: 'separator', color: PlatformColor('separator')},\n        {\n          label: 'opaqueSeparator',\n          color: PlatformColor('opaqueSeparator'),\n        },\n        // Link Color\n        {label: 'link', color: PlatformColor('link')},\n        // Nonadaptable Colors\n        {label: 'darkText', color: PlatformColor('darkText')},\n        {label: 'lightText', color: PlatformColor('lightText')},\n        // https://developer.apple.com/documentation/uikit/uicolor/standard_colors\n        // Adaptable Colors\n        {label: 'systemBlue', color: PlatformColor('systemBlue')},\n        {label: 'systemBrown', color: PlatformColor('systemBrown')},\n        {label: 'systemGreen', color: PlatformColor('systemGreen')},\n        {label: 'systemIndigo', color: PlatformColor('systemIndigo')},\n        {label: 'systemOrange', color: PlatformColor('systemOrange')},\n        {label: 'systemPink', color: PlatformColor('systemPink')},\n        {label: 'systemPurple', color: PlatformColor('systemPurple')},\n        {label: 'systemRed', color: PlatformColor('systemRed')},\n        {label: 'systemTeal', color: PlatformColor('systemTeal')},\n        {label: 'systemYellow', color: PlatformColor('systemYellow')},\n        // Adaptable Gray Colors\n        {label: 'systemGray', color: PlatformColor('systemGray')},\n        {label: 'systemGray2', color: PlatformColor('systemGray2')},\n        {label: 'systemGray3', color: PlatformColor('systemGray3')},\n        {label: 'systemGray4', color: PlatformColor('systemGray4')},\n        {label: 'systemGray5', color: PlatformColor('systemGray5')},\n        {label: 'systemGray6', color: PlatformColor('systemGray6')},\n      ];\n    } else if (Platform.OS === 'android') {\n      colors = [\n        {label: '?attr/colorAccent', color: PlatformColor('?attr/colorAccent')},\n        {\n          label: '?attr/colorBackgroundFloating',\n          color: PlatformColor('?attr/colorBackgroundFloating'),\n        },\n        {\n          label: '?attr/colorButtonNormal',\n          color: PlatformColor('?attr/colorButtonNormal'),\n        },\n        {\n          label: '?attr/colorControlActivated',\n          color: PlatformColor('?attr/colorControlActivated'),\n        },\n        {\n          label: '?attr/colorControlHighlight',\n          color: PlatformColor('?attr/colorControlHighlight'),\n        },\n        {\n          label: '?attr/colorControlNormal',\n          color: PlatformColor('?attr/colorControlNormal'),\n        },\n        {\n          label: '?android:colorError',\n          color: PlatformColor('?android:colorError'),\n        },\n        {\n          label: '?android:attr/colorError',\n          color: PlatformColor('?android:attr/colorError'),\n        },\n        {\n          label: '?attr/colorPrimary',\n          color: PlatformColor('?attr/colorPrimary'),\n        },\n        {label: '?colorPrimaryDark', color: PlatformColor('?colorPrimaryDark')},\n        {\n          label: '@android:color/holo_purple',\n          color: PlatformColor('@android:color/holo_purple'),\n        },\n        {\n          label: '@android:color/holo_green_light',\n          color: PlatformColor('@android:color/holo_green_light'),\n        },\n        {\n          label: '@color/catalyst_redbox_background',\n          color: PlatformColor('@color/catalyst_redbox_background'),\n        },\n        {\n          label: '@color/catalyst_logbox_background',\n          color: PlatformColor('@color/catalyst_logbox_background'),\n        },\n      ];\n    }\n\n    let table = [];\n    for (let color of colors) {\n      table.push(\n        <View style={styles.row} key={color.label}>\n          <Text style={styles.labelCell}>{color.label}</Text>\n          <View\n            style={{\n              ...styles.colorCell,\n              backgroundColor: color.color,\n            }}\n          />\n        </View>,\n      );\n    }\n    return table;\n  }\n\n  return <View style={styles.column}>{createTable()}</View>;\n}\n\nfunction FallbackColorsExample() {\n  let color = {};\n  if (Platform.OS === 'ios') {\n    color = {\n      label: \"PlatformColor('bogus', 'systemGreenColor')\",\n      color: PlatformColor('bogus', 'systemGreenColor'),\n    };\n  } else if (Platform.OS === 'android') {\n    color = {\n      label: \"PlatformColor('bogus', '@color/catalyst_redbox_background')\",\n      color: PlatformColor('bogus', '@color/catalyst_redbox_background'),\n    };\n  } else {\n    throw 'Unexpected Platform.OS: ' + Platform.OS;\n  }\n\n  return (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <Text style={styles.labelCell}>{color.label}</Text>\n        <View\n          style={{\n            ...styles.colorCell,\n            backgroundColor: color.color,\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nfunction DynamicColorsExample() {\n  return Platform.OS === 'ios' ? (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <Text style={styles.labelCell}>\n          DynamicColorIOS({'{\\n'}\n          {'  '}light: 'red', dark: 'blue'{'\\n'}\n          {'}'})\n        </Text>\n        <View\n          style={{\n            ...styles.colorCell,\n            backgroundColor: DynamicColorIOS({light: 'red', dark: 'blue'}),\n          }}\n        />\n      </View>\n      <View style={styles.row}>\n        <Text style={styles.labelCell}>\n          DynamicColorIOS({'{\\n'}\n          {'  '}light: PlatformColor('systemBlueColor'),{'\\n'}\n          {'  '}dark: PlatformColor('systemRedColor'),{'\\n'}\n          {'}'})\n        </Text>\n        <View\n          style={{\n            ...styles.colorCell,\n            backgroundColor: DynamicColorIOS({\n              light: PlatformColor('systemBlueColor'),\n              dark: PlatformColor('systemRedColor'),\n            }),\n          }}\n        />\n      </View>\n    </View>\n  ) : (\n    <Text style={styles.labelCell}>Not applicable on this platform</Text>\n  );\n}\n\nfunction AndroidColorsExample() {\n  return Platform.OS === 'android' ? (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <Text style={styles.labelCell}>ColorAndroid('?attr/colorAccent')</Text>\n        <View\n          style={{\n            ...styles.colorCell,\n            backgroundColor: ColorAndroid('?attr/colorAccent'),\n          }}\n        />\n      </View>\n    </View>\n  ) : (\n    <Text style={styles.labelCell}>Not applicable on this platform</Text>\n  );\n}\n\nfunction VariantColorsExample() {\n  return (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <Text style={styles.labelCell}>\n          {Platform.OS === 'ios'\n            ? \"DynamicColorIOS({light: 'red', dark: 'blue'})\"\n            : \"ColorAndroid('?attr/colorAccent')\"}\n        </Text>\n        <View\n          style={{\n            ...styles.colorCell,\n            backgroundColor:\n              Platform.OS === 'ios'\n                ? DynamicColorIOS({light: 'red', dark: 'blue'})\n                : ColorAndroid('?attr/colorAccent'),\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  column: {flex: 1, flexDirection: 'column'},\n  row: {flex: 0.75, flexDirection: 'row'},\n  labelCell: {\n    flex: 1,\n    alignItems: 'stretch',\n    ...Platform.select({\n      ios: {color: PlatformColor('labelColor')},\n      default: {color: 'black'},\n    }),\n  },\n  colorCell: {flex: 0.25, alignItems: 'stretch'},\n});\n\nexports.title = 'PlatformColor';\nexports.description =\n  'Examples that show how PlatformColors may be used in an app.';\nexports.examples = [\n  {\n    title: 'Platform Colors',\n    render(): React.Element<any> {\n      return <PlatformColorsExample />;\n    },\n  },\n  {\n    title: 'Fallback Colors',\n    render(): React.Element<any> {\n      return <FallbackColorsExample />;\n    },\n  },\n  {\n    title: 'iOS Dynamic Colors',\n    render(): React.Element<any> {\n      return <DynamicColorsExample />;\n    },\n  },\n  {\n    title: 'Android Colors',\n    render(): React.Element<any> {\n      return <AndroidColorsExample />;\n    },\n  },\n  {\n    title: 'Variant Colors',\n    render(): React.Element<any> {\n      return <VariantColorsExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}