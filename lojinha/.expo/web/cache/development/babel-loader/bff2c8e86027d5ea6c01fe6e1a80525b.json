{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/jest/mockScrollView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar View = require(\"../Libraries/Components/View/View\");\n\nvar requireNativeComponent = require(\"../Libraries/ReactNative/requireNativeComponent\");\n\nvar RCTScrollView = requireNativeComponent('RCTScrollView');\n\nfunction mockScrollView(BaseComponent) {\n  var ScrollViewMock = function (_BaseComponent) {\n    _inherits(ScrollViewMock, _BaseComponent);\n\n    var _super = _createSuper(ScrollViewMock);\n\n    function ScrollViewMock() {\n      _classCallCheck(this, ScrollViewMock);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(ScrollViewMock, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(RCTScrollView, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }\n        }), this.props.refreshControl, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, this.props.children));\n      }\n    }]);\n\n    return ScrollViewMock;\n  }(BaseComponent);\n\n  return ScrollViewMock;\n}\n\nmodule.exports = mockScrollView;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/jest/mockScrollView.js"],"names":["React","require","View","requireNativeComponent","RCTScrollView","mockScrollView","BaseComponent","ScrollViewMock","props","refreshControl","children","module","exports"],"mappings":"AAYA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,qCAApB;;AAEA,IAAME,sBAAsB,GAAGF,OAAO,mDAAtC;;AACA,IAAMG,aAAyB,GAAGD,sBAAsB,CAAC,eAAD,CAAxD;;AAEA,SAASE,cAAT,CAAwBC,aAAxB,EAAmD;AAAA,MAC3CC,cAD2C;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAE/C,kBAA8C;AAC5C,eACE,oBAAC,aAAD,eAAmB,KAAKC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACG,KAAKA,KAAL,CAAWC,cADd,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKD,KAAL,CAAWE,QAAlB,CAFF,CADF;AAMD;AAT8C;;AAAA;AAAA,IACpBJ,aADoB;;AAWjD,SAAOC,cAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAkBP,cAAlB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/* eslint-env jest */\n\n'use strict';\n\nconst React = require('react');\nconst View = require('../Libraries/Components/View/View');\n\nconst requireNativeComponent = require('../Libraries/ReactNative/requireNativeComponent');\nconst RCTScrollView: $FlowFixMe = requireNativeComponent('RCTScrollView');\n\nfunction mockScrollView(BaseComponent: $FlowFixMe) {\n  class ScrollViewMock extends BaseComponent {\n    render(): React.Element<typeof RCTScrollView> {\n      return (\n        <RCTScrollView {...this.props}>\n          {this.props.refreshControl}\n          <View>{this.props.children}</View>\n        </RCTScrollView>\n      );\n    }\n  }\n  return ScrollViewMock;\n}\n\nmodule.exports = (mockScrollView: $FlowFixMe);\n"]},"metadata":{},"sourceType":"script"}