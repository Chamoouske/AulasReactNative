{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/SubviewsClippingTestModule.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nvar ClippableView = requireNativeComponent('ClippableView');\n\nvar ClippingSample1 = function (_React$Component) {\n  _inherits(ClippingSample1, _React$Component);\n\n  var _super = _createSuper(ClippingSample1);\n\n  function ClippingSample1() {\n    _classCallCheck(this, ClippingSample1);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClippingSample1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"outer\",\n        style: sample1Styles.outer,\n        removeClippedSubviews: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"inner1\",\n        style: [sample1Styles.inner, sample1Styles.inner1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner2\",\n        style: [sample1Styles.inner, sample1Styles.inner2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner3\",\n        style: [sample1Styles.inner, sample1Styles.inner3],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner4\",\n        style: [sample1Styles.inner, sample1Styles.inner4],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner5\",\n        style: [sample1Styles.inner, sample1Styles.inner5],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ClippingSample1;\n}(React.Component);\n\nvar sample1Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red'\n  },\n  inner: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    backgroundColor: 'green'\n  },\n  inner1: {\n    top: -150,\n    left: 50\n  },\n  inner2: {\n    top: 50,\n    left: 50\n  },\n  inner3: {\n    top: 250,\n    left: 50\n  },\n  inner4: {\n    left: -150,\n    top: 50\n  },\n  inner5: {\n    left: 250,\n    top: 50\n  }\n});\n\nvar ClippingSample2 = function (_React$Component2) {\n  _inherits(ClippingSample2, _React$Component2);\n\n  var _super2 = _createSuper(ClippingSample2);\n\n  function ClippingSample2() {\n    _classCallCheck(this, ClippingSample2);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ClippingSample2, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"outer\",\n        style: sample2Styles.outer,\n        removeClippedSubviews: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"complexInner\",\n        style: sample2Styles.complexInner,\n        removeClippedSubviews: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"inner1\",\n        style: [sample2Styles.inner, sample2Styles.inner1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner2\",\n        style: [sample2Styles.inner, sample2Styles.inner2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner3\",\n        style: [sample2Styles.inner, sample2Styles.inner3],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner4\",\n        style: [sample2Styles.inner, sample2Styles.inner4],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ClippingSample2;\n}(React.Component);\n\nvar sample2Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red'\n  },\n  complexInner: {\n    position: 'absolute',\n    width: 200,\n    height: 200,\n    left: 100,\n    top: 100,\n    backgroundColor: 'green'\n  },\n  inner: {\n    position: 'absolute',\n    width: 80,\n    height: 80,\n    backgroundColor: 'blue'\n  },\n  inner1: {\n    left: 10,\n    top: 10\n  },\n  inner2: {\n    right: 10,\n    top: 10\n  },\n  inner3: {\n    left: 10,\n    bottom: 10\n  },\n  inner4: {\n    right: 10,\n    bottom: 10\n  }\n});\n\nvar UpdatingSample1 = function (_React$Component3) {\n  _inherits(UpdatingSample1, _React$Component3);\n\n  var _super3 = _createSuper(UpdatingSample1);\n\n  function UpdatingSample1() {\n    _classCallCheck(this, UpdatingSample1);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(UpdatingSample1, [{\n    key: \"render\",\n    value: function render() {\n      var inner1Styles = [updating1Styles.inner1, {\n        height: this.props.update1 ? 200 : 100\n      }];\n      var inner2Styles = [updating1Styles.inner2, {\n        top: this.props.update2 ? 200 : 50\n      }];\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"outer\",\n        style: updating1Styles.outer,\n        removeClippedSubviews: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"inner1\",\n        style: inner1Styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }), React.createElement(ClippableView, {\n        clippableViewID: \"inner2\",\n        style: inner2Styles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return UpdatingSample1;\n}(React.Component);\n\nvar updating1Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red'\n  },\n  inner1: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    left: 50,\n    top: -100,\n    backgroundColor: 'green'\n  },\n  inner2: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    left: 50,\n    top: 50,\n    backgroundColor: 'green'\n  }\n});\n\nvar UpdatingSample2 = function (_React$Component4) {\n  _inherits(UpdatingSample2, _React$Component4);\n\n  var _super4 = _createSuper(UpdatingSample2);\n\n  function UpdatingSample2() {\n    _classCallCheck(this, UpdatingSample2);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(UpdatingSample2, [{\n    key: \"render\",\n    value: function render() {\n      var outerStyles = [updating2Styles.outer, {\n        height: this.props.update ? 200 : 100\n      }];\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"outer\",\n        style: outerStyles,\n        removeClippedSubviews: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, React.createElement(ClippableView, {\n        clippableViewID: \"inner\",\n        style: updating2Styles.inner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return UpdatingSample2;\n}(React.Component);\n\nvar updating2Styles = StyleSheet.create({\n  outer: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'red'\n  },\n  inner: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    top: 100,\n    backgroundColor: 'green'\n  }\n});\n\nvar ScrollViewTest = function (_React$Component5) {\n  _inherits(ScrollViewTest, _React$Component5);\n\n  var _super5 = _createSuper(ScrollViewTest);\n\n  function ScrollViewTest() {\n    _classCallCheck(this, ScrollViewTest);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(ScrollViewTest, [{\n    key: \"render\",\n    value: function render() {\n      var children = [];\n\n      for (var i = 0; i < 4; i++) {\n        children[i] = React.createElement(ClippableView, {\n          key: i,\n          style: scrollTestStyles.row,\n          clippableViewID: '' + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }\n        });\n      }\n\n      for (var _i = 4; _i < 6; _i++) {\n        var viewID = 'C' + (_i - 4);\n        children[_i] = React.createElement(ClippableView, {\n          key: _i,\n          style: scrollTestStyles.complex,\n          clippableViewID: viewID,\n          removeClippedSubviews: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }\n        }, React.createElement(ClippableView, {\n          style: scrollTestStyles.inner,\n          clippableViewID: viewID + '.1',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }\n        }), React.createElement(ClippableView, {\n          style: scrollTestStyles.inner,\n          clippableViewID: viewID + '.2',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        removeClippedSubviews: true,\n        style: scrollTestStyles.scrollView,\n        testID: \"scroll_view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return ScrollViewTest;\n}(React.Component);\n\nvar scrollTestStyles = StyleSheet.create({\n  scrollView: {\n    width: 200,\n    height: 300\n  },\n  row: {\n    flex: 1,\n    height: 120,\n    backgroundColor: 'red',\n    borderColor: 'blue',\n    borderBottomWidth: 1\n  },\n  complex: {\n    flex: 1,\n    height: 240,\n    backgroundColor: 'yellow',\n    borderColor: 'blue',\n    borderBottomWidth: 1\n  },\n  inner: {\n    flex: 1,\n    margin: 10,\n    height: 100,\n    backgroundColor: 'gray',\n    borderColor: 'green',\n    borderWidth: 1\n  }\n});\nvar appInstance = null;\n\nvar SubviewsClippingTestApp = function (_React$Component6) {\n  _inherits(SubviewsClippingTestApp, _React$Component6);\n\n  var _super6 = _createSuper(SubviewsClippingTestApp);\n\n  function SubviewsClippingTestApp() {\n    var _this;\n\n    _classCallCheck(this, SubviewsClippingTestApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super6.call.apply(_super6, [this].concat(args));\n    _this.state = {};\n\n    _this.setComponent = function (component) {\n      _this.setState({\n        component: component\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SubviewsClippingTestApp, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      appInstance = this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var component = this.state.component;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 12\n        }\n      }, component);\n    }\n  }]);\n\n  return SubviewsClippingTestApp;\n}(React.Component);\n\nvar SubviewsClippingTestModule = {\n  App: SubviewsClippingTestApp,\n  renderClippingSample1: function renderClippingSample1() {\n    appInstance.setComponent(React.createElement(ClippingSample1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 30\n      }\n    }));\n  },\n  renderClippingSample2: function renderClippingSample2() {\n    appInstance.setComponent(React.createElement(ClippingSample2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 30\n      }\n    }));\n  },\n  renderUpdatingSample1: function renderUpdatingSample1(update1, update2) {\n    appInstance.setComponent(React.createElement(UpdatingSample1, {\n      update1: update1,\n      update2: update2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }\n    }));\n  },\n  renderUpdatingSample2: function renderUpdatingSample2(update) {\n    appInstance.setComponent(React.createElement(UpdatingSample2, {\n      update: update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 30\n      }\n    }));\n  },\n  renderScrollViewTest: function renderScrollViewTest() {\n    appInstance.setComponent(React.createElement(ScrollViewTest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 30\n      }\n    }));\n  }\n};\nBatchedBridge.registerCallableModule('SubviewsClippingTestModule', SubviewsClippingTestModule);\nmodule.exports = SubviewsClippingTestModule;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/ReactAndroid/src/androidTest/js/SubviewsClippingTestModule.js"],"names":["React","require","BatchedBridge","ClippableView","requireNativeComponent","ClippingSample1","sample1Styles","outer","inner","inner1","inner2","inner3","inner4","inner5","Component","StyleSheet","create","width","height","backgroundColor","position","top","left","ClippingSample2","sample2Styles","complexInner","right","bottom","UpdatingSample1","inner1Styles","updating1Styles","props","update1","inner2Styles","update2","UpdatingSample2","outerStyles","updating2Styles","update","ScrollViewTest","children","i","scrollTestStyles","row","viewID","complex","scrollView","flex","borderColor","borderBottomWidth","margin","borderWidth","appInstance","SubviewsClippingTestApp","state","setComponent","component","setState","SubviewsClippingTestModule","App","renderClippingSample1","renderClippingSample2","renderUpdatingSample1","renderUpdatingSample2","renderScrollViewTest","registerCallableModule","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  ScrollView,\n  StyleSheet,\n  View,\n  requireNativeComponent,\n} = require('react-native');\nconst BatchedBridge = require('react-native/Libraries/BatchedBridge/BatchedBridge');\n\nconst ClippableView = requireNativeComponent('ClippableView');\n\nclass ClippingSample1 extends React.Component {\n  render() {\n    return (\n      <View>\n        <ClippableView\n          clippableViewID=\"outer\"\n          style={sample1Styles.outer}\n          removeClippedSubviews={true}>\n          <ClippableView\n            clippableViewID=\"inner1\"\n            style={[sample1Styles.inner, sample1Styles.inner1]}\n          />\n          <ClippableView\n            clippableViewID=\"inner2\"\n            style={[sample1Styles.inner, sample1Styles.inner2]}\n          />\n          <ClippableView\n            clippableViewID=\"inner3\"\n            style={[sample1Styles.inner, sample1Styles.inner3]}\n          />\n          <ClippableView\n            clippableViewID=\"inner4\"\n            style={[sample1Styles.inner, sample1Styles.inner4]}\n          />\n          <ClippableView\n            clippableViewID=\"inner5\"\n            style={[sample1Styles.inner, sample1Styles.inner5]}\n          />\n        </ClippableView>\n      </View>\n    );\n  }\n}\n\nconst sample1Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red',\n  },\n  inner: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    backgroundColor: 'green',\n  },\n  inner1: {\n    top: -150,\n    left: 50,\n  },\n  inner2: {\n    top: 50,\n    left: 50,\n  },\n  inner3: {\n    top: 250,\n    left: 50,\n  },\n  inner4: {\n    left: -150,\n    top: 50,\n  },\n  inner5: {\n    left: 250,\n    top: 50,\n  },\n});\n\nclass ClippingSample2 extends React.Component {\n  render() {\n    return (\n      <View>\n        <ClippableView\n          clippableViewID=\"outer\"\n          style={sample2Styles.outer}\n          removeClippedSubviews={true}>\n          <ClippableView\n            clippableViewID=\"complexInner\"\n            style={sample2Styles.complexInner}\n            removeClippedSubviews={true}>\n            <ClippableView\n              clippableViewID=\"inner1\"\n              style={[sample2Styles.inner, sample2Styles.inner1]}\n            />\n            <ClippableView\n              clippableViewID=\"inner2\"\n              style={[sample2Styles.inner, sample2Styles.inner2]}\n            />\n            <ClippableView\n              clippableViewID=\"inner3\"\n              style={[sample2Styles.inner, sample2Styles.inner3]}\n            />\n            <ClippableView\n              clippableViewID=\"inner4\"\n              style={[sample2Styles.inner, sample2Styles.inner4]}\n            />\n          </ClippableView>\n        </ClippableView>\n      </View>\n    );\n  }\n}\n\nconst sample2Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red',\n  },\n  complexInner: {\n    position: 'absolute',\n    width: 200,\n    height: 200,\n    left: 100,\n    top: 100,\n    backgroundColor: 'green',\n  },\n  inner: {\n    position: 'absolute',\n    width: 80,\n    height: 80,\n    backgroundColor: 'blue',\n  },\n  inner1: {\n    left: 10,\n    top: 10,\n  },\n  inner2: {\n    right: 10,\n    top: 10,\n  },\n  inner3: {\n    left: 10,\n    bottom: 10,\n  },\n  inner4: {\n    right: 10,\n    bottom: 10,\n  },\n});\n\nclass UpdatingSample1 extends React.Component {\n  render() {\n    const inner1Styles = [\n      updating1Styles.inner1,\n      {height: this.props.update1 ? 200 : 100},\n    ];\n\n    const inner2Styles = [\n      updating1Styles.inner2,\n      {top: this.props.update2 ? 200 : 50},\n    ];\n\n    return (\n      <View>\n        <ClippableView\n          clippableViewID=\"outer\"\n          style={updating1Styles.outer}\n          removeClippedSubviews={true}>\n          <ClippableView clippableViewID=\"inner1\" style={inner1Styles} />\n          <ClippableView clippableViewID=\"inner2\" style={inner2Styles} />\n        </ClippableView>\n      </View>\n    );\n  }\n}\n\nconst updating1Styles = StyleSheet.create({\n  outer: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'red',\n  },\n  inner1: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    left: 50,\n    top: -100,\n    backgroundColor: 'green',\n  },\n  inner2: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    left: 50,\n    top: 50,\n    backgroundColor: 'green',\n  },\n});\n\nclass UpdatingSample2 extends React.Component {\n  render() {\n    const outerStyles = [\n      updating2Styles.outer,\n      {height: this.props.update ? 200 : 100},\n    ];\n\n    return (\n      <View>\n        <ClippableView\n          clippableViewID=\"outer\"\n          style={outerStyles}\n          removeClippedSubviews={true}>\n          <ClippableView\n            clippableViewID=\"inner\"\n            style={updating2Styles.inner}\n          />\n        </ClippableView>\n      </View>\n    );\n  }\n}\n\nconst updating2Styles = StyleSheet.create({\n  outer: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'red',\n  },\n  inner: {\n    position: 'absolute',\n    width: 100,\n    height: 100,\n    top: 100,\n    backgroundColor: 'green',\n  },\n});\n\nclass ScrollViewTest extends React.Component {\n  render() {\n    const children = [];\n    for (let i = 0; i < 4; i++) {\n      children[i] = (\n        <ClippableView\n          key={i}\n          style={scrollTestStyles.row}\n          clippableViewID={'' + i}\n        />\n      );\n    }\n    for (let i = 4; i < 6; i++) {\n      const viewID = 'C' + (i - 4);\n      children[i] = (\n        <ClippableView\n          key={i}\n          style={scrollTestStyles.complex}\n          clippableViewID={viewID}\n          removeClippedSubviews={true}>\n          <ClippableView\n            style={scrollTestStyles.inner}\n            clippableViewID={viewID + '.1'}\n          />\n          <ClippableView\n            style={scrollTestStyles.inner}\n            clippableViewID={viewID + '.2'}\n          />\n        </ClippableView>\n      );\n    }\n\n    return (\n      <ScrollView\n        removeClippedSubviews={true}\n        style={scrollTestStyles.scrollView}\n        testID=\"scroll_view\">\n        {children}\n      </ScrollView>\n    );\n  }\n}\n\nconst scrollTestStyles = StyleSheet.create({\n  scrollView: {\n    width: 200,\n    height: 300,\n  },\n  row: {\n    flex: 1,\n    height: 120,\n    backgroundColor: 'red',\n    borderColor: 'blue',\n    borderBottomWidth: 1,\n  },\n  complex: {\n    flex: 1,\n    height: 240,\n    backgroundColor: 'yellow',\n    borderColor: 'blue',\n    borderBottomWidth: 1,\n  },\n  inner: {\n    flex: 1,\n    margin: 10,\n    height: 100,\n    backgroundColor: 'gray',\n    borderColor: 'green',\n    borderWidth: 1,\n  },\n});\n\nlet appInstance = null;\n\nclass SubviewsClippingTestApp extends React.Component {\n  state = {};\n\n  UNSAFE_componentWillMount() {\n    appInstance = this;\n  }\n\n  setComponent = component => {\n    this.setState({component: component});\n  };\n\n  render() {\n    const component = this.state.component;\n    return <View>{component}</View>;\n  }\n}\n\nconst SubviewsClippingTestModule = {\n  App: SubviewsClippingTestApp,\n  renderClippingSample1: function() {\n    appInstance.setComponent(<ClippingSample1 />);\n  },\n  renderClippingSample2: function() {\n    appInstance.setComponent(<ClippingSample2 />);\n  },\n  renderUpdatingSample1: function(update1, update2) {\n    appInstance.setComponent(\n      <UpdatingSample1 update1={update1} update2={update2} />,\n    );\n  },\n  renderUpdatingSample2: function(update) {\n    appInstance.setComponent(<UpdatingSample2 update={update} />);\n  },\n  renderScrollViewTest: function() {\n    appInstance.setComponent(<ScrollViewTest />);\n  },\n};\n\nBatchedBridge.registerCallableModule(\n  'SubviewsClippingTestModule',\n  SubviewsClippingTestModule,\n);\n\nmodule.exports = SubviewsClippingTestModule;\n"]},"metadata":{},"sourceType":"script"}