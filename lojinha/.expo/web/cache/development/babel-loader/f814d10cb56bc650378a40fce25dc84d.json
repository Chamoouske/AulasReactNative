{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createElement from \"../createElement\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../hooks/usePlatformMethods\";\nimport PickerItem from \"./PickerItem\";\nimport StyleSheet from \"../StyleSheet\";\nimport { forwardRef, useRef } from 'react';\nvar Picker = forwardRef(function (props, forwardedRef) {\n  var children = props.children,\n      enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      style = props.style,\n      testID = props.testID,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = _objectWithoutProperties(props, [\"children\", \"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"]);\n\n  var hostRef = useRef(null);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n\n  var supportedProps = _objectSpread({\n    children: children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID: testID,\n    value: selectedValue\n  }, other);\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement('select', supportedProps);\n});\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    fontSize: 'inherit',\n    margin: 0\n  }\n});\nexport default Picker;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/exports/Picker/index.js"],"names":["createElement","useMergeRefs","usePlatformMethods","PickerItem","StyleSheet","forwardRef","useRef","Picker","props","forwardedRef","children","enabled","onValueChange","selectedValue","style","testID","itemStyle","mode","prompt","other","hostRef","handleChange","e","target","selectedIndex","value","supportedProps","disabled","undefined","onChange","styles","initial","platformMethodsRef","setRef","ref","Item","create","fontFamily","fontSize","margin"],"mappings":";;;;;;;AAYA,OAAOA,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AAeA,IAAMC,MAAM,GAAGF,UAAU,CAAiB,UAACG,KAAD,EAAQC,YAAR,EAAyB;AAAA,MAE/DC,QAF+D,GAc7DF,KAd6D,CAE/DE,QAF+D;AAAA,MAG/DC,OAH+D,GAc7DH,KAd6D,CAG/DG,OAH+D;AAAA,MAI/DC,aAJ+D,GAc7DJ,KAd6D,CAI/DI,aAJ+D;AAAA,MAK/DC,aAL+D,GAc7DL,KAd6D,CAK/DK,aAL+D;AAAA,MAM/DC,KAN+D,GAc7DN,KAd6D,CAM/DM,KAN+D;AAAA,MAO/DC,MAP+D,GAc7DP,KAd6D,CAO/DO,MAP+D;AAAA,MAS/DC,SAT+D,GAc7DR,KAd6D,CAS/DQ,SAT+D;AAAA,MAU/DC,IAV+D,GAc7DT,KAd6D,CAU/DS,IAV+D;AAAA,MAW/DC,MAX+D,GAc7DV,KAd6D,CAW/DU,MAX+D;AAAA,MAa5DC,KAb4D,4BAc7DX,KAd6D;;AAgBjE,MAAMY,OAAO,GAAGd,MAAM,CAAC,IAAD,CAAtB;;AAEA,WAASe,YAAT,CAAsBC,CAAtB,EAAiC;AAAA,oBACEA,CAAC,CAACC,MADJ;AAAA,QACvBC,aADuB,aACvBA,aADuB;AAAA,QACRC,KADQ,aACRA,KADQ;;AAE/B,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACa,KAAD,EAAQD,aAAR,CAAb;AACD;AACF;;AAED,MAAME,cAAmB;AACvBhB,IAAAA,QAAQ,EAARA,QADuB;AAEvBiB,IAAAA,QAAQ,EAAEhB,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2BiB,SAFd;AAGvBC,IAAAA,QAAQ,EAAER,YAHa;AAIvBP,IAAAA,KAAK,EAAE,CAACgB,MAAM,CAACC,OAAR,EAAiBjB,KAAjB,CAJgB;AAKvBC,IAAAA,MAAM,EAANA,MALuB;AAMvBU,IAAAA,KAAK,EAAEZ;AANgB,KAOpBM,KAPoB,CAAzB;;AAUA,MAAMa,kBAAkB,GAAG9B,kBAAkB,CAACwB,cAAD,CAA7C;AAEA,MAAMO,MAAM,GAAGhC,YAAY,CAACmB,OAAD,EAAUY,kBAAV,EAA8BvB,YAA9B,CAA3B;AAEAiB,EAAAA,cAAc,CAACQ,GAAf,GAAqBD,MAArB;AAEA,SAAOjC,aAAa,CAAC,QAAD,EAAW0B,cAAX,CAApB;AACD,CA1CwB,CAAzB;AA6CAnB,MAAM,CAAC4B,IAAP,GAAchC,UAAd;AAEA,IAAM2B,MAAM,GAAG1B,UAAU,CAACgC,MAAX,CAAkB;AAC/BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,QAAQ,EAAE,SAFH;AAGPC,IAAAA,MAAM,EAAE;AAHD;AADsB,CAAlB,CAAf;AAQA,eAAehC,MAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { ViewProps } from '../View';\n\nimport createElement from '../createElement';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../hooks/usePlatformMethods';\nimport PickerItem from './PickerItem';\nimport StyleSheet, { type StyleObj } from '../StyleSheet';\nimport { forwardRef, useRef } from 'react';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  style?: StyleObj,\n  /* compat */\n  itemStyle?: StyleObj,\n  mode?: string,\n  prompt?: string\n};\n\nconst Picker = forwardRef<PickerProps, *>((props, forwardedRef) => {\n  const {\n    children,\n    enabled,\n    onValueChange,\n    selectedValue,\n    style,\n    testID,\n    /* eslint-disable */\n    itemStyle,\n    mode,\n    prompt,\n    /* eslint-enable */\n    ...other\n  } = props;\n\n  const hostRef = useRef(null);\n\n  function handleChange(e: Object) {\n    const { selectedIndex, value } = e.target;\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n\n  const supportedProps: any = {\n    children,\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    style: [styles.initial, style],\n    testID,\n    value: selectedValue,\n    ...other\n  };\n\n  const platformMethodsRef = usePlatformMethods(supportedProps);\n\n  const setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n\n  supportedProps.ref = setRef;\n\n  return createElement('select', supportedProps);\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nconst styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    fontSize: 'inherit',\n    margin: 0\n  }\n});\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module"}