{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ProgressBarAndroid/ProgressBarAndroidExample.android.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNTesterBlock = require(\"../../components/RNTesterBlock\");\n\nvar RNTesterPage = require(\"../../components/RNTesterPage\");\n\nvar React = require('react');\n\nvar MovingBar = function (_React$Component) {\n  _inherits(MovingBar, _React$Component);\n\n  var _super = _createSuper(MovingBar);\n\n  function MovingBar() {\n    var _this;\n\n    _classCallCheck(this, MovingBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._intervalID = null;\n    _this.state = {\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(MovingBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._intervalID = setInterval(function () {\n        var progress = (_this2.state.progress + 0.02) % 1;\n\n        _this2.setState({\n          progress: progress\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._intervalID != null) {\n        clearInterval(this._intervalID);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ProgressBar, _extends({\n        progress: this.state.progress\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return MovingBar;\n}(React.Component);\n\nvar ProgressBarAndroidExample = function (_React$Component2) {\n  _inherits(ProgressBarAndroidExample, _React$Component2);\n\n  var _super2 = _createSuper(ProgressBarAndroidExample);\n\n  function ProgressBarAndroidExample() {\n    _classCallCheck(this, ProgressBarAndroidExample);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ProgressBarAndroidExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RNTesterPage, {\n        title: \"ProgressBar Examples\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(RNTesterBlock, {\n        title: \"Horizontal Indeterminate ProgressBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(ProgressBar, {\n        styleAttr: \"Horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Horizontal ProgressBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(MovingBar, {\n        styleAttr: \"Horizontal\",\n        indeterminate: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Horizontal Black Indeterminate ProgressBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(ProgressBar, {\n        styleAttr: \"Horizontal\",\n        color: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      })), React.createElement(RNTesterBlock, {\n        title: \"Horizontal Blue ProgressBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(MovingBar, {\n        styleAttr: \"Horizontal\",\n        indeterminate: false,\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ProgressBarAndroidExample;\n}(React.Component);\n\nexports.title = '<ProgressBarAndroid>';\nexports.description = 'Horizontal bar to show the progress of some operation.';\nexports.examples = [{\n  title: 'Simple progress bar',\n  render: function render() {\n    return React.createElement(ProgressBarAndroidExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/ProgressBarAndroid/ProgressBarAndroidExample.android.js"],"names":["RNTesterBlock","require","RNTesterPage","React","MovingBar","_intervalID","state","progress","setInterval","setState","clearInterval","props","Component","ProgressBarAndroidExample","exports","title","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,kCAA7B;;AACA,IAAMC,YAAY,GAAGD,OAAO,iCAA5B;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;IAaMG,S;;;;;;;;;;;;;;;UACJC,W,GAA2B,I;UAE3BC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;WAIR,6BAAoB;AAAA;;AAClB,WAAKF,WAAL,GAAmBG,WAAW,CAAC,YAAM;AACnC,YAAMD,QAAQ,GAAG,CAAC,MAAI,CAACD,KAAL,CAAWC,QAAX,GAAsB,IAAvB,IAA+B,CAAhD;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAACF,UAAAA,QAAQ,EAARA;AAAD,SAAd;AACD,OAH6B,EAG3B,EAH2B,CAA9B;AAID;;;WAED,gCAAuB;AACrB,UAAI,KAAKF,WAAL,IAAoB,IAAxB,EAA8B;AAC5BK,QAAAA,aAAa,CAAC,KAAKL,WAAN,CAAb;AACD;AACF;;;WAED,kBAAS;AACP,aAAO,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AAAlC,SAAgD,KAAKI,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAtBqBR,KAAK,CAACS,S;;IAyBxBC,yB;;;;;;;;;;;;;WACJ,kBAAqB;AACnB,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,sCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAOE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAkC,QAAA,aAAa,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAWE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,4CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAoC,QAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAXF,EAiBE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,aAAa,EAAE,KAFjB;AAGE,QAAA,KAAK,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,CADF;AA2BD;;;;EA7BqCV,KAAK,CAACS,S;;AAgC9CE,OAAO,CAACC,KAAR,GAAgB,sBAAhB;AACAD,OAAO,CAACE,WAAR,GAAsB,wDAAtB;AACAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,qBADT;AAEEG,EAAAA,MAAM,EAAE,kBAA4D;AAClE,WAAO,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst RNTesterBlock = require('../../components/RNTesterBlock');\nconst RNTesterPage = require('../../components/RNTesterPage');\nconst React = require('react');\n\nconst {ProgressBarAndroid: ProgressBar} = require('react-native');\n\nimport type {ProgressBarAndroidProps} from '../../../../Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';\n\ntype MovingBarProps = $ReadOnly<{|\n  ...$Diff<ProgressBarAndroidProps, {progress: ?number, ...}>,\n  indeterminate: false,\n|}>;\n\ntype MovingBarState = {progress: number, ...};\n\nclass MovingBar extends React.Component<MovingBarProps, MovingBarState> {\n  _intervalID: ?IntervalID = null;\n\n  state = {\n    progress: 0,\n  };\n\n  componentDidMount() {\n    this._intervalID = setInterval(() => {\n      const progress = (this.state.progress + 0.02) % 1;\n      this.setState({progress});\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    if (this._intervalID != null) {\n      clearInterval(this._intervalID);\n    }\n  }\n\n  render() {\n    return <ProgressBar progress={this.state.progress} {...this.props} />;\n  }\n}\n\nclass ProgressBarAndroidExample extends React.Component<{...}> {\n  render(): React.Node {\n    return (\n      <RNTesterPage title=\"ProgressBar Examples\">\n        <RNTesterBlock title=\"Horizontal Indeterminate ProgressBar\">\n          {/* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was\n           * found when making Flow check .android.js files. */}\n          <ProgressBar styleAttr=\"Horizontal\" />\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Horizontal ProgressBar\">\n          <MovingBar styleAttr=\"Horizontal\" indeterminate={false} />\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Horizontal Black Indeterminate ProgressBar\">\n          {/* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was\n           * found when making Flow check .android.js files. */}\n          <ProgressBar styleAttr=\"Horizontal\" color=\"black\" />\n        </RNTesterBlock>\n\n        <RNTesterBlock title=\"Horizontal Blue ProgressBar\">\n          <MovingBar\n            styleAttr=\"Horizontal\"\n            indeterminate={false}\n            color=\"blue\"\n          />\n        </RNTesterBlock>\n      </RNTesterPage>\n    );\n  }\n}\n\nexports.title = '<ProgressBarAndroid>';\nexports.description = 'Horizontal bar to show the progress of some operation.';\nexports.examples = [\n  {\n    title: 'Simple progress bar',\n    render: function(): React.Element<typeof ProgressBarAndroidExample> {\n      return <ProgressBarAndroidExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}