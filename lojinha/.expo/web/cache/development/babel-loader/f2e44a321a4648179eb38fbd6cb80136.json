{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _toArray = require(\"@babel/runtime/helpers/toArray\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _process$env = process.env,\n    GITHUB_REF = _process$env.GITHUB_REF,\n    GITHUB_SHA = _process$env.GITHUB_SHA;\n\nif (!GITHUB_REF || !GITHUB_SHA) {\n  if (!GITHUB_REF) {\n    console.error(\"Missing GITHUB_REF. This should've been set by the CI.\");\n  }\n\n  if (!GITHUB_SHA) {\n    console.error(\"Missing GITHUB_SHA. This should've been set by the CI.\");\n  }\n\n  process.exit(1);\n}\n\nvar fs = require('fs');\n\nvar datastore = require(\"./datastore\");\n\nvar _require = require(\"./make-comment\"),\n    createOrUpdateComment = _require.createOrUpdateComment;\n\nfunction reportSizeStats(stats, replacePattern) {\n  var _process$env2, FIREBASE_APP_EMAIL, FIREBASE_APP_PASS, store, collection, validatedStats, document, diffFormatter, sizeFormatter, comment;\n\n  return _regeneratorRuntime.async(function reportSizeStats$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _process$env2 = process.env, FIREBASE_APP_EMAIL = _process$env2.FIREBASE_APP_EMAIL, FIREBASE_APP_PASS = _process$env2.FIREBASE_APP_PASS;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(datastore.initializeStore(FIREBASE_APP_EMAIL, FIREBASE_APP_PASS));\n\n        case 3:\n          store = _context.sent;\n          collection = datastore.getBinarySizesCollection(store);\n\n          if (!(GITHUB_REF === 'master')) {\n            _context.next = 12;\n            break;\n          }\n\n          validatedStats = Object.keys(stats).reduce(function (validated, key) {\n            var value = stats[key];\n\n            if (typeof value !== 'number' || value <= 0) {\n              return validated;\n            }\n\n            validated[key] = value;\n            return validated;\n          }, {});\n\n          if (!(Object.keys(validatedStats).length > 0)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(datastore.createOrUpdateDocument(collection, GITHUB_SHA, validatedStats));\n\n        case 10:\n          _context.next = 19;\n          break;\n\n        case 12:\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(datastore.getLatestDocument(collection));\n\n        case 14:\n          document = _context.sent;\n          diffFormatter = new Intl.NumberFormat('en', {\n            signDisplay: 'always'\n          });\n          sizeFormatter = new Intl.NumberFormat('en', {});\n          comment = ['| Platform | Engine | Arch | Size (bytes) | Diff |', '|:---------|:-------|:-----|-------------:|-----:|'].concat(_toConsumableArray(Object.keys(stats).map(function (identifier) {\n            var _ref = function () {\n              var statSize = stats[identifier];\n\n              if (!statSize) {\n                return ['n/a', '--'];\n              } else if (!(identifier in document)) {\n                return [statSize, 'n/a'];\n              } else {\n                return [sizeFormatter.format(statSize), diffFormatter.format(statSize - document[identifier])];\n              }\n            }(),\n                _ref2 = _slicedToArray(_ref, 2),\n                size = _ref2[0],\n                diff = _ref2[1];\n\n            var _identifier$split = identifier.split('-'),\n                _identifier$split2 = _toArray(_identifier$split),\n                platform = _identifier$split2[0],\n                engineOrArch = _identifier$split2[1],\n                archParts = _identifier$split2.slice(2);\n\n            var arch = archParts.join('-') || engineOrArch;\n            var engine = arch === engineOrArch ? '-' : engineOrArch;\n            return \"| \" + platform + \" | \" + engine + \" | \" + arch + \" | \" + size + \" | \" + diff + \" |\";\n          })), ['', \"Base commit: \" + document.commit]).join('\\n');\n          createOrUpdateComment(comment, replacePattern);\n\n        case 19:\n          store.terminate();\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getFileSize(path) {\n  try {\n    var stats = fs.statSync(path);\n    return stats.size;\n  } catch (_unused) {\n    return 0;\n  }\n}\n\nfunction android_getApkSize(engine, arch) {\n  return getFileSize(\"RNTester/android/app/build/outputs/apk/\" + engine + \"/release/app-\" + engine + \"-\" + arch + \"-release.apk\");\n}\n\nfunction report(target) {\n  switch (target) {\n    case 'android':\n      reportSizeStats({\n        'android-hermes-arm64-v8a': android_getApkSize('hermes', 'arm64-v8a'),\n        'android-hermes-armeabi-v7a': android_getApkSize('hermes', 'armeabi-v7a'),\n        'android-hermes-x86': android_getApkSize('hermes', 'x86'),\n        'android-hermes-x86_64': android_getApkSize('hermes', 'x86_64'),\n        'android-jsc-arm64-v8a': android_getApkSize('jsc', 'arm64-v8a'),\n        'android-jsc-armeabi-v7a': android_getApkSize('jsc', 'armeabi-v7a'),\n        'android-jsc-x86': android_getApkSize('jsc', 'x86'),\n        'android-jsc-x86_64': android_getApkSize('jsc', 'x86_64')\n      }, '\\\\| android \\\\| hermes \\\\| arm');\n      break;\n\n    case 'ios':\n      reportSizeStats({\n        'ios-universal': getFileSize('RNTester/build/Build/Products/Release-iphonesimulator/RNTester.app/RNTester')\n      }, '\\\\| ios \\\\| - \\\\| universal \\\\|');\n      break;\n\n    default:\n      {\n        var path = require('path');\n\n        console.log(\"Syntax: \" + path.basename(process.argv[1]) + \" [android | ios]\");\n        break;\n      }\n  }\n}\n\nvar target = process.argv[2];\nreport(target);","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/bots/report-bundle-size.js"],"names":["process","env","GITHUB_REF","GITHUB_SHA","console","error","exit","fs","require","datastore","createOrUpdateComment","reportSizeStats","stats","replacePattern","FIREBASE_APP_EMAIL","FIREBASE_APP_PASS","initializeStore","store","collection","getBinarySizesCollection","validatedStats","Object","keys","reduce","validated","key","value","length","createOrUpdateDocument","getLatestDocument","document","diffFormatter","Intl","NumberFormat","signDisplay","sizeFormatter","comment","map","identifier","statSize","format","size","diff","split","platform","engineOrArch","archParts","arch","join","engine","commit","terminate","getFileSize","path","statSync","android_getApkSize","report","target","log","basename","argv"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst {GITHUB_REF, GITHUB_SHA} = process.env;\nif (!GITHUB_REF || !GITHUB_SHA) {\n  if (!GITHUB_REF) {\n    console.error(\"Missing GITHUB_REF. This should've been set by the CI.\");\n  }\n  if (!GITHUB_SHA) {\n    console.error(\"Missing GITHUB_SHA. This should've been set by the CI.\");\n  }\n  process.exit(1);\n}\n\nconst fs = require('fs');\nconst datastore = require('./datastore');\nconst {createOrUpdateComment} = require('./make-comment');\n\n/**\n * Generates and submits a comment. If this is run on master branch, data is\n * committed to the store instead.\n * @param {{\n      'android-hermes-arm64-v8a'?: number;\n      'android-hermes-armeabi-v7a'?: number;\n      'android-hermes-x86'?: number;\n      'android-hermes-x86_64'?: number;\n      'android-jsc-arm64-v8a'?: number;\n      'android-jsc-armeabi-v7a'?: number;\n      'android-jsc-x86'?: number;\n      'android-jsc-x86_64'?: number;\n      'ios-universal'?: number;\n    }} stats\n */\nasync function reportSizeStats(stats, replacePattern) {\n  const {FIREBASE_APP_EMAIL, FIREBASE_APP_PASS} = process.env;\n  const store = await datastore.initializeStore(\n    FIREBASE_APP_EMAIL,\n    FIREBASE_APP_PASS,\n  );\n  const collection = datastore.getBinarySizesCollection(store);\n\n  if (GITHUB_REF === 'master') {\n    // Ensure we only store numbers greater than zero.\n    const validatedStats = Object.keys(stats).reduce((validated, key) => {\n      const value = stats[key];\n      if (typeof value !== 'number' || value <= 0) {\n        return validated;\n      }\n\n      validated[key] = value;\n      return validated;\n    }, {});\n    if (Object.keys(validatedStats).length > 0) {\n      await datastore.createOrUpdateDocument(\n        collection,\n        GITHUB_SHA,\n        validatedStats,\n      );\n    }\n  } else {\n    const document = await datastore.getLatestDocument(collection);\n\n    const diffFormatter = new Intl.NumberFormat('en', {signDisplay: 'always'});\n    const sizeFormatter = new Intl.NumberFormat('en', {});\n\n    // | Platform | Engine | Arch        | Size (bytes) | Diff |\n    // |:---------|:-------|:------------|-------------:|-----:|\n    // | android  | hermes | arm64-v8a   |      9437184 |   ±0 |\n    // | android  | hermes | armeabi-v7a |      9015296 |   ±0 |\n    // | android  | hermes | x86         |      9498624 |   ±0 |\n    // | android  | hermes | x86_64      |      9965568 |   ±0 |\n    // | android  | jsc    | arm64-v8a   |      9236480 |   ±0 |\n    // | android  | jsc    | armeabi-v7a |      8814592 |   ±0 |\n    // | android  | jsc    | x86         |      9297920 |   ±0 |\n    // | android  | jsc    | x86_64      |      9764864 |   ±0 |\n    // | android  | jsc    | x86_64      |      9764864 |   ±0 |\n    // | ios      | -      | universal   |     10715136 |   ±0 |\n    const comment = [\n      '| Platform | Engine | Arch | Size (bytes) | Diff |',\n      '|:---------|:-------|:-----|-------------:|-----:|',\n      ...Object.keys(stats).map(identifier => {\n        const [size, diff] = (() => {\n          const statSize = stats[identifier];\n          if (!statSize) {\n            return ['n/a', '--'];\n          } else if (!(identifier in document)) {\n            return [statSize, 'n/a'];\n          } else {\n            return [\n              sizeFormatter.format(statSize),\n              diffFormatter.format(statSize - document[identifier]),\n            ];\n          }\n        })();\n\n        const [platform, engineOrArch, ...archParts] = identifier.split('-');\n        const arch = archParts.join('-') || engineOrArch;\n        const engine = arch === engineOrArch ? '-' : engineOrArch; // e.g. 'ios-universal'\n        return `| ${platform} | ${engine} | ${arch} | ${size} | ${diff} |`;\n      }),\n      '',\n      `Base commit: ${document.commit}`,\n    ].join('\\n');\n    createOrUpdateComment(comment, replacePattern);\n  }\n\n  // Documentation says that we don't need to call `terminate()` but the script\n  // will just hang around until the connection times out if we don't.\n  store.terminate();\n}\n\n/**\n * Returns the size of the file at specified path in bytes.\n * @param {fs.PathLike} path\n * @returns {number}\n */\nfunction getFileSize(path) {\n  try {\n    const stats = fs.statSync(path);\n    return stats.size;\n  } catch {\n    return 0;\n  }\n}\n\n/**\n * Returns the size of the APK for specified JS engine and architecture.\n * @param {'hermes' | 'jsc'} engine\n * @param {'arm64-v8a' | 'armeabi-v7a' | 'x86' | 'x86_64'} arch\n */\nfunction android_getApkSize(engine, arch) {\n  return getFileSize(\n    `RNTester/android/app/build/outputs/apk/${engine}/release/app-${engine}-${arch}-release.apk`,\n  );\n}\n\n/**\n * Reports app bundle size.\n * @param {string} target\n */\nfunction report(target) {\n  switch (target) {\n    case 'android':\n      reportSizeStats(\n        {\n          'android-hermes-arm64-v8a': android_getApkSize('hermes', 'arm64-v8a'),\n          'android-hermes-armeabi-v7a': android_getApkSize(\n            'hermes',\n            'armeabi-v7a',\n          ),\n          'android-hermes-x86': android_getApkSize('hermes', 'x86'),\n          'android-hermes-x86_64': android_getApkSize('hermes', 'x86_64'),\n          'android-jsc-arm64-v8a': android_getApkSize('jsc', 'arm64-v8a'),\n          'android-jsc-armeabi-v7a': android_getApkSize('jsc', 'armeabi-v7a'),\n          'android-jsc-x86': android_getApkSize('jsc', 'x86'),\n          'android-jsc-x86_64': android_getApkSize('jsc', 'x86_64'),\n        },\n        '\\\\| android \\\\| hermes \\\\| arm',\n      );\n      break;\n\n    case 'ios':\n      reportSizeStats(\n        {\n          'ios-universal': getFileSize(\n            'RNTester/build/Build/Products/Release-iphonesimulator/RNTester.app/RNTester',\n          ),\n        },\n        '\\\\| ios \\\\| - \\\\| universal \\\\|',\n      );\n      break;\n\n    default: {\n      const path = require('path');\n      console.log(`Syntax: ${path.basename(process.argv[1])} [android | ios]`);\n      break;\n    }\n  }\n}\n\nconst {[2]: target} = process.argv;\nreport(target);\n"]},"metadata":{},"sourceType":"script"}