{"ast":null,"code":"'use strict';\n\nvar template = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n#pragma once\\n\\n#include <react/components/::_LIBRARY_::/ShadowNodes.h>\\n#include <react/core/ConcreteComponentDescriptor.h>\\n\\nnamespace facebook {\\nnamespace react {\\n\\n::_COMPONENT_DESCRIPTORS_::\\n\\n} // namespace react\\n} // namespace facebook\\n\";\nvar componentTemplate = \"\\nusing ::_CLASSNAME_::ComponentDescriptor = ConcreteComponentDescriptor<::_CLASSNAME_::ShadowNode>;\\n\".trim();\nmodule.exports = {\n  generate: function generate(libraryName, schema, moduleSpecName) {\n    var fileName = 'ComponentDescriptors.h';\n    var componentDescriptors = Object.keys(schema.modules).map(function (moduleName) {\n      var components = schema.modules[moduleName].components;\n\n      if (components == null) {\n        return null;\n      }\n\n      return Object.keys(components).map(function (componentName) {\n        if (components[componentName].interfaceOnly === true) {\n          return;\n        }\n\n        return componentTemplate.replace(/::_CLASSNAME_::/g, componentName);\n      }).join('\\n');\n    }).filter(Boolean).join('\\n');\n    var replacedTemplate = template.replace(/::_COMPONENT_DESCRIPTORS_::/g, componentDescriptors).replace('::_LIBRARY_::', libraryName);\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/components/GenerateComponentDescriptorH.js"],"names":["template","componentTemplate","trim","module","exports","generate","libraryName","schema","moduleSpecName","fileName","componentDescriptors","Object","keys","modules","map","moduleName","components","componentName","interfaceOnly","replace","join","filter","Boolean","replacedTemplate","Map"],"mappings":"AAUA;;AAOA,IAAMA,QAAQ,qcAAd;AAsBA,IAAMC,iBAAiB,GAAG,yGAExBC,IAFwB,EAA1B;AAIAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QADe,oBAEbC,WAFa,EAGbC,MAHa,EAIbC,cAJa,EAKA;AACb,QAAMC,QAAQ,GAAG,wBAAjB;AAEA,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,OAAnB,EAC1BC,GAD0B,CACtB,UAAAC,UAAU,EAAI;AACjB,UAAMC,UAAU,GAAGT,MAAM,CAACM,OAAP,CAAeE,UAAf,EAA2BC,UAA9C;;AAEA,UAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,IAAP;AACD;;AAED,aAAOL,MAAM,CAACC,IAAP,CAAYI,UAAZ,EACJF,GADI,CACA,UAAAG,aAAa,EAAI;AACpB,YAAID,UAAU,CAACC,aAAD,CAAV,CAA0BC,aAA1B,KAA4C,IAAhD,EAAsD;AACpD;AACD;;AACD,eAAOjB,iBAAiB,CAACkB,OAAlB,CAA0B,kBAA1B,EAA8CF,aAA9C,CAAP;AACD,OANI,EAOJG,IAPI,CAOC,IAPD,CAAP;AAQD,KAhB0B,EAiB1BC,MAjB0B,CAiBnBC,OAjBmB,EAkB1BF,IAlB0B,CAkBrB,IAlBqB,CAA7B;AAoBA,QAAMG,gBAAgB,GAAGvB,QAAQ,CAC9BmB,OADsB,CACd,8BADc,EACkBT,oBADlB,EAEtBS,OAFsB,CAEd,eAFc,EAEGb,WAFH,CAAzB;AAIA,WAAO,IAAIkB,GAAJ,CAAQ,CAAC,CAACf,QAAD,EAAWc,gBAAX,CAAD,CAAR,CAAP;AACD;AAjCc,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {SchemaType} from '../../CodegenSchema';\n\n// File path -> contents\ntype FilesOutput = Map<string, string>;\n\nconst template = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n#pragma once\n\n#include <react/components/::_LIBRARY_::/ShadowNodes.h>\n#include <react/core/ConcreteComponentDescriptor.h>\n\nnamespace facebook {\nnamespace react {\n\n::_COMPONENT_DESCRIPTORS_::\n\n} // namespace react\n} // namespace facebook\n`;\n\nconst componentTemplate = `\nusing ::_CLASSNAME_::ComponentDescriptor = ConcreteComponentDescriptor<::_CLASSNAME_::ShadowNode>;\n`.trim();\n\nmodule.exports = {\n  generate(\n    libraryName: string,\n    schema: SchemaType,\n    moduleSpecName: string,\n  ): FilesOutput {\n    const fileName = 'ComponentDescriptors.h';\n\n    const componentDescriptors = Object.keys(schema.modules)\n      .map(moduleName => {\n        const components = schema.modules[moduleName].components;\n        // No components in this module\n        if (components == null) {\n          return null;\n        }\n\n        return Object.keys(components)\n          .map(componentName => {\n            if (components[componentName].interfaceOnly === true) {\n              return;\n            }\n            return componentTemplate.replace(/::_CLASSNAME_::/g, componentName);\n          })\n          .join('\\n');\n      })\n      .filter(Boolean)\n      .join('\\n');\n\n    const replacedTemplate = template\n      .replace(/::_COMPONENT_DESCRIPTORS_::/g, componentDescriptors)\n      .replace('::_LIBRARY_::', libraryName);\n\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}