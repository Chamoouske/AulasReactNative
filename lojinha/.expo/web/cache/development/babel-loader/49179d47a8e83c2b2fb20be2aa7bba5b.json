{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getenv_1 = require(\"getenv\");\n\nexports.EXPO_DEBUG = getenv_1.boolish('EXPO_DEBUG', false);\n\nexports.withInternal = function (config, internals) {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  config._internal = _extends(_extends({\n    isDebug: exports.EXPO_DEBUG\n  }, config._internal), internals);\n  return config;\n};","map":{"version":3,"sources":["../../src/plugins/withInternal.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAIa,OAAA,CAAA,UAAA,GAAa,QAAA,CAAA,OAAA,CAAQ,YAAR,EAAsB,KAAtB,CAAb;;AAQA,OAAA,CAAA,YAAA,GAET,UAAC,MAAD,EAAS,SAAT,EAAsB;AACxB,MAAI,CAAC,MAAM,CAAC,SAAZ,EAAuB;AACrB,IAAA,MAAM,CAAC,SAAP,GAAmB,EAAnB;AACD;;AAED,EAAA,MAAM,CAAC,SAAP,GAAgB,SAAA,SAAA;AACd,IAAA,OAAO,EAAE,OAAA,CAAA;AADK,GAAA,EAEX,MAAM,CAAC,SAFI,CAAA,EAGX,SAHW,CAAhB;AAMA,SAAO,MAAP;AACD,CAdY","sourcesContent":["import { ConfigPlugin } from '@expo/config-plugins';\nimport { boolish } from 'getenv';\n\nimport { ConfigFilePaths } from '../Config.types';\n\nexport const EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\n/**\n * Adds the _internal object.\n *\n * @param config\n * @param projectRoot\n */\nexport const withInternal: ConfigPlugin<\n  { projectRoot: string; packageJsonPath?: string } & Partial<ConfigFilePaths>\n> = (config, internals) => {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  config._internal = {\n    isDebug: EXPO_DEBUG,\n    ...config._internal,\n    ...internals,\n  };\n\n  return config;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}