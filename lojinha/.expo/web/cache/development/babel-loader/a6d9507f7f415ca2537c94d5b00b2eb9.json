{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport declare type Colors = {\n    comment: {\n        close: string;\n        open: string;\n    };\n    content: {\n        close: string;\n        open: string;\n    };\n    prop: {\n        close: string;\n        open: string;\n    };\n    tag: {\n        close: string;\n        open: string;\n    };\n    value: {\n        close: string;\n        open: string;\n    };\n};\ndeclare type Indent = (arg0: string) => string;\nexport declare type Refs = Array<any>;\ndeclare type Print = (arg0: any) => string;\nexport declare type Theme = {\n    comment: string;\n    content: string;\n    prop: string;\n    tag: string;\n    value: string;\n};\ndeclare type ThemeReceived = {\n    comment?: string;\n    content?: string;\n    prop?: string;\n    tag?: string;\n    value?: string;\n};\nexport declare type Options = {\n    callToJSON: boolean;\n    escapeRegex: boolean;\n    escapeString: boolean;\n    highlight: boolean;\n    indent: number;\n    maxDepth: number;\n    min: boolean;\n    plugins: Plugins;\n    printFunctionName: boolean;\n    theme: Theme;\n};\nexport declare type OptionsReceived = {\n    callToJSON?: boolean;\n    escapeRegex?: boolean;\n    escapeString?: boolean;\n    highlight?: boolean;\n    indent?: number;\n    maxDepth?: number;\n    min?: boolean;\n    plugins?: Plugins;\n    printFunctionName?: boolean;\n    theme?: ThemeReceived;\n};\nexport declare type Config = {\n    callToJSON: boolean;\n    colors: Colors;\n    escapeRegex: boolean;\n    escapeString: boolean;\n    indent: string;\n    maxDepth: number;\n    min: boolean;\n    plugins: Plugins;\n    printFunctionName: boolean;\n    spacingInner: string;\n    spacingOuter: string;\n};\nexport declare type Printer = (val: any, config: Config, indentation: string, depth: number, refs: Refs, hasCalledToJSON?: boolean) => string;\ndeclare type Test = (arg0: any) => boolean;\nexport declare type NewPlugin = {\n    serialize: (val: any, config: Config, indentation: string, depth: number, refs: Refs, printer: Printer) => string;\n    test: Test;\n};\ndeclare type PluginOptions = {\n    edgeSpacing: string;\n    min: boolean;\n    spacing: string;\n};\ndeclare type OldPlugin = {\n    print: (val: any, print: Print, indent: Indent, options: PluginOptions, colors: Colors) => string;\n    test: Test;\n};\nexport declare type Plugin = NewPlugin | OldPlugin;\nexport declare type Plugins = Array<Plugin>;\nexport {};\n//# sourceMappingURL=types.d.ts.map"]},"metadata":{},"sourceType":"module"}