{"ast":null,"code":"'use strict';\n\nfunction execute(fun, context, args) {\n  return fun.apply(context, args);\n}\n\nfunction reportError(error) {\n  throw error;\n}\n\nvar ErrorUtils = {\n  apply: jest.fn(execute),\n  applyWithGuard: jest.fn(execute),\n  guard: jest.fn(function (callback) {\n    return callback;\n  }),\n  inGuard: jest.fn().mockReturnValue(true),\n  reportError: jest.fn(reportError),\n  setGlobalHandler: jest.fn()\n};\nmodule.exports = ErrorUtils;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Core/__mocks__/ErrorUtils.js"],"names":["execute","fun","context","args","apply","reportError","error","ErrorUtils","jest","fn","applyWithGuard","guard","callback","inGuard","mockReturnValue","setGlobalHandler","module","exports"],"mappings":"AAaA;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,IAA/B,EAAqC;AACnC,SAAOF,GAAG,CAACG,KAAJ,CAAUF,OAAV,EAAmBC,IAAnB,CAAP;AACD;;AAED,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMA,KAAN;AACD;;AAED,IAAMC,UAAU,GAAG;AACjBH,EAAAA,KAAK,EAAEI,IAAI,CAACC,EAAL,CAAQT,OAAR,CADU;AAEjBU,EAAAA,cAAc,EAAEF,IAAI,CAACC,EAAL,CAAQT,OAAR,CAFC;AAGjBW,EAAAA,KAAK,EAAEH,IAAI,CAACC,EAAL,CAAQ,UAAAG,QAAQ;AAAA,WAAIA,QAAJ;AAAA,GAAhB,CAHU;AAIjBC,EAAAA,OAAO,EAAEL,IAAI,CAACC,EAAL,GAAUK,eAAV,CAA0B,IAA1B,CAJQ;AAKjBT,EAAAA,WAAW,EAAEG,IAAI,CAACC,EAAL,CAAQJ,WAAR,CALI;AAMjBU,EAAAA,gBAAgB,EAAEP,IAAI,CAACC,EAAL;AAND,CAAnB;AASAO,MAAM,CAACC,OAAP,GAAiBV,UAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// This mock only provides short-circuited methods of applyWithGuard and guard.\n// A lot of modules rely on these two functions. This mock relieves their tests\n// from depending on the real ErrorUtils module. If you need real error handling\n// don't use this mock.\n'use strict';\n\nfunction execute(fun, context, args) {\n  return fun.apply(context, args);\n}\n\nfunction reportError(error) {\n  throw error;\n}\n\nconst ErrorUtils = {\n  apply: jest.fn(execute),\n  applyWithGuard: jest.fn(execute),\n  guard: jest.fn(callback => callback),\n  inGuard: jest.fn().mockReturnValue(true),\n  reportError: jest.fn(reportError),\n  setGlobalHandler: jest.fn(),\n};\n\nmodule.exports = ErrorUtils;\n"]},"metadata":{},"sourceType":"script"}