{"ast":null,"code":"'use strict';\n\nvar fixtures = require(\"../generators/components/__test_fixtures__/fixtures.js\");\n\nvar schemaValidator = require(\"../SchemaValidator.js\");\n\nvar simpleProp = {\n  name: 'disabled',\n  optional: true,\n  typeAnnotation: {\n    type: 'BooleanTypeAnnotation',\n    default: false\n  }\n};\ndescribe('SchemaValidator', function () {\n  it('fails on components across modules with same name', function () {\n    var fixture = {\n      modules: {\n        Module1: {\n          components: {\n            Component1: {\n              extendsProps: [{\n                type: 'ReactNativeBuiltInType',\n                knownTypeName: 'ReactNativeCoreViewProps'\n              }],\n              events: [],\n              props: [simpleProp],\n              commands: []\n            }\n          }\n        },\n        Module2: {\n          components: {\n            Component1: {\n              extendsProps: [{\n                type: 'ReactNativeBuiltInType',\n                knownTypeName: 'ReactNativeCoreViewProps'\n              }],\n              events: [],\n              props: [simpleProp],\n              commands: []\n            }\n          }\n        }\n      }\n    };\n    expect(schemaValidator.getErrors(fixture)).toMatchSnapshot();\n  });\n  describe('fixture', function () {\n    Object.keys(fixtures).sort().forEach(function (fixtureName) {\n      var fixture = fixtures[fixtureName];\n      it(fixtureName + \" has no errors\", function () {\n        expect(schemaValidator.getErrors(fixture)).toHaveLength(0);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/__tests__/SchemaValidator-test.js"],"names":["fixtures","require","schemaValidator","simpleProp","name","optional","typeAnnotation","type","default","describe","it","fixture","modules","Module1","components","Component1","extendsProps","knownTypeName","events","props","commands","Module2","expect","getErrors","toMatchSnapshot","Object","keys","sort","forEach","fixtureName","toHaveLength"],"mappings":"AAWA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,0DAAxB;;AACA,IAAMC,eAAe,GAAGD,OAAO,yBAA/B;;AAIA,IAAME,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE,UADW;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAE,uBADQ;AAEdC,IAAAA,OAAO,EAAE;AAFK;AAHC,CAAnB;AASAC,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,QAAMC,OAAmB,GAAG;AAC1BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,UAAU,EAAE;AACVC,YAAAA,UAAU,EAAE;AACVC,cAAAA,YAAY,EAAE,CACZ;AACET,gBAAAA,IAAI,EAAE,wBADR;AAEEU,gBAAAA,aAAa,EAAE;AAFjB,eADY,CADJ;AAOVC,cAAAA,MAAM,EAAE,EAPE;AAQVC,cAAAA,KAAK,EAAE,CAAChB,UAAD,CARG;AASViB,cAAAA,QAAQ,EAAE;AATA;AADF;AADL,SADF;AAgBPC,QAAAA,OAAO,EAAE;AACPP,UAAAA,UAAU,EAAE;AACVC,YAAAA,UAAU,EAAE;AACVC,cAAAA,YAAY,EAAE,CACZ;AACET,gBAAAA,IAAI,EAAE,wBADR;AAEEU,gBAAAA,aAAa,EAAE;AAFjB,eADY,CADJ;AAOVC,cAAAA,MAAM,EAAE,EAPE;AAQVC,cAAAA,KAAK,EAAE,CAAChB,UAAD,CARG;AASViB,cAAAA,QAAQ,EAAE;AATA;AADF;AADL;AAhBF;AADiB,KAA5B;AAmCAE,IAAAA,MAAM,CAACpB,eAAe,CAACqB,SAAhB,CAA0BZ,OAA1B,CAAD,CAAN,CAA2Ca,eAA3C;AACD,GArCC,CAAF;AAuCAf,EAAAA,QAAQ,CAAC,SAAD,EAAY,YAAM;AACxBgB,IAAAA,MAAM,CAACC,IAAP,CAAY1B,QAAZ,EACG2B,IADH,GAEGC,OAFH,CAEW,UAAAC,WAAW,EAAI;AACtB,UAAMlB,OAAO,GAAGX,QAAQ,CAAC6B,WAAD,CAAxB;AAEAnB,MAAAA,EAAE,CAAImB,WAAJ,qBAAiC,YAAM;AACvCP,QAAAA,MAAM,CAACpB,eAAe,CAACqB,SAAhB,CAA0BZ,OAA1B,CAAD,CAAN,CAA2CmB,YAA3C,CAAwD,CAAxD;AACD,OAFC,CAAF;AAGD,KARH;AASD,GAVO,CAAR;AAWD,CAnDO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+react_native\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst fixtures = require('../generators/components/__test_fixtures__/fixtures.js');\nconst schemaValidator = require('../SchemaValidator.js');\n\nimport type {SchemaType} from '../CodegenSchema.js';\n\nconst simpleProp = {\n  name: 'disabled',\n  optional: true,\n  typeAnnotation: {\n    type: 'BooleanTypeAnnotation',\n    default: false,\n  },\n};\n\ndescribe('SchemaValidator', () => {\n  it('fails on components across modules with same name', () => {\n    const fixture: SchemaType = {\n      modules: {\n        Module1: {\n          components: {\n            Component1: {\n              extendsProps: [\n                {\n                  type: 'ReactNativeBuiltInType',\n                  knownTypeName: 'ReactNativeCoreViewProps',\n                },\n              ],\n              events: [],\n              props: [simpleProp],\n              commands: [],\n            },\n          },\n        },\n        Module2: {\n          components: {\n            Component1: {\n              extendsProps: [\n                {\n                  type: 'ReactNativeBuiltInType',\n                  knownTypeName: 'ReactNativeCoreViewProps',\n                },\n              ],\n              events: [],\n              props: [simpleProp],\n              commands: [],\n            },\n          },\n        },\n      },\n    };\n\n    expect(schemaValidator.getErrors(fixture)).toMatchSnapshot();\n  });\n\n  describe('fixture', () => {\n    Object.keys(fixtures)\n      .sort()\n      .forEach(fixtureName => {\n        const fixture = fixtures[fixtureName];\n\n        it(`${fixtureName} has no errors`, () => {\n          expect(schemaValidator.getErrors(fixture)).toHaveLength(0);\n        });\n      });\n  });\n});\n"]},"metadata":{},"sourceType":"script"}