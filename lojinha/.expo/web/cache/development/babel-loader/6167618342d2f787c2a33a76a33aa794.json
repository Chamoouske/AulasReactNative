{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// Type definitions for istanbul-reports 1.1\n// Project: https://github.com/istanbuljs/istanbuljs, https://istanbul.js.org\n// Definitions by: Jason Cheatham <https://github.com/jason0x43>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.4\n\nimport { Context, Node, FileWriter, Visitor } from 'istanbul-lib-report';\nimport { CoverageSummary } from 'istanbul-lib-coverage';\n\nexport function create<T extends keyof ReportOptions>(\n    name: T,\n    options?: Partial<ReportOptions[T]>\n): Visitor;\n\nexport interface ReportOptions {\n    clover: RootedOptions;\n    cobertura: RootedOptions;\n    html: HtmlOptions;\n    json: Options;\n    'json-summary': Options;\n    lcov: never;\n    lcovonly: Options;\n    none: RootedOptions;\n    teamcity: Options & { blockName: string };\n    text: Options & { maxCols: number };\n    'text-lcov': Options;\n    'text-summary': Options;\n}\n\nexport type ReportType = keyof ReportOptions;\n\nexport interface Options {\n    file: string;\n}\n\nexport interface RootedOptions extends Options {\n    projectRoot: string;\n}\n\nexport interface HtmlOptions {\n    verbose: boolean;\n    linkMapper: LinkMapper;\n    subdir: string;\n}\n\nexport interface LinkMapper {\n    getPath(node: string | Node): string;\n    relativePath(source: string | Node, target: string | Node): string;\n    assetPath(node: Node, name: string): string;\n}\n"]},"metadata":{},"sourceType":"module"}