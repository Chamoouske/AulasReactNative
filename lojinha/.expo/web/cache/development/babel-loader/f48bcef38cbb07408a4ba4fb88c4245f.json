{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/TimersTest.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar StyleSheet = ReactNative.StyleSheet,\n    Text = ReactNative.Text,\n    View = ReactNative.View;\nvar TestModule = ReactNative.NativeModules.TestModule;\n\nvar TimersTest = function (_React$Component) {\n  _inherits(TimersTest, _React$Component);\n\n  var _super = _createSuper(TimersTest);\n\n  function TimersTest() {\n    var _this;\n\n    _classCallCheck(this, TimersTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._nextTest = function () {};\n\n    _this._interval = null;\n    _this._timeoutIDs = new Set();\n    _this._intervalIDs = new Set();\n    _this._immediateIDs = new Set();\n    _this._animationFrameIDs = new Set();\n    _this.state = {\n      count: 0,\n      done: false\n    };\n    return _this;\n  }\n\n  _createClass(TimersTest, [{\n    key: \"setTimeout\",\n    value: function (_setTimeout) {\n      function setTimeout(_x, _x2) {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function (fn, time) {\n      var _this2 = this;\n\n      var id = setTimeout(function () {\n        _this2._timeoutIDs.delete(id);\n\n        fn();\n      }, time);\n\n      this._timeoutIDs.add(id);\n\n      return id;\n    })\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout(_x3) {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function (id) {\n      this._timeoutIDs.delete(id);\n\n      clearTimeout(id);\n    })\n  }, {\n    key: \"setInterval\",\n    value: function (_setInterval) {\n      function setInterval(_x4, _x5) {\n        return _setInterval.apply(this, arguments);\n      }\n\n      setInterval.toString = function () {\n        return _setInterval.toString();\n      };\n\n      return setInterval;\n    }(function (fn, time) {\n      var id = setInterval(function () {\n        fn();\n      }, time);\n\n      this._intervalIDs.add(id);\n\n      return id;\n    })\n  }, {\n    key: \"clearInterval\",\n    value: function (_clearInterval) {\n      function clearInterval(_x6) {\n        return _clearInterval.apply(this, arguments);\n      }\n\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n\n      return clearInterval;\n    }(function (id) {\n      this._intervalIDs.delete(id);\n\n      clearInterval(id);\n    })\n  }, {\n    key: \"setImmediate\",\n    value: function (_setImmediate) {\n      function setImmediate(_x7) {\n        return _setImmediate.apply(this, arguments);\n      }\n\n      setImmediate.toString = function () {\n        return _setImmediate.toString();\n      };\n\n      return setImmediate;\n    }(function (fn) {\n      var _this3 = this;\n\n      var id = setImmediate(function () {\n        _this3._immediateIDs.delete(id);\n\n        fn();\n      });\n\n      this._immediateIDs.add(id);\n\n      return id;\n    })\n  }, {\n    key: \"requestAnimationFrame\",\n    value: function (_requestAnimationFrame) {\n      function requestAnimationFrame(_x8) {\n        return _requestAnimationFrame.apply(this, arguments);\n      }\n\n      requestAnimationFrame.toString = function () {\n        return _requestAnimationFrame.toString();\n      };\n\n      return requestAnimationFrame;\n    }(function (fn) {\n      var _this4 = this;\n\n      var id = requestAnimationFrame(function () {\n        _this4._animationFrameIDs.delete(id);\n\n        fn();\n      });\n\n      this._animationFrameIDs.add(id);\n\n      return id;\n    })\n  }, {\n    key: \"cancelAnimationFrame\",\n    value: function (_cancelAnimationFrame) {\n      function cancelAnimationFrame(_x9) {\n        return _cancelAnimationFrame.apply(this, arguments);\n      }\n\n      cancelAnimationFrame.toString = function () {\n        return _cancelAnimationFrame.toString();\n      };\n\n      return cancelAnimationFrame;\n    }(function (id) {\n      this._animationFrameIDs.delete(id);\n\n      cancelAnimationFrame(id);\n    })\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTimeout(this.testSetTimeout0, 1000);\n    }\n  }, {\n    key: \"testSetTimeout0\",\n    value: function testSetTimeout0() {\n      this.setTimeout(this.testSetTimeout1, 0);\n    }\n  }, {\n    key: \"testSetTimeout1\",\n    value: function testSetTimeout1() {\n      this.setTimeout(this.testSetTimeout50, 1);\n    }\n  }, {\n    key: \"testSetTimeout50\",\n    value: function testSetTimeout50() {\n      this.setTimeout(this.testRequestAnimationFrame, 50);\n    }\n  }, {\n    key: \"testRequestAnimationFrame\",\n    value: function testRequestAnimationFrame() {\n      this.requestAnimationFrame(this.testSetInterval0);\n    }\n  }, {\n    key: \"testSetInterval0\",\n    value: function testSetInterval0() {\n      this._nextTest = this.testSetInterval20;\n      this._interval = this.setInterval(this._incrementInterval, 0);\n    }\n  }, {\n    key: \"testSetInterval20\",\n    value: function testSetInterval20() {\n      this._nextTest = this.testSetImmediate;\n      this._interval = this.setInterval(this._incrementInterval, 20);\n    }\n  }, {\n    key: \"testSetImmediate\",\n    value: function testSetImmediate() {\n      this.setImmediate(this.testClearTimeout0);\n    }\n  }, {\n    key: \"testClearTimeout0\",\n    value: function testClearTimeout0() {\n      var _this5 = this;\n\n      var timeout = this.setTimeout(function () {\n        return _this5._fail('testClearTimeout0');\n      }, 0);\n      this.clearTimeout(timeout);\n      this.testClearTimeout30();\n    }\n  }, {\n    key: \"testClearTimeout30\",\n    value: function testClearTimeout30() {\n      var _this6 = this;\n\n      var timeout = this.setTimeout(function () {\n        return _this6._fail('testClearTimeout30');\n      }, 30);\n      this.clearTimeout(timeout);\n      this.setTimeout(this.testClearMulti, 50);\n    }\n  }, {\n    key: \"testClearMulti\",\n    value: function testClearMulti() {\n      var _this7 = this;\n\n      var fails = [];\n      fails.push(this.setTimeout(function () {\n        return _this7._fail('testClearMulti-1');\n      }, 20));\n      fails.push(this.setTimeout(function () {\n        return _this7._fail('testClearMulti-2');\n      }, 50));\n      var delayClear = this.setTimeout(function () {\n        return _this7._fail('testClearMulti-3');\n      }, 50);\n      fails.push(this.setTimeout(function () {\n        return _this7._fail('testClearMulti-4');\n      }, 0));\n      fails.push(this.setTimeout(function () {\n        return _this7._fail('testClearMulti-5');\n      }, 10));\n      fails.forEach(function (timeout) {\n        return _this7.clearTimeout(timeout);\n      });\n      this.setTimeout(function () {\n        return _this7.clearTimeout(delayClear);\n      }, 20);\n      this.setTimeout(this.testOrdering, 50);\n    }\n  }, {\n    key: \"testOrdering\",\n    value: function testOrdering() {\n      var _this8 = this;\n\n      var fail0;\n      this.setImmediate(function () {\n        return _this8.clearTimeout(fail0);\n      });\n      fail0 = this.setTimeout(function () {\n        return _this8._fail('testOrdering-t0, setImmediate should happen before ' + 'setTimeout 0');\n      }, 0);\n      var failAnim;\n      this.setTimeout(function () {\n        return _this8.cancelAnimationFrame(failAnim);\n      }, 0);\n      failAnim = this.requestAnimationFrame(function () {\n        return _this8._fail('testOrdering-Anim, setTimeout 0 should happen before ' + 'requestAnimationFrame');\n      });\n      var fail25;\n      this.setTimeout(function () {\n        _this8.clearTimeout(fail25);\n      }, 20);\n      fail25 = this.setTimeout(function () {\n        return _this8._fail('testOrdering-t25, setTimeout 20 should happen before ' + 'setTimeout 25');\n      }, 25);\n      this.setTimeout(this.done, 50);\n    }\n  }, {\n    key: \"done\",\n    value: function done() {\n      this.setState({\n        done: true\n      }, function () {\n        TestModule.markTestCompleted();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      for (var _iterator = _createForOfIteratorHelperLoose(this._timeoutIDs), _step; !(_step = _iterator()).done;) {\n        var timeoutID = _step.value;\n        clearTimeout(timeoutID);\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this._intervalIDs), _step2; !(_step2 = _iterator2()).done;) {\n        var intervalID = _step2.value;\n        clearInterval(intervalID);\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this._animationFrameIDs), _step3; !(_step3 = _iterator3()).done;) {\n        var requestAnimationFrameID = _step3.value;\n        cancelAnimationFrame(requestAnimationFrameID);\n      }\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this._immediateIDs), _step4; !(_step4 = _iterator4()).done;) {\n        var immediateID = _step4.value;\n        clearImmediate(immediateID);\n      }\n\n      this._timeoutIDs = new Set();\n      this._intervalIDs = new Set();\n      this._animationFrameIDs = new Set();\n      this._immediateIDs = new Set();\n\n      if (this._interval != null) {\n        clearInterval(this._interval);\n        this._interval = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, this.constructor.name + ': \\n', \"Intervals: \", this.state.count + '\\n', this.state.done ? 'Done' : 'Testing...'));\n    }\n  }, {\n    key: \"_incrementInterval\",\n    value: function _incrementInterval() {\n      if (this.state.count > 3) {\n        throw new Error('interval incremented past end.');\n      }\n\n      if (this.state.count === 3) {\n        if (this._interval != null) {\n          this.clearInterval(this._interval);\n          this._interval = null;\n        }\n\n        this.setState({\n          count: 0\n        }, this._nextTest);\n        return;\n      }\n\n      this.setState({\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"_fail\",\n    value: function _fail(caller) {\n      throw new Error('_fail called by ' + caller);\n    }\n  }]);\n\n  return TimersTest;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 40\n  }\n});\nmodule.exports = TimersTest;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/IntegrationTests/TimersTest.js"],"names":["React","require","StyleSheet","ReactNative","Text","View","TestModule","NativeModules","TimersTest","_nextTest","_interval","_timeoutIDs","Set","_intervalIDs","_immediateIDs","_animationFrameIDs","state","count","done","fn","time","id","setTimeout","delete","add","clearTimeout","setInterval","clearInterval","setImmediate","requestAnimationFrame","cancelAnimationFrame","testSetTimeout0","testSetTimeout1","testSetTimeout50","testRequestAnimationFrame","testSetInterval0","testSetInterval20","_incrementInterval","testSetImmediate","testClearTimeout0","timeout","_fail","testClearTimeout30","testClearMulti","fails","push","delayClear","forEach","testOrdering","fail0","failAnim","fail25","setState","markTestCompleted","timeoutID","intervalID","requestAnimationFrameID","immediateID","clearImmediate","styles","container","constructor","name","Error","caller","Component","create","backgroundColor","padding","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\nconst {StyleSheet, Text, View} = ReactNative;\nconst {TestModule} = ReactNative.NativeModules;\n\ntype Props = $ReadOnly<{||}>;\n\ntype State = {|\n  count: number,\n  done: boolean,\n|};\n\ntype ImmediateID = Object;\n\nclass TimersTest extends React.Component<Props, State> {\n  _nextTest = () => {};\n  _interval: ?IntervalID = null;\n\n  _timeoutIDs: Set<TimeoutID> = new Set();\n  _intervalIDs: Set<IntervalID> = new Set();\n  _immediateIDs: Set<ImmediateID> = new Set();\n  _animationFrameIDs: Set<AnimationFrameID> = new Set();\n\n  state: State = {\n    count: 0,\n    done: false,\n  };\n\n  setTimeout(fn: () => void, time: number): TimeoutID {\n    const id = setTimeout(() => {\n      this._timeoutIDs.delete(id);\n      fn();\n    }, time);\n\n    this._timeoutIDs.add(id);\n\n    return id;\n  }\n\n  clearTimeout(id: TimeoutID) {\n    this._timeoutIDs.delete(id);\n    clearTimeout(id);\n  }\n\n  setInterval(fn: () => void, time: number): IntervalID {\n    const id = setInterval(() => {\n      fn();\n    }, time);\n\n    this._intervalIDs.add(id);\n\n    return id;\n  }\n\n  clearInterval(id: IntervalID) {\n    this._intervalIDs.delete(id);\n    clearInterval(id);\n  }\n\n  setImmediate(fn: () => void): ImmediateID {\n    const id = setImmediate(() => {\n      this._immediateIDs.delete(id);\n      fn();\n    });\n\n    this._immediateIDs.add(id);\n\n    return id;\n  }\n\n  requestAnimationFrame(fn: () => void): AnimationFrameID {\n    const id = requestAnimationFrame(() => {\n      this._animationFrameIDs.delete(id);\n      fn();\n    });\n\n    this._animationFrameIDs.add(id);\n\n    return id;\n  }\n\n  cancelAnimationFrame(id: AnimationFrameID): void {\n    this._animationFrameIDs.delete(id);\n    cancelAnimationFrame(id);\n  }\n\n  componentDidMount() {\n    this.setTimeout(this.testSetTimeout0, 1000);\n  }\n\n  testSetTimeout0() {\n    this.setTimeout(this.testSetTimeout1, 0);\n  }\n\n  testSetTimeout1() {\n    this.setTimeout(this.testSetTimeout50, 1);\n  }\n\n  testSetTimeout50() {\n    this.setTimeout(this.testRequestAnimationFrame, 50);\n  }\n\n  testRequestAnimationFrame() {\n    this.requestAnimationFrame(this.testSetInterval0);\n  }\n\n  testSetInterval0() {\n    this._nextTest = this.testSetInterval20;\n    this._interval = this.setInterval(this._incrementInterval, 0);\n  }\n\n  testSetInterval20() {\n    this._nextTest = this.testSetImmediate;\n    this._interval = this.setInterval(this._incrementInterval, 20);\n  }\n\n  testSetImmediate() {\n    this.setImmediate(this.testClearTimeout0);\n  }\n\n  testClearTimeout0() {\n    const timeout = this.setTimeout(() => this._fail('testClearTimeout0'), 0);\n    this.clearTimeout(timeout);\n    this.testClearTimeout30();\n  }\n\n  testClearTimeout30() {\n    const timeout = this.setTimeout(() => this._fail('testClearTimeout30'), 30);\n    this.clearTimeout(timeout);\n    this.setTimeout(this.testClearMulti, 50);\n  }\n\n  testClearMulti() {\n    const fails = [];\n    fails.push(this.setTimeout(() => this._fail('testClearMulti-1'), 20));\n    fails.push(this.setTimeout(() => this._fail('testClearMulti-2'), 50));\n    const delayClear = this.setTimeout(\n      () => this._fail('testClearMulti-3'),\n      50,\n    );\n    fails.push(this.setTimeout(() => this._fail('testClearMulti-4'), 0));\n    fails.push(this.setTimeout(() => this._fail('testClearMulti-5'), 10));\n\n    fails.forEach(timeout => this.clearTimeout(timeout));\n    this.setTimeout(() => this.clearTimeout(delayClear), 20);\n\n    this.setTimeout(this.testOrdering, 50);\n  }\n\n  testOrdering() {\n    // Clear timers are set first because it's more likely to uncover bugs.\n    let fail0;\n    this.setImmediate(() => this.clearTimeout(fail0));\n    fail0 = this.setTimeout(\n      () =>\n        this._fail(\n          'testOrdering-t0, setImmediate should happen before ' +\n            'setTimeout 0',\n        ),\n      0,\n    );\n    let failAnim; // This should fail without the t=0 fastpath feature.\n    this.setTimeout(() => this.cancelAnimationFrame(failAnim), 0);\n    failAnim = this.requestAnimationFrame(() =>\n      this._fail(\n        'testOrdering-Anim, setTimeout 0 should happen before ' +\n          'requestAnimationFrame',\n      ),\n    );\n    let fail25;\n    this.setTimeout(() => {\n      this.clearTimeout(fail25);\n    }, 20);\n    fail25 = this.setTimeout(\n      () =>\n        this._fail(\n          'testOrdering-t25, setTimeout 20 should happen before ' +\n            'setTimeout 25',\n        ),\n      25,\n    );\n    this.setTimeout(this.done, 50);\n  }\n\n  done() {\n    this.setState({done: true}, () => {\n      TestModule.markTestCompleted();\n    });\n  }\n\n  componentWillUnmount() {\n    for (const timeoutID of this._timeoutIDs) {\n      clearTimeout(timeoutID);\n    }\n\n    for (const intervalID of this._intervalIDs) {\n      clearInterval(intervalID);\n    }\n\n    for (const requestAnimationFrameID of this._animationFrameIDs) {\n      cancelAnimationFrame(requestAnimationFrameID);\n    }\n\n    for (const immediateID of this._immediateIDs) {\n      clearImmediate(immediateID);\n    }\n\n    this._timeoutIDs = new Set();\n    this._intervalIDs = new Set();\n    this._animationFrameIDs = new Set();\n    this._immediateIDs = new Set();\n\n    if (this._interval != null) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n  }\n\n  render(): React.Node {\n    return (\n      <View style={styles.container}>\n        <Text>\n          {this.constructor.name + ': \\n'}\n          Intervals: {this.state.count + '\\n'}\n          {this.state.done ? 'Done' : 'Testing...'}\n        </Text>\n      </View>\n    );\n  }\n\n  _incrementInterval() {\n    if (this.state.count > 3) {\n      throw new Error('interval incremented past end.');\n    }\n    if (this.state.count === 3) {\n      if (this._interval != null) {\n        this.clearInterval(this._interval);\n        this._interval = null;\n      }\n      this.setState({count: 0}, this._nextTest);\n      return;\n    }\n    this.setState({count: this.state.count + 1});\n  }\n\n  _fail(caller: string): void {\n    throw new Error('_fail called by ' + caller);\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 40,\n  },\n});\n\nmodule.exports = TimersTest;\n"]},"metadata":{},"sourceType":"script"}