{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\n\nvar AnimatedDivision = function (_AnimatedWithChildren) {\n  _inherits(AnimatedDivision, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedDivision);\n\n  function AnimatedDivision(a, b) {\n    var _this;\n\n    _classCallCheck(this, AnimatedDivision);\n\n    _this = _super.call(this);\n    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n    return _this;\n  }\n\n  _createClass(AnimatedDivision, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._a.__makeNative();\n\n      this._b.__makeNative();\n\n      _get(_getPrototypeOf(AnimatedDivision.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var a = this._a.__getValue();\n\n      var b = this._b.__getValue();\n\n      if (b === 0) {\n        console.error('Detected division by zero in AnimatedDivision');\n      }\n\n      return a / b;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._a.__addChild(this);\n\n      this._b.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._a.__removeChild(this);\n\n      this._b.__removeChild(this);\n\n      _get(_getPrototypeOf(AnimatedDivision.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'division',\n        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n      };\n    }\n  }]);\n\n  return AnimatedDivision;\n}(AnimatedWithChildren);\n\nexport default AnimatedDivision;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native-web/src/vendor/react-native/Animated/nodes/AnimatedDivision.js"],"names":["AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedDivision","a","b","_a","_b","__makeNative","__getValue","console","error","config","__addChild","__removeChild","type","input","__getNativeTag"],"mappings":"AASA;;;;;;;;;;;;;AAEA,OAAOA,qBAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,oBAAP;;IAIMC,gB;;;;;AAIJ,4BAAYC,CAAZ,EAAsCC,CAAtC,EAAgE;AAAA;;AAAA;;AAC9D;AACA,UAAKC,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIH,aAAJ,CAAkBG,CAAlB,CAAxB,GAA+CA,CAAzD;AACA,UAAKG,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIJ,aAAJ,CAAkBI,CAAlB,CAAxB,GAA+CA,CAAzD;AAH8D;AAI/D;;;;WAED,wBAAe;AACb,WAAKC,EAAL,CAAQE,YAAR;;AACA,WAAKD,EAAL,CAAQC,YAAR;;AACA;AACD;;;WAED,sBAAqB;AACnB,UAAMJ,CAAC,GAAG,KAAKE,EAAL,CAAQG,UAAR,EAAV;;AACA,UAAMJ,CAAC,GAAG,KAAKE,EAAL,CAAQE,UAAR,EAAV;;AACA,UAAIJ,CAAC,KAAK,CAAV,EAAa;AACXK,QAAAA,OAAO,CAACC,KAAR,CAAc,+CAAd;AACD;;AACD,aAAOP,CAAC,GAAGC,CAAX;AACD;;;WAED,qBAAYO,MAAZ,EAAoE;AAClE,aAAO,IAAIb,qBAAJ,CAA0B,IAA1B,EAAgCa,MAAhC,CAAP;AACD;;;WAED,oBAAiB;AACf,WAAKN,EAAL,CAAQO,UAAR,CAAmB,IAAnB;;AACA,WAAKN,EAAL,CAAQM,UAAR,CAAmB,IAAnB;AACD;;;WAED,oBAAiB;AACf,WAAKP,EAAL,CAAQQ,aAAR,CAAsB,IAAtB;;AACA,WAAKP,EAAL,CAAQO,aAAR,CAAsB,IAAtB;;AACA;AACD;;;WAED,6BAAyB;AACvB,aAAO;AACLC,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,KAAK,EAAE,CAAC,KAAKV,EAAL,CAAQW,cAAR,EAAD,EAA2B,KAAKV,EAAL,CAAQU,cAAR,EAA3B;AAFF,OAAP;AAID;;;;EA7C4Bf,oB;;AAgD/B,eAAeC,gBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedDivision extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _b: AnimatedNode;\n\n  constructor(a: AnimatedNode | number, b: AnimatedNode | number) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    this._b.__makeNative();\n    super.__makeNative();\n  }\n\n  __getValue(): number {\n    const a = this._a.__getValue();\n    const b = this._b.__getValue();\n    if (b === 0) {\n      console.error('Detected division by zero in AnimatedDivision');\n    }\n    return a / b;\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'division',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n    };\n  }\n}\n\nexport default AnimatedDivision;\n"]},"metadata":{},"sourceType":"module"}