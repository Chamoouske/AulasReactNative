{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Touchable/TouchableExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Animated = require(\"react-native-web/dist/exports/Animated\").default;\n\nvar Image = require(\"react-native-web/dist/exports/Image\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar TouchableOpacity = require(\"react-native-web/dist/exports/TouchableOpacity\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar TouchableNativeFeedback = require(\"react-native-web/dist/exports/TouchableNativeFeedback\").default;\n\nvar TouchableWithoutFeedback = require(\"react-native-web/dist/exports/TouchableWithoutFeedback\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nimport { useEffect, useRef, useState } from 'react';\nvar forceTouchAvailable = Platform.OS === 'ios' && Platform.constants.forceTouchAvailable || false;\n\nvar TouchableHighlightBox = function (_React$Component) {\n  _inherits(TouchableHighlightBox, _React$Component);\n\n  var _super = _createSuper(TouchableHighlightBox);\n\n  function TouchableHighlightBox() {\n    var _this;\n\n    _classCallCheck(this, TouchableHighlightBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      timesPressed: 0\n    };\n\n    _this.touchableOnPress = function () {\n      _this.setState({\n        timesPressed: _this.state.timesPressed + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TouchableHighlightBox, [{\n    key: \"render\",\n    value: function render() {\n      var textLog = '';\n\n      if (this.state.timesPressed > 1) {\n        textLog = this.state.timesPressed + 'x TouchableHighlight onPress';\n      } else if (this.state.timesPressed > 0) {\n        textLog = 'TouchableHighlight onPress';\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        testID: \"touchable_highlight_image_button\",\n        onPress: this.touchableOnPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: remoteImage,\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableHighlight, {\n        style: styles.wrapper,\n        testID: \"touchable_highlight_text_button\",\n        activeOpacity: 1,\n        underlayColor: \"rgb(210, 230, 255)\",\n        onPress: this.touchableOnPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.wrapperCustom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Tap Here For Custom Highlight!\")))), React.createElement(View, {\n        style: styles.logBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        testID: \"touchable_highlight_console\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, textLog)));\n    }\n  }]);\n\n  return TouchableHighlightBox;\n}(React.Component);\n\nvar TouchableWithoutFeedbackBox = function (_React$Component2) {\n  _inherits(TouchableWithoutFeedbackBox, _React$Component2);\n\n  var _super2 = _createSuper(TouchableWithoutFeedbackBox);\n\n  function TouchableWithoutFeedbackBox() {\n    var _this2;\n\n    _classCallCheck(this, TouchableWithoutFeedbackBox);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _this2.state = {\n      timesPressed: 0\n    };\n\n    _this2.textOnPress = function () {\n      _this2.setState({\n        timesPressed: _this2.state.timesPressed + 1\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(TouchableWithoutFeedbackBox, [{\n    key: \"render\",\n    value: function render() {\n      var textLog = '';\n\n      if (this.state.timesPressed > 1) {\n        textLog = this.state.timesPressed + 'x TouchableWithoutFeedback onPress';\n      } else if (this.state.timesPressed > 0) {\n        textLog = 'TouchableWithoutFeedback onPress';\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.textOnPress,\n        testID: \"touchable_without_feedback_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.wrapperCustom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, \"Tap Here For No Feedback!\"))), React.createElement(View, {\n        style: styles.logBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        testID: \"touchable_without_feedback_console\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, textLog)));\n    }\n  }]);\n\n  return TouchableWithoutFeedbackBox;\n}(React.Component);\n\nvar TextOnPressBox = function (_React$Component3) {\n  _inherits(TextOnPressBox, _React$Component3);\n\n  var _super3 = _createSuper(TextOnPressBox);\n\n  function TextOnPressBox() {\n    var _this3;\n\n    _classCallCheck(this, TextOnPressBox);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    _this3.state = {\n      timesPressed: 0\n    };\n\n    _this3.textOnPress = function () {\n      _this3.setState({\n        timesPressed: _this3.state.timesPressed + 1\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(TextOnPressBox, [{\n    key: \"render\",\n    value: function render() {\n      var textLog = '';\n\n      if (this.state.timesPressed > 1) {\n        textLog = this.state.timesPressed + 'x text onPress';\n      } else if (this.state.timesPressed > 0) {\n        textLog = 'text onPress';\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textBlock,\n        testID: \"tappable_text\",\n        onPress: this.textOnPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, \"Text has built-in onPress handling\"), React.createElement(View, {\n        style: styles.logBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        testID: \"tappable_text_console\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, textLog)));\n    }\n  }]);\n\n  return TextOnPressBox;\n}(React.Component);\n\nvar TouchableFeedbackEvents = function (_React$Component4) {\n  _inherits(TouchableFeedbackEvents, _React$Component4);\n\n  var _super4 = _createSuper(TouchableFeedbackEvents);\n\n  function TouchableFeedbackEvents() {\n    var _this4;\n\n    _classCallCheck(this, TouchableFeedbackEvents);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this4 = _super4.call.apply(_super4, [this].concat(args));\n    _this4.state = {\n      eventLog: []\n    };\n\n    _this4._appendEvent = function (eventName) {\n      var limit = 6;\n\n      var eventLog = _this4.state.eventLog.slice(0, limit - 1);\n\n      eventLog.unshift(eventName);\n\n      _this4.setState({\n        eventLog: eventLog\n      });\n    };\n\n    return _this4;\n  }\n\n  _createClass(TouchableFeedbackEvents, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        testID: \"touchable_feedback_events\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.centered],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.wrapper,\n        testID: \"touchable_feedback_events_button\",\n        accessibilityLabel: \"touchable feedback events\",\n        accessibilityRole: \"button\",\n        onPress: function onPress() {\n          return _this5._appendEvent('press');\n        },\n        onPressIn: function onPressIn() {\n          return _this5._appendEvent('pressIn');\n        },\n        onPressOut: function onPressOut() {\n          return _this5._appendEvent('pressOut');\n        },\n        onLongPress: function onLongPress() {\n          return _this5._appendEvent('longPress');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, \"Press Me\"))), React.createElement(View, {\n        testID: \"touchable_feedback_events_console\",\n        style: styles.eventLogBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, this.state.eventLog.map(function (e, ii) {\n        return React.createElement(Text, {\n          key: ii,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }\n        }, e);\n      })));\n    }\n  }]);\n\n  return TouchableFeedbackEvents;\n}(React.Component);\n\nvar TouchableDelayEvents = function (_React$Component5) {\n  _inherits(TouchableDelayEvents, _React$Component5);\n\n  var _super5 = _createSuper(TouchableDelayEvents);\n\n  function TouchableDelayEvents() {\n    var _this6;\n\n    _classCallCheck(this, TouchableDelayEvents);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this6 = _super5.call.apply(_super5, [this].concat(args));\n    _this6.state = {\n      eventLog: []\n    };\n\n    _this6._appendEvent = function (eventName) {\n      var limit = 6;\n\n      var eventLog = _this6.state.eventLog.slice(0, limit - 1);\n\n      eventLog.unshift(eventName);\n\n      _this6.setState({\n        eventLog: eventLog\n      });\n    };\n\n    return _this6;\n  }\n\n  _createClass(TouchableDelayEvents, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(View, {\n        testID: \"touchable_delay_events\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.centered],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.wrapper,\n        testID: \"touchable_delay_events_button\",\n        onPress: function onPress() {\n          return _this7._appendEvent('press');\n        },\n        delayPressIn: 400,\n        onPressIn: function onPressIn() {\n          return _this7._appendEvent('pressIn - 400ms delay');\n        },\n        delayPressOut: 1000,\n        onPressOut: function onPressOut() {\n          return _this7._appendEvent('pressOut - 1000ms delay');\n        },\n        delayLongPress: 800,\n        onLongPress: function onLongPress() {\n          return _this7._appendEvent('longPress - 800ms delay');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, \"Press Me\"))), React.createElement(View, {\n        style: styles.eventLogBox,\n        testID: \"touchable_delay_events_console\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, this.state.eventLog.map(function (e, ii) {\n        return React.createElement(Text, {\n          key: ii,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }\n        }, e);\n      })));\n    }\n  }]);\n\n  return TouchableDelayEvents;\n}(React.Component);\n\nvar ForceTouchExample = function (_React$Component6) {\n  _inherits(ForceTouchExample, _React$Component6);\n\n  var _super6 = _createSuper(ForceTouchExample);\n\n  function ForceTouchExample() {\n    var _this8;\n\n    _classCallCheck(this, ForceTouchExample);\n\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    _this8 = _super6.call.apply(_super6, [this].concat(args));\n    _this8.state = {\n      force: 0\n    };\n\n    _this8._renderConsoleText = function () {\n      return forceTouchAvailable ? 'Force: ' + _this8.state.force.toFixed(3) : '3D Touch is not available on this device';\n    };\n\n    return _this8;\n  }\n\n  _createClass(ForceTouchExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      return React.createElement(View, {\n        testID: \"touchable_3dtouch_event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.forceTouchBox,\n        testID: \"touchable_3dtouch_output\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, this._renderConsoleText())), React.createElement(View, {\n        style: [styles.row, styles.centered],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.wrapper,\n        testID: \"touchable_3dtouch_button\",\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderMove: function onResponderMove(event) {\n          return _this9.setState({\n            force: event.nativeEvent.force\n          });\n        },\n        onResponderRelease: function onResponderRelease(event) {\n          return _this9.setState({\n            force: 0\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, \"Press Me\"))));\n    }\n  }]);\n\n  return ForceTouchExample;\n}(React.Component);\n\nvar TouchableHitSlop = function (_React$Component7) {\n  _inherits(TouchableHitSlop, _React$Component7);\n\n  var _super7 = _createSuper(TouchableHitSlop);\n\n  function TouchableHitSlop() {\n    var _this10;\n\n    _classCallCheck(this, TouchableHitSlop);\n\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    _this10 = _super7.call.apply(_super7, [this].concat(args));\n    _this10.state = {\n      timesPressed: 0\n    };\n\n    _this10.onPress = function () {\n      _this10.setState({\n        timesPressed: _this10.state.timesPressed + 1\n      });\n    };\n\n    return _this10;\n  }\n\n  _createClass(TouchableHitSlop, [{\n    key: \"render\",\n    value: function render() {\n      var log = '';\n\n      if (this.state.timesPressed > 1) {\n        log = this.state.timesPressed + 'x onPress';\n      } else if (this.state.timesPressed > 0) {\n        log = 'onPress';\n      }\n\n      return React.createElement(View, {\n        testID: \"touchable_hit_slop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.centered],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.onPress,\n        style: styles.hitSlopWrapper,\n        hitSlop: {\n          top: 30,\n          bottom: 30,\n          left: 60,\n          right: 60\n        },\n        testID: \"touchable_hit_slop_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.hitSlopButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, \"Press Outside This View\"))), React.createElement(View, {\n        style: styles.logBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }\n      }, log)));\n    }\n  }]);\n\n  return TouchableHitSlop;\n}(React.Component);\n\nfunction TouchableNativeMethodChecker(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var ref = useRef(null);\n  useEffect(function () {\n    setStatus(ref.current != null && typeof ref.current.measure === 'function');\n  }, []);\n  return React.createElement(View, {\n    style: [styles.row, styles.block],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }, React.createElement(props.Component, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, props.name + ': ', status == null ? 'Missing Ref!' : status === true ? 'Native Methods Exist' : 'Native Methods Missing!'));\n}\n\nfunction TouchableNativeMethods() {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableNativeMethodChecker, {\n    Component: TouchableHighlight,\n    name: \"TouchableHighlight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableNativeMethodChecker, {\n    Component: TouchableOpacity,\n    name: \"TouchableOpacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar TouchableDisabled = function (_React$Component8) {\n  _inherits(TouchableDisabled, _React$Component8);\n\n  var _super8 = _createSuper(TouchableDisabled);\n\n  function TouchableDisabled() {\n    _classCallCheck(this, TouchableDisabled);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(TouchableDisabled, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: true,\n        style: [styles.row, styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.disabledButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }\n      }, \"Disabled TouchableOpacity\")), React.createElement(TouchableOpacity, {\n        disabled: false,\n        style: [styles.row, styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, \"Enabled TouchableOpacity\")), React.createElement(TouchableHighlight, {\n        activeOpacity: 1,\n        disabled: true,\n        underlayColor: \"rgb(210, 230, 255)\",\n        style: [styles.row, styles.block],\n        onPress: function onPress() {\n          return console.log('custom THW text - highlight');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.disabledButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, \"Disabled TouchableHighlight\")), React.createElement(TouchableHighlight, {\n        activeOpacity: 1,\n        underlayColor: \"rgb(210, 230, 255)\",\n        style: [styles.row, styles.block],\n        onPress: function onPress() {\n          return console.log('custom THW text - highlight');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, \"Enabled TouchableHighlight\")), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return console.log('TWOF has been clicked');\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.wrapperCustom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.button, styles.nativeFeedbackButton, styles.disabledButton],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, \"Disabled TouchableWithoutFeedback\"))), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return console.log('TWOF has been clicked');\n        },\n        disabled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.wrapperCustom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.button, styles.nativeFeedbackButton],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }\n      }, \"Enabled TouchableWithoutFeedback\"))), Platform.OS === 'android' && React.createElement(React.Fragment, null, React.createElement(TouchableNativeFeedback, {\n        onPress: function onPress() {\n          return console.log('custom TNF has been clicked');\n        },\n        background: TouchableNativeFeedback.SelectableBackground(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: [styles.button, styles.nativeFeedbackButton],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 17\n        }\n      }, \"Enabled TouchableNativeFeedback\"))), React.createElement(TouchableNativeFeedback, {\n        disabled: true,\n        onPress: function onPress() {\n          return console.log('custom TNF has been clicked');\n        },\n        background: TouchableNativeFeedback.SelectableBackground(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.row, styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: [styles.disabledButton, styles.nativeFeedbackButton],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }\n      }, \"Disabled TouchableNativeFeedback\")))));\n    }\n  }]);\n\n  return TouchableDisabled;\n}(React.Component);\n\nfunction CustomRippleRadius() {\n  if (Platform.OS !== 'android') {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: [styles.row, {\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      return console.log('custom TNF has been clicked');\n    },\n    background: TouchableNativeFeedback.Ripple('orange', true, 30),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, styles.nativeFeedbackButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }, \"radius 30\"))), React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      return console.log('custom TNF has been clicked');\n    },\n    background: TouchableNativeFeedback.SelectableBackgroundBorderless(150),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, styles.nativeFeedbackButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, \"radius 150\"))), React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      return console.log('custom TNF has been clicked');\n    },\n    background: TouchableNativeFeedback.SelectableBackground(70),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.button, styles.nativeFeedbackButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, \"radius 70, with border\"))));\n}\n\nvar remoteImage = {\n  uri: 'https://www.facebook.com/favicon.ico'\n};\nvar styles = StyleSheet.create({\n  row: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  centered: {\n    justifyContent: 'center'\n  },\n  image: {\n    width: 50,\n    height: 50\n  },\n  text: {\n    fontSize: 16\n  },\n  block: {\n    padding: 10\n  },\n  button: {\n    color: '#007AFF'\n  },\n  disabledButton: {\n    color: '#007AFF',\n    opacity: 0.5\n  },\n  nativeFeedbackButton: {\n    textAlign: 'center',\n    margin: 10\n  },\n  hitSlopButton: {\n    color: 'white'\n  },\n  wrapper: {\n    borderRadius: 8\n  },\n  wrapperCustom: {\n    borderRadius: 8,\n    padding: 6\n  },\n  hitSlopWrapper: {\n    backgroundColor: 'red',\n    marginVertical: 30\n  },\n  logBox: {\n    padding: 20,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  },\n  eventLogBox: {\n    padding: 10,\n    margin: 10,\n    height: 120,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9'\n  },\n  forceTouchBox: {\n    padding: 10,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9',\n    alignItems: 'center'\n  },\n  textBlock: {\n    fontWeight: '500',\n    color: 'blue'\n  }\n});\nexports.displayName = undefined;\nexports.description = 'Touchable and onPress examples.';\nexports.title = '<Touchable*> and onPress';\nexports.examples = [{\n  title: '<TouchableHighlight>',\n  description: 'TouchableHighlight works by adding an extra view with a ' + 'black background under the single child view.  This works best when the ' + 'child view is fully opaque, although it can be made to work as a simple ' + 'background color change as well with the activeOpacity and ' + 'underlayColor props.',\n  render: function render() {\n    return React.createElement(TouchableHighlightBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: '<TouchableWithoutFeedback>',\n  render: function render() {\n    return React.createElement(TouchableWithoutFeedbackBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'TouchableNativeFeedback with Animated child',\n  description: 'TouchableNativeFeedback can have an AnimatedComponent as a' + 'direct child.',\n  platform: 'android',\n  render: function render() {\n    var mScale = new Animated.Value(1);\n    Animated.timing(mScale, {\n      toValue: 0.3,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n    var style = {\n      backgroundColor: 'rgb(180, 64, 119)',\n      width: 200,\n      height: 100,\n      transform: [{\n        scale: mScale\n      }]\n    };\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableNativeFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 15\n      }\n    }))));\n  }\n}, {\n  title: '<Text onPress={fn}> with highlight',\n  render: function render() {\n    return React.createElement(TextOnPressBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Touchable feedback events',\n  description: '<Touchable*> components accept onPress, onPressIn, ' + 'onPressOut, and onLongPress as props.',\n  render: function render() {\n    return React.createElement(TouchableFeedbackEvents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Touchable delay for events',\n  description: '<Touchable*> components also accept delayPressIn, ' + 'delayPressOut, and delayLongPress as props. These props impact the ' + 'timing of feedback events.',\n  render: function render() {\n    return React.createElement(TouchableDelayEvents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: '3D Touch / Force Touch',\n  description: 'iPhone 8 and 8 plus support 3D touch, which adds a force property to touches',\n  render: function render() {\n    return React.createElement(ForceTouchExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 14\n      }\n    });\n  },\n  platform: 'ios'\n}, {\n  title: 'Touchable Hit Slop',\n  description: '<Touchable*> components accept hitSlop prop which extends the touch area ' + 'without changing the view bounds.',\n  render: function render() {\n    return React.createElement(TouchableHitSlop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Touchable Native Methods',\n  description: 'Some <Touchable*> components expose native methods like `measure`.',\n  render: function render() {\n    return React.createElement(TouchableNativeMethods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Custom Ripple Radius (Android-only)',\n  description: 'Ripple radius on TouchableNativeFeedback can be controlled',\n  render: function render() {\n    return React.createElement(CustomRippleRadius, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 14\n      }\n    });\n  }\n}, {\n  title: 'Disabled Touchable*',\n  description: '<Touchable*> components accept disabled prop which prevents ' + 'any interaction with component',\n  render: function render() {\n    return React.createElement(TouchableDisabled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Touchable/TouchableExample.js"],"names":["React","require","useEffect","useRef","useState","forceTouchAvailable","Platform","OS","constants","TouchableHighlightBox","state","timesPressed","touchableOnPress","setState","textLog","styles","row","wrapper","remoteImage","image","wrapperCustom","text","logBox","Component","TouchableWithoutFeedbackBox","textOnPress","TextOnPressBox","textBlock","TouchableFeedbackEvents","eventLog","_appendEvent","eventName","limit","slice","unshift","centered","button","eventLogBox","map","e","ii","TouchableDelayEvents","ForceTouchExample","force","_renderConsoleText","toFixed","forceTouchBox","event","nativeEvent","TouchableHitSlop","onPress","log","hitSlopWrapper","top","bottom","left","right","hitSlopButton","TouchableNativeMethodChecker","props","status","setStatus","ref","current","measure","block","name","TouchableNativeMethods","TouchableHighlight","TouchableOpacity","TouchableDisabled","disabledButton","console","nativeFeedbackButton","TouchableNativeFeedback","SelectableBackground","CustomRippleRadius","justifyContent","alignItems","Ripple","SelectableBackgroundBorderless","uri","StyleSheet","create","flexDirection","width","height","fontSize","padding","color","opacity","textAlign","margin","borderRadius","backgroundColor","marginVertical","borderWidth","hairlineWidth","borderColor","fontWeight","exports","displayName","undefined","description","title","examples","render","platform","mScale","Animated","Value","timing","toValue","duration","useNativeDriver","start","style","transform","scale"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Animated,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  TouchableOpacity,\n  Platform,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n  View,\n} = require('react-native');\n\nimport {useEffect, useRef, useState} from 'react';\n\nconst forceTouchAvailable =\n  (Platform.OS === 'ios' && Platform.constants.forceTouchAvailable) || false;\n\nclass TouchableHighlightBox extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    timesPressed: 0,\n  };\n\n  touchableOnPress = () => {\n    this.setState({\n      timesPressed: this.state.timesPressed + 1,\n    });\n  };\n\n  render() {\n    let textLog = '';\n    if (this.state.timesPressed > 1) {\n      textLog = this.state.timesPressed + 'x TouchableHighlight onPress';\n    } else if (this.state.timesPressed > 0) {\n      textLog = 'TouchableHighlight onPress';\n    }\n\n    return (\n      <View>\n        <View style={styles.row}>\n          <TouchableHighlight\n            style={styles.wrapper}\n            testID=\"touchable_highlight_image_button\"\n            onPress={this.touchableOnPress}>\n            <Image source={remoteImage} style={styles.image} />\n          </TouchableHighlight>\n          <TouchableHighlight\n            style={styles.wrapper}\n            testID=\"touchable_highlight_text_button\"\n            activeOpacity={1}\n            underlayColor=\"rgb(210, 230, 255)\"\n            onPress={this.touchableOnPress}>\n            <View style={styles.wrapperCustom}>\n              <Text style={styles.text}>Tap Here For Custom Highlight!</Text>\n            </View>\n          </TouchableHighlight>\n        </View>\n        <View style={styles.logBox}>\n          <Text testID=\"touchable_highlight_console\">{textLog}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nclass TouchableWithoutFeedbackBox extends React.Component<\n  {...},\n  $FlowFixMeState,\n> {\n  state = {\n    timesPressed: 0,\n  };\n\n  textOnPress = () => {\n    this.setState({\n      timesPressed: this.state.timesPressed + 1,\n    });\n  };\n\n  render() {\n    let textLog = '';\n    if (this.state.timesPressed > 1) {\n      textLog = this.state.timesPressed + 'x TouchableWithoutFeedback onPress';\n    } else if (this.state.timesPressed > 0) {\n      textLog = 'TouchableWithoutFeedback onPress';\n    }\n\n    return (\n      <View>\n        <TouchableWithoutFeedback\n          onPress={this.textOnPress}\n          testID=\"touchable_without_feedback_button\">\n          <View style={styles.wrapperCustom}>\n            <Text style={styles.text}>Tap Here For No Feedback!</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <View style={styles.logBox}>\n          <Text testID=\"touchable_without_feedback_console\">{textLog}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nclass TextOnPressBox extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    timesPressed: 0,\n  };\n\n  textOnPress = () => {\n    this.setState({\n      timesPressed: this.state.timesPressed + 1,\n    });\n  };\n\n  render() {\n    let textLog = '';\n    if (this.state.timesPressed > 1) {\n      textLog = this.state.timesPressed + 'x text onPress';\n    } else if (this.state.timesPressed > 0) {\n      textLog = 'text onPress';\n    }\n\n    return (\n      <View>\n        <Text\n          style={styles.textBlock}\n          testID=\"tappable_text\"\n          onPress={this.textOnPress}>\n          Text has built-in onPress handling\n        </Text>\n        <View style={styles.logBox}>\n          <Text testID=\"tappable_text_console\">{textLog}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nclass TouchableFeedbackEvents extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    eventLog: [],\n  };\n\n  render() {\n    return (\n      <View testID=\"touchable_feedback_events\">\n        <View style={[styles.row, styles.centered]}>\n          <TouchableOpacity\n            style={styles.wrapper}\n            testID=\"touchable_feedback_events_button\"\n            accessibilityLabel=\"touchable feedback events\"\n            accessibilityRole=\"button\"\n            onPress={() => this._appendEvent('press')}\n            onPressIn={() => this._appendEvent('pressIn')}\n            onPressOut={() => this._appendEvent('pressOut')}\n            onLongPress={() => this._appendEvent('longPress')}>\n            <Text style={styles.button}>Press Me</Text>\n          </TouchableOpacity>\n        </View>\n        <View\n          testID=\"touchable_feedback_events_console\"\n          style={styles.eventLogBox}>\n          {this.state.eventLog.map((e, ii) => (\n            <Text key={ii}>{e}</Text>\n          ))}\n        </View>\n      </View>\n    );\n  }\n\n  _appendEvent = eventName => {\n    const limit = 6;\n    const eventLog = this.state.eventLog.slice(0, limit - 1);\n    eventLog.unshift(eventName);\n    this.setState({eventLog});\n  };\n}\n\nclass TouchableDelayEvents extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    eventLog: [],\n  };\n\n  render() {\n    return (\n      <View testID=\"touchable_delay_events\">\n        <View style={[styles.row, styles.centered]}>\n          <TouchableOpacity\n            style={styles.wrapper}\n            testID=\"touchable_delay_events_button\"\n            onPress={() => this._appendEvent('press')}\n            delayPressIn={400}\n            onPressIn={() => this._appendEvent('pressIn - 400ms delay')}\n            delayPressOut={1000}\n            onPressOut={() => this._appendEvent('pressOut - 1000ms delay')}\n            delayLongPress={800}\n            onLongPress={() => this._appendEvent('longPress - 800ms delay')}>\n            <Text style={styles.button}>Press Me</Text>\n          </TouchableOpacity>\n        </View>\n        <View\n          style={styles.eventLogBox}\n          testID=\"touchable_delay_events_console\">\n          {this.state.eventLog.map((e, ii) => (\n            <Text key={ii}>{e}</Text>\n          ))}\n        </View>\n      </View>\n    );\n  }\n\n  _appendEvent = eventName => {\n    const limit = 6;\n    const eventLog = this.state.eventLog.slice(0, limit - 1);\n    eventLog.unshift(eventName);\n    this.setState({eventLog});\n  };\n}\n\nclass ForceTouchExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    force: 0,\n  };\n\n  _renderConsoleText = () => {\n    return forceTouchAvailable\n      ? 'Force: ' + this.state.force.toFixed(3)\n      : '3D Touch is not available on this device';\n  };\n\n  render() {\n    return (\n      <View testID=\"touchable_3dtouch_event\">\n        <View style={styles.forceTouchBox} testID=\"touchable_3dtouch_output\">\n          <Text>{this._renderConsoleText()}</Text>\n        </View>\n        <View style={[styles.row, styles.centered]}>\n          <View\n            style={styles.wrapper}\n            testID=\"touchable_3dtouch_button\"\n            onStartShouldSetResponder={() => true}\n            onResponderMove={event =>\n              this.setState({force: event.nativeEvent.force})\n            }\n            onResponderRelease={event => this.setState({force: 0})}>\n            <Text style={styles.button}>Press Me</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nclass TouchableHitSlop extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    timesPressed: 0,\n  };\n\n  onPress = () => {\n    this.setState({\n      timesPressed: this.state.timesPressed + 1,\n    });\n  };\n\n  render() {\n    let log = '';\n    if (this.state.timesPressed > 1) {\n      log = this.state.timesPressed + 'x onPress';\n    } else if (this.state.timesPressed > 0) {\n      log = 'onPress';\n    }\n\n    return (\n      <View testID=\"touchable_hit_slop\">\n        <View style={[styles.row, styles.centered]}>\n          <TouchableOpacity\n            onPress={this.onPress}\n            style={styles.hitSlopWrapper}\n            hitSlop={{top: 30, bottom: 30, left: 60, right: 60}}\n            testID=\"touchable_hit_slop_button\">\n            <Text style={styles.hitSlopButton}>Press Outside This View</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.logBox}>\n          <Text>{log}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nfunction TouchableNativeMethodChecker<\n  T: React.AbstractComponent<any, any>,\n>(props: {|Component: T, name: string|}): React.Node {\n  const [status, setStatus] = useState<?boolean>(null);\n  const ref = useRef<?React.ElementRef<T>>(null);\n\n  useEffect(() => {\n    setStatus(ref.current != null && typeof ref.current.measure === 'function');\n  }, []);\n\n  return (\n    <View style={[styles.row, styles.block]}>\n      <props.Component ref={ref}>\n        <View />\n      </props.Component>\n      <Text>\n        {props.name + ': '}\n        {status == null\n          ? 'Missing Ref!'\n          : status === true\n          ? 'Native Methods Exist'\n          : 'Native Methods Missing!'}\n      </Text>\n    </View>\n  );\n}\n\nfunction TouchableNativeMethods() {\n  return (\n    <View>\n      <TouchableNativeMethodChecker\n        Component={TouchableHighlight}\n        name=\"TouchableHighlight\"\n      />\n      <TouchableNativeMethodChecker\n        Component={TouchableOpacity}\n        name=\"TouchableOpacity\"\n      />\n    </View>\n  );\n}\n\nclass TouchableDisabled extends React.Component<{...}> {\n  render() {\n    return (\n      <View>\n        <TouchableOpacity disabled={true} style={[styles.row, styles.block]}>\n          <Text style={styles.disabledButton}>Disabled TouchableOpacity</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity disabled={false} style={[styles.row, styles.block]}>\n          <Text style={styles.button}>Enabled TouchableOpacity</Text>\n        </TouchableOpacity>\n\n        <TouchableHighlight\n          activeOpacity={1}\n          disabled={true}\n          underlayColor=\"rgb(210, 230, 255)\"\n          style={[styles.row, styles.block]}\n          onPress={() => console.log('custom THW text - highlight')}>\n          <Text style={styles.disabledButton}>Disabled TouchableHighlight</Text>\n        </TouchableHighlight>\n\n        <TouchableHighlight\n          activeOpacity={1}\n          underlayColor=\"rgb(210, 230, 255)\"\n          style={[styles.row, styles.block]}\n          onPress={() => console.log('custom THW text - highlight')}>\n          <Text style={styles.button}>Enabled TouchableHighlight</Text>\n        </TouchableHighlight>\n\n        <TouchableWithoutFeedback\n          onPress={() => console.log('TWOF has been clicked')}\n          disabled={true}>\n          <View style={styles.wrapperCustom}>\n            <Text\n              style={[\n                styles.button,\n                styles.nativeFeedbackButton,\n                styles.disabledButton,\n              ]}>\n              Disabled TouchableWithoutFeedback\n            </Text>\n          </View>\n        </TouchableWithoutFeedback>\n\n        <TouchableWithoutFeedback\n          onPress={() => console.log('TWOF has been clicked')}\n          disabled={false}>\n          <View style={styles.wrapperCustom}>\n            <Text style={[styles.button, styles.nativeFeedbackButton]}>\n              Enabled TouchableWithoutFeedback\n            </Text>\n          </View>\n        </TouchableWithoutFeedback>\n\n        {Platform.OS === 'android' && (\n          <>\n            <TouchableNativeFeedback\n              onPress={() => console.log('custom TNF has been clicked')}\n              background={TouchableNativeFeedback.SelectableBackground()}>\n              <View style={[styles.row, styles.block]}>\n                <Text style={[styles.button, styles.nativeFeedbackButton]}>\n                  Enabled TouchableNativeFeedback\n                </Text>\n              </View>\n            </TouchableNativeFeedback>\n\n            <TouchableNativeFeedback\n              disabled={true}\n              onPress={() => console.log('custom TNF has been clicked')}\n              background={TouchableNativeFeedback.SelectableBackground()}>\n              <View style={[styles.row, styles.block]}>\n                <Text\n                  style={[styles.disabledButton, styles.nativeFeedbackButton]}>\n                  Disabled TouchableNativeFeedback\n                </Text>\n              </View>\n            </TouchableNativeFeedback>\n          </>\n        )}\n      </View>\n    );\n  }\n}\n\nfunction CustomRippleRadius() {\n  if (Platform.OS !== 'android') {\n    return null;\n  }\n  return (\n    <View\n      style={[\n        styles.row,\n        {justifyContent: 'space-around', alignItems: 'center'},\n      ]}>\n      <TouchableNativeFeedback\n        onPress={() => console.log('custom TNF has been clicked')}\n        background={TouchableNativeFeedback.Ripple('orange', true, 30)}>\n        <View>\n          <Text style={[styles.button, styles.nativeFeedbackButton]}>\n            radius 30\n          </Text>\n        </View>\n      </TouchableNativeFeedback>\n\n      <TouchableNativeFeedback\n        onPress={() => console.log('custom TNF has been clicked')}\n        background={TouchableNativeFeedback.SelectableBackgroundBorderless(\n          150,\n        )}>\n        <View>\n          <Text style={[styles.button, styles.nativeFeedbackButton]}>\n            radius 150\n          </Text>\n        </View>\n      </TouchableNativeFeedback>\n\n      <TouchableNativeFeedback\n        onPress={() => console.log('custom TNF has been clicked')}\n        background={TouchableNativeFeedback.SelectableBackground(70)}>\n        <View style={styles.block}>\n          <Text style={[styles.button, styles.nativeFeedbackButton]}>\n            radius 70, with border\n          </Text>\n        </View>\n      </TouchableNativeFeedback>\n    </View>\n  );\n}\n\nconst remoteImage = {\n  uri: 'https://www.facebook.com/favicon.ico',\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  centered: {\n    justifyContent: 'center',\n  },\n  image: {\n    width: 50,\n    height: 50,\n  },\n  text: {\n    fontSize: 16,\n  },\n  block: {\n    padding: 10,\n  },\n  button: {\n    color: '#007AFF',\n  },\n  disabledButton: {\n    color: '#007AFF',\n    opacity: 0.5,\n  },\n  nativeFeedbackButton: {\n    textAlign: 'center',\n    margin: 10,\n  },\n  hitSlopButton: {\n    color: 'white',\n  },\n  wrapper: {\n    borderRadius: 8,\n  },\n  wrapperCustom: {\n    borderRadius: 8,\n    padding: 6,\n  },\n  hitSlopWrapper: {\n    backgroundColor: 'red',\n    marginVertical: 30,\n  },\n  logBox: {\n    padding: 20,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9',\n  },\n  eventLogBox: {\n    padding: 10,\n    margin: 10,\n    height: 120,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9',\n  },\n  forceTouchBox: {\n    padding: 10,\n    margin: 10,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#f0f0f0',\n    backgroundColor: '#f9f9f9',\n    alignItems: 'center',\n  },\n  textBlock: {\n    fontWeight: '500',\n    color: 'blue',\n  },\n});\n\nexports.displayName = (undefined: ?string);\nexports.description = 'Touchable and onPress examples.';\nexports.title = '<Touchable*> and onPress';\nexports.examples = [\n  {\n    title: '<TouchableHighlight>',\n    description: ('TouchableHighlight works by adding an extra view with a ' +\n      'black background under the single child view.  This works best when the ' +\n      'child view is fully opaque, although it can be made to work as a simple ' +\n      'background color change as well with the activeOpacity and ' +\n      'underlayColor props.': string),\n    render: function(): React.Node {\n      return <TouchableHighlightBox />;\n    },\n  },\n  {\n    title: '<TouchableWithoutFeedback>',\n    render: function(): React.Node {\n      return <TouchableWithoutFeedbackBox />;\n    },\n  },\n  {\n    title: 'TouchableNativeFeedback with Animated child',\n    description: ('TouchableNativeFeedback can have an AnimatedComponent as a' +\n      'direct child.': string),\n    platform: 'android',\n    render: function(): React.Node {\n      const mScale = new Animated.Value(1);\n      Animated.timing(mScale, {\n        toValue: 0.3,\n        duration: 1000,\n        useNativeDriver: false,\n      }).start();\n      const style = {\n        backgroundColor: 'rgb(180, 64, 119)',\n        width: 200,\n        height: 100,\n        transform: [{scale: mScale}],\n      };\n      return (\n        <View>\n          <View style={styles.row}>\n            <TouchableNativeFeedback>\n              <Animated.View style={style} />\n            </TouchableNativeFeedback>\n          </View>\n        </View>\n      );\n    },\n  },\n  {\n    title: '<Text onPress={fn}> with highlight',\n    render: function(): React.Element<any> {\n      return <TextOnPressBox />;\n    },\n  },\n  {\n    title: 'Touchable feedback events',\n    description: ('<Touchable*> components accept onPress, onPressIn, ' +\n      'onPressOut, and onLongPress as props.': string),\n    render: function(): React.Element<any> {\n      return <TouchableFeedbackEvents />;\n    },\n  },\n  {\n    title: 'Touchable delay for events',\n    description: ('<Touchable*> components also accept delayPressIn, ' +\n      'delayPressOut, and delayLongPress as props. These props impact the ' +\n      'timing of feedback events.': string),\n    render: function(): React.Element<any> {\n      return <TouchableDelayEvents />;\n    },\n  },\n  {\n    title: '3D Touch / Force Touch',\n    description:\n      'iPhone 8 and 8 plus support 3D touch, which adds a force property to touches',\n    render: function(): React.Element<any> {\n      return <ForceTouchExample />;\n    },\n    platform: 'ios',\n  },\n  {\n    title: 'Touchable Hit Slop',\n    description: ('<Touchable*> components accept hitSlop prop which extends the touch area ' +\n      'without changing the view bounds.': string),\n    render: function(): React.Element<any> {\n      return <TouchableHitSlop />;\n    },\n  },\n  {\n    title: 'Touchable Native Methods',\n    description: ('Some <Touchable*> components expose native methods like `measure`.': string),\n    render: function(): React.Element<any> {\n      return <TouchableNativeMethods />;\n    },\n  },\n  {\n    title: 'Custom Ripple Radius (Android-only)',\n    description: ('Ripple radius on TouchableNativeFeedback can be controlled': string),\n    render: function(): React.Element<any> {\n      return <CustomRippleRadius />;\n    },\n  },\n  {\n    title: 'Disabled Touchable*',\n    description: ('<Touchable*> components accept disabled prop which prevents ' +\n      'any interaction with component': string),\n    render: function(): React.Element<any> {\n      return <TouchableDisabled />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}