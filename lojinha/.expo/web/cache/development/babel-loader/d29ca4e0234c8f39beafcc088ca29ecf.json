{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = registerNativeModuleIOS;\n\nfunction _xcode() {\n  var data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function _xcode() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function _fs() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  var data = require(\"lodash\");\n\n  _lodash = function _lodash() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _addToHeaderSearchPaths = _interopRequireDefault(require(\"./addToHeaderSearchPaths\"));\n\nvar _getHeadersInFolder = _interopRequireDefault(require(\"./getHeadersInFolder\"));\n\nvar _getHeaderSearchPath = _interopRequireDefault(require(\"./getHeaderSearchPath\"));\n\nvar _getTargets = _interopRequireDefault(require(\"./getTargets\"));\n\nvar _createGroupWithMessage = _interopRequireDefault(require(\"./createGroupWithMessage\"));\n\nvar _addFileToProject = _interopRequireDefault(require(\"./addFileToProject\"));\n\nvar _addProjectToLibraries = _interopRequireDefault(require(\"./addProjectToLibraries\"));\n\nvar _addSharedLibraries = _interopRequireDefault(require(\"./addSharedLibraries\"));\n\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function _cliTools() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction registerNativeModuleIOS(dependencyConfig, projectConfig) {\n  _cliTools().logger.debug(\"Reading \" + projectConfig.pbxprojPath);\n\n  var project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n\n  var dependencyProject = _xcode().default.project(dependencyConfig.pbxprojPath).parseSync();\n\n  var libraries = (0, _createGroupWithMessage.default)(project, projectConfig.libraryFolder);\n  var file = (0, _addFileToProject.default)(project, _path().default.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n  var targets = (0, _getTargets.default)(project);\n  (0, _addProjectToLibraries.default)(libraries, file);\n  (0, _getTargets.default)(dependencyProject).forEach(function (product) {\n    var i;\n\n    if (!product.isTVOS) {\n      for (i = 0; i < targets.length; i++) {\n        if (!targets[i].isTVOS) {\n          _cliTools().logger.debug(\"Adding \" + product.name + \" to \" + targets[i].target.name);\n\n          project.addStaticLibrary(product.name, {\n            target: targets[i].uuid\n          });\n        }\n      }\n    }\n\n    if (product.isTVOS) {\n      for (i = 0; i < targets.length; i++) {\n        if (targets[i].isTVOS) {\n          _cliTools().logger.debug(\"Adding \" + product.name + \" to \" + targets[i].target.name);\n\n          project.addStaticLibrary(product.name, {\n            target: targets[i].uuid\n          });\n        }\n      }\n    }\n  });\n  (0, _addSharedLibraries.default)(project, dependencyConfig.sharedLibraries);\n  var headers = (0, _getHeadersInFolder.default)(dependencyConfig.folder);\n\n  if (!(0, _lodash().isEmpty)(headers)) {\n    (0, _addToHeaderSearchPaths.default)(project, (0, _getHeaderSearchPath.default)(projectConfig.sourceDir, headers));\n  }\n\n  _cliTools().logger.debug(\"Writing changes to \" + projectConfig.pbxprojPath);\n\n  _fs().default.writeFileSync(projectConfig.pbxprojPath, project.writeSync());\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli-platform-ios/build/link/registerNativeModule.js"],"names":["Object","defineProperty","exports","value","default","registerNativeModuleIOS","_xcode","data","_interopRequireDefault","require","_fs","_path","_lodash","_addToHeaderSearchPaths","_getHeadersInFolder","_getHeaderSearchPath","_getTargets","_createGroupWithMessage","_addFileToProject","_addProjectToLibraries","_addSharedLibraries","_cliTools","obj","__esModule","dependencyConfig","projectConfig","logger","debug","pbxprojPath","project","parseSync","dependencyProject","libraries","libraryFolder","file","relative","sourceDir","projectPath","targets","forEach","product","i","isTVOS","length","name","target","addStaticLibrary","uuid","sharedLibraries","headers","folder","isEmpty","writeFileSync","writeSync"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = registerNativeModuleIOS;\n\nfunction _xcode() {\n  const data = _interopRequireDefault(require(\"xcode\"));\n\n  _xcode = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _lodash() {\n  const data = require(\"lodash\");\n\n  _lodash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _addToHeaderSearchPaths = _interopRequireDefault(require(\"./addToHeaderSearchPaths\"));\n\nvar _getHeadersInFolder = _interopRequireDefault(require(\"./getHeadersInFolder\"));\n\nvar _getHeaderSearchPath = _interopRequireDefault(require(\"./getHeaderSearchPath\"));\n\nvar _getTargets = _interopRequireDefault(require(\"./getTargets\"));\n\nvar _createGroupWithMessage = _interopRequireDefault(require(\"./createGroupWithMessage\"));\n\nvar _addFileToProject = _interopRequireDefault(require(\"./addFileToProject\"));\n\nvar _addProjectToLibraries = _interopRequireDefault(require(\"./addProjectToLibraries\"));\n\nvar _addSharedLibraries = _interopRequireDefault(require(\"./addSharedLibraries\"));\n\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n\n  _cliTools = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Register native module IOS adds given dependency to project by adding\n * its xcodeproj to project libraries as well as attaching static library\n * to the first target (the main one)\n *\n * If library is already linked, this action is a no-op.\n */\nfunction registerNativeModuleIOS(dependencyConfig, projectConfig) {\n  _cliTools().logger.debug(`Reading ${projectConfig.pbxprojPath}`);\n\n  const project = _xcode().default.project(projectConfig.pbxprojPath).parseSync();\n\n  const dependencyProject = _xcode().default.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = (0, _createGroupWithMessage.default)(project, projectConfig.libraryFolder);\n  const file = (0, _addFileToProject.default)(project, _path().default.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n  const targets = (0, _getTargets.default)(project);\n  (0, _addProjectToLibraries.default)(libraries, file);\n  (0, _getTargets.default)(dependencyProject).forEach(product => {\n    let i;\n\n    if (!product.isTVOS) {\n      for (i = 0; i < targets.length; i++) {\n        if (!targets[i].isTVOS) {\n          _cliTools().logger.debug(`Adding ${product.name} to ${targets[i].target.name}`);\n\n          project.addStaticLibrary(product.name, {\n            target: targets[i].uuid\n          });\n        }\n      }\n    }\n\n    if (product.isTVOS) {\n      for (i = 0; i < targets.length; i++) {\n        if (targets[i].isTVOS) {\n          _cliTools().logger.debug(`Adding ${product.name} to ${targets[i].target.name}`);\n\n          project.addStaticLibrary(product.name, {\n            target: targets[i].uuid\n          });\n        }\n      }\n    }\n  });\n  (0, _addSharedLibraries.default)(project, dependencyConfig.sharedLibraries);\n  const headers = (0, _getHeadersInFolder.default)(dependencyConfig.folder);\n\n  if (!(0, _lodash().isEmpty)(headers)) {\n    (0, _addToHeaderSearchPaths.default)(project, (0, _getHeaderSearchPath.default)(projectConfig.sourceDir, headers));\n  }\n\n  _cliTools().logger.debug(`Writing changes to ${projectConfig.pbxprojPath}`);\n\n  _fs().default.writeFileSync(projectConfig.pbxprojPath, project.writeSync());\n}\n\n//# sourceMappingURL=registerNativeModule.js.map"]},"metadata":{},"sourceType":"script"}