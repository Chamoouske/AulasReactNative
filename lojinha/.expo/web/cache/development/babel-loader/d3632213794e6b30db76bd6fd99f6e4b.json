{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/TextInlineView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Image = require(\"react-native-web/dist/exports/Image\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nfunction Basic() {\n  return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"This text contains an inline blue view\", ' ', React.createElement(View, {\n    style: {\n      width: 25,\n      height: 25,\n      backgroundColor: 'steelblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), \" and an inline image \", React.createElement(Image, {\n    source: require(\"../assets/flux.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }), \". Neat, huh?\");\n}\n\nfunction ClippedByText() {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"The \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"inline view\"), \" below is taller than its Text parent and should be clipped.\"), React.createElement(Text, {\n    style: {\n      overflow: 'hidden',\n      width: 150,\n      height: 75,\n      backgroundColor: 'lightgrey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"This is an inline view\", React.createElement(View, {\n    style: {\n      width: 50,\n      height: 100,\n      backgroundColor: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 48,\n      height: 98,\n      left: 1,\n      top: 1,\n      backgroundColor: 'steelblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"The \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"inline image\"), \" below is taller than its Text parent and should be clipped.\"), React.createElement(Text, {\n    style: {\n      overflow: 'hidden',\n      width: 175,\n      height: 100,\n      backgroundColor: 'lightgrey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"This is an inline image\", React.createElement(Image, {\n    source: {\n      uri: 'https://picsum.photos/100',\n      width: 50,\n      height: 100\n    },\n    style: {\n      width: 50,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar ChangeImageSize = function (_React$Component) {\n  _inherits(ChangeImageSize, _React$Component);\n\n  var _super = _createSuper(ChangeImageSize);\n\n  function ChangeImageSize() {\n    var _this;\n\n    _classCallCheck(this, ChangeImageSize);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      width: 50\n    };\n    return _this;\n  }\n\n  _createClass(ChangeImageSize, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.setState({\n            width: _this2.state.width === 50 ? 100 : 50\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"Change Image Width (width=\", this.state.width, \")\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, \"This is an\", React.createElement(Image, {\n        source: {\n          uri: 'https://picsum.photos/50',\n          width: this.state.width,\n          height: 50\n        },\n        style: {\n          width: this.state.width,\n          height: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), \"inline image\"));\n    }\n  }]);\n\n  return ChangeImageSize;\n}(React.Component);\n\nvar ChangeViewSize = function (_React$Component2) {\n  _inherits(ChangeViewSize, _React$Component2);\n\n  var _super2 = _createSuper(ChangeViewSize);\n\n  function ChangeViewSize() {\n    var _this3;\n\n    _classCallCheck(this, ChangeViewSize);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _super2.call.apply(_super2, [this].concat(args));\n    _this3.state = {\n      width: 50\n    };\n    return _this3;\n  }\n\n  _createClass(ChangeViewSize, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this4.setState({\n            width: _this4.state.width === 50 ? 100 : 50\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, \"Change View Width (width=\", this.state.width, \")\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, \"This is an\", React.createElement(View, {\n        style: {\n          width: this.state.width,\n          height: 50,\n          backgroundColor: 'steelblue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }), \"inline view\"));\n    }\n  }]);\n\n  return ChangeViewSize;\n}(React.Component);\n\nvar ChangeInnerViewSize = function (_React$Component3) {\n  _inherits(ChangeInnerViewSize, _React$Component3);\n\n  var _super3 = _createSuper(ChangeInnerViewSize);\n\n  function ChangeInnerViewSize() {\n    var _this5;\n\n    _classCallCheck(this, ChangeInnerViewSize);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this5 = _super3.call.apply(_super3, [this].concat(args));\n    _this5.state = {\n      width: 50\n    };\n    return _this5;\n  }\n\n  _createClass(ChangeInnerViewSize, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this6.setState({\n            width: _this6.state.width === 50 ? 100 : 50\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, \"Change Pink View Width\")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }, \"This is an\", React.createElement(View, {\n        style: {\n          width: 125,\n          height: 75,\n          backgroundColor: 'steelblue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          width: this.state.width,\n          height: 50,\n          backgroundColor: 'pink'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      })), \"inline view\"));\n    }\n  }]);\n\n  return ChangeInnerViewSize;\n}(React.Component);\n\nmodule.exports = {\n  Basic: Basic,\n  ClippedByText: ClippedByText,\n  ChangeImageSize: ChangeImageSize,\n  ChangeViewSize: ChangeViewSize,\n  ChangeInnerViewSize: ChangeInnerViewSize\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/components/TextInlineView.js"],"names":["React","require","Basic","width","height","backgroundColor","ClippedByText","fontWeight","overflow","left","top","marginTop","uri","ChangeImageSize","state","setState","fontSize","Component","ChangeViewSize","ChangeInnerViewSize","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {Image, Text, TouchableHighlight, View} = require('react-native');\n\nfunction Basic(): React.Node {\n  return (\n    <Text>\n      This text contains an inline blue view{' '}\n      <View style={{width: 25, height: 25, backgroundColor: 'steelblue'}} /> and\n      an inline image <Image source={require('../assets/flux.png')} />. Neat,\n      huh?\n    </Text>\n  );\n}\n\nfunction ClippedByText(): React.Node {\n  return (\n    <View>\n      {/*\n       * Inline View\n       **/}\n      <Text>\n        The <Text style={{fontWeight: 'bold'}}>inline view</Text> below is\n        taller than its Text parent and should be clipped.\n      </Text>\n      <Text\n        style={{\n          overflow: 'hidden',\n          width: 150,\n          height: 75,\n          backgroundColor: 'lightgrey',\n        }}>\n        This is an inline view\n        {/* Render a red border around the steelblue rectangle to make it clear how the inline view is being clipped */}\n        <View style={{width: 50, height: 100, backgroundColor: 'red'}}>\n          <View\n            style={{\n              width: 48,\n              height: 98,\n              left: 1,\n              top: 1,\n              backgroundColor: 'steelblue',\n            }}\n          />\n        </View>\n      </Text>\n\n      {/*\n       * Inline Image\n       **/}\n      <Text style={{marginTop: 10}}>\n        The <Text style={{fontWeight: 'bold'}}>inline image</Text> below is\n        taller than its Text parent and should be clipped.\n      </Text>\n      <Text\n        style={{\n          overflow: 'hidden',\n          width: 175,\n          height: 100,\n          backgroundColor: 'lightgrey',\n        }}>\n        This is an inline image\n        <Image\n          source={{\n            uri: 'https://picsum.photos/100',\n            width: 50,\n            height: 100,\n          }}\n          style={{\n            width: 50,\n            height: 100,\n          }}\n        />\n      </Text>\n    </View>\n  );\n}\n\ntype ChangeSizeState = {|\n  width: number,\n|};\n\nclass ChangeImageSize extends React.Component<*, ChangeSizeState> {\n  state: ChangeSizeState = {\n    width: 50,\n  };\n\n  render(): React.Node {\n    return (\n      <View>\n        <TouchableHighlight\n          onPress={() => {\n            this.setState({width: this.state.width === 50 ? 100 : 50});\n          }}>\n          <Text style={{fontSize: 15}}>\n            Change Image Width (width={this.state.width})\n          </Text>\n        </TouchableHighlight>\n        <Text>\n          This is an\n          <Image\n            source={{\n              uri: 'https://picsum.photos/50',\n              width: this.state.width,\n              height: 50,\n            }}\n            style={{\n              width: this.state.width,\n              height: 50,\n            }}\n          />\n          inline image\n        </Text>\n      </View>\n    );\n  }\n}\n\nclass ChangeViewSize extends React.Component<*, ChangeSizeState> {\n  state: ChangeSizeState = {\n    width: 50,\n  };\n\n  render(): React.Node {\n    return (\n      <View>\n        <TouchableHighlight\n          onPress={() => {\n            this.setState({width: this.state.width === 50 ? 100 : 50});\n          }}>\n          <Text style={{fontSize: 15}}>\n            Change View Width (width={this.state.width})\n          </Text>\n        </TouchableHighlight>\n        <Text>\n          This is an\n          <View\n            style={{\n              width: this.state.width,\n              height: 50,\n              backgroundColor: 'steelblue',\n            }}\n          />\n          inline view\n        </Text>\n      </View>\n    );\n  }\n}\n\nclass ChangeInnerViewSize extends React.Component<*, ChangeSizeState> {\n  state: ChangeSizeState = {\n    width: 50,\n  };\n\n  render(): React.Node {\n    return (\n      <View>\n        <TouchableHighlight\n          onPress={() => {\n            this.setState({width: this.state.width === 50 ? 100 : 50});\n          }}>\n          {/* When updating `state.width`, it's important that the only thing that\n              changes is the width of the pink inline view. When we do this, we\n              demonstrate a bug in RN Android where the pink view doesn't get\n              rerendered and remains at its old size. If other things change\n              (e.g. we display `state.width` as text somewhere) it could circumvent\n              the bug and cause the pink view to be rerendered at its new size. */}\n          <Text style={{fontSize: 15}}>Change Pink View Width</Text>\n        </TouchableHighlight>\n        <Text>\n          This is an\n          <View style={{width: 125, height: 75, backgroundColor: 'steelblue'}}>\n            <View\n              style={{\n                width: this.state.width,\n                height: 50,\n                backgroundColor: 'pink',\n              }}\n            />\n          </View>\n          inline view\n        </Text>\n      </View>\n    );\n  }\n}\n\nmodule.exports = {\n  Basic,\n  ClippedByText,\n  ChangeImageSize,\n  ChangeViewSize,\n  ChangeInnerViewSize,\n};\n"]},"metadata":{},"sourceType":"script"}