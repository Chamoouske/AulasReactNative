{"ast":null,"code":"'use strict';\n\nvar template = \"\\n/**\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n#include <react/components/::_LIBRARY_::/ShadowNodes.h>\\n\\nnamespace facebook {\\nnamespace react {\\n\\n::_COMPONENT_NAMES_::\\n\\n} // namespace react\\n} // namespace facebook\\n\";\nvar componentTemplate = \"\\nextern const char ::_CLASSNAME_::ComponentName[] = \\\"::_CLASSNAME_::\\\";\\n\".trim();\nmodule.exports = {\n  generate: function generate(libraryName, schema, moduleSpecName) {\n    var fileName = 'ShadowNodes.cpp';\n    var componentNames = Object.keys(schema.modules).map(function (moduleName) {\n      var components = schema.modules[moduleName].components;\n\n      if (components == null) {\n        return null;\n      }\n\n      return Object.keys(components).map(function (componentName) {\n        if (components[componentName].interfaceOnly === true) {\n          return;\n        }\n\n        var replacedTemplate = componentTemplate.replace(/::_CLASSNAME_::/g, componentName);\n        return replacedTemplate;\n      }).join('\\n');\n    }).filter(Boolean).join('\\n');\n    var replacedTemplate = template.replace(/::_COMPONENT_NAMES_::/g, componentNames).replace('::_LIBRARY_::', libraryName);\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/packages/react-native-codegen/src/generators/components/GenerateShadowNodeCpp.js"],"names":["template","componentTemplate","trim","module","exports","generate","libraryName","schema","moduleSpecName","fileName","componentNames","Object","keys","modules","map","moduleName","components","componentName","interfaceOnly","replacedTemplate","replace","join","filter","Boolean","Map"],"mappings":"AAUA;;AAOA,IAAMA,QAAQ,0XAAd;AAmBA,IAAMC,iBAAiB,GAAG,8EAExBC,IAFwB,EAA1B;AAIAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QADe,oBAEbC,WAFa,EAGbC,MAHa,EAIbC,cAJa,EAKA;AACb,QAAMC,QAAQ,GAAG,iBAAjB;AAEA,QAAMC,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,OAAnB,EACpBC,GADoB,CAChB,UAAAC,UAAU,EAAI;AACjB,UAAMC,UAAU,GAAGT,MAAM,CAACM,OAAP,CAAeE,UAAf,EAA2BC,UAA9C;;AAEA,UAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,IAAP;AACD;;AAED,aAAOL,MAAM,CAACC,IAAP,CAAYI,UAAZ,EACJF,GADI,CACA,UAAAG,aAAa,EAAI;AACpB,YAAID,UAAU,CAACC,aAAD,CAAV,CAA0BC,aAA1B,KAA4C,IAAhD,EAAsD;AACpD;AACD;;AACD,YAAMC,gBAAgB,GAAGlB,iBAAiB,CAACmB,OAAlB,CACvB,kBADuB,EAEvBH,aAFuB,CAAzB;AAKA,eAAOE,gBAAP;AACD,OAXI,EAYJE,IAZI,CAYC,IAZD,CAAP;AAaD,KArBoB,EAsBpBC,MAtBoB,CAsBbC,OAtBa,EAuBpBF,IAvBoB,CAuBf,IAvBe,CAAvB;AAyBA,QAAMF,gBAAgB,GAAGnB,QAAQ,CAC9BoB,OADsB,CACd,wBADc,EACYV,cADZ,EAEtBU,OAFsB,CAEd,eAFc,EAEGd,WAFH,CAAzB;AAIA,WAAO,IAAIkB,GAAJ,CAAQ,CAAC,CAACf,QAAD,EAAWU,gBAAX,CAAD,CAAR,CAAP;AACD;AAtCc,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {SchemaType} from '../../CodegenSchema';\n\n// File path -> contents\ntype FilesOutput = Map<string, string>;\n\nconst template = `\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n#include <react/components/::_LIBRARY_::/ShadowNodes.h>\n\nnamespace facebook {\nnamespace react {\n\n::_COMPONENT_NAMES_::\n\n} // namespace react\n} // namespace facebook\n`;\n\nconst componentTemplate = `\nextern const char ::_CLASSNAME_::ComponentName[] = \"::_CLASSNAME_::\";\n`.trim();\n\nmodule.exports = {\n  generate(\n    libraryName: string,\n    schema: SchemaType,\n    moduleSpecName: string,\n  ): FilesOutput {\n    const fileName = 'ShadowNodes.cpp';\n\n    const componentNames = Object.keys(schema.modules)\n      .map(moduleName => {\n        const components = schema.modules[moduleName].components;\n        // No components in this module\n        if (components == null) {\n          return null;\n        }\n\n        return Object.keys(components)\n          .map(componentName => {\n            if (components[componentName].interfaceOnly === true) {\n              return;\n            }\n            const replacedTemplate = componentTemplate.replace(\n              /::_CLASSNAME_::/g,\n              componentName,\n            );\n\n            return replacedTemplate;\n          })\n          .join('\\n');\n      })\n      .filter(Boolean)\n      .join('\\n');\n\n    const replacedTemplate = template\n      .replace(/::_COMPONENT_NAMES_::/g, componentNames)\n      .replace('::_LIBRARY_::', libraryName);\n\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}