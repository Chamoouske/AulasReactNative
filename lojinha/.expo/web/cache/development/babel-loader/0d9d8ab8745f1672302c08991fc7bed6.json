{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Modal/ModalExample.js\",\n    _this5 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Modal = require(\"react-native-web/dist/exports/Modal\").default;\n\nvar Picker = require(\"react-native-web/dist/exports/Picker\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Switch = require(\"react-native-web/dist/exports/Switch\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Item = Picker.Item;\nexports.displayName = undefined;\nexports.framework = 'React';\nexports.title = '<Modal>';\nexports.description = 'Component for presenting modal views.';\n\nvar Button = function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      active: false\n    };\n\n    _this._onHighlight = function () {\n      _this.setState({\n        active: true\n      });\n    };\n\n    _this._onUnhighlight = function () {\n      _this.setState({\n        active: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var colorStyle = {\n        color: this.state.active ? '#fff' : '#000'\n      };\n      return React.createElement(TouchableHighlight, {\n        onHideUnderlay: this._onUnhighlight,\n        onPress: this.props.onPress,\n        onShowUnderlay: this._onHighlight,\n        style: [styles.button, this.props.style],\n        underlayColor: \"#a9d9d4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, colorStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nvar supportedOrientationsPickerValues = [['portrait'], ['landscape'], ['landscape-left'], ['portrait', 'landscape-right'], ['portrait', 'landscape'], []];\n\nvar ModalExample = function (_React$Component2) {\n  _inherits(ModalExample, _React$Component2);\n\n  var _super2 = _createSuper(ModalExample);\n\n  function ModalExample() {\n    var _this2;\n\n    _classCallCheck(this, ModalExample);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _this2.state = {\n      animationType: 'none',\n      modalVisible: false,\n      transparent: false,\n      presentationStyle: 'fullScreen',\n      selectedSupportedOrientation: 0,\n      currentOrientation: 'unknown'\n    };\n\n    _this2._setModalVisible = function (visible) {\n      _this2.setState({\n        modalVisible: visible\n      });\n    };\n\n    _this2._setAnimationType = function (type) {\n      _this2.setState({\n        animationType: type\n      });\n    };\n\n    _this2._toggleTransparent = function () {\n      _this2.setState({\n        transparent: !_this2.state.transparent\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(ModalExample, [{\n    key: \"renderSwitch\",\n    value: function renderSwitch() {\n      if (Platform.isTV) {\n        return null;\n      }\n\n      return React.createElement(Switch, {\n        value: this.state.transparent,\n        onValueChange: this._toggleTransparent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var modalBackgroundStyle = {\n        backgroundColor: this.state.transparent ? 'rgba(0, 0, 0, 0.5)' : '#f5fcff'\n      };\n      var innerContainerTransparentStyle = this.state.transparent ? {\n        backgroundColor: '#fff',\n        padding: 20\n      } : null;\n      var activeButtonStyle = {\n        backgroundColor: '#ddd'\n      };\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, React.createElement(Modal, {\n        animationType: this.state.animationType,\n        presentationStyle: this.state.presentationStyle,\n        transparent: this.state.transparent,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {\n          return _this3._setModalVisible(false);\n        },\n        supportedOrientations: supportedOrientationsPickerValues[this.state.selectedSupportedOrientation],\n        onOrientationChange: function onOrientationChange(evt) {\n          return _this3.setState({\n            currentOrientation: evt.nativeEvent.orientation\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.container, modalBackgroundStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.innerContainer, innerContainerTransparentStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, \"This modal was presented\", ' ', this.state.animationType === 'none' ? 'without' : 'with', ' ', \"animation.\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, \"It is currently displayed in \", this.state.currentOrientation, ' ', \"mode.\"), React.createElement(Button, {\n        onPress: this._setModalVisible.bind(this, false),\n        style: styles.modalButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, \"Close\")))), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, \"Animation Type\"), React.createElement(Button, {\n        onPress: this._setAnimationType.bind(this, 'none'),\n        style: this.state.animationType === 'none' ? activeButtonStyle : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, \"none\"), React.createElement(Button, {\n        onPress: this._setAnimationType.bind(this, 'slide'),\n        style: this.state.animationType === 'slide' ? activeButtonStyle : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \"slide\"), React.createElement(Button, {\n        onPress: this._setAnimationType.bind(this, 'fade'),\n        style: this.state.animationType === 'fade' ? activeButtonStyle : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, \"fade\")), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, \"Transparent\"), this.renderSwitch()), this.renderPickers(), React.createElement(Button, {\n        onPress: this._setModalVisible.bind(this, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, \"Present\"));\n    }\n  }, {\n    key: \"renderPickers\",\n    value: function renderPickers() {\n      var _this4 = this;\n\n      if (Platform.isTV) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, \"Presentation style\"), React.createElement(Picker, {\n        selectedValue: this.state.presentationStyle,\n        onValueChange: function onValueChange(presentationStyle) {\n          return _this4.setState({\n            presentationStyle: presentationStyle\n          });\n        },\n        itemStyle: styles.pickerItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, React.createElement(Item, {\n        label: \"Full Screen\",\n        value: \"fullScreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Page Sheet\",\n        value: \"pageSheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Form Sheet\",\n        value: \"formSheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Over Full Screen\",\n        value: \"overFullScreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Default presentationStyle\",\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, \"Supported orientations\"), React.createElement(Picker, {\n        selectedValue: this.state.selectedSupportedOrientation,\n        onValueChange: function onValueChange(_, i) {\n          return _this4.setState({\n            selectedSupportedOrientation: i\n          });\n        },\n        itemStyle: styles.pickerItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, React.createElement(Item, {\n        label: \"Portrait\",\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Landscape\",\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Landscape left\",\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Portrait and landscape right\",\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Portrait and landscape\",\n        value: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }), React.createElement(Item, {\n        label: \"Default supportedOrientations\",\n        value: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ModalExample;\n}(React.Component);\n\nexports.examples = [{\n  title: 'Modal Presentation',\n  description: 'Modals can be presented with or without animation',\n  render: function render() {\n    return React.createElement(ModalExample, {\n      __self: _this5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 31\n      }\n    });\n  }\n}];\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  innerContainer: {\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  row: {\n    alignItems: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 20\n  },\n  rowTitle: {\n    flex: 1,\n    fontWeight: 'bold'\n  },\n  button: {\n    borderRadius: 5,\n    flexGrow: 1,\n    height: 44,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  buttonText: {\n    fontSize: 18,\n    margin: 5,\n    textAlign: 'center'\n  },\n  modalButton: {\n    marginTop: 10\n  },\n  pickerItem: {\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/Modal/ModalExample.js"],"names":["React","require","Item","Picker","exports","displayName","undefined","framework","title","description","Button","state","active","_onHighlight","setState","_onUnhighlight","colorStyle","color","props","onPress","styles","button","style","buttonText","children","Component","supportedOrientationsPickerValues","ModalExample","animationType","modalVisible","transparent","presentationStyle","selectedSupportedOrientation","currentOrientation","_setModalVisible","visible","_setAnimationType","type","_toggleTransparent","Platform","isTV","modalBackgroundStyle","backgroundColor","innerContainerTransparentStyle","padding","activeButtonStyle","evt","nativeEvent","orientation","container","innerContainer","bind","modalButton","row","rowTitle","renderSwitch","renderPickers","pickerItem","_","i","examples","render","StyleSheet","create","flex","justifyContent","borderRadius","alignItems","flexDirection","marginBottom","fontWeight","flexGrow","height","alignSelf","overflow","fontSize","margin","textAlign","marginTop"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst React = require('react');\n\nconst {\n  Modal,\n  Picker,\n  Platform,\n  StyleSheet,\n  Switch,\n  Text,\n  TouchableHighlight,\n  View,\n} = require('react-native');\n\nconst Item = Picker.Item;\n\nexports.displayName = (undefined: ?string);\nexports.framework = 'React';\nexports.title = '<Modal>';\nexports.description = 'Component for presenting modal views.';\n\nclass Button extends React.Component<$FlowFixMeProps, $FlowFixMeState> {\n  state = {\n    active: false,\n  };\n\n  _onHighlight = () => {\n    this.setState({active: true});\n  };\n\n  _onUnhighlight = () => {\n    this.setState({active: false});\n  };\n\n  render() {\n    const colorStyle = {\n      color: this.state.active ? '#fff' : '#000',\n    };\n    return (\n      <TouchableHighlight\n        onHideUnderlay={this._onUnhighlight}\n        onPress={this.props.onPress}\n        onShowUnderlay={this._onHighlight}\n        style={[styles.button, this.props.style]}\n        underlayColor=\"#a9d9d4\">\n        <Text style={[styles.buttonText, colorStyle]}>\n          {this.props.children}\n        </Text>\n      </TouchableHighlight>\n    );\n  }\n}\n\nconst supportedOrientationsPickerValues = [\n  ['portrait'],\n  ['landscape'],\n  ['landscape-left'],\n  ['portrait', 'landscape-right'],\n  ['portrait', 'landscape'],\n  [],\n];\n\nclass ModalExample extends React.Component<{...}, $FlowFixMeState> {\n  state = {\n    animationType: 'none',\n    modalVisible: false,\n    transparent: false,\n    presentationStyle: 'fullScreen',\n    selectedSupportedOrientation: 0,\n    currentOrientation: 'unknown',\n  };\n\n  _setModalVisible = visible => {\n    this.setState({modalVisible: visible});\n  };\n\n  _setAnimationType = type => {\n    this.setState({animationType: type});\n  };\n\n  _toggleTransparent = () => {\n    this.setState({transparent: !this.state.transparent});\n  };\n\n  renderSwitch() {\n    if (Platform.isTV) {\n      return null;\n    }\n    return (\n      <Switch\n        value={this.state.transparent}\n        onValueChange={this._toggleTransparent}\n      />\n    );\n  }\n\n  render() {\n    const modalBackgroundStyle = {\n      backgroundColor: this.state.transparent\n        ? 'rgba(0, 0, 0, 0.5)'\n        : '#f5fcff',\n    };\n    const innerContainerTransparentStyle = this.state.transparent\n      ? {backgroundColor: '#fff', padding: 20}\n      : null;\n    const activeButtonStyle = {\n      backgroundColor: '#ddd',\n    };\n\n    return (\n      <View>\n        <Modal\n          animationType={this.state.animationType}\n          presentationStyle={this.state.presentationStyle}\n          transparent={this.state.transparent}\n          visible={this.state.modalVisible}\n          onRequestClose={() => this._setModalVisible(false)}\n          supportedOrientations={\n            supportedOrientationsPickerValues[\n              this.state.selectedSupportedOrientation\n            ]\n          }\n          onOrientationChange={evt =>\n            this.setState({currentOrientation: evt.nativeEvent.orientation})\n          }>\n          <View style={[styles.container, modalBackgroundStyle]}>\n            <View\n              style={[styles.innerContainer, innerContainerTransparentStyle]}>\n              <Text>\n                This modal was presented{' '}\n                {this.state.animationType === 'none' ? 'without' : 'with'}{' '}\n                animation.\n              </Text>\n              <Text>\n                It is currently displayed in {this.state.currentOrientation}{' '}\n                mode.\n              </Text>\n              <Button\n                onPress={this._setModalVisible.bind(this, false)}\n                style={styles.modalButton}>\n                Close\n              </Button>\n            </View>\n          </View>\n        </Modal>\n        <View style={styles.row}>\n          <Text style={styles.rowTitle}>Animation Type</Text>\n          <Button\n            onPress={this._setAnimationType.bind(this, 'none')}\n            style={\n              this.state.animationType === 'none' ? activeButtonStyle : {}\n            }>\n            none\n          </Button>\n          <Button\n            onPress={this._setAnimationType.bind(this, 'slide')}\n            style={\n              this.state.animationType === 'slide' ? activeButtonStyle : {}\n            }>\n            slide\n          </Button>\n          <Button\n            onPress={this._setAnimationType.bind(this, 'fade')}\n            style={\n              this.state.animationType === 'fade' ? activeButtonStyle : {}\n            }>\n            fade\n          </Button>\n        </View>\n\n        <View style={styles.row}>\n          <Text style={styles.rowTitle}>Transparent</Text>\n          {this.renderSwitch()}\n        </View>\n        {this.renderPickers()}\n        <Button onPress={this._setModalVisible.bind(this, true)}>\n          Present\n        </Button>\n      </View>\n    );\n  }\n  renderPickers() {\n    if (Platform.isTV) {\n      return null;\n    }\n    return (\n      <View>\n        <View>\n          <Text style={styles.rowTitle}>Presentation style</Text>\n          <Picker\n            selectedValue={this.state.presentationStyle}\n            onValueChange={presentationStyle =>\n              this.setState({presentationStyle})\n            }\n            itemStyle={styles.pickerItem}>\n            <Item label=\"Full Screen\" value=\"fullScreen\" />\n            <Item label=\"Page Sheet\" value=\"pageSheet\" />\n            <Item label=\"Form Sheet\" value=\"formSheet\" />\n            <Item label=\"Over Full Screen\" value=\"overFullScreen\" />\n            <Item label=\"Default presentationStyle\" value={null} />\n          </Picker>\n        </View>\n\n        <View>\n          <Text style={styles.rowTitle}>Supported orientations</Text>\n          <Picker\n            selectedValue={this.state.selectedSupportedOrientation}\n            onValueChange={(_, i) =>\n              this.setState({selectedSupportedOrientation: i})\n            }\n            itemStyle={styles.pickerItem}>\n            <Item label=\"Portrait\" value={0} />\n            <Item label=\"Landscape\" value={1} />\n            <Item label=\"Landscape left\" value={2} />\n            <Item label=\"Portrait and landscape right\" value={3} />\n            <Item label=\"Portrait and landscape\" value={4} />\n            <Item label=\"Default supportedOrientations\" value={5} />\n          </Picker>\n        </View>\n      </View>\n    );\n  }\n}\n\nexports.examples = [\n  {\n    title: 'Modal Presentation',\n    description: 'Modals can be presented with or without animation',\n    render: (): React.Node => <ModalExample />,\n  },\n];\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  innerContainer: {\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  row: {\n    alignItems: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 20,\n  },\n  rowTitle: {\n    flex: 1,\n    fontWeight: 'bold',\n  },\n  button: {\n    borderRadius: 5,\n    flexGrow: 1,\n    height: 44,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  buttonText: {\n    fontSize: 18,\n    margin: 5,\n    textAlign: 'center',\n  },\n  modalButton: {\n    marginTop: 10,\n  },\n  pickerItem: {\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}