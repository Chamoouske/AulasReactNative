{"ast":null,"code":"'use strict';\n\nvar AnimatedMock = require(\"../AnimatedMock\");\n\nvar AnimatedImplementation = require(\"../AnimatedImplementation\");\n\ndescribe('Animated Mock', function () {\n  it('matches implementation keys', function () {\n    expect(Object.keys(AnimatedMock)).toEqual(Object.keys(AnimatedImplementation));\n  });\n  it('matches implementation params', function (done) {\n    Object.keys(AnimatedImplementation).forEach(function (key) {\n      if (AnimatedImplementation[key].length !== AnimatedMock[key].length) {\n        done(new Error('key ' + key + ' had different lengths: ' + JSON.stringify({\n          impl: {\n            len: AnimatedImplementation[key].length,\n            type: typeof AnimatedImplementation[key],\n            val: AnimatedImplementation[key].toString()\n          },\n          mock: {\n            len: AnimatedMock[key].length,\n            type: typeof AnimatedMock[key],\n            val: AnimatedMock[key].toString()\n          }\n        }, null, 2)));\n      }\n    });\n    done();\n  });\n});","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Animated/src/__tests__/AnimatedMock-test.js"],"names":["AnimatedMock","require","AnimatedImplementation","describe","it","expect","Object","keys","toEqual","done","forEach","key","length","Error","JSON","stringify","impl","len","type","val","toString","mock"],"mappings":"AAUA;;AAEA,IAAMA,YAAY,GAAGC,OAAO,mBAA5B;;AACA,IAAMC,sBAAsB,GAAGD,OAAO,6BAAtC;;AAEAE,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtCC,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYP,YAAZ,CAAD,CAAN,CAAkCQ,OAAlC,CACEF,MAAM,CAACC,IAAP,CAAYL,sBAAZ,CADF;AAGD,GAJC,CAAF;AAKAE,EAAAA,EAAE,CAAC,+BAAD,EAAkC,UAAAK,IAAI,EAAI;AAC1CH,IAAAA,MAAM,CAACC,IAAP,CAAYL,sBAAZ,EAAoCQ,OAApC,CAA4C,UAAAC,GAAG,EAAI;AACjD,UAAIT,sBAAsB,CAACS,GAAD,CAAtB,CAA4BC,MAA5B,KAAuCZ,YAAY,CAACW,GAAD,CAAZ,CAAkBC,MAA7D,EAAqE;AACnEH,QAAAA,IAAI,CACF,IAAII,KAAJ,CACE,SACEF,GADF,GAEE,0BAFF,GAGEG,IAAI,CAACC,SAAL,CACE;AACEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAEf,sBAAsB,CAACS,GAAD,CAAtB,CAA4BC,MAD7B;AAEJM,YAAAA,IAAI,EAAE,OAAOhB,sBAAsB,CAACS,GAAD,CAF/B;AAGJQ,YAAAA,GAAG,EAAEjB,sBAAsB,CAACS,GAAD,CAAtB,CAA4BS,QAA5B;AAHD,WADR;AAMEC,UAAAA,IAAI,EAAE;AACJJ,YAAAA,GAAG,EAAEjB,YAAY,CAACW,GAAD,CAAZ,CAAkBC,MADnB;AAEJM,YAAAA,IAAI,EAAE,OAAOlB,YAAY,CAACW,GAAD,CAFrB;AAGJQ,YAAAA,GAAG,EAAEnB,YAAY,CAACW,GAAD,CAAZ,CAAkBS,QAAlB;AAHD;AANR,SADF,EAaE,IAbF,EAcE,CAdF,CAJJ,CADE,CAAJ;AAuBD;AACF,KA1BD;AA2BAX,IAAAA,IAAI;AACL,GA7BC,CAAF;AA8BD,CApCO,CAAR","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @emails oncall+react_native\n */\n\n'use strict';\n\nconst AnimatedMock = require('../AnimatedMock');\nconst AnimatedImplementation = require('../AnimatedImplementation');\n\ndescribe('Animated Mock', () => {\n  it('matches implementation keys', () => {\n    expect(Object.keys(AnimatedMock)).toEqual(\n      Object.keys(AnimatedImplementation),\n    );\n  });\n  it('matches implementation params', done => {\n    Object.keys(AnimatedImplementation).forEach(key => {\n      if (AnimatedImplementation[key].length !== AnimatedMock[key].length) {\n        done(\n          new Error(\n            'key ' +\n              key +\n              ' had different lengths: ' +\n              JSON.stringify(\n                {\n                  impl: {\n                    len: AnimatedImplementation[key].length,\n                    type: typeof AnimatedImplementation[key],\n                    val: AnimatedImplementation[key].toString(),\n                  },\n                  mock: {\n                    len: AnimatedMock[key].length,\n                    type: typeof AnimatedMock[key],\n                    val: AnimatedMock[key].toString(),\n                  },\n                },\n                null,\n                2,\n              ),\n          ),\n        );\n      }\n    });\n    done();\n  });\n});\n"]},"metadata":{},"sourceType":"script"}