{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _runServer = _interopRequireDefault(require(\"./runServer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = {\n  name: 'start',\n  func: _runServer.default,\n  description: 'starts the webserver',\n  options: [{\n    name: '--port [number]',\n    parse: function parse(val) {\n      return Number(val);\n    }\n  }, {\n    name: '--host [string]',\n    default: ''\n  }, {\n    name: '--projectRoot [path]',\n    description: 'Path to a custom project root',\n    parse: function parse(val) {\n      return _path().default.resolve(val);\n    }\n  }, {\n    name: '--watchFolders [list]',\n    description: 'Specify any additional folders to be added to the watch list',\n    parse: function parse(val) {\n      return val.split(',').map(function (folder) {\n        return _path().default.resolve(folder);\n      });\n    }\n  }, {\n    name: '--assetPlugins [list]',\n    description: 'Specify any additional asset plugins to be used by the packager by full filepath',\n    parse: function parse(val) {\n      return val.split(',');\n    }\n  }, {\n    name: '--sourceExts [list]',\n    description: 'Specify any additional source extensions to be used by the packager',\n    parse: function parse(val) {\n      return val.split(',');\n    }\n  }, {\n    name: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' + 'will spawn for transforming files. This defaults to the number of the ' + 'cores available on your machine.',\n    parse: function parse(workers) {\n      return Number(workers);\n    }\n  }, {\n    name: '--transformer [string]',\n    description: 'Specify a custom transformer to be used'\n  }, {\n    name: '--reset-cache, --resetCache',\n    description: 'Removes cached files'\n  }, {\n    name: '--custom-log-reporter-path, --customLogReporterPath [string]',\n    description: 'Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter'\n  }, {\n    name: '--verbose',\n    description: 'Enables logging'\n  }, {\n    name: '--https',\n    description: 'Enables https connections to the server'\n  }, {\n    name: '--key [path]',\n    description: 'Path to custom SSL key'\n  }, {\n    name: '--cert [path]',\n    description: 'Path to custom SSL cert'\n  }, {\n    name: '--config [string]',\n    description: 'Path to the CLI configuration file',\n    parse: function parse(val) {\n      return _path().default.resolve(val);\n    }\n  }, {\n    name: '--no-interactive',\n    description: 'Disables interactive mode'\n  }]\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/commands/start/start.js"],"names":["Object","defineProperty","exports","value","default","_path","data","_interopRequireDefault","require","_runServer","obj","__esModule","_default","name","func","description","options","parse","val","Number","resolve","split","map","folder","workers"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _runServer = _interopRequireDefault(require(\"./runServer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar _default = {\n  name: 'start',\n  func: _runServer.default,\n  description: 'starts the webserver',\n  options: [{\n    name: '--port [number]',\n    parse: val => Number(val)\n  }, {\n    name: '--host [string]',\n    default: ''\n  }, {\n    name: '--projectRoot [path]',\n    description: 'Path to a custom project root',\n    parse: val => _path().default.resolve(val)\n  }, {\n    name: '--watchFolders [list]',\n    description: 'Specify any additional folders to be added to the watch list',\n    parse: val => val.split(',').map(folder => _path().default.resolve(folder))\n  }, {\n    name: '--assetPlugins [list]',\n    description: 'Specify any additional asset plugins to be used by the packager by full filepath',\n    parse: val => val.split(',')\n  }, {\n    name: '--sourceExts [list]',\n    description: 'Specify any additional source extensions to be used by the packager',\n    parse: val => val.split(',')\n  }, {\n    name: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' + 'will spawn for transforming files. This defaults to the number of the ' + 'cores available on your machine.',\n    parse: workers => Number(workers)\n  }, {\n    name: '--transformer [string]',\n    description: 'Specify a custom transformer to be used'\n  }, {\n    name: '--reset-cache, --resetCache',\n    description: 'Removes cached files'\n  }, {\n    name: '--custom-log-reporter-path, --customLogReporterPath [string]',\n    description: 'Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter'\n  }, {\n    name: '--verbose',\n    description: 'Enables logging'\n  }, {\n    name: '--https',\n    description: 'Enables https connections to the server'\n  }, {\n    name: '--key [path]',\n    description: 'Path to custom SSL key'\n  }, {\n    name: '--cert [path]',\n    description: 'Path to custom SSL cert'\n  }, {\n    name: '--config [string]',\n    description: 'Path to the CLI configuration file',\n    parse: val => _path().default.resolve(val)\n  }, {\n    name: '--no-interactive',\n    description: 'Disables interactive mode'\n  }]\n};\nexports.default = _default;\n\n//# sourceMappingURL=start.js.map"]},"metadata":{},"sourceType":"script"}