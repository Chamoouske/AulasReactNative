{"ast":null,"code":"'use strict';\n\nvar AUTO_SET_TIMESTAMP = -1;\nvar DUMMY_INSTANCE_KEY = 0;\nvar QuickPerformanceLogger = {\n  markerStart: function markerStart(markerId) {\n    var instanceKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DUMMY_INSTANCE_KEY;\n    var timestamp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : AUTO_SET_TIMESTAMP;\n\n    if (global.nativeQPLMarkerStart) {\n      global.nativeQPLMarkerStart(markerId, instanceKey, timestamp);\n    }\n  },\n  markerEnd: function markerEnd(markerId, actionId) {\n    var instanceKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DUMMY_INSTANCE_KEY;\n    var timestamp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : AUTO_SET_TIMESTAMP;\n\n    if (global.nativeQPLMarkerEnd) {\n      global.nativeQPLMarkerEnd(markerId, instanceKey, actionId, timestamp);\n    }\n  },\n  markerTag: function markerTag(markerId, tag) {\n    var instanceKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DUMMY_INSTANCE_KEY;\n\n    if (global.nativeQPLMarkerTag) {\n      global.nativeQPLMarkerTag(markerId, instanceKey, tag);\n    }\n  },\n  markerAnnotate: function markerAnnotate(markerId, annotationKey, annotationValue) {\n    var instanceKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DUMMY_INSTANCE_KEY;\n\n    if (global.nativeQPLMarkerAnnotate) {\n      global.nativeQPLMarkerAnnotate(markerId, instanceKey, annotationKey, annotationValue);\n    }\n  },\n  markerCancel: function markerCancel(markerId) {\n    var instanceKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DUMMY_INSTANCE_KEY;\n\n    if (global.nativeQPLMarkerCancel) {\n      global.nativeQPLMarkerCancel(markerId, instanceKey);\n    }\n  },\n  markerPoint: function markerPoint(markerId, name) {\n    var instanceKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DUMMY_INSTANCE_KEY;\n    var timestamp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : AUTO_SET_TIMESTAMP;\n\n    if (global.nativeQPLMarkerPoint) {\n      global.nativeQPLMarkerPoint(markerId, name, instanceKey, timestamp);\n    }\n  },\n  markerDrop: function markerDrop(markerId) {\n    var instanceKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DUMMY_INSTANCE_KEY;\n\n    if (global.nativeQPLMarkerDrop) {\n      global.nativeQPLMarkerDrop(markerId, instanceKey);\n    }\n  },\n  currentTimestamp: function currentTimestamp() {\n    if (global.nativeQPLTimestamp) {\n      return global.nativeQPLTimestamp();\n    }\n\n    return 0;\n  }\n};\nmodule.exports = QuickPerformanceLogger;","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Performance/QuickPerformanceLogger.js"],"names":["AUTO_SET_TIMESTAMP","DUMMY_INSTANCE_KEY","QuickPerformanceLogger","markerStart","markerId","instanceKey","timestamp","global","nativeQPLMarkerStart","markerEnd","actionId","nativeQPLMarkerEnd","markerTag","tag","nativeQPLMarkerTag","markerAnnotate","annotationKey","annotationValue","nativeQPLMarkerAnnotate","markerCancel","nativeQPLMarkerCancel","markerPoint","name","nativeQPLMarkerPoint","markerDrop","nativeQPLMarkerDrop","currentTimestamp","nativeQPLTimestamp","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,kBAAkB,GAAG,CAAC,CAA5B;AACA,IAAMC,kBAAkB,GAAG,CAA3B;AAEA,IAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,WAD6B,uBAE3BC,QAF2B,EAKrB;AAAA,QAFNC,WAEM,uEAFgBJ,kBAEhB;AAAA,QADNK,SACM,uEADcN,kBACd;;AACN,QAAIO,MAAM,CAACC,oBAAX,EAAiC;AAC/BD,MAAAA,MAAM,CAACC,oBAAP,CAA4BJ,QAA5B,EAAsCC,WAAtC,EAAmDC,SAAnD;AACD;AACF,GAT4B;AAW7BG,EAAAA,SAX6B,qBAY3BL,QAZ2B,EAa3BM,QAb2B,EAgBrB;AAAA,QAFNL,WAEM,uEAFgBJ,kBAEhB;AAAA,QADNK,SACM,uEADcN,kBACd;;AACN,QAAIO,MAAM,CAACI,kBAAX,EAA+B;AAC7BJ,MAAAA,MAAM,CAACI,kBAAP,CAA0BP,QAA1B,EAAoCC,WAApC,EAAiDK,QAAjD,EAA2DJ,SAA3D;AACD;AACF,GApB4B;AAsB7BM,EAAAA,SAtB6B,qBAuB3BR,QAvB2B,EAwB3BS,GAxB2B,EA0BrB;AAAA,QADNR,WACM,uEADgBJ,kBAChB;;AACN,QAAIM,MAAM,CAACO,kBAAX,EAA+B;AAC7BP,MAAAA,MAAM,CAACO,kBAAP,CAA0BV,QAA1B,EAAoCC,WAApC,EAAiDQ,GAAjD;AACD;AACF,GA9B4B;AAgC7BE,EAAAA,cAhC6B,0BAiC3BX,QAjC2B,EAkC3BY,aAlC2B,EAmC3BC,eAnC2B,EAqCrB;AAAA,QADNZ,WACM,uEADgBJ,kBAChB;;AACN,QAAIM,MAAM,CAACW,uBAAX,EAAoC;AAClCX,MAAAA,MAAM,CAACW,uBAAP,CACEd,QADF,EAEEC,WAFF,EAGEW,aAHF,EAIEC,eAJF;AAMD;AACF,GA9C4B;AAgD7BE,EAAAA,YAhD6B,wBAiD3Bf,QAjD2B,EAmDrB;AAAA,QADNC,WACM,uEADiBJ,kBACjB;;AACN,QAAIM,MAAM,CAACa,qBAAX,EAAkC;AAChCb,MAAAA,MAAM,CAACa,qBAAP,CAA6BhB,QAA7B,EAAuCC,WAAvC;AACD;AACF,GAvD4B;AAyD7BgB,EAAAA,WAzD6B,uBA0D3BjB,QA1D2B,EA2D3BkB,IA3D2B,EA8DrB;AAAA,QAFNjB,WAEM,uEAFgBJ,kBAEhB;AAAA,QADNK,SACM,uEADcN,kBACd;;AACN,QAAIO,MAAM,CAACgB,oBAAX,EAAiC;AAC/BhB,MAAAA,MAAM,CAACgB,oBAAP,CAA4BnB,QAA5B,EAAsCkB,IAAtC,EAA4CjB,WAA5C,EAAyDC,SAAzD;AACD;AACF,GAlE4B;AAoE7BkB,EAAAA,UApE6B,sBAqE3BpB,QArE2B,EAuErB;AAAA,QADNC,WACM,uEADiBJ,kBACjB;;AACN,QAAIM,MAAM,CAACkB,mBAAX,EAAgC;AAC9BlB,MAAAA,MAAM,CAACkB,mBAAP,CAA2BrB,QAA3B,EAAqCC,WAArC;AACD;AACF,GA3E4B;AA6E7BqB,EAAAA,gBA7E6B,8BA6EF;AACzB,QAAInB,MAAM,CAACoB,kBAAX,EAA+B;AAC7B,aAAOpB,MAAM,CAACoB,kBAAP,EAAP;AACD;;AACD,WAAO,CAAP;AACD;AAlF4B,CAA/B;AAqFAC,MAAM,CAACC,OAAP,GAAiB3B,sBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst AUTO_SET_TIMESTAMP = -1;\nconst DUMMY_INSTANCE_KEY = 0;\n\nconst QuickPerformanceLogger = {\n  markerStart(\n    markerId: number,\n    instanceKey: number = DUMMY_INSTANCE_KEY,\n    timestamp: number = AUTO_SET_TIMESTAMP,\n  ): void {\n    if (global.nativeQPLMarkerStart) {\n      global.nativeQPLMarkerStart(markerId, instanceKey, timestamp);\n    }\n  },\n\n  markerEnd(\n    markerId: number,\n    actionId: number,\n    instanceKey: number = DUMMY_INSTANCE_KEY,\n    timestamp: number = AUTO_SET_TIMESTAMP,\n  ): void {\n    if (global.nativeQPLMarkerEnd) {\n      global.nativeQPLMarkerEnd(markerId, instanceKey, actionId, timestamp);\n    }\n  },\n\n  markerTag(\n    markerId: number,\n    tag: string,\n    instanceKey: number = DUMMY_INSTANCE_KEY,\n  ): void {\n    if (global.nativeQPLMarkerTag) {\n      global.nativeQPLMarkerTag(markerId, instanceKey, tag);\n    }\n  },\n\n  markerAnnotate(\n    markerId: number,\n    annotationKey: string,\n    annotationValue: string,\n    instanceKey: number = DUMMY_INSTANCE_KEY,\n  ): void {\n    if (global.nativeQPLMarkerAnnotate) {\n      global.nativeQPLMarkerAnnotate(\n        markerId,\n        instanceKey,\n        annotationKey,\n        annotationValue,\n      );\n    }\n  },\n\n  markerCancel(\n    markerId: number,\n    instanceKey?: number = DUMMY_INSTANCE_KEY,\n  ): void {\n    if (global.nativeQPLMarkerCancel) {\n      global.nativeQPLMarkerCancel(markerId, instanceKey);\n    }\n  },\n\n  markerPoint(\n    markerId: number,\n    name: string,\n    instanceKey: number = DUMMY_INSTANCE_KEY,\n    timestamp: number = AUTO_SET_TIMESTAMP,\n  ): void {\n    if (global.nativeQPLMarkerPoint) {\n      global.nativeQPLMarkerPoint(markerId, name, instanceKey, timestamp);\n    }\n  },\n\n  markerDrop(\n    markerId: number,\n    instanceKey?: number = DUMMY_INSTANCE_KEY,\n  ): void {\n    if (global.nativeQPLMarkerDrop) {\n      global.nativeQPLMarkerDrop(markerId, instanceKey);\n    }\n  },\n\n  currentTimestamp(): number {\n    if (global.nativeQPLTimestamp) {\n      return global.nativeQPLTimestamp();\n    }\n    return 0;\n  },\n};\n\nmodule.exports = QuickPerformanceLogger;\n"]},"metadata":{},"sourceType":"script"}