{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NativeEventEmitter = require(\"../EventEmitter/NativeEventEmitter\");\n\nvar convertRequestBody = require(\"./convertRequestBody\");\n\nimport NativeNetworkingIOS from \"./NativeNetworkingIOS\";\n\nvar RCTNetworking = function (_NativeEventEmitter) {\n  _inherits(RCTNetworking, _NativeEventEmitter);\n\n  var _super = _createSuper(RCTNetworking);\n\n  function RCTNetworking() {\n    _classCallCheck(this, RCTNetworking);\n\n    return _super.call(this, NativeNetworkingIOS);\n  }\n\n  _createClass(RCTNetworking, [{\n    key: \"sendRequest\",\n    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {\n      var body = convertRequestBody(data);\n      NativeNetworkingIOS.sendRequest({\n        method: method,\n        url: url,\n        data: _objectSpread(_objectSpread({}, body), {}, {\n          trackingName: trackingName\n        }),\n        headers: headers,\n        responseType: responseType,\n        incrementalUpdates: incrementalUpdates,\n        timeout: timeout,\n        withCredentials: withCredentials\n      }, callback);\n    }\n  }, {\n    key: \"abortRequest\",\n    value: function abortRequest(requestId) {\n      NativeNetworkingIOS.abortRequest(requestId);\n    }\n  }, {\n    key: \"clearCookies\",\n    value: function clearCookies(callback) {\n      NativeNetworkingIOS.clearCookies(callback);\n    }\n  }]);\n\n  return RCTNetworking;\n}(NativeEventEmitter);\n\nmodule.exports = new RCTNetworking();","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js"],"names":["NativeEventEmitter","require","convertRequestBody","NativeNetworkingIOS","RCTNetworking","method","trackingName","url","headers","data","responseType","incrementalUpdates","timeout","callback","withCredentials","body","sendRequest","requestId","abortRequest","clearCookies","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,GAAGC,OAAO,sCAAlC;;AAEA,IAAMC,kBAAkB,GAAGD,OAAO,wBAAlC;;AAEA,OAAOE,mBAAP;;IAIMC,a;;;;;AACJ,2BAAc;AAAA;;AAAA,6BACND,mBADM;AAEb;;;;WAED,qBACEE,MADF,EAEEC,YAFF,EAGEC,GAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,YANF,EAOEC,kBAPF,EAQEC,OARF,EASEC,QATF,EAUEC,eAVF,EAWE;AACA,UAAMC,IAAI,GAAGb,kBAAkB,CAACO,IAAD,CAA/B;AACAN,MAAAA,mBAAmB,CAACa,WAApB,CACE;AACEX,QAAAA,MAAM,EAANA,MADF;AAEEE,QAAAA,GAAG,EAAHA,GAFF;AAGEE,QAAAA,IAAI,kCAAMM,IAAN;AAAYT,UAAAA,YAAY,EAAZA;AAAZ,UAHN;AAIEE,QAAAA,OAAO,EAAPA,OAJF;AAKEE,QAAAA,YAAY,EAAZA,YALF;AAMEC,QAAAA,kBAAkB,EAAlBA,kBANF;AAOEC,QAAAA,OAAO,EAAPA,OAPF;AAQEE,QAAAA,eAAe,EAAfA;AARF,OADF,EAWED,QAXF;AAaD;;;WAED,sBAAaI,SAAb,EAAgC;AAC9Bd,MAAAA,mBAAmB,CAACe,YAApB,CAAiCD,SAAjC;AACD;;;WAED,sBAAaJ,QAAb,EAAkD;AAChDV,MAAAA,mBAAmB,CAACgB,YAApB,CAAiCN,QAAjC;AACD;;;;EAvCyBb,kB;;AA0C5BoB,MAAM,CAACC,OAAP,GAAkB,IAAIjB,aAAJ,EAAlB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeEventEmitter = require('../EventEmitter/NativeEventEmitter');\n\nconst convertRequestBody = require('./convertRequestBody');\n\nimport NativeNetworkingIOS from './NativeNetworkingIOS';\nimport type {NativeResponseType} from './XMLHttpRequest';\nimport type {RequestBody} from './convertRequestBody';\n\nclass RCTNetworking extends NativeEventEmitter {\n  constructor() {\n    super(NativeNetworkingIOS);\n  }\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: Object,\n    data: RequestBody,\n    responseType: NativeResponseType,\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => void,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    NativeNetworkingIOS.sendRequest(\n      {\n        method,\n        url,\n        data: {...body, trackingName},\n        headers,\n        responseType,\n        incrementalUpdates,\n        timeout,\n        withCredentials,\n      },\n      callback,\n    );\n  }\n\n  abortRequest(requestId: number) {\n    NativeNetworkingIOS.abortRequest(requestId);\n  }\n\n  clearCookies(callback: (result: boolean) => void) {\n    NativeNetworkingIOS.clearCookies(callback);\n  }\n}\n\nmodule.exports = (new RCTNetworking(): RCTNetworking);\n"]},"metadata":{},"sourceType":"module"}