{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assign;\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    var descriptors = Object.keys(source).reduce(function (acc, key) {\n      var propertyDescriptor = Object.getOwnPropertyDescriptor(source, key);\n\n      if (propertyDescriptor !== undefined) {\n        acc[key] = propertyDescriptor;\n      }\n\n      return acc;\n    }, {});\n    Object.getOwnPropertySymbols(source).forEach(function (sym) {\n      var descriptor = Object.getOwnPropertyDescriptor(source, sym);\n\n      if (descriptor && descriptor.enumerable) {\n        descriptors[sym.toString()] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@react-native-community/cli/build/tools/assign.js"],"names":["Object","defineProperty","exports","value","default","assign","target","sources","forEach","source","descriptors","keys","reduce","acc","key","propertyDescriptor","getOwnPropertyDescriptor","undefined","getOwnPropertySymbols","sym","descriptor","enumerable","toString","defineProperties"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AASA,SAASA,MAAT,CAAgBC,MAAhB,EAAoC;AAAA,oCAATC,OAAS;AAATA,IAAAA,OAAS;AAAA;;AAClCA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIC,WAAW,GAAGV,MAAM,CAACW,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,CAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzD,UAAMC,kBAAkB,GAAGf,MAAM,CAACgB,wBAAP,CAAgCP,MAAhC,EAAwCK,GAAxC,CAA3B;;AAEA,UAAIC,kBAAkB,KAAKE,SAA3B,EAAsC;AACpCJ,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,kBAAX;AACD;;AAED,aAAOF,GAAP;AACD,KARiB,EAQf,EARe,CAAlB;AAUAb,IAAAA,MAAM,CAACkB,qBAAP,CAA6BT,MAA7B,EAAqCD,OAArC,CAA6C,UAAAW,GAAG,EAAI;AAClD,UAAIC,UAAU,GAAGpB,MAAM,CAACgB,wBAAP,CAAgCP,MAAhC,EAAwCU,GAAxC,CAAjB;;AAEA,UAAIC,UAAU,IAAIA,UAAU,CAACC,UAA7B,EAAyC;AACvCX,QAAAA,WAAW,CAACS,GAAG,CAACG,QAAJ,EAAD,CAAX,GAA8BF,UAA9B;AACD;AACF,KAND;AAOApB,IAAAA,MAAM,CAACuB,gBAAP,CAAwBjB,MAAxB,EAAgCI,WAAhC;AACD,GAnBD;AAoBA,SAAOJ,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assign;\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n *\n * Similar to Object.assign(), but it doesn't execute getters. This allows us to have\n * lazy properties on an object and still be able to merge them together\n *\n */\nfunction assign(target, ...sources) {\n  sources.forEach(source => {\n    let descriptors = Object.keys(source).reduce((acc, key) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(source, key);\n\n      if (propertyDescriptor !== undefined) {\n        acc[key] = propertyDescriptor;\n      }\n\n      return acc;\n    }, {}); // by default, Object.assign copies enumerable Symbols too\n\n    Object.getOwnPropertySymbols(source).forEach(sym => {\n      let descriptor = Object.getOwnPropertyDescriptor(source, sym);\n\n      if (descriptor && descriptor.enumerable) {\n        descriptors[sym.toString()] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}\n\n//# sourceMappingURL=assign.js.map"]},"metadata":{},"sourceType":"script"}