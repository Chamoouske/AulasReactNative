{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fs_extra_1 = require(\"fs-extra\");\n\nfunction statAsync(file) {\n  return _regeneratorRuntime.async(function statAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fs_extra_1.stat(file));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", null);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction fileExistsAsync(file) {\n  var _a, _b;\n\n  return _regeneratorRuntime.async(function fileExistsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(statAsync(file));\n\n        case 2:\n          _context2.t2 = _a = _context2.sent;\n          _context2.t1 = _context2.t2 === null;\n\n          if (_context2.t1) {\n            _context2.next = 6;\n            break;\n          }\n\n          _context2.t1 = _a === void 0;\n\n        case 6:\n          if (!_context2.t1) {\n            _context2.next = 10;\n            break;\n          }\n\n          _context2.t3 = void 0;\n          _context2.next = 11;\n          break;\n\n        case 10:\n          _context2.t3 = _a.isFile();\n\n        case 11:\n          _context2.t4 = _b = _context2.t3;\n          _context2.t0 = _context2.t4 !== null;\n\n          if (!_context2.t0) {\n            _context2.next = 15;\n            break;\n          }\n\n          _context2.t0 = _b !== void 0;\n\n        case 15:\n          if (!_context2.t0) {\n            _context2.next = 19;\n            break;\n          }\n\n          _context2.t5 = _b;\n          _context2.next = 20;\n          break;\n\n        case 19:\n          _context2.t5 = false;\n\n        case 20:\n          return _context2.abrupt(\"return\", _context2.t5);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.fileExistsAsync = fileExistsAsync;\n\nfunction directoryExistsAsync(file) {\n  var _a, _b;\n\n  return _regeneratorRuntime.async(function directoryExistsAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(statAsync(file));\n\n        case 2:\n          _context3.t2 = _a = _context3.sent;\n          _context3.t1 = _context3.t2 === null;\n\n          if (_context3.t1) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.t1 = _a === void 0;\n\n        case 6:\n          if (!_context3.t1) {\n            _context3.next = 10;\n            break;\n          }\n\n          _context3.t3 = void 0;\n          _context3.next = 11;\n          break;\n\n        case 10:\n          _context3.t3 = _a.isDirectory();\n\n        case 11:\n          _context3.t4 = _b = _context3.t3;\n          _context3.t0 = _context3.t4 !== null;\n\n          if (!_context3.t0) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.t0 = _b !== void 0;\n\n        case 15:\n          if (!_context3.t0) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.t5 = _b;\n          _context3.next = 20;\n          break;\n\n        case 19:\n          _context3.t5 = false;\n\n        case 20:\n          return _context3.abrupt(\"return\", _context3.t5);\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.directoryExistsAsync = directoryExistsAsync;\n\nfunction fileExists(file) {\n  try {\n    return fs_extra_1.statSync(file).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.fileExists = fileExists;","map":{"version":3,"sources":["../../src/utils/modules.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAOA,SAAe,SAAf,CAAyB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiB,UAAA,CAAA,IAAA,CAAK,IAAL,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAIW,IAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQO,SAAe,eAAf,CAA+B,IAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACS,SAAS,CAAC,IAAD,CADlB;;AAAA;AAAA,yBACL,EADK;AAAA,0CACyB,IADzB;;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACyB,EAAA,KAAA,KAAA,CADzB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACyB,KAAA,CADzB;AAAA;AAAA;;AAAA;AAAA,yBACyB,EAAA,CAAE,MAAF,EADzB;;AAAA;AAAA,yBACL,EADK;AAAA,0CACiC,IADjC;;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACiC,EAAA,KAAA,KAAA,CADjC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACiC,EADjC;AAAA;AAAA;;AAAA;AAAA,yBACuC,KADvC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP,OAAA,CAAA,eAAA,GAAA,eAAA;;AAIO,SAAe,oBAAf,CAAoC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACS,SAAS,CAAC,IAAD,CADlB;;AAAA;AAAA,yBACL,EADK;AAAA,0CACyB,IADzB;;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACyB,EAAA,KAAA,KAAA,CADzB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACyB,KAAA,CADzB;AAAA;AAAA;;AAAA;AAAA,yBACyB,EAAA,CAAE,WAAF,EADzB;;AAAA;AAAA,yBACL,EADK;AAAA,0CACsC,IADtC;;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACsC,EAAA,KAAA,KAAA,CADtC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yBACsC,EADtC;AAAA;AAAA;;AAAA;AAAA,yBAC4C,KAD5C;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAIA,SAAgB,UAAhB,CAA2B,IAA3B,EAAuC;AACrC,MAAI;AACF,WAAO,UAAA,CAAA,QAAA,CAAS,IAAT,EAAe,MAAf,EAAP;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAND,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import { stat, Stats, statSync } from 'fs-extra';\n\n/**\n * A non-failing version of async FS stat.\n *\n * @param file\n */\nasync function statAsync(file: string): Promise<Stats | null> {\n  try {\n    return await stat(file);\n  } catch {\n    return null;\n  }\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isFile() ?? false;\n}\n\nexport async function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isDirectory() ?? false;\n}\n\nexport function fileExists(file: string): boolean {\n  try {\n    return statSync(file).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}