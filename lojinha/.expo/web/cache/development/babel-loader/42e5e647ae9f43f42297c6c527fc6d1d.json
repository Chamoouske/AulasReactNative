{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/InputAccessoryView/InputAccessoryViewExample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar Alert = require(\"react-native-web/dist/exports/Alert\").default;\n\nvar Button = require(\"react-native-web/dist/exports/Button\").default;\n\nvar InputAccessoryView = require(\"react-native-web/dist/exports/InputAccessoryView\").default;\n\nvar ScrollView = require(\"react-native-web/dist/exports/ScrollView\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TextInput = require(\"react-native-web/dist/exports/TextInput\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar Message = function (_React$PureComponent) {\n  _inherits(Message, _React$PureComponent);\n\n  var _super = _createSuper(Message);\n\n  function Message() {\n    _classCallCheck(this, Message);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.textBubbleBackground,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Text Message\"));\n    }\n  }]);\n\n  return Message;\n}(React.PureComponent);\n\nvar TextInputBar = function (_React$PureComponent2) {\n  _inherits(TextInputBar, _React$PureComponent2);\n\n  var _super2 = _createSuper(TextInputBar);\n\n  function TextInputBar() {\n    var _this;\n\n    _classCallCheck(this, TextInputBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(TextInputBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.textInputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text\n          });\n        },\n        value: this.state.text,\n        placeholder: 'Type a message...',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          Alert.alert('You tapped the button!');\n        },\n        title: \"Send\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TextInputBar;\n}(React.PureComponent);\n\nvar BAR_HEIGHT = 44;\n\nvar InputAccessoryViewExample = function (_React$Component) {\n  _inherits(InputAccessoryViewExample, _React$Component);\n\n  var _super3 = _createSuper(InputAccessoryViewExample);\n\n  function InputAccessoryViewExample() {\n    _classCallCheck(this, InputAccessoryViewExample);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(InputAccessoryViewExample, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n        style: styles.fill,\n        keyboardDismissMode: \"interactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, Array(15).fill().map(function (_, i) {\n        return React.createElement(Message, {\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        });\n      })), React.createElement(InputAccessoryView, {\n        backgroundColor: \"#fffffff7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInputBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return InputAccessoryViewExample;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    height: BAR_HEIGHT\n  },\n  textInput: {\n    flex: 1,\n    paddingLeft: 10\n  },\n  text: {\n    padding: 10,\n    color: 'white'\n  },\n  textBubbleBackground: {\n    backgroundColor: '#2f7bf6',\n    borderRadius: 20,\n    width: 110,\n    margin: 20\n  }\n});\nexports.title = '<InputAccessoryView>';\nexports.description = 'Example showing how to use an InputAccessoryView to build an iMessage-like sticky text input';\nexports.examples = [{\n  title: 'Simple view with sticky input',\n  render: function render() {\n    return React.createElement(InputAccessoryViewExample, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }\n    });\n  }\n}];","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/react-native/RNTester/js/examples/InputAccessoryView/InputAccessoryViewExample.js"],"names":["React","require","Message","styles","textBubbleBackground","text","PureComponent","TextInputBar","state","textInputContainer","textInput","setState","Alert","alert","BAR_HEIGHT","InputAccessoryViewExample","fill","Array","map","_","i","Component","StyleSheet","create","flex","flexDirection","alignItems","borderTopWidth","borderTopColor","height","paddingLeft","padding","color","backgroundColor","borderRadius","width","margin","exports","title","description","examples","render"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;;;;;;;;;;;;;;;;;IAaMC,O;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;;;EAPmBL,KAAK,CAACM,a;;IAYtBC,Y;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACH,MAAAA,IAAI,EAAE;AAAP,K;;;;;;WAER,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEN,MAAM,CAACO,SADhB;AAEE,QAAA,YAAY,EAAE,sBAAAL,IAAI,EAAI;AACpB,UAAA,MAAI,CAACM,QAAL,CAAc;AAACN,YAAAA,IAAI,EAAJA;AAAD,WAAd;AACD,SAJH;AAKE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,IALpB;AAME,QAAA,WAAW,EAAE,mBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbO,UAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACD,SAHH;AAIE,QAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAkBD;;;;EAtBwBb,KAAK,CAACM,a;;AAyBjC,IAAMQ,UAAU,GAAG,EAAnB;;IAEMC,yB;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AACP,aACE,0CACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEZ,MAAM,CAACa,IAA1B;AAAgC,QAAA,mBAAmB,EAAC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAAC,EAAD,CAAL,CACED,IADF,GAEEE,GAFF,CAEM,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACH,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG;AAAA,OAFN,CADH,CADF,EAQE,oBAAC,kBAAD;AAAoB,QAAA,eAAe,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADF;AAcD;;;;EAhBqCpB,KAAK,CAACqB,S;;AAmB9C,IAAMlB,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,IAAI,EAAE;AADF,GADyB;AAI/Bf,EAAAA,kBAAkB,EAAE;AAClBgB,IAAAA,aAAa,EAAE,KADG;AAElBC,IAAAA,UAAU,EAAE,QAFM;AAGlBC,IAAAA,cAAc,EAAE,CAHE;AAIlBC,IAAAA,cAAc,EAAE,MAJE;AAKlBC,IAAAA,MAAM,EAAEf;AALU,GAJW;AAW/BJ,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETM,IAAAA,WAAW,EAAE;AAFJ,GAXoB;AAe/BzB,EAAAA,IAAI,EAAE;AACJ0B,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAfyB;AAmB/B5B,EAAAA,oBAAoB,EAAE;AACpB6B,IAAAA,eAAe,EAAE,SADG;AAEpBC,IAAAA,YAAY,EAAE,EAFM;AAGpBC,IAAAA,KAAK,EAAE,GAHa;AAIpBC,IAAAA,MAAM,EAAE;AAJY;AAnBS,CAAlB,CAAf;AA2BAC,OAAO,CAACC,KAAR,GAAgB,sBAAhB;AACAD,OAAO,CAACE,WAAR,GACE,8FADF;AAEAF,OAAO,CAACG,QAAR,GAAmB,CACjB;AACEF,EAAAA,KAAK,EAAE,+BADT;AAEEG,EAAAA,MAAM,EAAE,kBAAuB;AAC7B,WAAO,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AAJH,CADiB,CAAnB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst {\n  Alert,\n  Button,\n  InputAccessoryView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} = require('react-native');\n\ntype MessageProps = $ReadOnly<{||}>;\nclass Message extends React.PureComponent<MessageProps> {\n  render() {\n    return (\n      <View style={styles.textBubbleBackground}>\n        <Text style={styles.text}>Text Message</Text>\n      </View>\n    );\n  }\n}\n\ntype TextInputProps = $ReadOnly<{||}>;\ntype TextInputState = {|text: string|};\nclass TextInputBar extends React.PureComponent<TextInputProps, TextInputState> {\n  state = {text: ''};\n\n  render() {\n    return (\n      <View style={styles.textInputContainer}>\n        <TextInput\n          style={styles.textInput}\n          onChangeText={text => {\n            this.setState({text});\n          }}\n          value={this.state.text}\n          placeholder={'Type a message...'}\n        />\n        <Button\n          onPress={() => {\n            Alert.alert('You tapped the button!');\n          }}\n          title=\"Send\"\n        />\n      </View>\n    );\n  }\n}\n\nconst BAR_HEIGHT = 44;\ntype InputAccessoryProps = $ReadOnly<{||}>;\nclass InputAccessoryViewExample extends React.Component<InputAccessoryProps> {\n  render() {\n    return (\n      <>\n        <ScrollView style={styles.fill} keyboardDismissMode=\"interactive\">\n          {Array(15)\n            .fill()\n            .map((_, i) => (\n              <Message key={i} />\n            ))}\n        </ScrollView>\n        <InputAccessoryView backgroundColor=\"#fffffff7\">\n          <TextInputBar />\n        </InputAccessoryView>\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    height: BAR_HEIGHT,\n  },\n  textInput: {\n    flex: 1,\n    paddingLeft: 10,\n  },\n  text: {\n    padding: 10,\n    color: 'white',\n  },\n  textBubbleBackground: {\n    backgroundColor: '#2f7bf6',\n    borderRadius: 20,\n    width: 110,\n    margin: 20,\n  },\n});\n\nexports.title = '<InputAccessoryView>';\nexports.description =\n  'Example showing how to use an InputAccessoryView to build an iMessage-like sticky text input';\nexports.examples = [\n  {\n    title: 'Simple view with sticky input',\n    render: function(): React.Node {\n      return <InputAccessoryViewExample />;\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"script"}