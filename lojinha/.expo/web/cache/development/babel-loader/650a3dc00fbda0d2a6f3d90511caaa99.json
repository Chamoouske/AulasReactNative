{"ast":null,"code":"export {};","map":{"version":3,"sources":["/home/chamoouske/Aulas/ReactNative/RandomWord/node_modules/@expo/config-plugins/build/android/Updates.d.ts"],"names":[],"mappings":"AA8BA","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { ConfigPlugin } from '../Plugin.types';\nimport { AndroidManifest } from './Manifest';\ndeclare type ExpoConfigUpdates = Pick<ExpoConfig, 'sdkVersion' | 'owner' | 'runtimeVersion' | 'updates' | 'slug'>;\nexport declare enum Config {\n    ENABLED = \"expo.modules.updates.ENABLED\",\n    CHECK_ON_LAUNCH = \"expo.modules.updates.EXPO_UPDATES_CHECK_ON_LAUNCH\",\n    LAUNCH_WAIT_MS = \"expo.modules.updates.EXPO_UPDATES_LAUNCH_WAIT_MS\",\n    SDK_VERSION = \"expo.modules.updates.EXPO_SDK_VERSION\",\n    RUNTIME_VERSION = \"expo.modules.updates.EXPO_RUNTIME_VERSION\",\n    UPDATE_URL = \"expo.modules.updates.EXPO_UPDATE_URL\",\n    RELEASE_CHANNEL = \"expo.modules.updates.EXPO_RELEASE_CHANNEL\"\n}\nexport declare const withUpdates: ConfigPlugin<{\n    expoUsername: string | null;\n}>;\nexport declare function getUpdateUrl(config: Pick<ExpoConfigUpdates, 'owner' | 'slug'>, username: string | null): string | null;\nexport declare function getRuntimeVersion(config: Pick<ExpoConfigUpdates, 'runtimeVersion'>): string | null;\nexport declare function getSDKVersion(config: Pick<ExpoConfigUpdates, 'sdkVersion'>): string | null;\nexport declare function getUpdatesEnabled(config: Pick<ExpoConfigUpdates, 'updates'>): boolean;\nexport declare function getUpdatesTimeout(config: Pick<ExpoConfigUpdates, 'updates'>): number;\nexport declare function getUpdatesCheckOnLaunch(config: Pick<ExpoConfigUpdates, 'updates'>): 'NEVER' | 'ALWAYS';\nexport declare function setUpdatesConfig(config: ExpoConfigUpdates, androidManifest: AndroidManifest, username: string | null): AndroidManifest;\nexport declare function setVersionsConfig(config: Pick<ExpoConfigUpdates, 'sdkVersion' | 'runtimeVersion'>, androidManifest: AndroidManifest): AndroidManifest;\nexport declare function ensureBuildGradleContainsConfigurationScript(projectRoot: string, buildGradleContents: string): string;\nexport declare function formatApplyLineForBuildGradle(projectRoot: string): string;\nexport declare function isBuildGradleConfigured(projectRoot: string, buildGradleContents: string): boolean;\nexport declare function isMainApplicationMetaDataSet(androidManifest: AndroidManifest): boolean;\nexport declare function isMainApplicationMetaDataSynced(config: ExpoConfigUpdates, androidManifest: AndroidManifest, username: string | null): boolean;\nexport declare function areVersionsSynced(config: Pick<ExpoConfigUpdates, 'runtimeVersion' | 'sdkVersion'>, androidManifest: AndroidManifest): boolean;\nexport {};\n"]},"metadata":{},"sourceType":"module"}